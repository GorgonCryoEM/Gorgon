#include <boost/python.hpp>
#include <boost/python/suite/indexing/vector_indexing_suite.hpp>

#include "Volume.h"

using namespace Core;

using namespace boost::python;

BOOST_PYTHON_MODULE(@current_pylib@)
{
    class_<std::vector<float> >("std::vector<float>")
            .def(vector_indexing_suite<std::vector<float> >() );
    class_<std::vector<std::vector<float> > >("std::vector<std::vector<float> >")
            .def(vector_indexing_suite<std::vector<std::vector<float> > >() );

    class_<std::vector<double> >("std::vector<double>")
            .def(vector_indexing_suite<std::vector<double> >() );
    class_<std::vector<std::vector<double> > >("std::vector<std::vector<double> >")
            .def(vector_indexing_suite<std::vector<std::vector<double> > >() );

    const double & (Volume::*get)(int, int, int) const = &Volume::operator();
    double & (Volume::*set)(int, int, int)             = &Volume::operator();

  class_<Volume>("Volume", init<>())
      .def(init<int, int, int, optional<double> >())
      .def("getSizeX", &Volume::getSizeX)
      .def("getSizeY", &Volume::getSizeY)
      .def("getSizeZ", &Volume::getSizeZ)
      .def("getSize", &Volume::getSize)
      .def("cmp", &Volume::cmp)
      .def("out", &Volume::print)

//      .def("getMin", &Volume::getMin)
//      .def("getMax", &Volume::getMax)
//      .def("getDataAt", getDataAt)
  ;

}
