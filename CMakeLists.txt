CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

include(cmake/MacOSX.cmake)

PROJECT(Gorgon)

option(ENABLE_CMAKE_DEBUG_OUTPUT "print output of some variables for debugging purposes" OFF)

set(extlibs_dir ${CMAKE_SOURCE_DIR}/ExternalLibraries CACHE INTERNAL "External Libraries directory")

if( CMAKE_SIZEOF_VOID_P EQUAL 8 )
    set( target_arch 64 CACHE INTERNAL "Target architecture")
  else()
    set( target_arch 32 CACHE INTERNAL "Target architecture")
endif()

include(cmake/Boost.cmake)
include(cmake/FFTW3f.cmake)
include(cmake/GLUT.cmake)

find_package(OpenGL REQUIRED)
#find_package(GLUT REQUIRED)
find_package(PythonLibs REQUIRED)

OPTION(ENABLE_FFTW3 "enable fftw 3 support" ON)
OPTION(ENABLE_FFTW_PLAN_CACHING "enable fftw caching" ON)
IF(ENABLE_FFTW3)
	ADD_DEFINITIONS(-DFFTW3)
ENDIF()

IF(ENABLE_FFTW_PLAN_CACHING)
	ADD_DEFINITIONS(-DFFTW_PLAN_CACHING)
ENDIF(ENABLE_FFTW_PLAN_CACHING)

if(MSVC AND target_arch EQUAL 64)
	ADD_DEFINITIONS(/bigobj)
endif()

SET(GORGON_INSTALL_PREFIX $ENV{HOME}/Gorgon CACHE PATH "installation prefix")
SET(CMAKE_INSTALL_PREFIX ${GORGON_INSTALL_PREFIX} CACHE INTERNAL "installation prefix")

SET(LIBRARY_OUTPUT_PATH ${GORGON_INSTALL_PREFIX}/lib/x${target_arch}/${target_osx_version} CACHE PATH "output directory for building all libraries." FORCE)


SET(INCLUDE_DIRS 
	${GLUT_INCLUDE_DIR}
	${CMAKE_CURRENT_SOURCE_DIR}
	${CMAKE_CURRENT_SOURCE_DIR}/ExternalLibraries
	${CMAKE_CURRENT_SOURCE_DIR}/ExternalLibraries/GL
	${GLU_INCLUDE_PATH}
	${GL_INCLUDE_PATH}
	${OPENGL_INCLUDE_DIR}
	${Boost_INCLUDE_DIRS}
	${PYTHON_INCLUDE_DIR}
	${FFTW3F_INCLUDE_DIRS}
	)

SET(LIB_DIRS
	${OPENGL_gl_LIBRARY}
	${OPENGL_glu_LIBRARY}
	${GLUT_glut_LIBRARY}
	${OPENGL_LIBRARIES} 
	${Boost_LIBRARIES} 
	${PYTHON_LIBRARY}
	${FFTW3F_LIBRARIES}
	)

INCLUDE_DIRECTORIES(${INCLUDE_DIRS}) 
LINK_DIRECTORIES(${Boost_LIBRARY_DIRS})

ADD_LIBRARY(pyGORGON SHARED Gorgon/src_cpp/LibPyGorgon.cpp)
TARGET_LINK_LIBRARIES(pyGORGON ${LIB_DIRS})

include(CPack)

#install(TARGETS pyGORGON
#         LIBRARY DESTINATION dist)
#INSTALL_FILES(/include "^.+\\.h$")
