c-----------------------------------------------------------------------
      SUBROUTINE xerr (msg, nerr, iert, ni, i1, i2, nr, r1, r2)
      INTEGER nerr, iert, ni, i1, i2, nr,
     1   lun, lunit, mesflg
      DOUBLE PRECISION r1, r2
      character*(*) msg
c-------------------------------------------------------------------
c
c all arguments are input arguments.
c
c msg   = the message (character variable)
c nerr  = the error number (not used).
c iert  = the error type..
c         1 means recoverable (control returns to caller).
c         2 means fatal (run is aborted--see note below).
c ni    = number of integers (0, 1, or 2) to be printed with message.
c i1,i2  = integers to be printed, depending on ni.
c nr    = number of reals (0, 1, or 2) to be printed with message.
c r1,r2  = reals to be printed, depending on nr.
c
c  notes:
c 1. the dimension of msg is assumed to be at most 60.
c   (multi-line messages are generated by repeated calls.)
c 2. if iert = 2, control passes to the statement  stop
c   to abort the run.  this statement may be machine-dependent.
c 3. r1 and r2 are assumed to be in double precision and are printed
c   in d21.13 format.
c 4. the common block /eh0001/ below is data-loaded (a machine-
c   dependent feature) with default values.
c   this block is needed for proper retention of parameters used by
c   this routine which the user can reset by calling xsetf or xsetun.
c   the variables in this block are as follows..
c      mesflg = print control flag..
c               1 means print all messages (the default).
c               0 means no printing.
c      lunit  = logical unit number for messages.
c               the default is 6 (machine-dependent).
c 5. to change the default output unit, change the data statement
c  in the block data subprogram below.
c
c for a different run-abort command, change the statement following
c statement 100 at the end.
c-----------------------------------------------------------------------
      COMMON /eh0001/ mesflg, lunit
      DATA mesflg,lunit/1,6/
      if (mesflg .eq. 0) go to 100
c get logical unit number. ---------------------------------------------
      lun = lunit
c write the message. ---------------------------------------------------
      write (lun, 10) msg
 10   format(1x,a)
c-----------------------------------------------------------------------
      if (ni .eq. 1) write (lun, 20) i1
 20   format(6x,'in above message,  i1 = ',i10)
      if (ni .eq. 2) write (lun, 30) i1,i2
 30   format(6x,'in above message,  i1 = ',i10,3x,'i2 = ',i10)
      if (nr .eq. 1) write (lun, 40) r1
 40   format(6x,'in above message,  r1 = ',d21.13)
      if (nr .eq. 2) write (lun, 50) r1,r2
 50   format(6x,'in above,  r1 = ',d21.13,3x,'r2 = ',d21.13)
c abort the run if iert = 2. -------------------------------------------
 100   if (iert .ne. 2) return
      stop
      END
c-----------------------------------------------------------------------
