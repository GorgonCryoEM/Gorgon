(************** Content-type: application/mathematica **************

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    346063,       9688]*)
(*NotebookOutlinePosition[    346810,       9714]*)
(*  CellTagsIndexPosition[    346766,       9710]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell["Connectivity Functions, and Skeletonization", "Subtitle"],

Cell[BoxData[{
    \(<< Graphics`\), "\[IndentingNewLine]", 
    \(<< Statistics`\)}], "Input"],

Cell[BoxData[{
    \(\(\(Clear[rootPath];\)\(\[IndentingNewLine]\)
    \) (*\(rootPath\  = \ "\<C:\\_WUSTL\\GrayscaleSkeleton\\\>";\)*) \), "\
\[IndentingNewLine]", 
    \(\(rootPath\  = \ "\<C:\\_WashU\\ssa1\\source\\GrayscaleSkeleton\\\>";\)\
\)}], "Input"],

Cell[BoxData[{
    \(\(Clear[gaussianRadius];\)\), "\[IndentingNewLine]", 
    \(\(gaussianRadius\  = \ 4;\)\)}], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getProteinSlice",
    FontWeight->"Bold"],
  "\nGets a slice from the protein data set"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[getProteinSlice];\)\), "\[IndentingNewLine]", 
    \(\(getProteinSlice[
          i_]\  := \ \[IndentingNewLine]Module[{vol, \ maxVal, 
            minVal}, \[IndentingNewLine]vol\  := \ 
            Get[rootPath\  <> \ "\<data\\proteinVolume.nb\>"]; \
\[IndentingNewLine]maxVal\  = \ 
            Max[Flatten[
                vol\[LeftDoubleBracket]
                  i\[RightDoubleBracket]]]; \[IndentingNewLine]minVal\  = \ 
            Min[Flatten[
                vol\[LeftDoubleBracket]
                  i\[RightDoubleBracket]]]; \[IndentingNewLine]Return[
            Map[\ Round[\(\((# - minVal)\)\ *255.0\)\/\(maxVal - minVal\)] &, \
\ vol\[LeftDoubleBracket]i\[RightDoubleBracket], \ 
              1]];\[IndentingNewLine]];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getImage",
    FontWeight->"Bold"],
  "\nGets a slice from a grayscale image"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[getImage];\)\), "\[IndentingNewLine]", 
    \(\(getImage[imgName_]\  := \ 
        Module[{picture}, \[IndentingNewLine]picture = 
            Import[rootPath\  <> \ "\<\\data\\\>"\  <> \ 
                imgName]; \[IndentingNewLine]Return[
            picture\[LeftDoubleBracket]1, 
              1\[RightDoubleBracket]];\[IndentingNewLine]];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getInput",
    FontWeight->"Bold"],
  "\nGets the input \n\t1: Protein Sliced at 32\n\t2: Protein Sliced at 20\n\t\
3: Random.gif\n\t4: Blobs.gif\n\t5: Dragon.gif\n\t6: Letters.gif\n\t7: \
Rings.gif\n\t8: XWithGraySpots.gif\nAlso defines sliceSize which is a hash \
map of the pixels that span the image... The rest of the pixels make up a \
blank boundary which simplifies the calculations."
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[getInput];\)\), "\[IndentingNewLine]", 
    \(\(getInput[
          i_]\  := \ \[IndentingNewLine]Module[\ {inputImage, \ 
            sliceSize}, \[IndentingNewLine]Switch[i, \[IndentingNewLine]1, 
            inputImage\  = \ 
              getImage["\<Protein32.gif\>"], \[IndentingNewLine]2, \ 
            inputImage\  = \ 
              getImage["\<Protein40.gif\>"], \[IndentingNewLine]3, \ 
            inputImage\  = \ 
              getImage["\<Random.gif\>"], \[IndentingNewLine]4, \ 
            inputImage\  = \ 
              getImage["\<Blobs.gif\>"], \[IndentingNewLine]5, \ 
            inputImage\  = \ 
              getImage["\<Dragon.gif\>"], \[IndentingNewLine]6, \ 
            inputImage\  = \ 
              getImage["\<Letters.gif\>"], \[IndentingNewLine]7, \ 
            inputImage\  = \ 
              getImage["\<Rings.gif\>"], \[IndentingNewLine]8, \ 
            inputImage\  = \ 
              getImage["\<XWithGraySpots.gif\>"], \[IndentingNewLine]9, \ 
            inputImage\  = \ 
              getImage["\<vessel_1.gif\>"], \[IndentingNewLine]101, \ 
            inputImage\  = \ \ getImage["\<Protein32-surfaceRemoved.gif\>"], \
\[IndentingNewLine]102, \ 
            inputImage\  = \ 
              getImage["\<Protein40-surfaceRemoved.gif\>"], \
\[IndentingNewLine]103, \ 
            inputImage\  = \ 
              getImage["\<Random-surfaceRemoved.gif\>"], \
\[IndentingNewLine]104, \ 
            inputImage\  = \ 
              getImage["\<Blobs-surfaceRemoved.gif\>"], \
\[IndentingNewLine]105, \ 
            inputImage\  = \ 
              getImage["\<Dragon-surfaceRemoved.gif\>"], \
\[IndentingNewLine]106, \ 
            inputImage\  = \ 
              getImage["\<Letters-surfaceRemoved.gif\>"], \
\[IndentingNewLine]107, \ 
            inputImage\  = \ 
              getImage["\<Rings-surfaceRemoved.gif\>"], \
\[IndentingNewLine]108, \ 
            inputImage\  = \ 
              getImage["\<XWithGraySpots-surfaceRemoved.gif\>"], \
\[IndentingNewLine]109, \ 
            inputImage\  = \ 
              getImage["\<vessel_1-surfaceRemoved.gif\>"]\[IndentingNewLine]];\
 \[IndentingNewLine]\[IndentingNewLine]sliceSize[1, 1]\  = \ 
            1; \[IndentingNewLine]sliceSize[2, 1]\  = \ 
            1; \[IndentingNewLine]sliceSize[1, 
              2]\  = \ \(Dimensions[
                inputImage]\)\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]sliceSize[2, 
              2]\  = \ \(Dimensions[
                inputImage]\)\[LeftDoubleBracket]2\[RightDoubleBracket]; \
\[IndentingNewLine]inputImage\  = \ 
            Table[\[IndentingNewLine]If[\((x\  >= \ 
                      sliceSize[1, 1]\ )\) && \((\ 
                    x\  <= \ sliceSize[1, 2]\ )\)\  && \ \((y\  >= \ 
                      sliceSize[2, 1])\)\  && \ \((y\  <= \ 
                      sliceSize[2, 
                        2])\), \[IndentingNewLine]inputImage\
\[LeftDoubleBracket]x, 
                  y\[RightDoubleBracket], \[IndentingNewLine]0\
\[IndentingNewLine]], \[IndentingNewLine]{x, \ 1 - gaussianRadius, \ 
                sliceSize[1, 2] + gaussianRadius}, \[IndentingNewLine]{y, \ 
                1 - gaussianRadius, \ 
                sliceSize[2, 2] + 
                  gaussianRadius}\[IndentingNewLine]]; \
\[IndentingNewLine]sliceSize[1, 1]\  = \ 
            gaussianRadius + 1; \[IndentingNewLine]sliceSize[2, 1]\  = \ 
            gaussianRadius + 1; \[IndentingNewLine]sliceSize[1, 
              2]\  = \ \(Dimensions[
                  inputImage]\)\[LeftDoubleBracket]1\[RightDoubleBracket] - 
              gaussianRadius; \[IndentingNewLine]sliceSize[2, 
              2]\  = \ \(Dimensions[
                  inputImage]\)\[LeftDoubleBracket]2\[RightDoubleBracket] - 
              gaussianRadius; \[IndentingNewLine]Return[{inputImage, \ 
              sliceSize}];\[IndentingNewLine]];\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[slice];\)\), "\[IndentingNewLine]", 
    \(\(Clear[sliceSize];\)\), "\[IndentingNewLine]", 
    \(\(inputs\  = \ getInput[1];\)\), "\[IndentingNewLine]", 
    \(\(slice\  = \ 
        inputs\[LeftDoubleBracket]1\[RightDoubleBracket];\)\), "\
\[IndentingNewLine]", 
    \(\(sliceSize\  = \ 
        inputs\[LeftDoubleBracket]2\[RightDoubleBracket];\)\), "\
\[IndentingNewLine]", 
    \(\(Show[
        GraphicsArray[{ListContourPlot[slice, \ 
              DisplayFunction\  \[Rule] \ Identity, \ Contours \[Rule] 10], \ 
            ListDensityPlot[slice, \ \ Mesh \[Rule] False, \ 
              DisplayFunction \[Rule] Identity]}], \ 
        DisplayFunction \[Rule] $DisplayFunction];\)\), \
"\[IndentingNewLine]", 
    \(\(Clear[inputs];\)\)}], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .47619 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.47619 0.0113379 0.47619 [
[ 0 0 0 0 ]
[ 1 .47619 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .47619 L
0 .47619 L
closepath
clip
newpath
% Start of sub-graphic
p
0.0238095 0.0113379 0.477324 0.464853 MathSubStart
%% ContourGraphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.00605901 0.0131718 0.00605901 0.0131718 [
[.00606 -0.0125 -3 -9 ]
[.00606 -0.0125 3 0 ]
[.13778 -0.0125 -6 -9 ]
[.13778 -0.0125 6 0 ]
[.26949 -0.0125 -6 -9 ]
[.26949 -0.0125 6 0 ]
[.40121 -0.0125 -6 -9 ]
[.40121 -0.0125 6 0 ]
[.53293 -0.0125 -6 -9 ]
[.53293 -0.0125 6 0 ]
[.66465 -0.0125 -6 -9 ]
[.66465 -0.0125 6 0 ]
[.79636 -0.0125 -6 -9 ]
[.79636 -0.0125 6 0 ]
[.92808 -0.0125 -6 -9 ]
[.92808 -0.0125 6 0 ]
[ 0 0 -0.125 0 ]
[-0.0125 .00606 -6 -4.5 ]
[-0.0125 .00606 0 4.5 ]
[-0.0125 .13778 -12 -4.5 ]
[-0.0125 .13778 0 4.5 ]
[-0.0125 .26949 -12 -4.5 ]
[-0.0125 .26949 0 4.5 ]
[-0.0125 .40121 -12 -4.5 ]
[-0.0125 .40121 0 4.5 ]
[-0.0125 .53293 -12 -4.5 ]
[-0.0125 .53293 0 4.5 ]
[-0.0125 .66465 -12 -4.5 ]
[-0.0125 .66465 0 4.5 ]
[-0.0125 .79636 -12 -4.5 ]
[-0.0125 .79636 0 4.5 ]
[-0.0125 .92808 -12 -4.5 ]
[-0.0125 .92808 0 4.5 ]
[ 0 0 -0.125 0 ]
[ 0 1 .125 0 ]
[ 1 0 .125 0 ]
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.00606 0 m
.00606 .00625 L
s
[(0)] .00606 -0.0125 0 1 Mshowa
.13778 0 m
.13778 .00625 L
s
[(10)] .13778 -0.0125 0 1 Mshowa
.26949 0 m
.26949 .00625 L
s
[(20)] .26949 -0.0125 0 1 Mshowa
.40121 0 m
.40121 .00625 L
s
[(30)] .40121 -0.0125 0 1 Mshowa
.53293 0 m
.53293 .00625 L
s
[(40)] .53293 -0.0125 0 1 Mshowa
.66465 0 m
.66465 .00625 L
s
[(50)] .66465 -0.0125 0 1 Mshowa
.79636 0 m
.79636 .00625 L
s
[(60)] .79636 -0.0125 0 1 Mshowa
.92808 0 m
.92808 .00625 L
s
[(70)] .92808 -0.0125 0 1 Mshowa
.125 Mabswid
.0324 0 m
.0324 .00375 L
s
.05875 0 m
.05875 .00375 L
s
.08509 0 m
.08509 .00375 L
s
.11143 0 m
.11143 .00375 L
s
.16412 0 m
.16412 .00375 L
s
.19046 0 m
.19046 .00375 L
s
.21681 0 m
.21681 .00375 L
s
.24315 0 m
.24315 .00375 L
s
.29584 0 m
.29584 .00375 L
s
.32218 0 m
.32218 .00375 L
s
.34852 0 m
.34852 .00375 L
s
.37487 0 m
.37487 .00375 L
s
.42756 0 m
.42756 .00375 L
s
.4539 0 m
.4539 .00375 L
s
.48024 0 m
.48024 .00375 L
s
.50659 0 m
.50659 .00375 L
s
.55927 0 m
.55927 .00375 L
s
.58562 0 m
.58562 .00375 L
s
.61196 0 m
.61196 .00375 L
s
.6383 0 m
.6383 .00375 L
s
.69099 0 m
.69099 .00375 L
s
.71733 0 m
.71733 .00375 L
s
.74368 0 m
.74368 .00375 L
s
.77002 0 m
.77002 .00375 L
s
.82271 0 m
.82271 .00375 L
s
.84905 0 m
.84905 .00375 L
s
.8754 0 m
.8754 .00375 L
s
.90174 0 m
.90174 .00375 L
s
.95443 0 m
.95443 .00375 L
s
.98077 0 m
.98077 .00375 L
s
.25 Mabswid
0 0 m
1 0 L
s
0 .00606 m
.00625 .00606 L
s
[(0)] -0.0125 .00606 1 0 Mshowa
0 .13778 m
.00625 .13778 L
s
[(10)] -0.0125 .13778 1 0 Mshowa
0 .26949 m
.00625 .26949 L
s
[(20)] -0.0125 .26949 1 0 Mshowa
0 .40121 m
.00625 .40121 L
s
[(30)] -0.0125 .40121 1 0 Mshowa
0 .53293 m
.00625 .53293 L
s
[(40)] -0.0125 .53293 1 0 Mshowa
0 .66465 m
.00625 .66465 L
s
[(50)] -0.0125 .66465 1 0 Mshowa
0 .79636 m
.00625 .79636 L
s
[(60)] -0.0125 .79636 1 0 Mshowa
0 .92808 m
.00625 .92808 L
s
[(70)] -0.0125 .92808 1 0 Mshowa
.125 Mabswid
0 .0324 m
.00375 .0324 L
s
0 .05875 m
.00375 .05875 L
s
0 .08509 m
.00375 .08509 L
s
0 .11143 m
.00375 .11143 L
s
0 .16412 m
.00375 .16412 L
s
0 .19046 m
.00375 .19046 L
s
0 .21681 m
.00375 .21681 L
s
0 .24315 m
.00375 .24315 L
s
0 .29584 m
.00375 .29584 L
s
0 .32218 m
.00375 .32218 L
s
0 .34852 m
.00375 .34852 L
s
0 .37487 m
.00375 .37487 L
s
0 .42756 m
.00375 .42756 L
s
0 .4539 m
.00375 .4539 L
s
0 .48024 m
.00375 .48024 L
s
0 .50659 m
.00375 .50659 L
s
0 .55927 m
.00375 .55927 L
s
0 .58562 m
.00375 .58562 L
s
0 .61196 m
.00375 .61196 L
s
0 .6383 m
.00375 .6383 L
s
0 .69099 m
.00375 .69099 L
s
0 .71733 m
.00375 .71733 L
s
0 .74368 m
.00375 .74368 L
s
0 .77002 m
.00375 .77002 L
s
0 .82271 m
.00375 .82271 L
s
0 .84905 m
.00375 .84905 L
s
0 .8754 m
.00375 .8754 L
s
0 .90174 m
.00375 .90174 L
s
0 .95443 m
.00375 .95443 L
s
0 .98077 m
.00375 .98077 L
s
.25 Mabswid
0 0 m
0 1 L
s
.00606 .99375 m
.00606 1 L
s
.13778 .99375 m
.13778 1 L
s
.26949 .99375 m
.26949 1 L
s
.40121 .99375 m
.40121 1 L
s
.53293 .99375 m
.53293 1 L
s
.66465 .99375 m
.66465 1 L
s
.79636 .99375 m
.79636 1 L
s
.92808 .99375 m
.92808 1 L
s
.125 Mabswid
.0324 .99625 m
.0324 1 L
s
.05875 .99625 m
.05875 1 L
s
.08509 .99625 m
.08509 1 L
s
.11143 .99625 m
.11143 1 L
s
.16412 .99625 m
.16412 1 L
s
.19046 .99625 m
.19046 1 L
s
.21681 .99625 m
.21681 1 L
s
.24315 .99625 m
.24315 1 L
s
.29584 .99625 m
.29584 1 L
s
.32218 .99625 m
.32218 1 L
s
.34852 .99625 m
.34852 1 L
s
.37487 .99625 m
.37487 1 L
s
.42756 .99625 m
.42756 1 L
s
.4539 .99625 m
.4539 1 L
s
.48024 .99625 m
.48024 1 L
s
.50659 .99625 m
.50659 1 L
s
.55927 .99625 m
.55927 1 L
s
.58562 .99625 m
.58562 1 L
s
.61196 .99625 m
.61196 1 L
s
.6383 .99625 m
.6383 1 L
s
.69099 .99625 m
.69099 1 L
s
.71733 .99625 m
.71733 1 L
s
.74368 .99625 m
.74368 1 L
s
.77002 .99625 m
.77002 1 L
s
.82271 .99625 m
.82271 1 L
s
.84905 .99625 m
.84905 1 L
s
.8754 .99625 m
.8754 1 L
s
.90174 .99625 m
.90174 1 L
s
.95443 .99625 m
.95443 1 L
s
.98077 .99625 m
.98077 1 L
s
.25 Mabswid
0 1 m
1 1 L
s
.99375 .00606 m
1 .00606 L
s
.99375 .13778 m
1 .13778 L
s
.99375 .26949 m
1 .26949 L
s
.99375 .40121 m
1 .40121 L
s
.99375 .53293 m
1 .53293 L
s
.99375 .66465 m
1 .66465 L
s
.99375 .79636 m
1 .79636 L
s
.99375 .92808 m
1 .92808 L
s
.125 Mabswid
.99625 .0324 m
1 .0324 L
s
.99625 .05875 m
1 .05875 L
s
.99625 .08509 m
1 .08509 L
s
.99625 .11143 m
1 .11143 L
s
.99625 .16412 m
1 .16412 L
s
.99625 .19046 m
1 .19046 L
s
.99625 .21681 m
1 .21681 L
s
.99625 .24315 m
1 .24315 L
s
.99625 .29584 m
1 .29584 L
s
.99625 .32218 m
1 .32218 L
s
.99625 .34852 m
1 .34852 L
s
.99625 .37487 m
1 .37487 L
s
.99625 .42756 m
1 .42756 L
s
.99625 .4539 m
1 .4539 L
s
.99625 .48024 m
1 .48024 L
s
.99625 .50659 m
1 .50659 L
s
.99625 .55927 m
1 .55927 L
s
.99625 .58562 m
1 .58562 L
s
.99625 .61196 m
1 .61196 L
s
.99625 .6383 m
1 .6383 L
s
.99625 .69099 m
1 .69099 L
s
.99625 .71733 m
1 .71733 L
s
.99625 .74368 m
1 .74368 L
s
.99625 .77002 m
1 .77002 L
s
.99625 .82271 m
1 .82271 L
s
.99625 .84905 m
1 .84905 L
s
.99625 .8754 m
1 .8754 L
s
.99625 .90174 m
1 .90174 L
s
.99625 .95443 m
1 .95443 L
s
.99625 .98077 m
1 .98077 L
s
.25 Mabswid
1 0 m
1 1 L
s
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
.01923 .98077 m
.98077 .98077 L
.98077 .01923 L
.01923 .01923 L
F
.5 Mabswid
.1 g
.58562 .17313 m
.59879 .16735 L
.61196 .17376 L
.62513 .17313 L
.63141 .17729 L
.6383 .18029 L
.65148 .18467 L
.65354 .19046 L
.66164 .20364 L
.66465 .20936 L
.66881 .21681 L
.66818 .22998 L
.66818 .24315 L
.67444 .25632 L
.66721 .26949 L
.67437 .28267 L
.67444 .29584 L
.67444 .30901 L
.66818 .32218 L
.66813 .33535 L
.67782 .34225 L
.68053 .34852 L
.68198 .3617 L
.69099 .36907 L
.69572 .37487 L
.70079 .38804 L
.70416 .39494 L
.70833 .40121 L
.70719 .41438 L
.71733 .42282 L
.71935 .42756 L
.73051 .43886 L
.7363 .44073 L
.74103 .4539 L
.74368 .46234 L
.74784 .46707 L
.75347 .48024 L
.75345 .49341 L
.75685 .49957 L
.75956 .50659 L
.75685 .51469 L
.74784 .51976 L
.74368 .52603 L
.74044 .53293 L
.7363 .5461 L
.73051 .55083 L
.7215 .55927 L
.71733 .56401 L
.71434 .57244 L
.70833 .58562 L
.70996 .59879 L
.70996 .61196 L
.7089 .62513 L
.70996 .6383 L
.7089 .65148 L
.71161 .66465 L
.70416 .67092 L
.69099 .67044 L
.68409 .67782 L
.67782 .68526 L
.66465 .68255 L
.65148 .68255 L
.64304 .69099 L
.6383 .69679 L
.63258 .70416 L
.62513 .7089 L
.61669 .71733 L
.61196 .7229 L
.60227 .73051 L
.61196 .73811 L
.61397 .74368 L
.61421 .75685 L
.61941 .77002 L
.61196 .7763 L
.60458 .78319 L
.59879 .78947 L
.59189 .79636 L
.58562 .80216 L
.57244 .80027 L
.56555 .80954 L
.55927 .81427 L
.55238 .82271 L
.5461 .83015 L
.5392 .83588 L
.53293 .84333 L
.51976 .84167 L
.50659 .84061 L
.49341 .84004 L
.48024 .84004 L
.46707 .84004 L
.4539 .84004 L
.44073 .83789 L
.42756 .84061 L
.42128 .83588 L
.41438 .83266 L
.40121 .82528 L
.38804 .82687 L
.38177 .82271 L
.37487 .81307 L
.3617 .81698 L
.35899 .80954 L
.35867 .79636 L
.34852 .79064 L
.34663 .78319 L
.34499 .77002 L
.33875 .75685 L
.33535 .74995 L
.3331 .74368 L
.33334 .73051 L
.33119 .71733 L
.33187 .70416 L
.32218 .69727 L
.31993 .69099 L
.31802 .67782 L
.31224 .66465 L
.30901 .65775 L
.30485 .65148 L
.30599 .6383 L
.29584 .62862 L
.28267 .62986 L
.26949 .63093 L
.26205 .62513 L
.25632 .61669 L
.25053 .61196 L
.24315 .60623 L
.23842 .59879 L
.23899 .58562 L
.23298 .57244 L
.23967 .55927 L
.24114 .5461 L
.24315 .53866 L
.25159 .53293 L
.25632 .5282 L
.26205 .51976 L
.26949 .51396 L
.27522 .50659 L
.28267 .50388 L
.29584 .50344 L
.29921 .49341 L
.29584 .48581 L
.29337 .48024 L
.29359 .46707 L
.29167 .4539 L
.2923 .44073 L
.28604 .42756 L
.28606 .41438 L
.28267 .40749 L
.27687 .40121 L
.27794 .38804 L
.2785 .37487 L
.26949 .36797 L
.26702 .3617 L
.26678 .34852 L
.26949 .34225 L
.27794 .33535 L
.28267 .32791 L
.2911 .32218 L
.29584 .31828 L
.30321 .30901 L
.30901 .30482 L
.31591 .29584 L
.30901 .28824 L
.30156 .28267 L
.29584 .27577 L
.28956 .26949 L
.28267 .26377 L
.27522 .25632 L
.27639 .24315 L
.27522 .22998 L
.27639 .21681 L
.28267 .20936 L
.28839 .20364 L
.29584 .19619 L
.30901 .19619 L
.31528 .20364 L
.32218 .21101 L
.33535 .21053 L
.3428 .21681 L
.34852 .2237 L
.35597 .22998 L
.3548 .24315 L
.3548 .25632 L
.3617 .26322 L
.36797 .26949 L
.36727 .28267 L
.37487 .28956 L
.38247 .28267 L
.38804 .27522 L
.40121 .27522 L
.41438 .2785 L
.42128 .26949 L
.42756 .26533 L
.44073 .26596 L
.4539 .25954 L
.46006 .25632 L
.46707 .2516 L
.47337 .25632 L
.48024 .25954 L
.48712 .25632 L
.49341 .25053 L
.49971 .25632 L
.50659 .25972 L
.51626 .25632 L
.51976 .2516 L
.52877 .24315 L
.53293 .23925 L
.53633 .22998 L
.54194 .21681 L
.5461 .21207 L
.5491 .20364 L
.55927 .19347 L
.56209 .19046 L
.57244 .18011 L
.57982 .17729 L
F
0 g
.58562 .17313 m
.59879 .16735 L
.61196 .17376 L
.62513 .17313 L
.63141 .17729 L
.6383 .18029 L
.65148 .18467 L
.65354 .19046 L
.66164 .20364 L
.66465 .20936 L
.66881 .21681 L
.66818 .22998 L
.66818 .24315 L
.67444 .25632 L
.66721 .26949 L
.67437 .28267 L
.67444 .29584 L
.67444 .30901 L
.66818 .32218 L
.66813 .33535 L
.67782 .34225 L
.68053 .34852 L
.68198 .3617 L
.69099 .36907 L
.69572 .37487 L
.70079 .38804 L
.70416 .39494 L
.70833 .40121 L
.70719 .41438 L
.71733 .42282 L
.71935 .42756 L
.73051 .43886 L
.7363 .44073 L
.74103 .4539 L
.74368 .46234 L
.74784 .46707 L
.75347 .48024 L
.75345 .49341 L
.75685 .49957 L
.75956 .50659 L
.75685 .51469 L
.74784 .51976 L
.74368 .52603 L
.74044 .53293 L
.7363 .5461 L
.73051 .55083 L
.7215 .55927 L
.71733 .56401 L
.71434 .57244 L
.70833 .58562 L
Mistroke
.70996 .59879 L
.70996 .61196 L
.7089 .62513 L
.70996 .6383 L
.7089 .65148 L
.71161 .66465 L
.70416 .67092 L
.69099 .67044 L
.68409 .67782 L
.67782 .68526 L
.66465 .68255 L
.65148 .68255 L
.64304 .69099 L
.6383 .69679 L
.63258 .70416 L
.62513 .7089 L
.61669 .71733 L
.61196 .7229 L
.60227 .73051 L
.61196 .73811 L
.61397 .74368 L
.61421 .75685 L
.61941 .77002 L
.61196 .7763 L
.60458 .78319 L
.59879 .78947 L
.59189 .79636 L
.58562 .80216 L
.57244 .80027 L
.56555 .80954 L
.55927 .81427 L
.55238 .82271 L
.5461 .83015 L
.5392 .83588 L
.53293 .84333 L
.51976 .84167 L
.50659 .84061 L
.49341 .84004 L
.48024 .84004 L
.46707 .84004 L
.4539 .84004 L
.44073 .83789 L
.42756 .84061 L
.42128 .83588 L
.41438 .83266 L
.40121 .82528 L
.38804 .82687 L
.38177 .82271 L
.37487 .81307 L
.3617 .81698 L
Mistroke
.35899 .80954 L
.35867 .79636 L
.34852 .79064 L
.34663 .78319 L
.34499 .77002 L
.33875 .75685 L
.33535 .74995 L
.3331 .74368 L
.33334 .73051 L
.33119 .71733 L
.33187 .70416 L
.32218 .69727 L
.31993 .69099 L
.31802 .67782 L
.31224 .66465 L
.30901 .65775 L
.30485 .65148 L
.30599 .6383 L
.29584 .62862 L
.28267 .62986 L
.26949 .63093 L
.26205 .62513 L
.25632 .61669 L
.25053 .61196 L
.24315 .60623 L
.23842 .59879 L
.23899 .58562 L
.23298 .57244 L
.23967 .55927 L
.24114 .5461 L
.24315 .53866 L
.25159 .53293 L
.25632 .5282 L
.26205 .51976 L
.26949 .51396 L
.27522 .50659 L
.28267 .50388 L
.29584 .50344 L
.29921 .49341 L
.29584 .48581 L
.29337 .48024 L
.29359 .46707 L
.29167 .4539 L
.2923 .44073 L
.28604 .42756 L
.28606 .41438 L
.28267 .40749 L
.27687 .40121 L
.27794 .38804 L
.2785 .37487 L
Mistroke
.26949 .36797 L
.26702 .3617 L
.26678 .34852 L
.26949 .34225 L
.27794 .33535 L
.28267 .32791 L
.2911 .32218 L
.29584 .31828 L
.30321 .30901 L
.30901 .30482 L
.31591 .29584 L
.30901 .28824 L
.30156 .28267 L
.29584 .27577 L
.28956 .26949 L
.28267 .26377 L
.27522 .25632 L
.27639 .24315 L
.27522 .22998 L
.27639 .21681 L
.28267 .20936 L
.28839 .20364 L
.29584 .19619 L
.30901 .19619 L
.31528 .20364 L
.32218 .21101 L
.33535 .21053 L
.3428 .21681 L
.34852 .2237 L
.35597 .22998 L
.3548 .24315 L
.3548 .25632 L
.3617 .26322 L
.36797 .26949 L
.36727 .28267 L
.37487 .28956 L
.38247 .28267 L
.38804 .27522 L
.40121 .27522 L
.41438 .2785 L
.42128 .26949 L
.42756 .26533 L
.44073 .26596 L
.4539 .25954 L
.46006 .25632 L
.46707 .2516 L
.47337 .25632 L
.48024 .25954 L
.48712 .25632 L
.49341 .25053 L
Mistroke
.49971 .25632 L
.50659 .25972 L
.51626 .25632 L
.51976 .2516 L
.52877 .24315 L
.53293 .23925 L
.53633 .22998 L
.54194 .21681 L
.5461 .21207 L
.5491 .20364 L
.55927 .19347 L
.56209 .19046 L
.57244 .18011 L
.57982 .17729 L
.58562 .17313 L
Mfstroke
.2 g
.58562 .18536 m
.59879 .17871 L
.61196 .18409 L
.62513 .18551 L
.63699 .19046 L
.6383 .19234 L
.64947 .20364 L
.65148 .20495 L
.65658 .21681 L
.65749 .22998 L
.6572 .24315 L
.6637 .25632 L
.65955 .26949 L
.6637 .28267 L
.6637 .29584 L
.66371 .30901 L
.65785 .32218 L
.65643 .33535 L
.65641 .34852 L
.66465 .35676 L
.66582 .3617 L
.67782 .37158 L
.68106 .37487 L
.69005 .38804 L
.69099 .38935 L
.69557 .40121 L
.69672 .41438 L
.70416 .42426 L
.7077 .42756 L
.71602 .44073 L
.71733 .44221 L
.73051 .44454 L
.73389 .4539 L
.73508 .46707 L
.74273 .48024 L
.74277 .49341 L
.73856 .50659 L
.73508 .51976 L
.73051 .53108 L
.72884 .53293 L
.71733 .54462 L
.71602 .5461 L
.70926 .55927 L
.70416 .57027 L
.70274 .57244 L
.69609 .58562 L
.69099 .59663 L
.68953 .59879 L
.68882 .61196 L
.68914 .62513 L
.68946 .6383 L
.67782 .64995 L
.67585 .65148 L
.66465 .66312 L
.66247 .66465 L
.65148 .67188 L
.6383 .67564 L
.63596 .67782 L
.62513 .68882 L
.62296 .69099 L
.61196 .69579 L
.60254 .70416 L
.60602 .71733 L
.59879 .72095 L
.59057 .73051 L
.59879 .73981 L
.60357 .74368 L
.59879 .75523 L
.59661 .75685 L
.59075 .77002 L
.58562 .78167 L
.58344 .78319 L
.57244 .78419 L
.55927 .79419 L
.5571 .79636 L
.5461 .80034 L
.5369 .80954 L
.53293 .81351 L
.51976 .8214 L
.51758 .82271 L
.50659 .82535 L
.49341 .82388 L
.48024 .82781 L
.46707 .82766 L
.4539 .82781 L
.44073 .82622 L
.42756 .82595 L
.41438 .82391 L
.41024 .82271 L
.40121 .81782 L
.38804 .81449 L
.38291 .80954 L
.37487 .80306 L
.36817 .79636 L
.3617 .78876 L
.35682 .78319 L
.35569 .77002 L
.34942 .75685 L
.34986 .74368 L
.34852 .74032 L
.34498 .73051 L
.34357 .71733 L
.34395 .70416 L
.33683 .69099 L
.33535 .68968 L
.33025 .67782 L
.32384 .66465 L
.32218 .66333 L
.31723 .65148 L
.31617 .6383 L
.30901 .62888 L
.30572 .62513 L
.29584 .61692 L
.28267 .6152 L
.27167 .61196 L
.26949 .60979 L
.25632 .60602 L
.24909 .59879 L
.25122 .58562 L
.24516 .57244 L
.25122 .55927 L
.2527 .5461 L
.25632 .53887 L
.26949 .53352 L
.27167 .53293 L
.28267 .52799 L
.29027 .51976 L
.29584 .51466 L
.3059 .50659 L
.30901 .4962 L
.30995 .49341 L
.31385 .48024 L
.30982 .46707 L
.30901 .46576 L
.30443 .4539 L
.30328 .44073 L
.29678 .42756 L
.29674 .41438 L
.29717 .40121 L
.29584 .39785 L
.29484 .38804 L
.29074 .37487 L
.2909 .3617 L
.29027 .34852 L
.2886 .33535 L
.29584 .32812 L
.30901 .32349 L
.31119 .32218 L
.32218 .3118 L
.33535 .31705 L
.34852 .31263 L
.3617 .31821 L
.37181 .32218 L
.37487 .32403 L
.38804 .32436 L
.38904 .32218 L
.3981 .30901 L
.40121 .30572 L
.40945 .29584 L
.41438 .29074 L
.42199 .28267 L
.42756 .27756 L
.44073 .27665 L
.44975 .26949 L
.4539 .26829 L
.46707 .26626 L
.48024 .26829 L
.49036 .26949 L
.49341 .27034 L
.50659 .27041 L
.50995 .26949 L
.51976 .26626 L
.53029 .25632 L
.53293 .24909 L
.54152 .24315 L
.5461 .23129 L
.547 .22998 L
.55432 .21681 L
.55927 .20551 L
.56115 .20364 L
.57244 .19247 L
.57357 .19046 L
F
0 g
.58562 .18536 m
.59879 .17871 L
.61196 .18409 L
.62513 .18551 L
.63699 .19046 L
.6383 .19234 L
.64947 .20364 L
.65148 .20495 L
.65658 .21681 L
.65749 .22998 L
.6572 .24315 L
.6637 .25632 L
.65955 .26949 L
.6637 .28267 L
.6637 .29584 L
.66371 .30901 L
.65785 .32218 L
.65643 .33535 L
.65641 .34852 L
.66465 .35676 L
.66582 .3617 L
.67782 .37158 L
.68106 .37487 L
.69005 .38804 L
.69099 .38935 L
.69557 .40121 L
.69672 .41438 L
.70416 .42426 L
.7077 .42756 L
.71602 .44073 L
.71733 .44221 L
.73051 .44454 L
.73389 .4539 L
.73508 .46707 L
.74273 .48024 L
.74277 .49341 L
.73856 .50659 L
.73508 .51976 L
.73051 .53108 L
.72884 .53293 L
.71733 .54462 L
.71602 .5461 L
.70926 .55927 L
.70416 .57027 L
.70274 .57244 L
.69609 .58562 L
.69099 .59663 L
.68953 .59879 L
.68882 .61196 L
.68914 .62513 L
Mistroke
.68946 .6383 L
.67782 .64995 L
.67585 .65148 L
.66465 .66312 L
.66247 .66465 L
.65148 .67188 L
.6383 .67564 L
.63596 .67782 L
.62513 .68882 L
.62296 .69099 L
.61196 .69579 L
.60254 .70416 L
.60602 .71733 L
.59879 .72095 L
.59057 .73051 L
.59879 .73981 L
.60357 .74368 L
.59879 .75523 L
.59661 .75685 L
.59075 .77002 L
.58562 .78167 L
.58344 .78319 L
.57244 .78419 L
.55927 .79419 L
.5571 .79636 L
.5461 .80034 L
.5369 .80954 L
.53293 .81351 L
.51976 .8214 L
.51758 .82271 L
.50659 .82535 L
.49341 .82388 L
.48024 .82781 L
.46707 .82766 L
.4539 .82781 L
.44073 .82622 L
.42756 .82595 L
.41438 .82391 L
.41024 .82271 L
.40121 .81782 L
.38804 .81449 L
.38291 .80954 L
.37487 .80306 L
.36817 .79636 L
.3617 .78876 L
.35682 .78319 L
.35569 .77002 L
.34942 .75685 L
.34986 .74368 L
.34852 .74032 L
Mistroke
.34498 .73051 L
.34357 .71733 L
.34395 .70416 L
.33683 .69099 L
.33535 .68968 L
.33025 .67782 L
.32384 .66465 L
.32218 .66333 L
.31723 .65148 L
.31617 .6383 L
.30901 .62888 L
.30572 .62513 L
.29584 .61692 L
.28267 .6152 L
.27167 .61196 L
.26949 .60979 L
.25632 .60602 L
.24909 .59879 L
.25122 .58562 L
.24516 .57244 L
.25122 .55927 L
.2527 .5461 L
.25632 .53887 L
.26949 .53352 L
.27167 .53293 L
.28267 .52799 L
.29027 .51976 L
.29584 .51466 L
.3059 .50659 L
.30901 .4962 L
.30995 .49341 L
.31385 .48024 L
.30982 .46707 L
.30901 .46576 L
.30443 .4539 L
.30328 .44073 L
.29678 .42756 L
.29674 .41438 L
.29717 .40121 L
.29584 .39785 L
.29484 .38804 L
.29074 .37487 L
.2909 .3617 L
.29027 .34852 L
.2886 .33535 L
.29584 .32812 L
.30901 .32349 L
.31119 .32218 L
.32218 .3118 L
.33535 .31705 L
Mistroke
.34852 .31263 L
.3617 .31821 L
.37181 .32218 L
.37487 .32403 L
.38804 .32436 L
.38904 .32218 L
.3981 .30901 L
.40121 .30572 L
.40945 .29584 L
.41438 .29074 L
.42199 .28267 L
.42756 .27756 L
.44073 .27665 L
.44975 .26949 L
.4539 .26829 L
.46707 .26626 L
.48024 .26829 L
.49036 .26949 L
.49341 .27034 L
.50659 .27041 L
.50995 .26949 L
.51976 .26626 L
.53029 .25632 L
.53293 .24909 L
.54152 .24315 L
.5461 .23129 L
.547 .22998 L
.55432 .21681 L
.55927 .20551 L
.56115 .20364 L
.57244 .19247 L
.57357 .19046 L
.58562 .18536 L
Mfstroke
.3 g
.58562 .19427 m
.59879 .19051 L
.61196 .1905 L
.62513 .19339 L
.63488 .20364 L
.6383 .20816 L
.64817 .21681 L
.65145 .22998 L
.65145 .24315 L
.65148 .24325 L
.65592 .25632 L
.65483 .26949 L
.65589 .28267 L
.65589 .29584 L
.65597 .30901 L
.65148 .3221 L
.65144 .32218 L
.6485 .33535 L
.64822 .34852 L
.65148 .35413 L
.66059 .3617 L
.66465 .36501 L
.67256 .37487 L
.67782 .38085 L
.68231 .38804 L
.68843 .40121 L
.69096 .41438 L
.69099 .41447 L
.69866 .42756 L
.70416 .43379 L
.70735 .44073 L
.7173 .4539 L
.71733 .45395 L
.72795 .46707 L
.73051 .47442 L
.73495 .48024 L
.73559 .49341 L
.73389 .50659 L
.73051 .51743 L
.72795 .51976 L
.71733 .53288 L
.71729 .53293 L
.70742 .5461 L
.70416 .55475 L
.70036 .55927 L
.69099 .57235 L
.69094 .57244 L
.68774 .58562 L
.67782 .59865 L
.67777 .59879 L
.67372 .61196 L
.67376 .62513 L
.66465 .63383 L
.66094 .6383 L
.65148 .64816 L
.64743 .65148 L
.6383 .66055 L
.63413 .66465 L
.62513 .67329 L
.62084 .67782 L
.61196 .68807 L
.60786 .69099 L
.59879 .69867 L
.58562 .70412 L
.58553 .70416 L
.58173 .71733 L
.58284 .73051 L
.58554 .74368 L
.58152 .75685 L
.58456 .77002 L
.57244 .78196 L
.55927 .7791 L
.5461 .77999 L
.53293 .78313 L
.53282 .78319 L
.51976 .79622 L
.51962 .79636 L
.50659 .8095 L
.50647 .80954 L
.49341 .81865 L
.48024 .81945 L
.46707 .81979 L
.4539 .81939 L
.44073 .8176 L
.42756 .81721 L
.41438 .81771 L
.40121 .81308 L
.3891 .80954 L
.38804 .80657 L
.37491 .79636 L
.37487 .79632 L
.36467 .78319 L
.36173 .77002 L
.3617 .76996 L
.35653 .75685 L
.35884 .74368 L
.35398 .73051 L
.3515 .71733 L
.351 .70416 L
.34857 .69099 L
.34852 .69091 L
.33861 .67782 L
.3354 .66465 L
.33535 .66458 L
.32516 .65148 L
.32221 .6383 L
.32218 .63817 L
.31527 .62513 L
.30909 .61196 L
.30901 .61188 L
.29584 .60904 L
.28267 .6075 L
.27281 .59879 L
.26949 .59568 L
.25915 .58562 L
.26078 .57244 L
.25958 .55927 L
.25756 .5461 L
.26949 .53499 L
.28267 .53618 L
.28578 .53293 L
.29584 .52301 L
.30901 .51984 L
.30906 .51976 L
.31446 .50659 L
.31769 .49341 L
.31855 .48024 L
.31636 .46707 L
.31156 .4539 L
.30904 .44073 L
.30901 .44061 L
.30456 .42756 L
.30385 .41438 L
.30606 .40121 L
.30207 .38804 L
.29866 .37487 L
.29866 .3617 L
.30901 .34859 L
.30915 .34852 L
.32218 .33542 L
.32227 .33535 L
.33535 .32624 L
.34852 .32984 L
.35742 .33535 L
.3617 .33924 L
.37487 .34025 L
.38804 .33945 L
.39313 .33535 L
.39641 .32218 L
.40121 .31024 L
.40666 .30901 L
.41438 .29909 L
.41764 .29584 L
.42756 .28598 L
.44073 .2827 L
.44079 .28267 L
.4539 .2745 L
.46707 .27501 L
.48024 .27537 L
.49341 .27698 L
.50659 .27764 L
.51976 .27499 L
.53293 .27362 L
.53705 .26949 L
.5461 .25639 L
.54613 .25632 L
.54867 .24315 L
.55411 .22998 L
.55927 .2209 L
.56224 .21681 L
.57244 .20815 L
.57654 .20364 L
F
0 g
.58562 .19427 m
.59879 .19051 L
.61196 .1905 L
.62513 .19339 L
.63488 .20364 L
.6383 .20816 L
.64817 .21681 L
.65145 .22998 L
.65145 .24315 L
.65148 .24325 L
.65592 .25632 L
.65483 .26949 L
.65589 .28267 L
.65589 .29584 L
.65597 .30901 L
.65148 .3221 L
.65144 .32218 L
.6485 .33535 L
.64822 .34852 L
.65148 .35413 L
.66059 .3617 L
.66465 .36501 L
.67256 .37487 L
.67782 .38085 L
.68231 .38804 L
.68843 .40121 L
.69096 .41438 L
.69099 .41447 L
.69866 .42756 L
.70416 .43379 L
.70735 .44073 L
.7173 .4539 L
.71733 .45395 L
.72795 .46707 L
.73051 .47442 L
.73495 .48024 L
.73559 .49341 L
.73389 .50659 L
.73051 .51743 L
.72795 .51976 L
.71733 .53288 L
.71729 .53293 L
.70742 .5461 L
.70416 .55475 L
.70036 .55927 L
.69099 .57235 L
.69094 .57244 L
.68774 .58562 L
.67782 .59865 L
.67777 .59879 L
Mistroke
.67372 .61196 L
.67376 .62513 L
.66465 .63383 L
.66094 .6383 L
.65148 .64816 L
.64743 .65148 L
.6383 .66055 L
.63413 .66465 L
.62513 .67329 L
.62084 .67782 L
.61196 .68807 L
.60786 .69099 L
.59879 .69867 L
.58562 .70412 L
.58553 .70416 L
.58173 .71733 L
.58284 .73051 L
.58554 .74368 L
.58152 .75685 L
.58456 .77002 L
.57244 .78196 L
.55927 .7791 L
.5461 .77999 L
.53293 .78313 L
.53282 .78319 L
.51976 .79622 L
.51962 .79636 L
.50659 .8095 L
.50647 .80954 L
.49341 .81865 L
.48024 .81945 L
.46707 .81979 L
.4539 .81939 L
.44073 .8176 L
.42756 .81721 L
.41438 .81771 L
.40121 .81308 L
.3891 .80954 L
.38804 .80657 L
.37491 .79636 L
.37487 .79632 L
.36467 .78319 L
.36173 .77002 L
.3617 .76996 L
.35653 .75685 L
.35884 .74368 L
.35398 .73051 L
.3515 .71733 L
.351 .70416 L
.34857 .69099 L
Mistroke
.34852 .69091 L
.33861 .67782 L
.3354 .66465 L
.33535 .66458 L
.32516 .65148 L
.32221 .6383 L
.32218 .63817 L
.31527 .62513 L
.30909 .61196 L
.30901 .61188 L
.29584 .60904 L
.28267 .6075 L
.27281 .59879 L
.26949 .59568 L
.25915 .58562 L
.26078 .57244 L
.25958 .55927 L
.25756 .5461 L
.26949 .53499 L
.28267 .53618 L
.28578 .53293 L
.29584 .52301 L
.30901 .51984 L
.30906 .51976 L
.31446 .50659 L
.31769 .49341 L
.31855 .48024 L
.31636 .46707 L
.31156 .4539 L
.30904 .44073 L
.30901 .44061 L
.30456 .42756 L
.30385 .41438 L
.30606 .40121 L
.30207 .38804 L
.29866 .37487 L
.29866 .3617 L
.30901 .34859 L
.30915 .34852 L
.32218 .33542 L
.32227 .33535 L
.33535 .32624 L
.34852 .32984 L
.35742 .33535 L
.3617 .33924 L
.37487 .34025 L
.38804 .33945 L
.39313 .33535 L
.39641 .32218 L
.40121 .31024 L
Mistroke
.40666 .30901 L
.41438 .29909 L
.41764 .29584 L
.42756 .28598 L
.44073 .2827 L
.44079 .28267 L
.4539 .2745 L
.46707 .27501 L
.48024 .27537 L
.49341 .27698 L
.50659 .27764 L
.51976 .27499 L
.53293 .27362 L
.53705 .26949 L
.5461 .25639 L
.54613 .25632 L
.54867 .24315 L
.55411 .22998 L
.55927 .2209 L
.56224 .21681 L
.57244 .20815 L
.57654 .20364 L
.58562 .19427 L
Mfstroke
.4 g
.58562 .20248 m
.59879 .1982 L
.61196 .19691 L
.62513 .20063 L
.62914 .20364 L
.6383 .21583 L
.63971 .21681 L
.64633 .22998 L
.64663 .24315 L
.65046 .25632 L
.65068 .26949 L
.65048 .28267 L
.65049 .29584 L
.65042 .30901 L
.645 .32218 L
.64123 .33535 L
.63975 .34852 L
.64955 .3617 L
.65148 .36329 L
.66465 .37347 L
.66578 .37487 L
.6768 .38804 L
.67782 .38982 L
.68273 .40121 L
.68604 .41438 L
.69099 .42598 L
.69198 .42756 L
.70295 .44073 L
.70416 .4421 L
.7122 .4539 L
.71733 .46109 L
.72229 .46707 L
.72949 .48024 L
.73051 .48404 L
.73113 .49341 L
.73051 .50278 L
.72966 .50659 L
.72229 .51976 L
.71733 .52574 L
.7102 .53293 L
.70444 .5461 L
.70416 .54707 L
.69215 .55927 L
.69099 .56068 L
.68359 .57244 L
.67927 .58562 L
.67782 .58635 L
.66843 .59879 L
.66608 .61196 L
.66465 .62046 L
.66063 .62513 L
.6529 .6383 L
.65148 .63998 L
.63956 .65148 L
.6383 .65291 L
.6263 .66465 L
.62513 .66562 L
.61406 .67782 L
.61196 .68083 L
.60023 .69099 L
.59879 .6921 L
.58562 .69716 L
.57483 .70416 L
.57373 .71733 L
.57571 .73051 L
.57511 .74368 L
.57388 .75685 L
.57244 .76587 L
.56778 .77002 L
.55927 .77146 L
.5461 .77299 L
.53293 .77364 L
.52447 .78319 L
.51976 .78393 L
.50732 .79636 L
.50659 .80174 L
.49341 .80765 L
.48732 .80954 L
.48024 .81099 L
.46707 .81255 L
.4539 .81093 L
.44073 .81166 L
.42756 .81053 L
.41438 .81069 L
.40546 .80954 L
.40121 .80863 L
.38804 .79929 L
.38403 .79636 L
.37487 .78734 L
.37195 .78319 L
.36701 .77002 L
.3617 .75936 L
.36104 .75685 L
.3617 .74893 L
.36269 .74368 L
.3617 .73572 L
.36068 .73051 L
.35877 .71733 L
.35649 .70416 L
.35614 .69099 L
.34852 .6794 L
.34707 .67782 L
.34199 .66465 L
.33535 .6551 L
.33244 .65148 L
.3274 .6383 L
.32346 .62513 L
.32218 .61973 L
.31914 .61196 L
.30901 .60177 L
.29584 .6018 L
.28267 .60041 L
.28099 .59879 L
.26949 .58738 L
.26767 .58562 L
.26777 .57244 L
.26804 .55927 L
.26949 .54954 L
.27734 .5461 L
.28267 .54465 L
.29408 .53293 L
.29584 .53148 L
.30901 .53063 L
.31601 .51976 L
.32116 .50659 L
.32218 .50219 L
.32324 .49341 L
.32339 .48024 L
.32218 .47147 L
.32137 .46707 L
.31723 .4539 L
.31385 .44073 L
.31002 .42756 L
.30901 .42317 L
.30835 .41438 L
.30901 .40717 L
.31003 .40121 L
.31034 .38804 L
.30901 .38135 L
.30718 .37487 L
.30718 .3617 L
.30901 .35938 L
.32022 .34852 L
.32218 .3444 L
.33535 .33695 L
.34852 .33901 L
.3617 .34724 L
.36691 .34852 L
.37487 .35045 L
.38412 .34852 L
.38804 .34709 L
.40027 .33535 L
.40121 .32767 L
.40243 .32218 L
.41336 .30901 L
.41438 .30756 L
.4261 .29584 L
.42756 .29444 L
.44073 .288 L
.45159 .28267 L
.4539 .28152 L
.46707 .28168 L
.48024 .28177 L
.49341 .28189 L
.50659 .28207 L
.51976 .28167 L
.53293 .28042 L
.54385 .26949 L
.5461 .26616 L
.55056 .25632 L
.55436 .24315 L
.55862 .22998 L
.55927 .22854 L
.56952 .21681 L
.57244 .21521 L
.58418 .20364 L
F
0 g
.58562 .20248 m
.59879 .1982 L
.61196 .19691 L
.62513 .20063 L
.62914 .20364 L
.6383 .21583 L
.63971 .21681 L
.64633 .22998 L
.64663 .24315 L
.65046 .25632 L
.65068 .26949 L
.65048 .28267 L
.65049 .29584 L
.65042 .30901 L
.645 .32218 L
.64123 .33535 L
.63975 .34852 L
.64955 .3617 L
.65148 .36329 L
.66465 .37347 L
.66578 .37487 L
.6768 .38804 L
.67782 .38982 L
.68273 .40121 L
.68604 .41438 L
.69099 .42598 L
.69198 .42756 L
.70295 .44073 L
.70416 .4421 L
.7122 .4539 L
.71733 .46109 L
.72229 .46707 L
.72949 .48024 L
.73051 .48404 L
.73113 .49341 L
.73051 .50278 L
.72966 .50659 L
.72229 .51976 L
.71733 .52574 L
.7102 .53293 L
.70444 .5461 L
.70416 .54707 L
.69215 .55927 L
.69099 .56068 L
.68359 .57244 L
.67927 .58562 L
.67782 .58635 L
.66843 .59879 L
.66608 .61196 L
.66465 .62046 L
Mistroke
.66063 .62513 L
.6529 .6383 L
.65148 .63998 L
.63956 .65148 L
.6383 .65291 L
.6263 .66465 L
.62513 .66562 L
.61406 .67782 L
.61196 .68083 L
.60023 .69099 L
.59879 .6921 L
.58562 .69716 L
.57483 .70416 L
.57373 .71733 L
.57571 .73051 L
.57511 .74368 L
.57388 .75685 L
.57244 .76587 L
.56778 .77002 L
.55927 .77146 L
.5461 .77299 L
.53293 .77364 L
.52447 .78319 L
.51976 .78393 L
.50732 .79636 L
.50659 .80174 L
.49341 .80765 L
.48732 .80954 L
.48024 .81099 L
.46707 .81255 L
.4539 .81093 L
.44073 .81166 L
.42756 .81053 L
.41438 .81069 L
.40546 .80954 L
.40121 .80863 L
.38804 .79929 L
.38403 .79636 L
.37487 .78734 L
.37195 .78319 L
.36701 .77002 L
.3617 .75936 L
.36104 .75685 L
.3617 .74893 L
.36269 .74368 L
.3617 .73572 L
.36068 .73051 L
.35877 .71733 L
.35649 .70416 L
.35614 .69099 L
Mistroke
.34852 .6794 L
.34707 .67782 L
.34199 .66465 L
.33535 .6551 L
.33244 .65148 L
.3274 .6383 L
.32346 .62513 L
.32218 .61973 L
.31914 .61196 L
.30901 .60177 L
.29584 .6018 L
.28267 .60041 L
.28099 .59879 L
.26949 .58738 L
.26767 .58562 L
.26777 .57244 L
.26804 .55927 L
.26949 .54954 L
.27734 .5461 L
.28267 .54465 L
.29408 .53293 L
.29584 .53148 L
.30901 .53063 L
.31601 .51976 L
.32116 .50659 L
.32218 .50219 L
.32324 .49341 L
.32339 .48024 L
.32218 .47147 L
.32137 .46707 L
.31723 .4539 L
.31385 .44073 L
.31002 .42756 L
.30901 .42317 L
.30835 .41438 L
.30901 .40717 L
.31003 .40121 L
.31034 .38804 L
.30901 .38135 L
.30718 .37487 L
.30718 .3617 L
.30901 .35938 L
.32022 .34852 L
.32218 .3444 L
.33535 .33695 L
.34852 .33901 L
.3617 .34724 L
.36691 .34852 L
.37487 .35045 L
.38412 .34852 L
Mistroke
.38804 .34709 L
.40027 .33535 L
.40121 .32767 L
.40243 .32218 L
.41336 .30901 L
.41438 .30756 L
.4261 .29584 L
.42756 .29444 L
.44073 .288 L
.45159 .28267 L
.4539 .28152 L
.46707 .28168 L
.48024 .28177 L
.49341 .28189 L
.50659 .28207 L
.51976 .28167 L
.53293 .28042 L
.54385 .26949 L
.5461 .26616 L
.55056 .25632 L
.55436 .24315 L
.55862 .22998 L
.55927 .22854 L
.56952 .21681 L
.57244 .21521 L
.58418 .20364 L
.58562 .20248 L
Mfstroke
.5 g
.59879 .20298 m
.61196 .20267 L
.61718 .20364 L
.62513 .20712 L
.63346 .21681 L
.6383 .22022 L
.64211 .22998 L
.64297 .24315 L
.64563 .25632 L
.64661 .26949 L
.64582 .28267 L
.64588 .29584 L
.64526 .30901 L
.63926 .32218 L
.6383 .32461 L
.63532 .33535 L
.63198 .34852 L
.6383 .36025 L
.6399 .3617 L
.65148 .37015 L
.65876 .37487 L
.66465 .37998 L
.67181 .38804 L
.67782 .39948 L
.67848 .40121 L
.6823 .41438 L
.68691 .42756 L
.69099 .43438 L
.69666 .44073 L
.70416 .44859 L
.70802 .4539 L
.71733 .46617 L
.718 .46707 L
.72466 .48024 L
.72659 .49341 L
.72528 .50659 L
.718 .51976 L
.71733 .52065 L
.70632 .53293 L
.70416 .5398 L
.69956 .5461 L
.69099 .5534 L
.68647 .55927 L
.67862 .57244 L
.67782 .5743 L
.67441 .58562 L
.66465 .59352 L
.66056 .59879 L
.6541 .61196 L
.65148 .61354 L
.64633 .62513 L
.64065 .6383 L
.6383 .64093 L
.63211 .65148 L
.62513 .66124 L
.62012 .66465 L
.61196 .67469 L
.60728 .67782 L
.59879 .68487 L
.58825 .69099 L
.58562 .69187 L
.57244 .69791 L
.56874 .70416 L
.56625 .71733 L
.56783 .73051 L
.56824 .74368 L
.5619 .75685 L
.55927 .75948 L
.5461 .766 L
.53293 .76524 L
.52251 .77002 L
.51976 .77233 L
.50659 .77793 L
.5029 .78319 L
.496 .79636 L
.49341 .79803 L
.48024 .80348 L
.46707 .80615 L
.4539 .80491 L
.44073 .80676 L
.42756 .80549 L
.41438 .80526 L
.40121 .80381 L
.39004 .79636 L
.38804 .79342 L
.37785 .78319 L
.37487 .77899 L
.37129 .77002 L
.36582 .75685 L
.36742 .74368 L
.36619 .73051 L
.36468 .71733 L
.3617 .70784 L
.36093 .70416 L
.36099 .69099 L
.35472 .67782 L
.34852 .67131 L
.34564 .66465 L
.33811 .65148 L
.33535 .64845 L
.33165 .6383 L
.32914 .62513 L
.32571 .61196 L
.32218 .6055 L
.30901 .59899 L
.30658 .59879 L
.29584 .59611 L
.28267 .58805 L
.28032 .58562 L
.27217 .57244 L
.27527 .55927 L
.28267 .54951 L
.28891 .5461 L
.29584 .53871 L
.30901 .53611 L
.31313 .53293 L
.3213 .51976 L
.32218 .51893 L
.32675 .50659 L
.3284 .49341 L
.32987 .48024 L
.32553 .46707 L
.32218 .45472 L
.32151 .4539 L
.31752 .44073 L
.31486 .42756 L
.31313 .41438 L
.31502 .40121 L
.31665 .38804 L
.32023 .37487 L
.31955 .3617 L
.32218 .3569 L
.32962 .34852 L
.33535 .34637 L
.33985 .34852 L
.34852 .35535 L
.3617 .35459 L
.37487 .3601 L
.38804 .35907 L
.39995 .34852 L
.40121 .34716 L
.40573 .33535 L
.40871 .32218 L
.41438 .31521 L
.41888 .30901 L
.42756 .30072 L
.43362 .29584 L
.44073 .29229 L
.4539 .28686 L
.46707 .28662 L
.48024 .28662 L
.49341 .28619 L
.50659 .28635 L
.51976 .28686 L
.53293 .28545 L
.53729 .28267 L
.5461 .27336 L
.54888 .26949 L
.55414 .25632 L
.55862 .24315 L
.55927 .24081 L
.56336 .22998 L
.57244 .21992 L
.57494 .21681 L
.58562 .20815 L
.59539 .20364 L
F
0 g
.59879 .20298 m
.61196 .20267 L
.61718 .20364 L
.62513 .20712 L
.63346 .21681 L
.6383 .22022 L
.64211 .22998 L
.64297 .24315 L
.64563 .25632 L
.64661 .26949 L
.64582 .28267 L
.64588 .29584 L
.64526 .30901 L
.63926 .32218 L
.6383 .32461 L
.63532 .33535 L
.63198 .34852 L
.6383 .36025 L
.6399 .3617 L
.65148 .37015 L
.65876 .37487 L
.66465 .37998 L
.67181 .38804 L
.67782 .39948 L
.67848 .40121 L
.6823 .41438 L
.68691 .42756 L
.69099 .43438 L
.69666 .44073 L
.70416 .44859 L
.70802 .4539 L
.71733 .46617 L
.718 .46707 L
.72466 .48024 L
.72659 .49341 L
.72528 .50659 L
.718 .51976 L
.71733 .52065 L
.70632 .53293 L
.70416 .5398 L
.69956 .5461 L
.69099 .5534 L
.68647 .55927 L
.67862 .57244 L
.67782 .5743 L
.67441 .58562 L
.66465 .59352 L
.66056 .59879 L
.6541 .61196 L
.65148 .61354 L
Mistroke
.64633 .62513 L
.64065 .6383 L
.6383 .64093 L
.63211 .65148 L
.62513 .66124 L
.62012 .66465 L
.61196 .67469 L
.60728 .67782 L
.59879 .68487 L
.58825 .69099 L
.58562 .69187 L
.57244 .69791 L
.56874 .70416 L
.56625 .71733 L
.56783 .73051 L
.56824 .74368 L
.5619 .75685 L
.55927 .75948 L
.5461 .766 L
.53293 .76524 L
.52251 .77002 L
.51976 .77233 L
.50659 .77793 L
.5029 .78319 L
.496 .79636 L
.49341 .79803 L
.48024 .80348 L
.46707 .80615 L
.4539 .80491 L
.44073 .80676 L
.42756 .80549 L
.41438 .80526 L
.40121 .80381 L
.39004 .79636 L
.38804 .79342 L
.37785 .78319 L
.37487 .77899 L
.37129 .77002 L
.36582 .75685 L
.36742 .74368 L
.36619 .73051 L
.36468 .71733 L
.3617 .70784 L
.36093 .70416 L
.36099 .69099 L
.35472 .67782 L
.34852 .67131 L
.34564 .66465 L
.33811 .65148 L
.33535 .64845 L
Mistroke
.33165 .6383 L
.32914 .62513 L
.32571 .61196 L
.32218 .6055 L
.30901 .59899 L
.30658 .59879 L
.29584 .59611 L
.28267 .58805 L
.28032 .58562 L
.27217 .57244 L
.27527 .55927 L
.28267 .54951 L
.28891 .5461 L
.29584 .53871 L
.30901 .53611 L
.31313 .53293 L
.3213 .51976 L
.32218 .51893 L
.32675 .50659 L
.3284 .49341 L
.32987 .48024 L
.32553 .46707 L
.32218 .45472 L
.32151 .4539 L
.31752 .44073 L
.31486 .42756 L
.31313 .41438 L
.31502 .40121 L
.31665 .38804 L
.32023 .37487 L
.31955 .3617 L
.32218 .3569 L
.32962 .34852 L
.33535 .34637 L
.33985 .34852 L
.34852 .35535 L
.3617 .35459 L
.37487 .3601 L
.38804 .35907 L
.39995 .34852 L
.40121 .34716 L
.40573 .33535 L
.40871 .32218 L
.41438 .31521 L
.41888 .30901 L
.42756 .30072 L
.43362 .29584 L
.44073 .29229 L
.4539 .28686 L
.46707 .28662 L
Mistroke
.48024 .28662 L
.49341 .28619 L
.50659 .28635 L
.51976 .28686 L
.53293 .28545 L
.53729 .28267 L
.5461 .27336 L
.54888 .26949 L
.55414 .25632 L
.55862 .24315 L
.55927 .24081 L
.56336 .22998 L
.57244 .21992 L
.57494 .21681 L
.58562 .20815 L
.59539 .20364 L
.59879 .20298 L
Mfstroke
.6 g
.58562 .21224 m
.59879 .20707 L
.61196 .20717 L
.62513 .21313 L
.62839 .21681 L
.6383 .22996 L
.63831 .22998 L
.64002 .24315 L
.64167 .25632 L
.64291 .26949 L
.64216 .28267 L
.64224 .29584 L
.64084 .30901 L
.6383 .31492 L
.63496 .32218 L
.63063 .33535 L
.62514 .34852 L
.6319 .3617 L
.6383 .36835 L
.65148 .37486 L
.65148 .37487 L
.66465 .38511 L
.66738 .38804 L
.67472 .40121 L
.67782 .40867 L
.6794 .41438 L
.6831 .42756 L
.69099 .44072 L
.691 .44073 L
.70416 .45389 L
.70417 .4539 L
.71401 .46707 L
.71733 .47224 L
.7207 .48024 L
.72234 .49341 L
.72118 .50659 L
.71733 .51459 L
.71401 .51976 L
.70416 .53293 L
.70416 .53294 L
.69421 .5461 L
.69099 .54852 L
.68239 .55927 L
.67782 .56572 L
.67326 .57244 L
.66466 .58562 L
.66465 .58562 L
.65149 .59879 L
.65148 .59881 L
.63833 .61196 L
.63832 .62513 L
.6383 .62516 L
.63025 .6383 L
.62514 .65148 L
.62513 .65149 L
.61501 .66465 L
.61196 .66888 L
.5988 .67782 L
.59879 .67783 L
.58562 .6872 L
.57246 .69099 L
.57244 .691 L
.56286 .70416 L
.55928 .71733 L
.55928 .73051 L
.55928 .74368 L
.55927 .7437 L
.54613 .75685 L
.5461 .75686 L
.53293 .75686 L
.51976 .76215 L
.5066 .77002 L
.50659 .77003 L
.49714 .78319 L
.49341 .79025 L
.48026 .79636 L
.48024 .79637 L
.46707 .8002 L
.4539 .80045 L
.44073 .80214 L
.42756 .80162 L
.41438 .80102 L
.40121 .79919 L
.39481 .79636 L
.38804 .78879 L
.38254 .78319 L
.37487 .77003 L
.37486 .77002 L
.37049 .75685 L
.37135 .74368 L
.37082 .73051 L
.36937 .71733 L
.36592 .70416 L
.36533 .69099 L
.3617 .67783 L
.36169 .67782 L
.34852 .66465 L
.34852 .66465 L
.34228 .65148 L
.33535 .63832 L
.33535 .6383 L
.33325 .62513 L
.33067 .61196 L
.32218 .60055 L
.31788 .59879 L
.30901 .59423 L
.29584 .59056 L
.28921 .58562 L
.28267 .57913 L
.27772 .57244 L
.28266 .55927 L
.28267 .55926 L
.29583 .5461 L
.29584 .54609 L
.30901 .54093 L
.31893 .53293 L
.32218 .52787 L
.3263 .51976 L
.33142 .50659 L
.33282 .49341 L
.33535 .48024 L
.32914 .46707 L
.32546 .4539 L
.32218 .45121 L
.32047 .44073 L
.31882 .42756 L
.3178 .41438 L
.31945 .40121 L
.32218 .38804 L
.32218 .38802 L
.32699 .37487 L
.33533 .3617 L
.33535 .36168 L
.34852 .36169 L
.3617 .36169 L
.36172 .3617 L
.37487 .368 L
.38804 .37485 L
.4012 .3617 L
.40121 .36168 L
.40478 .34852 L
.40958 .33535 L
.41438 .32218 L
.41438 .32217 L
.42351 .30901 L
.42756 .30531 L
.44072 .29584 L
.44073 .29583 L
.4539 .29087 L
.46707 .2902 L
.48024 .2902 L
.49341 .28982 L
.50659 .29024 L
.51976 .29087 L
.53293 .28945 L
.54305 .28267 L
.5461 .27935 L
.55289 .26949 L
.55734 .25632 L
.55927 .2512 L
.56237 .24315 L
.56801 .22998 L
.57244 .22506 L
.57899 .21681 L
F
0 g
.58562 .21224 m
.59879 .20707 L
.61196 .20717 L
.62513 .21313 L
.62839 .21681 L
.6383 .22996 L
.63831 .22998 L
.64002 .24315 L
.64167 .25632 L
.64291 .26949 L
.64216 .28267 L
.64224 .29584 L
.64084 .30901 L
.6383 .31492 L
.63496 .32218 L
.63063 .33535 L
.62514 .34852 L
.6319 .3617 L
.6383 .36835 L
.65148 .37486 L
.65148 .37487 L
.66465 .38511 L
.66738 .38804 L
.67472 .40121 L
.67782 .40867 L
.6794 .41438 L
.6831 .42756 L
.69099 .44072 L
.691 .44073 L
.70416 .45389 L
.70417 .4539 L
.71401 .46707 L
.71733 .47224 L
.7207 .48024 L
.72234 .49341 L
.72118 .50659 L
.71733 .51459 L
.71401 .51976 L
.70416 .53293 L
.70416 .53294 L
.69421 .5461 L
.69099 .54852 L
.68239 .55927 L
.67782 .56572 L
.67326 .57244 L
.66466 .58562 L
.66465 .58562 L
.65149 .59879 L
.65148 .59881 L
.63833 .61196 L
Mistroke
.63832 .62513 L
.6383 .62516 L
.63025 .6383 L
.62514 .65148 L
.62513 .65149 L
.61501 .66465 L
.61196 .66888 L
.5988 .67782 L
.59879 .67783 L
.58562 .6872 L
.57246 .69099 L
.57244 .691 L
.56286 .70416 L
.55928 .71733 L
.55928 .73051 L
.55928 .74368 L
.55927 .7437 L
.54613 .75685 L
.5461 .75686 L
.53293 .75686 L
.51976 .76215 L
.5066 .77002 L
.50659 .77003 L
.49714 .78319 L
.49341 .79025 L
.48026 .79636 L
.48024 .79637 L
.46707 .8002 L
.4539 .80045 L
.44073 .80214 L
.42756 .80162 L
.41438 .80102 L
.40121 .79919 L
.39481 .79636 L
.38804 .78879 L
.38254 .78319 L
.37487 .77003 L
.37486 .77002 L
.37049 .75685 L
.37135 .74368 L
.37082 .73051 L
.36937 .71733 L
.36592 .70416 L
.36533 .69099 L
.3617 .67783 L
.36169 .67782 L
.34852 .66465 L
.34852 .66465 L
.34228 .65148 L
.33535 .63832 L
Mistroke
.33535 .6383 L
.33325 .62513 L
.33067 .61196 L
.32218 .60055 L
.31788 .59879 L
.30901 .59423 L
.29584 .59056 L
.28921 .58562 L
.28267 .57913 L
.27772 .57244 L
.28266 .55927 L
.28267 .55926 L
.29583 .5461 L
.29584 .54609 L
.30901 .54093 L
.31893 .53293 L
.32218 .52787 L
.3263 .51976 L
.33142 .50659 L
.33282 .49341 L
.33535 .48024 L
.32914 .46707 L
.32546 .4539 L
.32218 .45121 L
.32047 .44073 L
.31882 .42756 L
.3178 .41438 L
.31945 .40121 L
.32218 .38804 L
.32218 .38802 L
.32699 .37487 L
.33533 .3617 L
.33535 .36168 L
.34852 .36169 L
.3617 .36169 L
.36172 .3617 L
.37487 .368 L
.38804 .37485 L
.4012 .3617 L
.40121 .36168 L
.40478 .34852 L
.40958 .33535 L
.41438 .32218 L
.41438 .32217 L
.42351 .30901 L
.42756 .30531 L
.44072 .29584 L
.44073 .29583 L
.4539 .29087 L
.46707 .2902 L
Mistroke
.48024 .2902 L
.49341 .28982 L
.50659 .29024 L
.51976 .29087 L
.53293 .28945 L
.54305 .28267 L
.5461 .27935 L
.55289 .26949 L
.55734 .25632 L
.55927 .2512 L
.56237 .24315 L
.56801 .22998 L
.57244 .22506 L
.57899 .21681 L
.58562 .21224 L
Mfstroke
.7 g
.58562 .21559 m
.59879 .21062 L
.61196 .21099 L
.62307 .21681 L
.62513 .2186 L
.63409 .22998 L
.63702 .24315 L
.6383 .25621 L
.63831 .25632 L
.6395 .26949 L
.63924 .28267 L
.63928 .29584 L
.6383 .30403 L
.63684 .30901 L
.63161 .32218 L
.62656 .33535 L
.62513 .33793 L
.62019 .34852 L
.62513 .36167 L
.62515 .3617 L
.6383 .37298 L
.64402 .37487 L
.65148 .37946 L
.66305 .38804 L
.66465 .38971 L
.67139 .40121 L
.67666 .41438 L
.67782 .41777 L
.68025 .42756 L
.68685 .44073 L
.69099 .44574 L
.70003 .4539 L
.70416 .45848 L
.71037 .46707 L
.71733 .48021 L
.71734 .48024 L
.7186 .49341 L
.71735 .50659 L
.71733 .50662 L
.71037 .51976 L
.70416 .528 L
.70003 .53293 L
.69099 .5442 L
.68944 .5461 L
.67904 .55927 L
.67782 .56065 L
.66716 .57244 L
.66465 .57541 L
.65148 .58069 L
.64139 .58562 L
.6383 .58565 L
.63825 .58562 L
.62513 .5785 L
.61196 .57527 L
.59879 .57527 L
.58817 .58562 L
.58817 .59879 L
.59879 .60898 L
.60509 .61196 L
.61196 .6169 L
.61988 .62513 L
.62245 .6383 L
.61868 .65148 L
.61196 .66199 L
.61024 .66465 L
.59879 .67377 L
.59305 .67782 L
.58562 .68283 L
.57244 .68575 L
.56394 .69099 L
.55927 .69914 L
.5569 .70416 L
.55377 .71733 L
.55209 .73051 L
.54615 .74368 L
.5461 .74373 L
.53293 .74966 L
.51976 .75372 L
.51218 .75685 L
.50659 .7603 L
.49622 .77002 L
.49341 .77656 L
.48959 .78319 L
.48024 .78891 L
.46707 .79399 L
.45402 .79636 L
.4539 .79638 L
.44073 .79789 L
.42756 .79848 L
.41438 .79753 L
.40591 .79636 L
.40121 .79504 L
.38804 .78468 L
.38661 .78319 L
.37818 .77002 L
.37487 .75692 L
.37486 .75685 L
.37486 .74368 L
.37486 .73051 L
.37344 .71733 L
.37109 .70416 L
.36961 .69099 L
.3672 .67782 L
.3617 .66915 L
.35363 .66465 L
.34852 .65719 L
.34588 .65148 L
.33942 .6383 L
.33677 .62513 L
.33535 .61826 L
.33425 .61196 L
.32501 .59879 L
.32218 .59584 L
.30901 .58813 L
.30152 .58562 L
.29584 .58259 L
.28631 .57244 L
.29206 .55927 L
.29584 .55492 L
.30897 .5461 L
.30901 .54608 L
.32218 .53493 L
.32416 .53293 L
.33086 .51976 L
.33534 .50659 L
.33535 .50651 L
.33677 .49341 L
.33928 .48024 L
.33535 .47194 L
.33263 .46707 L
.32906 .4539 L
.32346 .44073 L
.32218 .42815 L
.32217 .42756 L
.32217 .41438 L
.32218 .41418 L
.32394 .40121 L
.32834 .38804 L
.33285 .37487 L
.33535 .37081 L
.34852 .36956 L
.3617 .36915 L
.37487 .37485 L
.3749 .37487 L
.38804 .38488 L
.40119 .37487 L
.40121 .37481 L
.4059 .3617 L
.40841 .34852 L
.41219 .33535 L
.41438 .32638 L
.41833 .32218 L
.42754 .30901 L
.42756 .309 L
.44073 .29912 L
.44674 .29584 L
.4539 .29396 L
.46707 .29281 L
.48024 .29281 L
.49341 .29289 L
.50659 .29362 L
.51976 .29396 L
.53293 .29241 L
.5461 .28466 L
.54782 .28267 L
.55585 .26949 L
.55927 .2589 L
.5604 .25632 L
.5657 .24315 L
.57243 .22998 L
.57244 .22996 L
.58354 .21681 L
F
0 g
.58562 .21559 m
.59879 .21062 L
.61196 .21099 L
.62307 .21681 L
.62513 .2186 L
.63409 .22998 L
.63702 .24315 L
.6383 .25621 L
.63831 .25632 L
.6395 .26949 L
.63924 .28267 L
.63928 .29584 L
.6383 .30403 L
.63684 .30901 L
.63161 .32218 L
.62656 .33535 L
.62513 .33793 L
.62019 .34852 L
.62513 .36167 L
.62515 .3617 L
.6383 .37298 L
.64402 .37487 L
.65148 .37946 L
.66305 .38804 L
.66465 .38971 L
.67139 .40121 L
.67666 .41438 L
.67782 .41777 L
.68025 .42756 L
.68685 .44073 L
.69099 .44574 L
.70003 .4539 L
.70416 .45848 L
.71037 .46707 L
.71733 .48021 L
.71734 .48024 L
.7186 .49341 L
.71735 .50659 L
.71733 .50662 L
.71037 .51976 L
.70416 .528 L
.70003 .53293 L
.69099 .5442 L
.68944 .5461 L
.67904 .55927 L
.67782 .56065 L
.66716 .57244 L
.66465 .57541 L
.65148 .58069 L
.64139 .58562 L
Mistroke
.6383 .58565 L
.63825 .58562 L
.62513 .5785 L
.61196 .57527 L
.59879 .57527 L
.58817 .58562 L
.58817 .59879 L
.59879 .60898 L
.60509 .61196 L
.61196 .6169 L
.61988 .62513 L
.62245 .6383 L
.61868 .65148 L
.61196 .66199 L
.61024 .66465 L
.59879 .67377 L
.59305 .67782 L
.58562 .68283 L
.57244 .68575 L
.56394 .69099 L
.55927 .69914 L
.5569 .70416 L
.55377 .71733 L
.55209 .73051 L
.54615 .74368 L
.5461 .74373 L
.53293 .74966 L
.51976 .75372 L
.51218 .75685 L
.50659 .7603 L
.49622 .77002 L
.49341 .77656 L
.48959 .78319 L
.48024 .78891 L
.46707 .79399 L
.45402 .79636 L
.4539 .79638 L
.44073 .79789 L
.42756 .79848 L
.41438 .79753 L
.40591 .79636 L
.40121 .79504 L
.38804 .78468 L
.38661 .78319 L
.37818 .77002 L
.37487 .75692 L
.37486 .75685 L
.37486 .74368 L
.37486 .73051 L
.37344 .71733 L
Mistroke
.37109 .70416 L
.36961 .69099 L
.3672 .67782 L
.3617 .66915 L
.35363 .66465 L
.34852 .65719 L
.34588 .65148 L
.33942 .6383 L
.33677 .62513 L
.33535 .61826 L
.33425 .61196 L
.32501 .59879 L
.32218 .59584 L
.30901 .58813 L
.30152 .58562 L
.29584 .58259 L
.28631 .57244 L
.29206 .55927 L
.29584 .55492 L
.30897 .5461 L
.30901 .54608 L
.32218 .53493 L
.32416 .53293 L
.33086 .51976 L
.33534 .50659 L
.33535 .50651 L
.33677 .49341 L
.33928 .48024 L
.33535 .47194 L
.33263 .46707 L
.32906 .4539 L
.32346 .44073 L
.32218 .42815 L
.32217 .42756 L
.32217 .41438 L
.32218 .41418 L
.32394 .40121 L
.32834 .38804 L
.33285 .37487 L
.33535 .37081 L
.34852 .36956 L
.3617 .36915 L
.37487 .37485 L
.3749 .37487 L
.38804 .38488 L
.40119 .37487 L
.40121 .37481 L
.4059 .3617 L
.40841 .34852 L
.41219 .33535 L
Mistroke
.41438 .32638 L
.41833 .32218 L
.42754 .30901 L
.42756 .309 L
.44073 .29912 L
.44674 .29584 L
.4539 .29396 L
.46707 .29281 L
.48024 .29281 L
.49341 .29289 L
.50659 .29362 L
.51976 .29396 L
.53293 .29241 L
.5461 .28466 L
.54782 .28267 L
.55585 .26949 L
.55927 .2589 L
.5604 .25632 L
.5657 .24315 L
.57243 .22998 L
.57244 .22996 L
.58354 .21681 L
.58562 .21559 L
Mfstroke
.8 g
.59879 .21383 m
.61196 .21467 L
.61662 .21681 L
.62513 .2239 L
.62962 .22998 L
.63347 .24315 L
.63483 .25632 L
.63627 .26949 L
.63645 .28267 L
.6363 .29584 L
.63298 .30901 L
.62872 .32218 L
.62513 .33145 L
.62223 .33535 L
.61625 .34852 L
.61904 .3617 L
.62513 .3694 L
.63636 .37487 L
.6383 .37607 L
.65148 .38345 L
.65841 .38804 L
.66465 .3944 L
.66838 .40121 L
.67356 .41438 L
.67782 .42675 L
.67801 .42756 L
.68355 .44073 L
.69099 .44971 L
.696 .4539 L
.70416 .46285 L
.70705 .46707 L
.71381 .48024 L
.71534 .49341 L
.71381 .50659 L
.70705 .51976 L
.70416 .52373 L
.696 .53293 L
.69099 .53908 L
.68544 .5461 L
.67782 .55592 L
.67608 .55927 L
.66465 .56823 L
.66038 .57244 L
.65148 .5739 L
.6383 .57635 L
.62513 .57296 L
.62349 .57244 L
.61196 .56754 L
.59879 .56771 L
.59266 .57244 L
.58562 .57949 L
.5814 .58562 L
.5814 .59879 L
.58562 .60693 L
.5907 .61196 L
.59879 .61735 L
.60886 .62513 L
.61196 .6284 L
.61563 .6383 L
.61254 .65148 L
.61196 .65269 L
.60496 .66465 L
.59879 .66977 L
.5864 .67782 L
.58562 .67828 L
.57244 .68197 L
.55963 .69099 L
.55927 .69142 L
.55005 .70416 L
.54691 .71733 L
.5461 .72121 L
.54367 .73051 L
.53293 .74124 L
.52226 .74368 L
.51976 .74462 L
.50659 .75294 L
.49977 .75685 L
.49341 .7632 L
.48951 .77002 L
.48024 .78125 L
.47618 .78319 L
.46707 .78714 L
.4539 .79097 L
.44073 .7937 L
.42756 .79542 L
.41438 .79408 L
.40121 .79153 L
.38852 .78319 L
.38804 .78049 L
.38133 .77002 L
.37902 .75685 L
.3789 .74368 L
.37881 .73051 L
.37711 .71733 L
.37604 .70416 L
.37487 .69528 L
.37436 .69099 L
.37406 .67782 L
.3617 .66496 L
.36085 .66465 L
.34961 .65148 L
.34852 .64954 L
.34343 .6383 L
.34048 .62513 L
.33754 .61196 L
.33535 .60397 L
.33201 .59879 L
.32218 .58659 L
.32108 .58562 L
.30901 .58135 L
.29682 .57244 L
.30202 .55927 L
.30901 .55343 L
.31656 .5461 L
.32218 .54037 L
.32934 .53293 L
.33498 .51976 L
.33535 .51939 L
.33896 .50659 L
.34048 .49341 L
.3425 .48024 L
.3367 .46707 L
.33535 .46418 L
.33239 .4539 L
.32702 .44073 L
.32555 .42756 L
.32633 .41438 L
.32889 .40121 L
.33472 .38804 L
.33535 .38634 L
.34852 .37652 L
.3617 .37718 L
.37487 .38135 L
.38162 .38804 L
.38804 .39422 L
.39204 .40121 L
.39335 .41438 L
.39954 .42756 L
.40121 .43822 L
.40168 .44073 L
.40668 .4539 L
.41438 .46283 L
.41922 .46707 L
.42756 .47414 L
.44073 .4714 L
.44282 .46707 L
.44498 .4539 L
.44221 .44073 L
.44073 .4347 L
.43631 .42756 L
.43181 .41438 L
.42756 .40899 L
.42241 .40121 L
.41438 .38932 L
.41362 .38804 L
.40952 .37487 L
.40981 .3617 L
.41163 .34852 L
.4142 .33535 L
.41438 .33424 L
.42148 .32218 L
.42756 .31208 L
.4313 .30901 L
.44073 .30215 L
.4539 .29668 L
.45696 .29584 L
.46707 .29483 L
.48024 .29483 L
.49341 .29559 L
.49627 .29584 L
.50659 .29667 L
.51976 .29667 L
.52482 .29584 L
.53293 .29471 L
.5461 .28987 L
.55209 .28267 L
.55815 .26949 L
.55927 .26561 L
.56341 .25632 L
.56871 .24315 L
.57244 .23543 L
.57627 .22998 L
.58562 .21989 L
.58956 .21681 L
F
0 g
.59879 .21383 m
.61196 .21467 L
.61662 .21681 L
.62513 .2239 L
.62962 .22998 L
.63347 .24315 L
.63483 .25632 L
.63627 .26949 L
.63645 .28267 L
.6363 .29584 L
.63298 .30901 L
.62872 .32218 L
.62513 .33145 L
.62223 .33535 L
.61625 .34852 L
.61904 .3617 L
.62513 .3694 L
.63636 .37487 L
.6383 .37607 L
.65148 .38345 L
.65841 .38804 L
.66465 .3944 L
.66838 .40121 L
.67356 .41438 L
.67782 .42675 L
.67801 .42756 L
.68355 .44073 L
.69099 .44971 L
.696 .4539 L
.70416 .46285 L
.70705 .46707 L
.71381 .48024 L
.71534 .49341 L
.71381 .50659 L
.70705 .51976 L
.70416 .52373 L
.696 .53293 L
.69099 .53908 L
.68544 .5461 L
.67782 .55592 L
.67608 .55927 L
.66465 .56823 L
.66038 .57244 L
.65148 .5739 L
.6383 .57635 L
.62513 .57296 L
.62349 .57244 L
.61196 .56754 L
.59879 .56771 L
.59266 .57244 L
Mistroke
.58562 .57949 L
.5814 .58562 L
.5814 .59879 L
.58562 .60693 L
.5907 .61196 L
.59879 .61735 L
.60886 .62513 L
.61196 .6284 L
.61563 .6383 L
.61254 .65148 L
.61196 .65269 L
.60496 .66465 L
.59879 .66977 L
.5864 .67782 L
.58562 .67828 L
.57244 .68197 L
.55963 .69099 L
.55927 .69142 L
.55005 .70416 L
.54691 .71733 L
.5461 .72121 L
.54367 .73051 L
.53293 .74124 L
.52226 .74368 L
.51976 .74462 L
.50659 .75294 L
.49977 .75685 L
.49341 .7632 L
.48951 .77002 L
.48024 .78125 L
.47618 .78319 L
.46707 .78714 L
.4539 .79097 L
.44073 .7937 L
.42756 .79542 L
.41438 .79408 L
.40121 .79153 L
.38852 .78319 L
.38804 .78049 L
.38133 .77002 L
.37902 .75685 L
.3789 .74368 L
.37881 .73051 L
.37711 .71733 L
.37604 .70416 L
.37487 .69528 L
.37436 .69099 L
.37406 .67782 L
.3617 .66496 L
.36085 .66465 L
Mistroke
.34961 .65148 L
.34852 .64954 L
.34343 .6383 L
.34048 .62513 L
.33754 .61196 L
.33535 .60397 L
.33201 .59879 L
.32218 .58659 L
.32108 .58562 L
.30901 .58135 L
.29682 .57244 L
.30202 .55927 L
.30901 .55343 L
.31656 .5461 L
.32218 .54037 L
.32934 .53293 L
.33498 .51976 L
.33535 .51939 L
.33896 .50659 L
.34048 .49341 L
.3425 .48024 L
.3367 .46707 L
.33535 .46418 L
.33239 .4539 L
.32702 .44073 L
.32555 .42756 L
.32633 .41438 L
.32889 .40121 L
.33472 .38804 L
.33535 .38634 L
.34852 .37652 L
.3617 .37718 L
.37487 .38135 L
.38162 .38804 L
.38804 .39422 L
.39204 .40121 L
.39335 .41438 L
.39954 .42756 L
.40121 .43822 L
.40168 .44073 L
.40668 .4539 L
.41438 .46283 L
.41922 .46707 L
.42756 .47414 L
.44073 .4714 L
.44282 .46707 L
.44498 .4539 L
.44221 .44073 L
.44073 .4347 L
.43631 .42756 L
Mistroke
.43181 .41438 L
.42756 .40899 L
.42241 .40121 L
.41438 .38932 L
.41362 .38804 L
.40952 .37487 L
.40981 .3617 L
.41163 .34852 L
.4142 .33535 L
.41438 .33424 L
.42148 .32218 L
.42756 .31208 L
.4313 .30901 L
.44073 .30215 L
.4539 .29668 L
.45696 .29584 L
.46707 .29483 L
.48024 .29483 L
.49341 .29559 L
.49627 .29584 L
.50659 .29667 L
.51976 .29667 L
.52482 .29584 L
.53293 .29471 L
.5461 .28987 L
.55209 .28267 L
.55815 .26949 L
.55927 .26561 L
.56341 .25632 L
.56871 .24315 L
.57244 .23543 L
.57627 .22998 L
.58562 .21989 L
.58956 .21681 L
.59879 .21383 L
Mfstroke
.2 g
.30901 .2316 m
.31395 .24315 L
.30901 .2476 L
.30407 .24315 L
F
0 g
.30901 .2316 m
.31395 .24315 L
.30901 .2476 L
.30407 .24315 L
.30901 .2316 L
s
.9 g
.58562 .22489 m
.59879 .21716 L
.61196 .219 L
.62503 .22998 L
.62513 .23057 L
.62987 .24315 L
.63156 .25632 L
.63319 .26949 L
.63373 .28267 L
.63326 .29584 L
.6294 .30901 L
.62594 .32218 L
.62513 .32469 L
.61767 .33535 L
.61287 .34852 L
.61346 .3617 L
.62513 .37389 L
.628 .37487 L
.6383 .38029 L
.65148 .38707 L
.65312 .38804 L
.66465 .3996 L
.66547 .40121 L
.67059 .41438 L
.67518 .42756 L
.67782 .43367 L
.68084 .44073 L
.69099 .45303 L
.69208 .4539 L
.70387 .46707 L
.70416 .46746 L
.7105 .48024 L
.71248 .49341 L
.7105 .50659 L
.70416 .51936 L
.70387 .51976 L
.69208 .53293 L
.69099 .53423 L
.68166 .5461 L
.67782 .55091 L
.67192 .55927 L
.66465 .56319 L
.65148 .57193 L
.6383 .5695 L
.62513 .56687 L
.61196 .56093 L
.59879 .56107 L
.58562 .5718 L
.58462 .57244 L
.57636 .58562 L
.57636 .59879 L
.5822 .61196 L
.58562 .61575 L
.5979 .62513 L
.59879 .6258 L
.60868 .6383 L
.60688 .65148 L
.59879 .66412 L
.59802 .66465 L
.58562 .67296 L
.57584 .67782 L
.57244 .67875 L
.55927 .68487 L
.55316 .69099 L
.5461 .69649 L
.54282 .70416 L
.53605 .71733 L
.53293 .72813 L
.53056 .73051 L
.51976 .73355 L
.50776 .74368 L
.50659 .74618 L
.49341 .75605 L
.49262 .75685 L
.48275 .77002 L
.48024 .77289 L
.46707 .77992 L
.45887 .78319 L
.4539 .78499 L
.44073 .78934 L
.42756 .79179 L
.41438 .79056 L
.40121 .78806 L
.39099 .78319 L
.38804 .77589 L
.38453 .77002 L
.38302 .75685 L
.38291 .74368 L
.38273 .73051 L
.38109 .71733 L
.38066 .70416 L
.37992 .69099 L
.38464 .67782 L
.37487 .66679 L
.37147 .66465 L
.3617 .65916 L
.35413 .65148 L
.34852 .64117 L
.34741 .6383 L
.34402 .62513 L
.34086 .61196 L
.33768 .59879 L
.33535 .595 L
.33127 .58562 L
.32218 .5765 L
.31482 .57244 L
.31864 .55927 L
.32218 .54722 L
.32321 .5461 L
.33409 .53293 L
.33535 .52971 L
.33881 .51976 L
.34222 .50659 L
.34402 .49341 L
.34543 .48024 L
.34188 .46707 L
.33559 .4539 L
.33535 .45317 L
.33062 .44073 L
.32874 .42756 L
.33033 .41438 L
.33393 .40121 L
.33535 .39837 L
.34049 .38804 L
.34852 .38225 L
.3617 .38576 L
.3731 .38804 L
.37487 .38883 L
.3846 .40121 L
.38804 .40931 L
.38891 .41438 L
.39398 .42756 L
.39676 .44073 L
.40121 .45272 L
.40219 .4539 L
.41039 .46707 L
.41438 .47118 L
.42192 .48024 L
.42756 .48426 L
.44073 .48238 L
.44155 .48024 L
.44852 .46707 L
.44989 .4539 L
.44672 .44073 L
.44073 .42804 L
.43978 .42756 L
.43672 .41438 L
.42803 .40121 L
.42756 .40041 L
.4213 .38804 L
.41485 .37487 L
.41438 .37304 L
.4134 .3617 L
.41438 .35035 L
.41464 .34852 L
.41764 .33535 L
.42418 .32218 L
.42756 .31563 L
.43514 .30901 L
.44073 .30509 L
.4539 .29968 L
.46707 .29724 L
.48024 .29724 L
.49341 .29847 L
.50659 .29964 L
.51976 .29964 L
.53293 .29724 L
.54278 .29584 L
.5461 .2946 L
.55582 .28267 L
.55927 .2735 L
.56066 .26949 L
.56632 .25632 L
.57162 .24315 L
.57244 .24137 L
.58048 .22998 L
F
0 g
.58562 .22489 m
.59879 .21716 L
.61196 .219 L
.62503 .22998 L
.62513 .23057 L
.62987 .24315 L
.63156 .25632 L
.63319 .26949 L
.63373 .28267 L
.63326 .29584 L
.6294 .30901 L
.62594 .32218 L
.62513 .32469 L
.61767 .33535 L
.61287 .34852 L
.61346 .3617 L
.62513 .37389 L
.628 .37487 L
.6383 .38029 L
.65148 .38707 L
.65312 .38804 L
.66465 .3996 L
.66547 .40121 L
.67059 .41438 L
.67518 .42756 L
.67782 .43367 L
.68084 .44073 L
.69099 .45303 L
.69208 .4539 L
.70387 .46707 L
.70416 .46746 L
.7105 .48024 L
.71248 .49341 L
.7105 .50659 L
.70416 .51936 L
.70387 .51976 L
.69208 .53293 L
.69099 .53423 L
.68166 .5461 L
.67782 .55091 L
.67192 .55927 L
.66465 .56319 L
.65148 .57193 L
.6383 .5695 L
.62513 .56687 L
.61196 .56093 L
.59879 .56107 L
.58562 .5718 L
.58462 .57244 L
.57636 .58562 L
Mistroke
.57636 .59879 L
.5822 .61196 L
.58562 .61575 L
.5979 .62513 L
.59879 .6258 L
.60868 .6383 L
.60688 .65148 L
.59879 .66412 L
.59802 .66465 L
.58562 .67296 L
.57584 .67782 L
.57244 .67875 L
.55927 .68487 L
.55316 .69099 L
.5461 .69649 L
.54282 .70416 L
.53605 .71733 L
.53293 .72813 L
.53056 .73051 L
.51976 .73355 L
.50776 .74368 L
.50659 .74618 L
.49341 .75605 L
.49262 .75685 L
.48275 .77002 L
.48024 .77289 L
.46707 .77992 L
.45887 .78319 L
.4539 .78499 L
.44073 .78934 L
.42756 .79179 L
.41438 .79056 L
.40121 .78806 L
.39099 .78319 L
.38804 .77589 L
.38453 .77002 L
.38302 .75685 L
.38291 .74368 L
.38273 .73051 L
.38109 .71733 L
.38066 .70416 L
.37992 .69099 L
.38464 .67782 L
.37487 .66679 L
.37147 .66465 L
.3617 .65916 L
.35413 .65148 L
.34852 .64117 L
.34741 .6383 L
.34402 .62513 L
Mistroke
.34086 .61196 L
.33768 .59879 L
.33535 .595 L
.33127 .58562 L
.32218 .5765 L
.31482 .57244 L
.31864 .55927 L
.32218 .54722 L
.32321 .5461 L
.33409 .53293 L
.33535 .52971 L
.33881 .51976 L
.34222 .50659 L
.34402 .49341 L
.34543 .48024 L
.34188 .46707 L
.33559 .4539 L
.33535 .45317 L
.33062 .44073 L
.32874 .42756 L
.33033 .41438 L
.33393 .40121 L
.33535 .39837 L
.34049 .38804 L
.34852 .38225 L
.3617 .38576 L
.3731 .38804 L
.37487 .38883 L
.3846 .40121 L
.38804 .40931 L
.38891 .41438 L
.39398 .42756 L
.39676 .44073 L
.40121 .45272 L
.40219 .4539 L
.41039 .46707 L
.41438 .47118 L
.42192 .48024 L
.42756 .48426 L
.44073 .48238 L
.44155 .48024 L
.44852 .46707 L
.44989 .4539 L
.44672 .44073 L
.44073 .42804 L
.43978 .42756 L
.43672 .41438 L
.42803 .40121 L
.42756 .40041 L
.4213 .38804 L
Mistroke
.41485 .37487 L
.41438 .37304 L
.4134 .3617 L
.41438 .35035 L
.41464 .34852 L
.41764 .33535 L
.42418 .32218 L
.42756 .31563 L
.43514 .30901 L
.44073 .30509 L
.4539 .29968 L
.46707 .29724 L
.48024 .29724 L
.49341 .29847 L
.50659 .29964 L
.51976 .29964 L
.53293 .29724 L
.54278 .29584 L
.5461 .2946 L
.55582 .28267 L
.55927 .2735 L
.56066 .26949 L
.56632 .25632 L
.57162 .24315 L
.57244 .24137 L
.58048 .22998 L
.58562 .22489 L
Mfstroke
1 g
.58562 .22993 m
.59879 .22153 L
.61196 .22411 L
.6221 .22998 L
.62513 .23967 L
.62619 .24315 L
.62845 .25632 L
.63026 .26949 L
.63118 .28267 L
.63034 .29584 L
.62605 .30901 L
.62513 .31283 L
.62243 .32218 L
.6132 .33535 L
.61196 .33792 L
.60898 .34852 L
.60801 .3617 L
.61196 .37198 L
.61511 .37487 L
.62513 .3788 L
.6383 .38414 L
.6486 .38804 L
.65148 .39068 L
.66228 .40121 L
.66465 .40618 L
.66772 .41438 L
.67237 .42756 L
.67782 .43928 L
.67846 .44073 L
.6882 .4539 L
.69099 .45659 L
.70046 .46707 L
.70416 .47271 L
.70739 .48024 L
.7099 .49341 L
.70739 .50659 L
.70416 .51411 L
.70042 .51976 L
.69099 .53002 L
.6883 .53293 L
.67786 .5461 L
.67782 .54614 L
.66473 .55927 L
.66465 .55931 L
.65148 .56576 L
.6383 .56403 L
.62513 .5609 L
.6218 .55927 L
.61196 .55524 L
.59879 .55415 L
.58851 .55927 L
.58562 .56267 L
.57447 .57244 L
.57248 .58562 L
.57248 .59879 L
.5767 .61196 L
.58562 .62312 L
.58809 .62513 L
.59879 .63476 L
.60104 .6383 L
.60073 .65148 L
.59879 .65572 L
.58838 .66465 L
.58562 .66665 L
.57244 .67462 L
.56289 .67782 L
.55927 .67926 L
.54617 .69099 L
.5461 .691 L
.53518 .70416 L
.53293 .70559 L
.52894 .71733 L
.51976 .72652 L
.50801 .73051 L
.50659 .73433 L
.49703 .74368 L
.49341 .74638 L
.48295 .75685 L
.48024 .76052 L
.47114 .77002 L
.46707 .77227 L
.4539 .77817 L
.44438 .78319 L
.44073 .78462 L
.42756 .78791 L
.41438 .78709 L
.40121 .78433 L
.39802 .78319 L
.38804 .77009 L
.38801 .77002 L
.38694 .75685 L
.38691 .74368 L
.38682 .73051 L
.38626 .71733 L
.3862 .70416 L
.38795 .69099 L
.38804 .69085 L
.39655 .67782 L
.38804 .66766 L
.3825 .66465 L
.37487 .65982 L
.3617 .65317 L
.35981 .65148 L
.34974 .6383 L
.34852 .62919 L
.34752 .62513 L
.34428 .61196 L
.34212 .59879 L
.33535 .58763 L
.33501 .58562 L
.32667 .57244 L
.32664 .55927 L
.3335 .5461 L
.33535 .54248 L
.33835 .53293 L
.3424 .51976 L
.34527 .50659 L
.34752 .49341 L
.34849 .48024 L
.34709 .46707 L
.33852 .4539 L
.33535 .444 L
.33429 .44073 L
.33187 .42756 L
.33425 .41438 L
.33535 .41039 L
.33854 .40121 L
.3484 .38804 L
.34852 .38798 L
.35023 .38804 L
.3617 .39246 L
.37487 .39854 L
.37705 .40121 L
.38514 .41438 L
.38804 .42391 L
.38926 .42756 L
.3924 .44073 L
.3974 .4539 L
.40121 .46408 L
.40299 .46707 L
.41438 .48016 L
.41444 .48024 L
.42756 .49332 L
.42763 .49341 L
.44073 .50628 L
.4458 .49341 L
.44855 .48024 L
.45282 .46707 L
.45317 .4539 L
.44994 .44073 L
.44355 .42756 L
.44073 .41806 L
.44 .41438 L
.43317 .40121 L
.42756 .39074 L
.42638 .38804 L
.41994 .37487 L
.41716 .3617 L
.41764 .34852 L
.42123 .33535 L
.42679 .32218 L
.42756 .32047 L
.4394 .30901 L
.44073 .30812 L
.4539 .30251 L
.46707 .30037 L
.48024 .30037 L
.49341 .30129 L
.50659 .30244 L
.51976 .30244 L
.53293 .30036 L
.5461 .29849 L
.55056 .29584 L
.55924 .28267 L
.55927 .28258 L
.56374 .26949 L
.56921 .25632 L
.57244 .24817 L
.57437 .24315 L
.58556 .22998 L
F
0 g
.58562 .22993 m
.59879 .22153 L
.61196 .22411 L
.6221 .22998 L
.62513 .23967 L
.62619 .24315 L
.62845 .25632 L
.63026 .26949 L
.63118 .28267 L
.63034 .29584 L
.62605 .30901 L
.62513 .31283 L
.62243 .32218 L
.6132 .33535 L
.61196 .33792 L
.60898 .34852 L
.60801 .3617 L
.61196 .37198 L
.61511 .37487 L
.62513 .3788 L
.6383 .38414 L
.6486 .38804 L
.65148 .39068 L
.66228 .40121 L
.66465 .40618 L
.66772 .41438 L
.67237 .42756 L
.67782 .43928 L
.67846 .44073 L
.6882 .4539 L
.69099 .45659 L
.70046 .46707 L
.70416 .47271 L
.70739 .48024 L
.7099 .49341 L
.70739 .50659 L
.70416 .51411 L
.70042 .51976 L
.69099 .53002 L
.6883 .53293 L
.67786 .5461 L
.67782 .54614 L
.66473 .55927 L
.66465 .55931 L
.65148 .56576 L
.6383 .56403 L
.62513 .5609 L
.6218 .55927 L
.61196 .55524 L
.59879 .55415 L
Mistroke
.58851 .55927 L
.58562 .56267 L
.57447 .57244 L
.57248 .58562 L
.57248 .59879 L
.5767 .61196 L
.58562 .62312 L
.58809 .62513 L
.59879 .63476 L
.60104 .6383 L
.60073 .65148 L
.59879 .65572 L
.58838 .66465 L
.58562 .66665 L
.57244 .67462 L
.56289 .67782 L
.55927 .67926 L
.54617 .69099 L
.5461 .691 L
.53518 .70416 L
.53293 .70559 L
.52894 .71733 L
.51976 .72652 L
.50801 .73051 L
.50659 .73433 L
.49703 .74368 L
.49341 .74638 L
.48295 .75685 L
.48024 .76052 L
.47114 .77002 L
.46707 .77227 L
.4539 .77817 L
.44438 .78319 L
.44073 .78462 L
.42756 .78791 L
.41438 .78709 L
.40121 .78433 L
.39802 .78319 L
.38804 .77009 L
.38801 .77002 L
.38694 .75685 L
.38691 .74368 L
.38682 .73051 L
.38626 .71733 L
.3862 .70416 L
.38795 .69099 L
.38804 .69085 L
.39655 .67782 L
.38804 .66766 L
.3825 .66465 L
Mistroke
.37487 .65982 L
.3617 .65317 L
.35981 .65148 L
.34974 .6383 L
.34852 .62919 L
.34752 .62513 L
.34428 .61196 L
.34212 .59879 L
.33535 .58763 L
.33501 .58562 L
.32667 .57244 L
.32664 .55927 L
.3335 .5461 L
.33535 .54248 L
.33835 .53293 L
.3424 .51976 L
.34527 .50659 L
.34752 .49341 L
.34849 .48024 L
.34709 .46707 L
.33852 .4539 L
.33535 .444 L
.33429 .44073 L
.33187 .42756 L
.33425 .41438 L
.33535 .41039 L
.33854 .40121 L
.3484 .38804 L
.34852 .38798 L
.35023 .38804 L
.3617 .39246 L
.37487 .39854 L
.37705 .40121 L
.38514 .41438 L
.38804 .42391 L
.38926 .42756 L
.3924 .44073 L
.3974 .4539 L
.40121 .46408 L
.40299 .46707 L
.41438 .48016 L
.41444 .48024 L
.42756 .49332 L
.42763 .49341 L
.44073 .50628 L
.4458 .49341 L
.44855 .48024 L
.45282 .46707 L
.45317 .4539 L
.44994 .44073 L
Mistroke
.44355 .42756 L
.44073 .41806 L
.44 .41438 L
.43317 .40121 L
.42756 .39074 L
.42638 .38804 L
.41994 .37487 L
.41716 .3617 L
.41764 .34852 L
.42123 .33535 L
.42679 .32218 L
.42756 .32047 L
.4394 .30901 L
.44073 .30812 L
.4539 .30251 L
.46707 .30037 L
.48024 .30037 L
.49341 .30129 L
.50659 .30244 L
.51976 .30244 L
.53293 .30036 L
.5461 .29849 L
.55056 .29584 L
.55924 .28267 L
.55927 .28258 L
.56374 .26949 L
.56921 .25632 L
.57244 .24817 L
.57437 .24315 L
.58556 .22998 L
.58562 .22993 L
Mfstroke
.9 g
.44073 .58973 m
.45376 .59879 L
.4539 .59896 L
.46564 .61196 L
.45975 .62513 L
.4539 .63541 L
.45072 .6383 L
.44073 .64815 L
.4393 .65148 L
.42756 .66449 L
.42743 .66465 L
.41438 .67567 L
.40121 .67491 L
.39273 .66465 L
.40121 .65439 L
.40368 .65148 L
.40698 .6383 L
.40677 .62513 L
.41438 .61485 L
.41689 .61196 L
.42756 .60244 L
.4302 .59879 L
F
0 g
.44073 .58973 m
.45376 .59879 L
.4539 .59896 L
.46564 .61196 L
.45975 .62513 L
.4539 .63541 L
.45072 .6383 L
.44073 .64815 L
.4393 .65148 L
.42756 .66449 L
.42743 .66465 L
.41438 .67567 L
.40121 .67491 L
.39273 .66465 L
.40121 .65439 L
.40368 .65148 L
.40698 .6383 L
.40677 .62513 L
.41438 .61485 L
.41689 .61196 L
.42756 .60244 L
.4302 .59879 L
.44073 .58973 L
s
.6 g
.41438 .40125 m
.42529 .41438 L
.42756 .41736 L
.43246 .42756 L
.43682 .44073 L
.43847 .4539 L
.42756 .46393 L
.41441 .4539 L
.41438 .45387 L
.40696 .44073 L
.40573 .42756 L
.40123 .41438 L
F
0 g
.41438 .40125 m
.42529 .41438 L
.42756 .41736 L
.43246 .42756 L
.43682 .44073 L
.43847 .4539 L
.42756 .46393 L
.41441 .4539 L
.41438 .45387 L
.40696 .44073 L
.40573 .42756 L
.40123 .41438 L
.41438 .40125 L
s
.8 g
.41438 .64747 m
.42236 .65148 L
.41438 .65758 L
.41323 .65148 L
F
0 g
.41438 .64747 m
.42236 .65148 L
.41438 .65758 L
.41323 .65148 L
.41438 .64747 L
s
.8 g
.42756 .61611 m
.43617 .62513 L
.43707 .6383 L
.42756 .64706 L
.41745 .6383 L
.41703 .62513 L
F
0 g
.42756 .61611 m
.43617 .62513 L
.43707 .6383 L
.42756 .64706 L
.41745 .6383 L
.41703 .62513 L
.42756 .61611 L
s
.8 g
.44073 .60585 m
.44683 .61196 L
.44073 .61596 L
.43462 .61196 L
F
0 g
.44073 .60585 m
.44683 .61196 L
.44073 .61596 L
.43462 .61196 L
.44073 .60585 L
s
MathSubEnd
P
% End of sub-graphic
% Start of sub-graphic
p
0.522676 0.0113379 0.97619 0.464853 MathSubStart
%% DensityGraphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0192308 0.0129938 0.0192308 0.0129938 [
[.01923 -0.0125 -3 -9 ]
[.01923 -0.0125 3 0 ]
[.14917 -0.0125 -6 -9 ]
[.14917 -0.0125 6 0 ]
[.27911 -0.0125 -6 -9 ]
[.27911 -0.0125 6 0 ]
[.40904 -0.0125 -6 -9 ]
[.40904 -0.0125 6 0 ]
[.53898 -0.0125 -6 -9 ]
[.53898 -0.0125 6 0 ]
[.66892 -0.0125 -6 -9 ]
[.66892 -0.0125 6 0 ]
[.79886 -0.0125 -6 -9 ]
[.79886 -0.0125 6 0 ]
[.92879 -0.0125 -6 -9 ]
[.92879 -0.0125 6 0 ]
[ 0 0 -0.125 0 ]
[-0.0125 .01923 -6 -4.5 ]
[-0.0125 .01923 0 4.5 ]
[-0.0125 .14917 -12 -4.5 ]
[-0.0125 .14917 0 4.5 ]
[-0.0125 .27911 -12 -4.5 ]
[-0.0125 .27911 0 4.5 ]
[-0.0125 .40904 -12 -4.5 ]
[-0.0125 .40904 0 4.5 ]
[-0.0125 .53898 -12 -4.5 ]
[-0.0125 .53898 0 4.5 ]
[-0.0125 .66892 -12 -4.5 ]
[-0.0125 .66892 0 4.5 ]
[-0.0125 .79886 -12 -4.5 ]
[-0.0125 .79886 0 4.5 ]
[-0.0125 .92879 -12 -4.5 ]
[-0.0125 .92879 0 4.5 ]
[ 0 0 -0.125 0 ]
[ 0 1 .125 0 ]
[ 1 0 .125 0 ]
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.01923 0 m
.01923 .00625 L
s
[(0)] .01923 -0.0125 0 1 Mshowa
.14917 0 m
.14917 .00625 L
s
[(10)] .14917 -0.0125 0 1 Mshowa
.27911 0 m
.27911 .00625 L
s
[(20)] .27911 -0.0125 0 1 Mshowa
.40904 0 m
.40904 .00625 L
s
[(30)] .40904 -0.0125 0 1 Mshowa
.53898 0 m
.53898 .00625 L
s
[(40)] .53898 -0.0125 0 1 Mshowa
.66892 0 m
.66892 .00625 L
s
[(50)] .66892 -0.0125 0 1 Mshowa
.79886 0 m
.79886 .00625 L
s
[(60)] .79886 -0.0125 0 1 Mshowa
.92879 0 m
.92879 .00625 L
s
[(70)] .92879 -0.0125 0 1 Mshowa
.125 Mabswid
.04522 0 m
.04522 .00375 L
s
.07121 0 m
.07121 .00375 L
s
.09719 0 m
.09719 .00375 L
s
.12318 0 m
.12318 .00375 L
s
.17516 0 m
.17516 .00375 L
s
.20114 0 m
.20114 .00375 L
s
.22713 0 m
.22713 .00375 L
s
.25312 0 m
.25312 .00375 L
s
.30509 0 m
.30509 .00375 L
s
.33108 0 m
.33108 .00375 L
s
.35707 0 m
.35707 .00375 L
s
.38306 0 m
.38306 .00375 L
s
.43503 0 m
.43503 .00375 L
s
.46102 0 m
.46102 .00375 L
s
.48701 0 m
.48701 .00375 L
s
.51299 0 m
.51299 .00375 L
s
.56497 0 m
.56497 .00375 L
s
.59096 0 m
.59096 .00375 L
s
.61694 0 m
.61694 .00375 L
s
.64293 0 m
.64293 .00375 L
s
.69491 0 m
.69491 .00375 L
s
.72089 0 m
.72089 .00375 L
s
.74688 0 m
.74688 .00375 L
s
.77287 0 m
.77287 .00375 L
s
.82484 0 m
.82484 .00375 L
s
.85083 0 m
.85083 .00375 L
s
.87682 0 m
.87682 .00375 L
s
.90281 0 m
.90281 .00375 L
s
.95478 0 m
.95478 .00375 L
s
.98077 0 m
.98077 .00375 L
s
.25 Mabswid
0 0 m
1 0 L
s
0 .01923 m
.00625 .01923 L
s
[(0)] -0.0125 .01923 1 0 Mshowa
0 .14917 m
.00625 .14917 L
s
[(10)] -0.0125 .14917 1 0 Mshowa
0 .27911 m
.00625 .27911 L
s
[(20)] -0.0125 .27911 1 0 Mshowa
0 .40904 m
.00625 .40904 L
s
[(30)] -0.0125 .40904 1 0 Mshowa
0 .53898 m
.00625 .53898 L
s
[(40)] -0.0125 .53898 1 0 Mshowa
0 .66892 m
.00625 .66892 L
s
[(50)] -0.0125 .66892 1 0 Mshowa
0 .79886 m
.00625 .79886 L
s
[(60)] -0.0125 .79886 1 0 Mshowa
0 .92879 m
.00625 .92879 L
s
[(70)] -0.0125 .92879 1 0 Mshowa
.125 Mabswid
0 .04522 m
.00375 .04522 L
s
0 .07121 m
.00375 .07121 L
s
0 .09719 m
.00375 .09719 L
s
0 .12318 m
.00375 .12318 L
s
0 .17516 m
.00375 .17516 L
s
0 .20114 m
.00375 .20114 L
s
0 .22713 m
.00375 .22713 L
s
0 .25312 m
.00375 .25312 L
s
0 .30509 m
.00375 .30509 L
s
0 .33108 m
.00375 .33108 L
s
0 .35707 m
.00375 .35707 L
s
0 .38306 m
.00375 .38306 L
s
0 .43503 m
.00375 .43503 L
s
0 .46102 m
.00375 .46102 L
s
0 .48701 m
.00375 .48701 L
s
0 .51299 m
.00375 .51299 L
s
0 .56497 m
.00375 .56497 L
s
0 .59096 m
.00375 .59096 L
s
0 .61694 m
.00375 .61694 L
s
0 .64293 m
.00375 .64293 L
s
0 .69491 m
.00375 .69491 L
s
0 .72089 m
.00375 .72089 L
s
0 .74688 m
.00375 .74688 L
s
0 .77287 m
.00375 .77287 L
s
0 .82484 m
.00375 .82484 L
s
0 .85083 m
.00375 .85083 L
s
0 .87682 m
.00375 .87682 L
s
0 .90281 m
.00375 .90281 L
s
0 .95478 m
.00375 .95478 L
s
0 .98077 m
.00375 .98077 L
s
.25 Mabswid
0 0 m
0 1 L
s
.01923 .99375 m
.01923 1 L
s
.14917 .99375 m
.14917 1 L
s
.27911 .99375 m
.27911 1 L
s
.40904 .99375 m
.40904 1 L
s
.53898 .99375 m
.53898 1 L
s
.66892 .99375 m
.66892 1 L
s
.79886 .99375 m
.79886 1 L
s
.92879 .99375 m
.92879 1 L
s
.125 Mabswid
.04522 .99625 m
.04522 1 L
s
.07121 .99625 m
.07121 1 L
s
.09719 .99625 m
.09719 1 L
s
.12318 .99625 m
.12318 1 L
s
.17516 .99625 m
.17516 1 L
s
.20114 .99625 m
.20114 1 L
s
.22713 .99625 m
.22713 1 L
s
.25312 .99625 m
.25312 1 L
s
.30509 .99625 m
.30509 1 L
s
.33108 .99625 m
.33108 1 L
s
.35707 .99625 m
.35707 1 L
s
.38306 .99625 m
.38306 1 L
s
.43503 .99625 m
.43503 1 L
s
.46102 .99625 m
.46102 1 L
s
.48701 .99625 m
.48701 1 L
s
.51299 .99625 m
.51299 1 L
s
.56497 .99625 m
.56497 1 L
s
.59096 .99625 m
.59096 1 L
s
.61694 .99625 m
.61694 1 L
s
.64293 .99625 m
.64293 1 L
s
.69491 .99625 m
.69491 1 L
s
.72089 .99625 m
.72089 1 L
s
.74688 .99625 m
.74688 1 L
s
.77287 .99625 m
.77287 1 L
s
.82484 .99625 m
.82484 1 L
s
.85083 .99625 m
.85083 1 L
s
.87682 .99625 m
.87682 1 L
s
.90281 .99625 m
.90281 1 L
s
.95478 .99625 m
.95478 1 L
s
.98077 .99625 m
.98077 1 L
s
.25 Mabswid
0 1 m
1 1 L
s
.99375 .01923 m
1 .01923 L
s
.99375 .14917 m
1 .14917 L
s
.99375 .27911 m
1 .27911 L
s
.99375 .40904 m
1 .40904 L
s
.99375 .53898 m
1 .53898 L
s
.99375 .66892 m
1 .66892 L
s
.99375 .79886 m
1 .79886 L
s
.99375 .92879 m
1 .92879 L
s
.125 Mabswid
.99625 .04522 m
1 .04522 L
s
.99625 .07121 m
1 .07121 L
s
.99625 .09719 m
1 .09719 L
s
.99625 .12318 m
1 .12318 L
s
.99625 .17516 m
1 .17516 L
s
.99625 .20114 m
1 .20114 L
s
.99625 .22713 m
1 .22713 L
s
.99625 .25312 m
1 .25312 L
s
.99625 .30509 m
1 .30509 L
s
.99625 .33108 m
1 .33108 L
s
.99625 .35707 m
1 .35707 L
s
.99625 .38306 m
1 .38306 L
s
.99625 .43503 m
1 .43503 L
s
.99625 .46102 m
1 .46102 L
s
.99625 .48701 m
1 .48701 L
s
.99625 .51299 m
1 .51299 L
s
.99625 .56497 m
1 .56497 L
s
.99625 .59096 m
1 .59096 L
s
.99625 .61694 m
1 .61694 L
s
.99625 .64293 m
1 .64293 L
s
.99625 .69491 m
1 .69491 L
s
.99625 .72089 m
1 .72089 L
s
.99625 .74688 m
1 .74688 L
s
.99625 .77287 m
1 .77287 L
s
.99625 .82484 m
1 .82484 L
s
.99625 .85083 m
1 .85083 L
s
.99625 .87682 m
1 .87682 L
s
.99625 .90281 m
1 .90281 L
s
.99625 .95478 m
1 .95478 L
s
.99625 .98077 m
1 .98077 L
s
.25 Mabswid
1 0 m
1 1 L
s
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
% Start of gray image
p
.01923 .01923 translate
.96154 .96154 scale
74 string
74 74 8 [74 0 0 74 0 0] {
\tcurrentfile
\t1 index
\treadhexstring
\tpop
}  Mimage
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000D00000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
0000000000000000000000000000000000000000000D000D000000000000000000000000
0000000000000D0D0D0D0D00000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000D162816160D0D0000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000D000D0D000D00000D0000000000000000
000000000D0D28394242392816000D000000000000000000000000000000000000000000
0000
00000000000000000000000000000000000000000D16160D0D0D00000000000000000000
000000000D28395F78786639280D00000000000000000000000000000000000000000000
0000
0000000000000000000000000000000000000D0D16161616160D000D0000000000000000
000D000D163966ADD3CA9B5F39160D000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000D1616282816160D000D0000000D000000
0000000D285FA4EEFFFFD38C42160D000000000000000000000000000000000000000000
0000
0000000000000000000000000000000000000D0D1616331616160D0D000D000000000D00
0D000D163978DCFFFFFFF49B42160D000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000D1616162816160D0D0000000D0D0D160D
160D1633429BFFFFFFFFFFA456280D000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000D0D1616161616160D0D0D0D1616333333
2828333966CAFFFFFFFFFFAD56160D000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000D000D16161616160D16161639425F5F5F
5F5F5F669BEEFFFFFFFFFFAD56280D0D0000000000000000000000000000000000000000
0000
00000000000000000000000000000000000000000D0D0D16161616161616395F8CB6CACA
BFB6B6CADCFFFFFFFFFFFFAD56280D000000000000000000000000000000000000000000
0000
0000000000000000000000000000000000000000000D16281628161616335FA4F4FFFFFF
FFFFFFFFFFFFFFFFFFFFF49B56280D000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000D0D1628333933332828568CF4FFFFFFFF
FFFFFFFFFFFFFFFFFFFFDC7842160D000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000D1633394256563939395FBFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFF4AD6639160D0D0000000000000000000000000000000000000000
0000
00000000000000000000000000000000000000161639426678665F565F78D3FFFFFFFFFF
FFFFFFFFFFFFFFFFFFDC8C5F391616000000000000000000000000000000000000000000
0000
00000000000000000000000000000000000D001616395F788C8C8C78788CDCFFFFFFFFFF
FFFFFFFFFFFFFFFFFFDCA4785639160D0000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000D16395F78ADB6B6A48CA4D3FFFFFFFFFF
FFFFFFFFFFFFFFFFFFF4DCB68C5F33160D00000000000000000000000000000000000000
0000
000000000000000000000000000000000000000D1633568CBFEEDCD3ADA4BFF4FFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFDC9B56280D00000000000000000000000000000000000000
0000
000000000000000000000000000000000000000D1628569BDCFFFFF4CAA4A4D3FFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFDC7839160D000000000000000000000000000000000000
0000
0000000000000000000000000000000000000D000D285FA4F4FFFFFFDCA48CADF4FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFF9B42160D0D0000000000000000000000000000000000
0000
00000000000000000000000000000000000000000D2856A4FFFFFFFFF4B68C8CDCFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFBF5F3316000000000000000000000000000000000000
0000
00000000000000000000000000000000000000000D16429BF4FFFFFFFFBF8C8CB6FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFF48C5628160D00000000000000000000000000000000
0000
00000000000000000000000000000000000000000D163978D3FFFFFFFFDCA48CADF4FFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC8C42330D00000000000000000000000000000000
0000
00000000000000000000000000000000000000000016285FB6F4FFFFFFF4CAADB6F4FFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD37839160D000000000000000000000000000000
0000
000000000000000000000000000000000000000D001616568CEEFFFFFFFFEECAD3FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA456280D000000000000000000000000000000
0000
0000000000000000000000000000000000000000000D28569BF4FFFFFFFFFFEEDCFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFAD5F280D000000000000000000000000000000
0000
000000000000000000000000000000000000000D1616335FA4FFFFFFFFFFFFFFEEFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA4561616000000000000000000000000000000
0000
0000000000000000000000000000000000000D1616394278BFFFFFFFFFFFFFFFF4FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD37839160D000000000000000000000000000000
0000
000000000000000000000000000000000D0D1628395F669BDCFFFFFFFFFFFFFFF4FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC8C42280D00000000000000000000000000000000
0000
00000000000000000000000000000000001633565F8CA4D3F4FFFFFFFFFFFFFFF4FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFEE9B5F28160D00000000000000000000000000000000
0000
0000000000000000000000000000000D0D16395F8CADCADCFFFFFFFFFFFFFFFFF4FFFFFF
FFFFFFFFFFFFFFF4DCDCF4FFFFEEAD5F39160D0000000000000000000000000000000000
0000
000000000000000000000000000000000D2839669BB6D3DCFFFFFFFFFFFFFFFFF4FFFFFF
FFFFFFFFFFFFF4D3ADADBFCAD3AD7842280D0D0000000000000000000000000000000000
0000
000000000000000000000000000000000D16395F789BADBFF4FFFFFFFFFFFFFFF4F4FFFF
FFFFFFFFFFFFEEAD8C8C8CA49B8C5F39160D000000000000000000000000000000000000
0000
000000000000000000000000000000000D1633395F66789BCAFFFFFFFFFFFFF4DCEEF4FF
FFFFFFFFFFFFEEAD8C8C8C8C8C664228160D000000000000000000000000000000000000
0000
00000000000000000000000000000000000D162833394266ADFFFFFFFFFFF4DCD3DCF4FF
FFFFFFFFFFFFFFCAAD9B8C8C785F3928160D000000000000000000000000000000000000
0000
0000000000000000000000000000000000000D16161633569BF4FFFFFFFFDCCADCDCFFFF
FFFFFFFFFFFFFFF4D3B69B8C66563928160D0D0000000000000000000000000000000000
0000
000000000000000000000000000000000000000D0D0D16428CDCFFFFFFFFDCCADCF4FFFF
FFFFFFFFFFFFFFFFF4CA9B785F393928160D000000000000000000000000000000000000
0000
0000000000000000000000000000000000000000000D163966B6F4FFFFF4D3DCF4FFFFFF
FFFFFFFFFFFFFFFFF4BF8C5F39392828160D0D0000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000D28428CBFDCF4DCDCEEFFFFFFFF
FFFFFFFFFFFFFFF4D39B5F3933281616160D000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000D16395F8CBFDCF4F4FFFFFFFFFF
FFFFFFFFFFF4DCBF8C6639281616160D0D0D000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000016284278BFEEFFFFFFFFFFFFFF
FFFFFFFFEEBF8C785F3928160D0D0D000D00000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000D0D163978B6F4FFFFFFFFFFFFFF
FFFFFFF4CA9B66423316160D000D00000000000000000000000000000000000000000000
0000
00000000000000000000000000000000000000000000000D163966ADF4FFFFFFFFFFFFFF
FFFFFFDCBF8C5F3933160D00000000000000000000000000000000000000000000000000
0000
00000000000000000000000000000000000000000000000016335FA4F4FFFFFFFFFFFFFF
FFF4DCD3B68C6639160D0D00000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000162856A4F4FFFFFFFFFFFFFF
F4DCBFB6A48C664233160000000000000000000000000000000000000000000000000000
0000
0000000000000000000000000000000000000000000000000D285FA4F4FFFFFFFFFFFFF4
D3AD9B8C8C785F3928160000000000000000000000000000000000000000000000000000
0000
0000000000000000000000000000000000000000000000000D16428CEEFFFFFFFFFFF4DC
AD8C7866665F563916160D00000000000000000000000000000000000000000000000000
0000
00000000000000000000000000000000000000000000000000163966ADF4FFFFF4DCCAB6
9B665F4239393328160D0000000000000000000000000000000000000000000000000000
0000
0000000000000000000000000000000000000000000000000D0D1642669BADB6ADA49B8C
785F4239332816160D0D0000000000000000000000000000000000000000000000000000
0000
0000000000000000000000000000000000000000000000000000161639565F5F665F665F
5642393316160D0D0D000000000000000000000000000000000000000000000000000000
0000
00000000000000000000000000000000000000000000000000000D0D1616333333393939
39332816160D0D0000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000D0D0D1616161616
161616160D0D000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000D000D0D0D
0D0D0D0D0000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000
pop
P
% End of image
MathSubEnd
P
% End of sub-graphic
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{747.313, 355.813},
  ImageMargins->{{42, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`4000;[0001Hb000`400?l00000o`00003oo`3ooooo
0?ooond0oooo003o0?ooool0ooook@3oool00?l0ooooo`3oooo]0?ooo`00o`3ooooo0?ooond0oooo
003o0?ooool0ooook@3oool00?l0ooooo`3oooo]0?ooo`00o`3ooooo0?ooond0oooo003o0?ooool0
ooook@3oool00?l0ooooo`3oooo]0?ooo`00o`3ooooo0?ooond0oooo003o0?ooool0ooook@3oool0
02<0oooo0P00000T0?ooo`D000000P3oool200000280oooo100000030?ooo`8000008P3oool20000
00@0oooo0P00000S0?ooo`<000000P3oool2000002<0oooo0P0000040?ooo`8000008@3oool30000
00@0oooo0P00000S0?ooo`030000003oool0oooo0080oooo0P00001;0?ooo`800000903oool50000
0080oooo0P00000P0?ooo`@000000`3oool200000280oooo0P0000040?ooo`8000008`3oool30000
0080oooo0P00000R0?ooo`800000103oool200000240oooo0`0000040?ooo`8000008P3oool00`00
0000oooo0?ooo`020?ooo`8000009`3oool00280oooo00@000000?ooo`3oool000009@3oool01@00
0000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`03
0?ooo`040000003oool0oooo00000200oooo00@000000?ooo`3oool000000P3oool010000000oooo
0?ooo`00000S0?ooo`040000003oool0oooo00000080oooo00<000000?ooo`3oool07`3oool01000
0000oooo0?ooo`0000020?ooo`040000003oool0oooo00000200oooo00@000000?ooo`3oool00000
0P3oool010000000oooo0?ooo`00000R0?ooo`050000003oool0oooo0?ooo`0000000P3oool00`00
0000oooo0?ooo`170?ooo`040000003oool0oooo000002D0oooo00D000000?ooo`3oool0oooo0000
00020?ooo`030000003oool0oooo01d0oooo00<000000?ooo`3oool00`3oool010000000oooo0?oo
o`00000P0?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool000008`3oool01000
0000oooo0?ooo`0000020?ooo`030000003oool0oooo01h0oooo00@000000?ooo`3oool000000P3o
ool010000000oooo0?ooo`00000P0?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3o
ool000008@3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool0903oool0
0280oooo00@000000?ooo`3oool000009@3oool01@000000oooo0?ooo`3oool000000080oooo00<0
00000?ooo`3oool0803oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo00000280oooo
00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo01h0oooo1@0000001@3oool0
00000?ooo`3oool0000002@0oooo00@000000?ooo`3oool000000P3oool00`000000oooo0?ooo`0N
0?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool000008P3oool01@000000oooo
0?ooo`3oool000000080oooo00<000000?ooo`3oool0A`3oool010000000oooo0?ooo`00000U0?oo
o`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`0N0?ooo`030000003oool0
oooo0080oooo00@000000?ooo`3oool000008P3oool01@000000oooo0?ooo`3oool000000080oooo
00<000000?ooo`3oool07P3oool5000000050?ooo`000000oooo0?ooo`0000008`3oool010000000
oooo0?ooo`0000020?ooo`030000003oool0oooo01h0oooo00@000000?ooo`3oool000000P3oool0
10000000oooo0?ooo`00000Q0?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo
0?ooo`0T0?ooo`008P3oool010000000oooo0?ooo`00000U0?ooo`050000003oool0oooo0?ooo`00
00000P3oool00`000000oooo0?ooo`0Q0?ooo`050000003oool0oooo0?ooo`0000000P3oool00`00
0000oooo0?ooo`0Q0?ooo`040000003oool0oooo00000080oooo00<000000?ooo`3oool07P3oool0
10000000oooo0?ooo`0000020?ooo`040000003oool0oooo00000280oooo0P0000030?ooo`040000
003oool0oooo00000200oooo0`0000030?ooo`040000003oool0oooo000002<0oooo00@000000?oo
o`3oool000000P3oool00`000000oooo0?ooo`170?ooo`040000003oool0oooo000002D0oooo00D0
00000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo01l0oooo00D000000?ooo`3oool0
oooo000000020?ooo`030000003oool0oooo0240oooo00@000000?ooo`3oool000000P3oool00`00
0000oooo0?ooo`0N0?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool000008@3o
ool2000000<0oooo00@000000?ooo`3oool00000803oool3000000<0oooo00@000000?ooo`3oool0
00008P3oool010000000oooo0?ooo`0000020?ooo`030000003oool0oooo02@0oooo000R0?ooo`04
0000003oool0oooo000002D0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0
oooo01l0oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`00000P0?ooo`040000
003oool0oooo00000080oooo00@000000?ooo`3oool000008@3oool00`000000oooo000000020?oo
o`040000003oool0oooo00000280oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`00
000Q0?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000803oool010000000oooo
0?ooo`0000020?ooo`040000003oool0oooo000004T0oooo00@000000?ooo`3oool000009@3oool0
1@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool07@3oool010000000oooo0?oo
o`0000020?ooo`040000003oool0oooo00000200oooo00@000000?ooo`3oool000000P3oool01000
0000oooo0?ooo`00000Q0?ooo`030000003oool000000080oooo00@000000?ooo`3oool000008@3o
ool00`000000oooo0?ooo`020?ooo`040000003oool0oooo00000240oooo00<000000?ooo`3oool0
0P3oool010000000oooo0?ooo`00000O0?ooo`040000003oool0oooo00000080oooo00@000000?oo
o`3oool000009P3oool002<0oooo0P00000U0?ooo`800000103oool2000002<0oooo0P0000040?oo
o`8000008P3oool2000000@0oooo0P00000S0?ooo`8000000`3oool2000002<0oooo0`0000030?oo
o`8000008P3oool3000000<0oooo0P00000Q0?ooo`@000000`3oool2000004/0oooo0P00000U0?oo
o`800000103oool200000240oooo0P0000040?ooo`8000008P3oool2000000@0oooo0P00000S0?oo
o`8000000`3oool200000280oooo0`0000030?ooo`8000008P3oool3000000<0oooo0P00000P0?oo
o`@000000`3oool2000002L0oooo003o0?ooool0ooook@3oool00?l0ooooo`3oooo]0?ooo`00o`3o
oooo0?ooond0oooo003o0?ooool0ooook@3oool00?l0ooooo`3oooo]0?ooo`00o`3ooooo0?ooond0
oooo000J0?ooo`8000001P3ooooo000004@00000<@3ooooo000004<000004`3oool001T0oooo00@0
00000?ooo`3oool000001@3oool00`000000oooo000000070?ooo`030000003oool0oooo00H0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00@0oooo
00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0A0?ooo`006@3oool010000000oooo0?oo
o`0000050?ooo`<00000:@3oool00`000000oooo0?ooo`0X0?ooo`030000003oool0oooo02L0oooo
00<000000?ooo`3oool09`3oool00`000000oooo0?ooo`0X0?ooo`030000003oool0oooo02L0oooo
00<000000?ooo`3oool09`3oool00`000000oooo0?ooo`0C0?ooo`<00000<@3oool00`000000oooo
0?ooo`030?ooo`030000003oool0oooo02L0oooo00<000000?ooo`3oool09P3oool00`000000oooo
0?ooo`0W0?ooo`030000003oool0oooo02L0oooo00<000000?ooo`3oool09`3oool00`000000oooo
0?ooo`0W0?ooo`030000003oool0oooo02H0oooo00<000000?ooo`3oool0503oool00`000000oooo
0?ooo`0A0?ooo`006@3oool010000000oooo0?ooo`0000050?ooo`030000003oool0oooo0?l0oooo
@03oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo0?l0oooo?`3oool00`000000oooo
0?ooo`0A0?ooo`006@3oool010000000oooo0?ooo`0000050?ooo`030000003oool0oooo0?l0oooo
@03oool00`000000oooo0?ooo`0W0?ooo`8000001P3oool00`000000oooo0?ooo`3o0?ooocl0oooo
00<000000?ooo`3oool04@3oool001X0oooo0P0000060?ooo`030000003oool0oooo0?l0oooo@03o
ool00`000000oooo0?ooo`0V0?ooo`040000003oool0oooo000000D0oooo00<000000?ooo`3oool0
o`3ooolo0?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo0?l0oooo@03o
ool00`000000oooo0?ooo`0V0?ooo`040000003oool0oooo000000D0oooo0`00003o0?ooocd0oooo
0`00000C0?ooo`008P3oool00`000000oooo0?ooo`030?ooool00000=P0000070?ooo`030000003o
ool0oooo02H0oooo00@000000?ooo`3oool000001@3oool00`000000oooo0?ooo`030?ooool00000
=`0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooo`00
000f000000L0oooo00<000000?ooo`3oool09P3oool010000000oooo0?ooo`0000050?ooo`030000
003oool0oooo00<0ooooo`00000g000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<0
00000?ooo`3oool00`3ooooo000003H000001`3oool00`000000oooo0?ooo`0W0?ooo`8000001P3o
ool00`000000oooo0?ooo`030?ooool00000=`0000050?ooo`030000003oool0oooo0140oooo000R
0?ooo`800000103ooooo000003H000001@3oool300000340oooo00<000000?ooo`3oool00`3ooooo
000003L000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oo
ool00000=P0000070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooooo0000
03L000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooool0
0000=P0000070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooooo000003L0
00001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooool00000
=P0000070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooooo000003L00000
1@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooool00000=P00
00070?ooo`030000003oool0oooo02l0oooo0P0000040?ooool00000=`0000040?ooo`8000004`3o
ool00280oooo00<000000?ooo`3oool00`3ooooo000003H000001`3oool00`000000oooo0?ooo`0_
0?ooo`030000003oool0oooo00<0ooooo`00000g000000D0oooo00<000000?ooo`3oool04@3oool0
0280oooo00<000000?ooo`3oool00`3ooooo000003H000001`3oool00`000000oooo0?ooo`0_0?oo
o`030000003oool0oooo00<0ooooo`00000g000000D0oooo00<000000?ooo`3oool04@3oool00280
oooo00<000000?ooo`3oool00`3ooooo000003H000001`3oool00`000000oooo0?ooo`0_0?ooo`03
0000003oool0oooo00<0ooooo`00000g000000D0oooo00<000000?ooo`3oool04@3oool00280oooo
00<000000?ooo`3oool00`3ooooo000003H000001`3oool00`000000oooo0?ooo`0_0?ooo`030000
003oool0oooo00<0ooooo`00000g000000D0oooo00<000000?ooo`3oool04@3oool00280oooo0P00
00040?ooool00000=P0000050?ooo`<00000<@3oool00`000000oooo0?ooo`030?ooool00000=`00
00050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooo`00000f
000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?ooool00000=`000005
0?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooo`00000f0000
00L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?ooool00000=`0000050?oo
o`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooo`00000f000000L0
oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?ooool00000=`0000050?ooo`03
0000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooo`00000f000000L0oooo
00<000000?ooo`3oool0;`3oool2000000@0ooooo`00000g000000@0oooo0P00000C0?ooo`008P3o
ool00`000000oooo0?ooo`030?ooool00000=P0000070?ooo`030000003oool0oooo02l0oooo00<0
00000?ooo`3oool00`3ooooo000003L000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool0
0`000000oooo0?ooo`030?ooool00000=P0000070?ooo`030000003oool0oooo02l0oooo00<00000
0?ooo`3oool00`3ooooo000003L000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`00
0000oooo0?ooo`030?ooool00000=P0000070?ooo`030000003oool0oooo02l0oooo00<000000?oo
o`3oool00`3ooooo000003L000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool2000000@0
ooooo`00000f000000D0oooo0`00000a0?ooo`030000003oool0oooo00<0ooooo`00000g000000D0
oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooooo000003H00000
1`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooo`00000g000000D0oooo
00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooooo000003H000001`3o
ool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooo`00000g000000D0oooo00<0
00000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooooo000003H000001`3oool0
0`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooo`00000g000000D0oooo00<00000
0?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooooo000003H000001`3oool00`00
0000oooo0?ooo`0_0?ooo`800000103ooooo000003L00000103oool2000001<0oooo000R0?ooo`03
0000003oool0oooo00<0ooooo`00000f000000L0oooo00<000000?ooo`3oool0;`3oool00`000000
oooo0?ooo`030?ooool00000=`0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000
003oool0oooo00<0ooooo`00000f000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo
0?ooo`030?ooool00000=`0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003o
ool0oooo00<0ooooo`00000f000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?oo
o`030?ooool00000=`0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0
oooo00<0ooooo`00000f000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`03
0?ooool00000=`0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`800000103ooooo0000
03H000001@3oool300000340oooo00<000000?ooo`3oool00`3ooooo000003L000001@3oool00`00
0000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooool00000=P0000070?ooo`03
0000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooooo000003L000001@3oool00`000000
oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooool00000=P0000070?ooo`030000
003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooooo000003L000001@3oool00`000000oooo
0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooool00000=P0000070?ooo`030000003o
ool0oooo02l0oooo0P0000040?ooool00000=`0000040?ooo`8000004`3oool00280oooo00<00000
0?ooo`3oool00`3ooooo000003H000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0
oooo00<0ooooo`00000g000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?oo
o`3oool00`3ooooo000003H000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo
00<0ooooo`00000g000000D0oooo00<000000?ooo`3oool04@3oool001<0oooo1@0000020?ooo`80
00001P3oool00`000000oooo0?ooo`030?ooool00000=P0000070?ooo`030000003oool0oooo02l0
oooo00<000000?ooo`3oool00`3ooooo000003L000001@3oool00`000000oooo0?ooo`0A0?ooo`00
5@3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool00`3oool00`000000
oooo0?ooo`030?ooool00000=P0000070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3o
ool00`3ooooo000003L000001@3oool00`000000oooo0?ooo`0A0?ooo`005@3oool01@000000oooo
0?ooo`3oool000000080oooo00<000000?ooo`3oool00`3oool3000000<0ooooo`00000f000000D0
oooo0`00000a0?ooo`030000003oool0oooo00<0ooooo`00000g000000D0oooo00<000000?ooo`3o
ool04@3oool001D0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo00<0
oooo00<000000?ooo`3oool00`3ooooo000003H000001`3oool00`000000oooo0?ooo`0_0?ooo`03
0000003oool0oooo00<0ooooo`00000g000000D0oooo00<000000?ooo`3oool04@3oool001D0oooo
00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool00`3ooooo000003H000001`3oool00`000000oooo0?ooo`0P0?ooo`D000000P3oool2000000H0
oooo00<000000?ooo`3oool00`3ooooo000003L000001@3oool00`000000oooo0?ooo`0A0?ooo`00
503oool2000000@0oooo0P0000060?ooo`030000003oool0oooo00<0ooooo`00000f000000L0oooo
00<000000?ooo`3oool08P3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3o
ool00`3oool00`000000oooo0?ooo`030?ooool00000=`0000050?ooo`030000003oool0oooo0140
oooo000R0?ooo`030000003oool0oooo00<0ooooo`00000f000000L0oooo00<000000?ooo`3oool0
8P3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool00`3oool3000000<0
ooooo`00000g000000<0oooo0`00000C0?ooo`008P3oool00`000000oooo0?ooo`030?ooool00000
=P0000070?ooo`030000003oool0oooo0280oooo00D000000?ooo`3oool0oooo000000020?ooo`03
0000003oool0oooo00<0oooo00<000000?ooo`3oool00`3ooomY000000@03@d=b@0000050?ooo`03
0000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooo`00000f000000L0oooo
00<000000?ooo`3oool08P3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3o
ool00`3oool00`000000oooo0?ooo`030?ooofT00000100=3@g9000000D0oooo00<000000?ooo`3o
ool04@3oool00280oooo00<000000?ooo`3oool00`3ooooo000003H000001`3oool00`000000oooo
0?ooo`0Q0?ooo`800000103oool2000000H0oooo00<000000?ooo`3oool00`3ooomY000000@03@d=
b@0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooo`00
000f000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?ooofT00000100=
3@g9000000D0oooo00<000000?ooo`3oool04@3oool00280oooo0P0000040?ooool00000=P000005
0?ooo`<00000<@3oool00`000000oooo0?ooo`030?oooeP00000100=3@d4000000@03@d=C000000E
00d=3G4000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oo
ool00000=P0000070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooomH0000
00@03@d=1000000400d=3D`000005@0=3@ea000000D0oooo00<000000?ooo`3oool04@3oool00280
oooo00<000000?ooo`3oool00`3oooni000000<06ATIN@0000070?ooo`030000003oool0oooo02l0
oooo00<000000?ooo`3oool00`3ooomH000000@03@d=1000000400d=3D`000005@0=3@ea000000D0
oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooonf000000P06ATI
1000000201TI6G4000001`3oool00`000000oooo0?ooo`0_0?ooo`800000103ooomH000000@03@d=
1000000400d=3D`000005@0=3@ea000000@0oooo0P00000C0?ooo`008P3oool00`000000oooo0?oo
o`030?oookD000001@0I6AT2000000T06ATIL00000070?ooo`030000003oool0oooo02l0oooo00<0
00000?ooo`3oool00`3ooon`000000@03@d=100F5QH402PX:0T05QHF200=3@eY000000D0oooo00<0
00000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooond000000@06ATI0P000002
03<c<`800000200I6AU_000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`03
0?oook000000100=3@d401HF5P@0:2PX2@0F5QH800d=3FT000001@3oool00`000000oooo0?ooo`0A
0?ooo`008P3oool00`000000oooo0?ooo`030?oook800000100I6AT2000000H0<c<c1P00000501TI
6F`000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0oooo/000000400d=
3@@05QHF100X:2P901HF5PP03@d=J@0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`03
0000003oool0oooo00<0oooo/@00000301TI6@8000003P0c<c<2000000D06ATIJP0000070?ooo`03
0000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooon`000000@03@d=100F5QH402PX:0T0
5QHF200=3@eY000000D0oooo00<000000?ooo`3oool04@3oool00280oooo0P0000040?oook000000
0P0I6AT2000000D0<c<c2000000503<c<`800000100I6AUY000000D0oooo0`00000a0?ooo`030000
003oool0oooo00<0ooooC`00000500d=3@@00000200=3@d4000000D03@d=2000000400d=3C800000
2@0=3@d402PX:0@0>CTi2@12@T8403Ti>@@0:2PX100F5QH4000000D03@d=H00000050?ooo`030000
003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0oooo[`00000301TI6@040000000c
<c<0<c<c03<c<`<00000201<C4`3000000<0<c<c00<0000001TI6@0I6AT00`0I6AUX000000L0oooo
00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?ooodl000001@0=3@d4000000P03@d=
1000000500d=3@P00000100=3@db000000T03@d=100X:2P403Ti>@T0@T92100i>CT402PX:0@05QHF
1000000500d=3F0000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?oo
o`030?ooojh000000`0I6AT01@000000<c<c03<c<`0c<c<0000000P0C4a<0`00000304a<C0050000
000c<c<0<c<c03<c<`000000100I6AUX000000L0oooo00<000000?ooo`3oool0;`3oool00`000000
oooo0?ooo`030?ooodl000001@0=3@d4000000P03@d=1000000500d=3@P00000100=3@db000000T0
3@d=100X:2P403Ti>@T0@T92100i>CT402PX:0@05QHF1000000500d=3F0000001@3oool00`000000
oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oooeT000001@0I6AU?000000806ATI
0P00000303<c<`030000001<C4`0C4a<0080C4a<1@00000306IVIP<0000000<0C4a<0000000c<c<0
0P0c<c<2000000<06ATII`0000070?ooo`030000003oool0oooo02l0oooo0P0000040?ooodl00000
1@0=3@d4000000P03@d=1000000500d=3@P00000100=3@db000000T03@d=100X:2P403Ti>@T0@T92
100i>CT402PX:0@05QHF1000000500d=3F000000103oool2000001<0oooo000R0?ooo`030000003o
ool0oooo00<0ooooF000000701TI6Dd000000P0I6AT00`000000<c<c03<c<`0203<c<`030000001<
C4`0C4a<00`000000P1VIVH00`000000C4a<0000000403<c<`040000000I6AT06ATI01TI6FH00000
1`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooE000000400d=3@P05QHF
3@0=3@dj000000D03@d=100X:2P403Ti>@@0GemO2@1hN7P406IVIP@0>CTi100X:2P400d=3FD00000
1@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oooeL000002@0I
6AU<000000806ATI00D0000003<c<`0c<c<0<c<c0000000204a<C0050000001VIVH000000000001o
Ogl01P00000207moO`80000000<0IVIV000000000000100c<c<0100000006ATI01TI6@0I6AUV0000
00L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?oooe@00000100=3@d801HF
5Pd03@d=>P00000500d=3@@0:2PX100i>CT405mOG`T0N7Qh101VIVH403Ti>@@0:2PX100=3@eU0000
00D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooomF000000/0
6ATIBP00000201TI6@030000000c<c<0<c<c0080<c<c00H0000004a<C0000000IVIV0000001oOgl2
000000H0VIVI0P00000207moO`80000000<0C4a<0000000c<c<00P0c<c<00`0000006ATI01TI6@02
01TI6FD000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooE0000004
00d=3@P05QHF3@0=3@dj000000D03@d=100X:2P403Ti>@@0GemO2@1hN7P406IVIP@0>CTi100X:2P4
00d=3FD000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oo
oeD000003@0I6AT3000000806ATIA000000201TI6@080000000c<c<0<c<c03<c<`000000C4a<0000
001VIVH30000000309VIV@000000000000D000000P2IVIT30000000406IVIP000000C4a<000000<0
<c<c00@0000001TI6@0I6AT06ATII@0000070?ooo`030000003oool0oooo02l0oooo00<000000?oo
o`3oool00`3ooomD000000@03@d=200F5QH=00d=3CX000001@0=3@d402PX:0@0>CTi101OGel907Qh
N0@0IVIV100i>CT402PX:0@03@d=I@0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`03
0000003oool0oooo00<0ooooE@00000B01TI6D<000000P0I6AT020000000<c<c03<c<`0c<c<00000
04a<C0000000IVIV1@0000000`2c/k<00000000000060000000809VIV@000000Ogmo0000001VIVH0
000004a<C000000203<c<`030000000I6AT06ATI00806ATII00000070?ooo`030000003oool0oooo
02l0oooo00<000000?ooo`3oool00`3ooom;000000T03@d=5@0F5QH400d=3@@00000100=3@dV0000
00@03@d=1000000400d=3@D05QHF100i>CT406IVIP@0[Jf]103Cdm<50<[:bP@0Vi^K101OGel403Ti
>@@05QHF1@0=3@eP000000D0oooo00<000000?ooo`3oool04@3oool00280oooo0P0000040?oooe@0
0000500I6AU1000000<06ATI00L0000003<c<`0c<c<0000004a<C0000000IVIV0080000000<0VIVI
0000000000002@0000002P2c/k<00000000000000000Ogmo0000001VIVH0000004a<C000000203<c
<`040000000I6AT06ATI01TI6F@000001@3oool300000340oooo00<000000?ooo`3oool00`3ooom;
000000T03@d=5@0F5QH400d=3@@00000100=3@dV000000@03@d=1000000400d=3@D05QHF100i>CT4
06IVIP@0[Jf]103Cdm<50<[:bP@0Vi^K101OGel403Ti>@@05QHF1@0=3@eP000000D0oooo00<00000
0?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooomD000001D06ATI?`00000301TI
6@070000000c<c<0<c<c0000001<C4`0000006IVIP020000000409VIV@000000c<c<0<c<c0800000
00<0i^KV0000000000000`3Vi^H3000000040;>c/`000000000007moO`80000000D0C4a<0000000c
<c<0<c<c0000000301TI6F@000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo
00<0ooooB`00000900d=3AD05QHF100=3@d4000000@03@d=9P00000400d=3@@00000100=3@d501HF
5P@0>CTi101VIVH40:f][@@0dm?C1@3:b/X409^KV`@0GemO100i>CT401HF5PD03@d=H00000050?oo
o`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooD`00000G01TI6Ch0
00000`0I6AT01P000000<c<c0000001<C4`0000006IVIP80000000<0VIVI0000003<c<`00P000000
0`3Vi^H00000000000020?ooo`<0000000<0i^KV0000003<c<`00`0000000`1oOgl0000006IVIP02
00000080<c<c00@0000001TI6@0I6AT06ATII00000070?ooo`030000003oool0oooo02l0oooo00<0
00000?ooo`3oool00`3ooom;000000T03@d=5@0F5QH400d=3@@00000100=3@dV000000@03@d=1000
000400d=3@D05QHF100i>CT406IVIP@0[Jf]103Cdm<50<[:bP@0Vi^K101OGel403Ti>@@05QHF1@0=
3@eP000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooomC
000001P06ATI?000000301TI6@030000000c<c<0<c<c0080000000<0IVIV00000000000010000000
0`3Vi^H00000000000070?ooo`@0000000<0/k>c0000000000000`000000101<C4`0000003<c<`00
000301TI6F@000001`3oool00`000000oooo0?ooo`0_0?ooo`800000103ooom;000000T03@d=5@0F
5QH400d=3@@00000100=3@dV000000@03@d=1000000400d=3@D05QHF100i>CT406IVIP@0[Jf]103C
dm<50<[:bP@0Vi^K101OGel403Ti>@@05QHF1@0=3@eP000000@0oooo0P00000C0?ooo`008P3oool0
0`000000oooo0?ooo`030?oooe<000002P0I6AT00`0000006ATI01TI6@0<01TI6C/000000`0I6AT0
10000000<c<c0000001<C4`20000000507moO`00000000000000003<c<`00P00000;0?ooo`<00000
00D0/k>c000000000000000006IVIP020000000303<c<`0000006ATI00806ATII00000070?ooo`03
0000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooom?000000D03@d=200F5QH802PX:0T0
5QHF100=3@d4000000@03@d=3@00000400d=3AT00000100=3@d502PX:0@0GemO102TY:@40>k^kPT0
oooo103Cdm<408b<S0@0@T92100F5QH500d=3F0000001@3oool00`000000oooo0?ooo`0A0?ooo`00
8P3oool00`000000oooo0?ooo`030?oooe<000002P0I6AT00`0000006ATI01TI6@0<01TI6C/00000
0P0I6AT01P000000<c<c0000001<C4`0000006IVIP@0000000<0c<c<000000000000303oool30000
00050;>c/`00000000000000001VIVH00P0000000`0c<c<0000001TI6@0201TI6F@000001`3oool0
0`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooC`00000500d=3@P05QHF200X:2P9
01HF5P@03@d=1000000400d=3@d00000100=3@dI000000@03@d=1@0X:2P405mOG`@0Y:BT103^k^h9
0?ooo`@0dm?C102<S8`40492@P@05QHF1@0=3@eP000000D0oooo00<000000?ooo`3oool04@3oool0
0280oooo00<000000?ooo`3oool00`3ooomC000000T06ATI00<0000003<c<`0000003@0I6ATj0000
00<06ATI00@0000003<c<`000000C4a<0P0000000`1oOgl0000000000003000000h0oooo1P000000
1@1VIVH000000000000c<c<0000000<06ATII00000070?ooo`030000003oool0oooo02l0oooo00<0
00000?ooo`3oool00`3ooom?000000D03@d=200F5QH802PX:0T05QHF100=3@d4000000@03@d=3@00
000400d=3AT00000100=3@d502PX:0@0GemO102TY:@40>k^kPT0oooo103Cdm<408b<S0@0@T92100F
5QH500d=3F0000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`03
0?oooe@00000200I6AT00`000000<c<c0000000=01TI6CX000000P0I6AT01P000000<c<c0000001<
C4`0000006IVIPD0000000<0i^KV0000003oool03@3oool3000000030;>c/`000000000000<00000
00<0<c<c0000000I6AT00P0I6AUT000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo
0?ooo`030?ooodl000001@0=3@d801HF5PP0:2PX2@0F5QH400d=3@@00000100=3@d=000000@03@d=
6@00000400d=3@D0:2PX101OGel40:BTY0@0k^k^2@3oool40=?Cd`@0S8b<1012@T8401HF5PD03@d=
H00000050?ooo`030000003oool0oooo0140oooo000R0?ooo`800000103ooomD000000P06ATI00@0
000003<c<`0c<c<00000300I6ATi000000<06ATI00H0000003<c<`000000C4a<0000001VIVH60000
00l0oooo00<000000>KViP0000001P0000000`0c<c<0000001TI6@0201TI6F@000001@3oool30000
0340oooo00<000000?ooo`3oool00`3ooom;000000T03@d=200F5QH403<c<`d05QHF200=3@d40000
00D03@d=4000000400d=3@D00000100=3@d4000000@03@d=100F5QH503Ti>@@0N7Qh103Lg=`=0?oo
o`@0m?Cd102KVi/40492@P@05QHF1@0=3@eP000000D0oooo00<000000?ooo`3oool04@3oool00280
oooo00<000000?ooo`3oool00`3ooomD000000T06ATI0P00000=01TI6CP000000P0I6AT200000080
<c<c00D0000004a<C0000000000007moO`0400000100oooo00<000000>KViP0000001P0000000`0c
<c<0000001TI6@0201TI6F@000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo
00<0ooooB`00000900d=3@P05QHF100c<c<=01HF5PP03@d=1000000500d=3A000000100=3@d50000
00@03@d=1000000400d=3@@05QHF1@0i>CT407QhN0@0g=cL3@3oool40?Cdm0@0Vi^K1012@T8401HF
5PD03@d=H00000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0
ooooD`00000I01TI6CL000000P0I6AT00`000000<c<c03<c<`0203<c<`80000000<0IVIV00000000
00001000000@0?ooo`030000003Vi^H0000000D0000000@0C4a<0000000c<c<000000`0I6AUS0000
00L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?oood/000002@0=3@d801HF
5P@0<c<c3@0F5QH800d=3@@000001@0=3@d@000000@03@d=1@00000400d=3@@00000100=3@d401HF
5PD0>CTi101hN7P40=cLg0d0oooo103dm?@409^KV`@0@T92100F5QH500d=3F0000001@3oool00`00
0000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oooe<000006@0I6AT]00000003
01TI6@000000000000H000000P0I6AT00`000000<c<c03<c<`0303<c<`<0000000<0Ogmo00000000
00000P00000B0?ooo`D0000000H0Ogmo000000000000000003<c<`00000301TI6F<000001`3oool0
0`000000oooo0?ooo`0_0?ooo`800000103ooom;000000T03@d=200F5QH403<c<`d05QHF200=3@d4
000000D03@d=4000000400d=3@D00000100=3@d4000000@03@d=100F5QH503Ti>@@0N7Qh103Lg=`=
0?ooo`@0m?Cd102KVi/40492@P@05QHF1@0=3@eP000000@0oooo0P00000C0?ooo`008P3oool00`00
0000oooo0?ooo`030?oooe<000006@0I6ATT0000000301TI6@000000000000D000000`0I6AT60000
00<06ATI00<0000003<c<`0c<c<00`0c<c<800000180oooo1@0000001`1oOgl000000000001<C4`0
000003<c<`0000000`0I6AUR000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?oo
o`030?ooodl000001@0=3@d<01HF5P@0:2PX2@0F5QH800d=3@d00000300=3@d401HF5PD03@d=100F
5QH400d=3@@05QHF100c<c<50492@P@0Vi^K5@3oool40:BTY0@0EUIF100X:2P500d=3F0000001@3o
ool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oooe@000006@0I6ATQ
000000D06ATI0`00000601TI6@<00000100I6AT00`000000<c<c03<c<`0303<c<`040000001<C4`0
000007moO`@000004`3oool50000000707moO`000000000004a<C0000000<c<c0000000201TI6F<0
00001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooC`00000500d=3@`0
5QHF100X:2P901HF5PP03@d=3@00000<00d=3@@05QHF1@0=3@d401HF5P@03@d=100F5QH403<c<`D0
@T92102KVi/E0?ooo`@0Y:BT101FEUH402PX:0D03@d=H00000050?ooo`030000003oool0oooo0140
oooo000C0?ooo`@000000`3oool2000000H0oooo00<000000?ooo`3oool00`3ooomE000001T06ATI
7P00000F01TI6@030000000c<c<0<c<c00<0<c<c00<0000004a<C00000000P000000102IVIT00000
00000000000C0?ooo`D0000000@0Ogmo000000000000C4a<0P00000301TI6F<000001`3oool00`00
0000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooC`00000500d=3@`05QHF100X:2P901HF
5PP03@d=3@00000<00d=3@@05QHF1@0=3@d401HF5P@03@d=100F5QH403<c<`D0@T92102KVi/E0?oo
o`@0Y:BT101FEUH402PX:0D03@d=H00000050?ooo`030000003oool0oooo0140oooo000C0?ooo`03
0000003oool0oooo00<0oooo00@000000?ooo`3oool000001@3oool00`000000oooo0?ooo`030?oo
oeH000006@0I6ATK000000D06ATI0`00000>01TI6@8000001P0c<c<010000000C4a<0000001oOgl4
000001D0oooo1`0000000`1<C4`000000000000201TI6F@000001`3oool00`000000oooo0?ooo`0_
0?ooo`030000003oool0oooo00<0ooooC`00000500d=3@`05QHF100X:2P901HF5PP03@d=3@00000<
00d=3@@05QHF1@0=3@d401HF5P@03@d=100F5QH403<c<`D0@T92102KVi/E0?ooo`@0Y:BT101FEUH4
02PX:0D03@d=H00000050?ooo`030000003oool0oooo0140oooo000D0?ooo`030000003oool0oooo
0080oooo00@000000?ooo`3oool000001@3oool3000000<0ooooF000000H01TI6A<00000200I6AT4
000000<0<c<c1`00000501TI6@8000001`0c<c<01@000000C4a<000000000000Ogmo00@000005@3o
ool70000000304a<C0000000000000806ATII00000050?ooo`<00000<@3oool00`000000oooo0?oo
o`030?ooodl000002@0=3@dI01HF5Q403@d=200F5QH=03<c<`P0:2PX100c<c<403Ti>@D0IVIV103:
b/XE0?ooo`@0[Jf]101FEUH401HF5PD03@d=H00000050?ooo`030000003oool0oooo0140oooo000E
0?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`030?ooo`030000003o
ool0oooo00<0ooooF@00000G01TI6A4000002@0I6AT00`000000<c<c03<c<`0<03<c<`D00000200c
<c<010000000C4a<0000001VIVH6000001D0oooo1`0000000`1<C4`000000000000201TI6F@00000
1`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooC`00000900d=3AT05QHF
4@0=3@d801HF5Pd0<c<c200X:2P403<c<`@0>CTi1@1VIVH40<[:bQD0oooo102][Jd405IFEP@05QHF
1@0=3@eP000000D0oooo00<000000?ooo`3oool04@3oool001<0oooo00@000000?ooo`3oool00000
0P3oool010000000oooo0?ooo`0000050?ooo`030000003oool0oooo00<0ooooFP00000F01TI6A40
0000200I6AT00`000000<c<c03<c<`0;000000T0<c<c1P000000101<C4`0000006IVIP1VIVH30000
00030<c<c0000000000001D0oooo1`0000000`1<C4`000000000000301TI6F<000001`3oool00`00
0000oooo0?ooo`0P0?ooo`@000000`3oool2000000H0oooo00<000000?ooo`3oool00`3ooom?0000
00T03@d=6@0F5QHA00d=3@P05QHF3@0c<c<802PX:0@0<c<c100i>CT506IVIP@0b/[:5@3oool40:f]
[@@0EUIF100F5QH500d=3F0000001@3oool00`000000oooo0?ooo`0A0?ooo`00503oool2000000@0
oooo0P0000060?ooo`030000003oool0oooo00<0ooooF`00000E01TI6@L000001P0I6AT3000000<0
6ATI1P00000203<c<`030000001<C4`0C4a<00T0C4a<2@00000604a<C0030000001VIVH0IVIV00@0
000000<0c<c<0000003oool05@3oool40000000707moO`000000000004a<C0000000<c<c00000002
01TI6F<000001`3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo00<0oooo00@00000
0?ooo`3oool000001@3oool00`000000oooo0?ooo`030?ooodl000002@0=3@dI01HF5Q403@d=200F
5QH=03<c<`P0:2PX100c<c<403Ti>@D0IVIV103:b/XE0?ooo`@0[Jf]101FEUH401HF5PD03@d=H000
00050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooF`00000E
01TI6@L000002`0I6AT00`000000<c<c03<c<`0303<c<`<0000000<0C4a<0000000000003@000005
04a<C0H000000P1VIVH01@000000Ogmo000000000000c<c<008000005P3oool40000000707moO`00
0000000004a<C0000000<c<c0000000301TI6F8000001`3oool00`000000oooo0?ooo`0Q0?ooo`03
0000003oool0oooo0080oooo00@000000?ooo`3oool000001@3oool3000000<0ooooC`00000500d=
3@@00000100=3@dE01HF5P@03@d=3@0F5QH403Ti>@@0@T926@1OGel406IVIPD0Vi^K103^k^hE0?oo
o`@0[Jf]101FEUH402PX:0T03@d=G00000030?ooo`<000004`3oool00280oooo00<000000?ooo`3o
ool00`3ooomL000001@06ATI1P00000<01TI6@040000000c<c<0<c<c03<c<`<0000000<0C4a<0000
000000003`1VIVH5000000L0IVIV00<0000007moO`0000000P0000000`3<c<`000000000000F0?oo
o`@0000000L0Ogmo000000000000C4a<0000000c<c<0000000<06ATIHP0000070?ooo`030000003o
ool0oooo0280oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo00<0oooo
00<000000?ooo`3oool00`3ooom?000000D03@d=1000000400d=3AD05QHF100=3@d=01HF5P@0>CTi
1012@T8I05mOG`@0IVIV1@2KVi/40>k^kQD0oooo102][Jd405IFEP@0:2PX2@0=3@eL000000D0oooo
00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooomN000001<06ATI1000
000;01TI6@80000000D0<c<c000000000000000004a<C00300000080IVIV7`0000000`3<c<`00000
0000000G0?ooo`@0000000L0Ogmo000000000000C4a<0000000c<c<0000000<06ATIHP0000070?oo
o`030000003oool0oooo0200oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`00
00050?ooo`030000003oool0oooo00<0ooooC`00000500d=3@@00000100=3@dE01HF5P@03@d=3@0F
5QH403Ti>@@0@T926@1OGel406IVIPD0Vi^K103^k^hE0?ooo`@0[Jf]101FEUH402PX:0T03@d=G000
00050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooG`00000C
01TI6@030000000I6AT06ATI00X06ATI00@0000003<c<`0c<c<000000P1<C4`2000000<0IVIV7P00
00000`2c/k<0000000000002000001P0oooo100000001`1oOgl000000000001<C4`0000003<c<`00
00000`0I6AUR000000L0oooo00<000000?ooo`3oool08@3oool2000000@0oooo0P0000060?ooo`03
0000003oool0oooo00<0ooooC`00000500d=3@@00000100=3@dE01HF5P@03@d=3@0F5QH403Ti>@@0
@T926@1OGel406IVIPD0Vi^K103^k^hE0?ooo`@0[Jf]101FEUH402PX:0T03@d=G00000050?ooo`03
0000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooG`00000O01TI6@050000
000c<c<0<c<c0000001<C4`00P00000206IVIQl0000000<0/k>c0000000000000P3<c<`2000001P0
oooo1`000000101<C4`0000003<c<`00000301TI6F8000001`3oool00`000000oooo0?ooo`0_0?oo
o`030000003oool0oooo00<0ooooE000000<00d=3Ah05QHF100i>CT405mOG`@0S8b<102f][H90<[:
bP@0_kno202f][H40<[:bPD0g=cL6@3oool40:f][@@0EUIF100X:2P500d=3F0000001@3oool00`00
0000oooo0?ooo`0A0?ooo`008P3oool2000000@0ooooH000000N01TI6@030000000c<c<000000080
C4a<00D0000006IVIP000000000007moO`0T000001T0oooo1`000000101<C4`0000003<c<`000003
01TI6F8000001@3oool300000340oooo00<000000?ooo`3oool00`3ooomD000000`03@d=7P0F5QH4
03Ti>@@0GemO102<S8`40;Jf]PT0b/[:102o_kl80;Jf]P@0b/[:1@3Lg=`I0?ooo`@0[Jf]101FEUH4
02PX:0D03@d=H00000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo
00<0ooooG`00000N01TI6@030000000c<c<000000080C4a<00@0000006IVIP000000Ogmo9@00000I
0?ooo`80000000<0c<c<0000000000000`000000101<C4`0000003<c<`00000301TI6F8000001`3o
ool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooE000000<00d=3Ah05QHF100i
>CT405mOG`@0S8b<102f][H90<[:bP@0_kno202f][H40<[:bPD0g=cL6@3oool40:f][@@0EUIF100X
:2P500d=3F0000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`03
0?oooel000007@0I6AT00`000000<c<c0000000204a<C0030000001VIVH0000000/00000203oool=
00000200oooo1P0000001P1VIVH0000004a<C0000000<c<c000000<06ATIHP0000070?ooo`030000
003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooomD000000`03@d=7P0F5QH403Ti>@@0GemO
102<S8`40;Jf]PT0b/[:102o_kl80;Jf]P@0b/[:1@3Lg=`I0?ooo`@0[Jf]101FEUH402PX:0D03@d=
H00000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooGP00
000M01TI6@070000000c<c<0<c<c0000001<C4`0000006IVIP0:000003L0oooo0P0000000`3<c<`0
0000000000020000000606IVIP000000C4a<0000000c<c<000000`0I6AUR000000L0oooo00<00000
0?ooo`3oool0;`3oool2000000@0ooooE000000<00d=3Ah05QHF100i>CT405mOG`@0S8b<102f][H9
0<[:bP@0_kno202f][H40<[:bPD0g=cL6@3oool40:f][@@0EUIF100X:2P500d=3F000000103oool2
000001<0oooo000R0?ooo`030000003oool0oooo00<0ooooG@00000M01TI6@070000000c<c<0<c<c
0000001<C4`0000006IVIP09000003T0oooo0P0000000`3<c<`00000000000020000000606IVIP00
0000C4a<0000000c<c<000000`0I6AUR000000L0oooo00<000000?ooo`3oool0;`3oool00`000000
oooo0?ooo`030?oooeP00000100=3@d401HF5P@0:2PX1@0F5QH402PX:0`05QHF1@0c<c<405mOG`@0
Y:BT103dm?@g0?ooo`@0m?Cd102KVi/405IFEP@0:2PX1@0=3@eP000000D0oooo00<000000?ooo`3o
ool04@3oool00280oooo00<000000?ooo`3oool00`3ooomK000000L06ATI00<0000001TI6@0I6AT0
1@0I6AT00`0000006ATI01TI6@0<01TI6@070000000c<c<000000000001<C4`0000006IVIP070000
03`0oooo1@0000001@1oOgl000000000001<C4`000000080<c<c00<0000001TI6@0I6AT0H`000007
0?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooomH000000@03@d=100F5QH4
02PX:0D05QHF100X:2P<01HF5PD0<c<c101OGel40:BTY0@0m?Cd=`3oool40?Cdm0@0Vi^K101FEUH4
02PX:0D03@d=H00000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo
00<0ooooF`00000601TI6@040000000c<c<00000000000<06ATI0P0000000`0c<c<000000000000;
01TI6@030000000c<c<000000080C4a<00<0000006IVIP000000100000000`3Vi^H000000?ooo`0l
0?ooo`030000003<c<`0000000<0000000H0IVIV0000001<C4`0000003<c<`00000301TI6F<00000
1`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooF000000400d=3@@05QHF
100X:2P501HF5P@0:2PX300F5QH503<c<`@0GemO102TY:@40?Cdm3L0oooo103dm?@409^KV`@0EUIF
100X:2P500d=3F0000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?oo
o`030?oooeX000001@0I6AT2000000@0<c<c0`00000503<c<`<00000200I6AT020000000<c<c0000
001<C4`0000006IVIP000000Ogmo0`0000000`3Vi^H000000?ooo`0l0?ooo`D0000000D0Ogmo0000
00000000C4a<0000000203<c<`030000000I6AT06ATI06@000001`3oool00`000000oooo0?ooo`0_
0?ooo`030000003oool0oooo00<0ooooF000000400d=3@@05QHF100X:2P501HF5P@0:2PX300F5QH5
03<c<`@0GemO102TY:@40?Cdm3L0oooo103dm?@409^KV`@0EUIF100X:2P500d=3F0000001@3oool0
0`000000oooo0?ooo`0A0?ooo`008P3oool2000000@0ooooF@00000501TI6@030000000c<c<0<c<c
00l0<c<c0P00000501TI6@080000000c<c<0000004a<C0000000IVIV0000001oOgl5000003h0oooo
1@000000101oOgl000000000001<C4`20000000403<c<`0000006ATI01TI6F@000001@3oool30000
0340oooo00<000000?ooo`3oool00`3ooom?000000T03@d=100F5QH402PX:0@0<c<c1@0i>CT803<c
<`P0:2PX1@1FEUH408b<S0@0m?Cd>`3oool40=cLg0@0N7Qh1012@T8401HF5PD03@d=H00000050?oo
o`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooF000000401TI6@80
0000500c<c<60000000703<c<`000000C4a<0000001VIVH0000007moO`02000000030<c<c0000000
000003d0oooo00<000000>KViP00000010000000101VIVH0000004a<C000000203<c<`030000000I
6AT06ATI06@000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooC`00
000900d=3@@05QHF100X:2P403<c<`D0>CTi200c<c<802PX:0D0EUIF102<S8`40?Cdm3/0oooo103L
g=`407QhN0@0@T92100F5QH500d=3F0000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool0
0`000000oooo0?ooo`030?oooeH000000`0I6AT3000000X0<c<c0P00000A03<c<`060000001<C4`0
000006IVIP000000Ogmo1000000n0?ooo`@0000000L0VIVI000000000000IVIV0000001<C4`00000
0080<c<c00<0000001TI6@0I6AT0I00000070?ooo`030000003oool0oooo02l0oooo00<000000?oo
o`3oool00`3ooom?000000T03@d=100F5QH402PX:0@0<c<c1@0i>CT803<c<`P0:2PX1@1FEUH408b<
S0@0m?Cd>`3oool40=cLg0@0N7Qh1012@T8401HF5PD03@d=H00000050?ooo`030000003oool0oooo
0140oooo000R0?ooo`030000003oool0oooo00<0ooooE@00000301TI6@030000000c<c<0<c<c00X0
<c<c00<0000004a<C01<C4`00`00000=03<c<`030000001<C4`0C4a<0080000000@0Ogmo00000000
0000c<c<0P00000m0?ooo`030000003Vi^H0000000@0000000L0IVIV0000001<C4`0C4a<0000000c
<c<0000000<06ATII00000070?ooo`030000003oool0oooo02l0oooo0P0000040?ooodl000002@0=
3@d401HF5P@0:2PX100c<c<503Ti>@P0<c<c200X:2P505IFEP@0S8b<103dm?@k0?ooo`@0g=cL101h
N7P40492@P@05QHF1@0=3@eP000000@0oooo0P00000C0?ooo`008P3oool00`000000oooo0?ooo`03
0?oooeD000000`0I6AT00`000000<c<c03<c<`0703<c<`<000001P1<C4`2000000/0<c<c00<00000
04a<C01<C4`00P0000000`1oOgl0000000000002000003h0oooo100000001@2IVIT000000000001V
IVH000000080C4a<00<0000003<c<`0000000`0I6AUT000000L0oooo00<000000?ooo`3oool0;`3o
ool00`000000oooo0?ooo`030?ooodl000001@0=3@d401HF5P@0<c<c100i>CT40492@PT0EUIF300i
>CT505mOG`@0_kno>P3oool50?Cdm0@0[Jf]101VIVH403Ti>@@05QHF2@0=3@eL000000D0oooo00<0
00000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooomD000000<06ATI00<00000
03<c<`0c<c<0200c<c<010000000C4a<04a<C01<C4`2000000D0C4a<00<0000003<c<`0c<c<0200c
<c<00`000000C4a<04a<C0020000000307moO`000000000000800000?@3oool00`000000i^KV0000
00020000000509VIV@000000000006IVIP0000000P1<C4`00`000000<c<c0000000301TI6F@00000
1`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooC`00000500d=3@@05QHF
100c<c<403Ti>@@0@T922@1FEUH<03Ti>@D0GemO102o_klj0?ooo`D0m?Cd102][Jd406IVIP@0>CTi
100F5QH900d=3E`000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?oo
o`030?oooe<00000100I6AT00`000000<c<c03<c<`0703<c<`050000001<C4`0C4a<04a<C0000000
0P1VIVH3000000<0C4a<2P00000204a<C0030000001VIVH0000000D00000?@3oool40000000609VI
V@000000Ogmo0000001VIVH000000P1<C4`00`000000<c<c0000000401TI6F<000001`3oool00`00
0000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooC`00000500d=3@@05QHF100c<c<403Ti
>@@0@T922@1FEUH<03Ti>@D0GemO102o_klj0?ooo`D0m?Cd102][Jd406IVIP@0>CTi100F5QH900d=
3E`000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oooe80
00001@0I6AT00`000000<c<c03<c<`0503<c<`8000000P1<C4`2000000H0IVIV0P00000;04a<C080
000000<0IVIV0000001oOgl01000000m0?ooo`030000003Vi^H000000080000000<0VIVI00000000
00000P1VIVH00`000000C4a<0000000203<c<`030000000I6AT06ATI00@06ATIH@0000070?ooo`03
0000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooom?000000D03@d=100F5QH403<c<`@0
>CTi1012@T8905IFEP`0>CTi1@1OGel40;no_cX0oooo1@3dm?@40:f][@@0IVIV100i>CT401HF5PT0
3@d=G00000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0oooo
D@00000601TI6@030000000c<c<0<c<c00@0<c<c00D0000004a<C01<C4`0C4a<0000000306IVIP03
0000001VIVH0IVIV00@0IVIV0P00000804a<C0040000001VIVH0IVIV06IVIPH00000?@3oool40000
000409VIV@000000Ogmo00000080IVIV00<0000004a<C00000000P0c<c<00`0000006ATI01TI6@04
01TI6F4000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooC`000009
01HF5P@0>CTi1012@T8406IVIPD0N7Qh101VIVH405mOG`@0EUIF101OGel507QhN0@0dm?C>P3oool5
0=cLg0@0S8b<101OGel403Ti>@T05QHFH00000050?ooo`030000003oool0oooo0140oooo000R0?oo
o`800000103ooomA000000H06ATI00<0000003<c<`0c<c<00`0c<c<01@000000C4a<04a<C01<C4`0
00000080IVIV0P0000000`1oOgl0000006IVIP0606IVIP8000000`1<C4`3000000@0IVIV1P00000m
0?ooo`@0000000@0VIVI0000001oOgl000000P1VIVH00`000000C4a<0000000203<c<`030000000I
6AT06ATI00D06ATIH00000050?ooo`<00000<@3oool00`000000oooo0?ooo`030?ooodl000002@0F
5QH403Ti>@@0@T92101VIVH507QhN0@0IVIV101OGel405IFEP@0GemO1@1hN7P40=?CdcX0oooo1@3L
g=`408b<S0@0GemO100i>CT901HF5V0000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool0
0`000000oooo0?ooo`030?oooe4000001P0I6AT00`000000<c<c03<c<`0203<c<`050000001<C4`0
C4a<04a<C00000000P1VIVH00`000000Ogmo07moO`0207moO`8000001`1VIVH3000000H0IVIV00<0
000007moO`0000001000000m0?ooo`@0000000@0VIVI0000001oOgl000000`1VIVH2000000<0<c<c
00<0000001TI6@0I6AT0100I6AUP000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo
0?ooo`030?ooodl000002@0F5QH403Ti>@@0@T92101VIVH507QhN0@0IVIV101OGel405IFEP@0GemO
1@1hN7P40=?CdcX0oooo1@3Lg=`408b<S0@0GemO100i>CT901HF5V0000001@3oool00`000000oooo
0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oooe4000001P0I6AT01@000000<c<c03<c
<`0c<c<000000080C4a<0P00000306IVIP030000001oOgl0Ogmo00@0Ogmo1@00000906IVIP800000
00@0Ogmo000000000000/k>c0`00000l0?ooo`0:0000003Vi^H000000000002c/k<0000009VIV@00
0000Ogmo00000080IVIV00<0000004a<C00000000`0c<c<00`0000006ATI01TI6@0301TI6F000000
1`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooC`00000901HF5P@0>CTi
1012@T8406IVIPD0N7Qh101VIVH405mOG`@0EUIF101OGel507QhN0@0dm?C>P3oool50=cLg0@0S8b<
101OGel403Ti>@T05QHFH00000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003o
ool0oooo00<0ooooD@00000601TI6@070000000c<c<0<c<c03<c<`000000C4a<0000000406IVIP03
0000001oOgl0Ogmo00X0Ogmo0P00000406IVIP<000000`1oOgl2000000040;>c/`00000000000000
03`0oooo00@000000>KViP000000c<c<0P000000102IVIT0000007moO`00000306IVIP040000001<
C4`0000000000080<c<c00<0000001TI6@0I6AT00P0I6AUP000000L0oooo00<000000?ooo`3oool0
;`3oool2000000@0ooooA`00000400d=3@@000002@0F5QH403Ti>@@0GemO101hN7P=08b<S0P0N7Qh
1@2<S8`40=cLg3X0oooo1@3Lg=`40:BTY0@0N7Qh101FEUH403Ti>@D05QHF100=3@eL000000@0oooo
0P00000C0?ooo`008P3oool00`000000oooo0?ooo`030?oooe4000001P0I6AT010000000<c<c03<c
<`00000204a<C0050000001VIVH0IVIV06IVIP000000101oOgl900000080Ogmo1000000607moO`80
000000@0/k>c0000000000000000?03oool02P000000i^KV0000003<c<`000000;>c/`000000VIVI
0000001oOgl200000080IVIV00H0000004a<C01<C4`0000003<c<`00000401TI6F0000001`3oool0
0`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooA`00000400d=3@@000002@0F5QH4
03Ti>@@0GemO101hN7P=08b<S0P0N7Qh1@2<S8`40=cLg3X0oooo1@3Lg=`40:BTY0@0N7Qh101FEUH4
03Ti>@D05QHF100=3@eL000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?oo
o`3oool00`3ooomA000000H06ATI00@0000003<c<`0c<c<000000P1<C4`01@000000IVIV06IVIP1V
IVH0000000<0Ogmo00<0000009VIV@2IVIT01`2IVIT2000000T0Ogmo00@0000009VIV@000000/k>c
0`00000m0?ooo`090000003Vi^H000000<c<c0000000/k>c0000002IVIT000000080Ogmo00<00000
06IVIP0000000`1<C4`3000000@06ATIG`0000070?ooo`030000003oool0oooo02l0oooo00<00000
0?ooo`3oool00`3ooom7000000@03@d=1000000901HF5P@0>CTi101OGel407QhN0d0S8b<201hN7P5
08b<S0@0g=cL>P3oool50=cLg0@0Y:BT101hN7P405IFEP@0>CTi1@0F5QH400d=3E`000001@3oool0
0`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oooe8000001@0I6AT01000
0000<c<c03<c<`00000204a<C0050000001VIVH0IVIV06IVIP0000000P1oOgl00`000000VIVI09VI
V@0:09VIV@<000001@1oOgl00`000000VIVI000000020;>c/`<00000?@3oool00`000000i^KV0>KV
iP0200000080/k>c00<0000009VIV@0000000P1oOgl010000000IVIV00000000000304a<C0<00000
0`0I6AUN000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?ooodL00000
100=3@d4000000T05QHF100i>CT405mOG`@0N7Qh3@2<S8`807QhN0D0S8b<103Lg=`j0?ooo`D0g=cL
102TY:@407QhN0@0EUIF100i>CT501HF5P@03@d=G00000050?ooo`030000003oool0oooo0140oooo
000R0?ooo`030000003oool0oooo00<0ooooD`00000401TI6@040000000c<c<0<c<c00000080C4a<
00D0000006IVIP1VIVH0IVIV0000000207moO`030000002IVIT0000000T00000102IVIT200000080
Ogmo00@0000009VIV@2IVIT000000P2c/k<2000000030>KViP000000oooo03`0oooo00<000000>KV
iP3Vi^H00`0000000`2c/k<0000009VIV@020000000407moO`000000000006IVIP80000000D0C4a<
0000000c<c<0<c<c0000000301TI6Ed000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003o
ool0oooo00<0ooooC`00000500d=3@@05QHF100i>CT405mOG`@0N7Qh1@2][Jd80;Jf]P@0Y:BT102<
S8`50:BTY0@0dm?C>P3oool50?Cdm0@0g=cL102f][H408b<S0@0GemO1@0c<c<401HF5P@03@d=F000
00050?ooo`030000003oool0oooo0140oooo000R0?ooo`800000103ooomD000000<06ATI00@00000
03<c<`0c<c<000000P1<C4`02@000000IVIV06IVIP1VIVH0000007moO`000000VIVI0000000:0;>c
/`@000000P2IVIT2000000<0VIVI00<000000;>c/`2c/k<00P0000000`3Vi^H000000?ooo`0m0?oo
o`030000003Vi^H0i^KV00`0000000@0IVIV0000001<C4`000000P0c<c<0100000006ATI01TI6@0I
6AUL000000D0oooo0`00000a0?ooo`030000003oool0oooo00<0ooooC`00000500d=3@@05QHF100i
>CT405mOG`@0N7Qh1@2][Jd80;Jf]P@0Y:BT102<S8`50:BTY0@0dm?C>P3oool50?Cdm0@0g=cL102f
][H408b<S0@0GemO1@0c<c<401HF5P@03@d=F00000050?ooo`030000003oool0oooo0140oooo000R
0?ooo`030000003oool0oooo00<0ooooE000000301TI6@040000000c<c<0<c<c00000080C4a<00T0
000006IVIP1VIVH0IVIV0000001oOgl0000009VIV@000000102c/k<6000000<0/k>c00<0000009VI
V@2IVIT0102IVIT010000000/k>c0;>c/`2c/k<2000000030>KViP000000oooo03h0oooo0P000002
0>KViP<000000P2c/k<00`000000VIVI0000000207moO`050000001VIVH0000004a<C00000000P0c
<c<0100000006ATI01TI6@0I6AUK000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo
0?ooo`030?ooodl000001@0=3@d401HF5P@0>CTi101OGel407QhN0D0[Jf]202f][H40:BTY0@0S8b<
1@2TY:@40=?CdcX0oooo1@3dm?@40=cLg0@0][Jf102<S8`405mOG`D0<c<c100F5QH400d=3EP00000
1@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oooe@00000100I
6AT00`000000<c<c0000000204a<C0060000001VIVH0IVIV06IVIP000000Ogmo0P0000040;>c/`03
0000003<c<`0c<c<00@0c<c<0`0000000`2c/k<000000000000309VIV@030000002c/k<0/k>c0080
/k>c00D000000<c<c0000000i^KV000000100?ooo`8000000P3Vi^H3000000030;>c/`000000VIVI
0080000000P0Ogmo0000001VIVH0000004a<C0000000<c<c000000<06ATIF`0000070?ooo`030000
003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooom?000000D03@d=100F5QH403Ti>@@0GemO
101hN7P50:f][@P0][Jf102TY:@408b<S0D0Y:BT103Cdm<j0?ooo`D0m?Cd103Lg=`40;Jf]P@0S8b<
101OGel503<c<`@05QHF100=3@eH000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<0
00000?ooo`3oool00`3ooomD000000@06ATI00H0000003<c<`0c<c<0000004a<C000000206IVIP05
0000001oOgl0000009VIV@0000000P2c/k<2000000030<c<c0000000000000L0c<c<00H000000;>c
/`2c/k<0000009VIV@0000060;>c/`80000000<0i^KV0000003oool0@@3oool800000080VIVI00H0
000007moO`000000000004a<C000000203<c<`040000000I6AT06ATI01TI6EX000001`3oool00`00
0000oooo0?ooo`0_0?ooo`800000103ooom?000000D03@d=100F5QH403Ti>@@0GemO101hN7P50:f]
[@P0][Jf102TY:@408b<S0D0Y:BT103Cdm<j0?ooo`D0m?Cd103Lg=`40;Jf]P@0S8b<101OGel503<c
<`@05QHF100=3@eH000000@0oooo0P00000C0?ooo`008P3oool00`000000oooo0?ooo`030?oooe@0
00001@0I6AT00`000000<c<c0000000204a<C0040000001VIVH0000007moO`8000000P2c/k<00`00
0000c<c<00000002000000030>KViP000000000000800000103<c<`010000000/k>c0;>c/`000007
0;>c/`050000003<c<`000000>KViP000000A03oool70000000909VIV@000000000006IVIP000000
C4a<0000000c<c<0000000<06ATIFP0000070?ooo`030000003oool0oooo02l0oooo00<000000?oo
o`3oool00`3ooom?000000D03@d=100F5QH403<c<`@0EUIF102<S8`50;no_`@0k^k^103Lg=`40=?C
d`@0[Jf]1@2TY:@40;no_`@0m?Cd@`3oool40=cLg0@0Vi^K1@1FEUH402PX:0@03@d=F00000050?oo
o`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooE000000501TI6@03
0000000c<c<000000080C4a<00@0000006IVIP000000Ogmo0P0000020;>c/`8000000P3Vi^H30000
00<0i^KV0`0000020<c<c0030000002c/k<0/k>c00L0/k>c00D000000<c<c0000000i^KV00000016
0?ooo`<0000000<0c<c<0000000000000`0000000`1VIVH000000000000203<c<`030000000I6AT0
6ATI05X000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooC`000005
00d=3@@05QHF100c<c<405IFEP@0S8b<1@2o_kl40>k^kP@0g=cL103Cdm<40:f][@D0Y:BT102o_kl4
0?Cdm4<0oooo103Lg=`409^KV`D0EUIF100X:2P400d=3EP000001@3oool00`000000oooo0?ooo`0A
0?ooo`008P3oool00`000000oooo0?ooo`030?oooe@000001@0I6AT00`000000<c<c0000000204a<
C0040000001VIVH0000007moO`80000000H0/k>c0000003<c<`000000>KViP0000030?ooo`800000
103Vi^H010000000c<c<0<c<c00000090;>c/`80000000<0i^KV0000003oool0A`3oool200000005
0<c<c000000000000000001oOgl00`00000203<c<`030000000I6AT06ATI05X000001`3oool00`00
0000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooC`00000500d=3@@05QHF100c<c<405IF
EP@0S8b<1@2o_kl40>k^kP@0g=cL103Cdm<40:f][@D0Y:BT102o_kl40?Cdm4<0oooo103Lg=`409^K
V`D0EUIF100X:2P400d=3EP000001@3oool00`000000oooo0?ooo`0A0?ooo`00503oool2000000@0
oooo0P0000060?ooo`030000003oool0oooo00<0ooooE000000501TI6@030000000c<c<000000080
C4a<0P0000000`1oOgl00000000000020;>c/`80000000<0i^KV0000003oool01@3oool2000000<0
i^KV00@000000<c<c03<c<`00000202c/k<01@000000c<c<0000003Vi^H0000004P0oooo1`000000
0`1VIVH000000000000203<c<`030000000I6AT06ATI05T000001`3oool00`000000oooo0?ooo`0_
0?ooo`030000003oool0oooo00<0ooooC`00000500d=3@@05QHF100c<c<405IFEP@0S8b<1@2o_kl4
0>k^kP@0g=cL103Cdm<40:f][@D0Y:BT102o_kl40?Cdm4<0oooo103Lg=`409^KV`D0EUIF100X:2P4
00d=3EP000001@3oool00`000000oooo0?ooo`0A0?ooo`004`3oool010000000oooo0?ooo`000002
0?ooo`040000003oool0oooo000000D0oooo00<000000?ooo`3oool00`3ooomD000000D06ATI00D0
000003<c<`0c<c<0000004a<C0020000000907moO`00000000000;>c/`000000c<c<0000003Vi^H0
000000P0oooo0P0000020>KViP030000003<c<`0000000T0/k>c0P0000000`3Vi^H000000?ooo`18
0?ooo`030000003Vi^H000000080000000@0Ogmo00000000000000000P0c<c<0100000006ATI01TI
6@0I6AUH000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?ooodl00000
1@0=3@d401HF5P@0:2PX101FEUH409^KV`D0g=cL203oool40?Cdm0@0b/[:2@2TY:@40=?CddL0oooo
103Lg=`507QhN0@0>CTi100F5QH400d=3E@000001@3oool00`000000oooo0?ooo`0A0?ooo`005@3o
ool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool00`3oool3000000<0oooo
E000000501TI6@050000000c<c<0<c<c0000001<C4`00P000000101oOgl000000000002c/k<20000
00030>KViP000000oooo00X0oooo00H000000>KViP3Vi^H000000<c<c00000060;>c/`030000002c
/k<0/k>c00@00000B@3oool60000000306IVIP00000000000080<c<c00@0000001TI6@0I6AT06ATI
E`0000050?ooo`<000008`3oool2000000@0oooo0P0000060?ooo`030000003oool0oooo00<0oooo
C`00000500d=3@@05QHF100X:2P405IFEP@0Vi^K1@3Lg=`80?ooo`@0m?Cd103:b/X90:BTY0@0dm?C
A`3oool40=cLg0D0N7Qh100i>CT401HF5P@03@d=E00000050?ooo`030000003oool0oooo0140oooo
000F0?ooo`040000003oool0oooo00000080oooo00<000000?ooo`3oool00`3oool00`000000oooo
0?ooo`030?oooeD00000100I6AT00`000000<c<c03<c<`020000000306IVIP000000Ogmo00800000
00D0/k>c000000000000i^KV0000000<0?ooo`050000003Vi^H000000<c<c00000001@2c/k<01P00
0000VIVI0000002c/k<000000<c<c0800000BP3oool50000000306IVIP00000000000080<c<c00@0
000001TI6@0I6AT06ATIE`0000070?ooo`030000003oool0oooo0200oooo00@000000?ooo`3oool0
00000P3oool010000000oooo0?ooo`0000050?ooo`030000003oool0oooo00<0ooooC`00000500d=
3@@05QHF100X:2P405IFEP@0Vi^K1@3Lg=`80?ooo`@0m?Cd103:b/X90:BTY0@0dm?CA`3oool40=cL
g0D0N7Qh100i>CT401HF5P@03@d=E00000050?ooo`030000003oool0oooo0140oooo000C0?ooo`04
0000003oool0oooo00000080oooo00@000000?ooo`3oool000001@3oool00`000000oooo0?ooo`03
0?oooeH000000`0I6AT00`000000<c<c03<c<`020000000406IVIP000000000009VIV@<0000000<0
i^KV0000003oool0303oool00`000000i^KV0>KViP02000000@0/k>c00P0000009VIV@2IVIT0VIVI
0000002c/k<000000<c<c0800000B@3oool50000000306IVIP00000000000080<c<c00<0000001TI
6@0I6AT0F00000070?ooo`030000003oool0oooo0280oooo00D000000?ooo`3oool0oooo00000002
0?ooo`030000003oool0oooo00<0oooo0`0000030?ooodl000001@0=3@d401HF5P@0:2PX101FEUH4
09^KV`D0g=cL203oool40?Cdm0@0b/[:2@2TY:@40=?CddL0oooo103Lg=`507QhN0@0>CTi100F5QH4
00d=3E@000000`3oool3000001<0oooo000D0?ooo`800000103oool2000000H0oooo00<000000?oo
o`3oool00`3ooomF000000<06ATI00<0000003<c<`0c<c<00P000000101VIVH000000000002IVIT3
000000030>KViP000000oooo00d0oooo00@000000>KViP00000000000`2c/k<00`000000VIVI09VI
V@0309VIV@030000002c/k<0000000800000BP3oool50000000506IVIP000000000003<c<`000000
0P0I6AUH000000L0oooo00<000000?ooo`3oool08`3oool010000000oooo0?ooo`0000020?ooo`03
0000003oool0oooo00<0oooo00<000000?ooo`3oool00`3ooom;000000@03@d=1@00000400d=3@@0
:2PX101OGel40:BTY0D0m?Cd303oool40=cLg0D0Y:BT102<S8`40:f][@@0m?CdA`3oool509^KV`@0
@T92100F5QH800d=3E0000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo
0?ooo`030?oooeL000000P0I6AT00`000000<c<c03<c<`020000000406IVIP000000000009VIV@@0
0000403oool300000080/k>c00<0000009VIV@2IVIT01@2IVIT00`000000/k>c00000002000004T0
oooo1@0000001@1VIVH000000000000c<c<0000000806ATIF00000070?ooo`030000003oool0oooo
0200oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000050?ooo`030000003o
ool0oooo00<0ooooB`00000400d=3@D00000100=3@d402PX:0@0GemO102TY:@50?Cdm0`0oooo103L
g=`50:BTY0@0S8b<102][Jd40?Cdm4L0oooo1@2KVi/40492@P@05QHF200=3@e@000000D0oooo00<0
00000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooomG000000806ATI00<00000
03<c<`0c<c<00P000000101VIVH000000000002IVIT400000100oooo0`0000020;>c/`030000002I
VIT0VIVI00D0VIVI00H000000;>c/`00000000000>KViP0000180?ooo`D0000000H0IVIV0000001<
C4`0000003<c<`00000201TI6EL000001`3oool00`000000oooo0?ooo`0Q0?ooo`800000103oool2
000000H0oooo00<000000?ooo`3oool00`3ooom;000000@03@d=1@00000400d=3@@0:2PX101OGel4
0:BTY0D0m?Cd303oool40=cLg0D0Y:BT102<S8`40:f][@@0m?CdA`3oool509^KV`@0@T92100F5QH8
00d=3E0000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oo
oeL000000P0I6AT00`000000<c<c03<c<`020000000406IVIP000000000009VIV@@000004@3oool3
000000030;>c/`000000VIVI00L0VIVI0`0000000`3Vi^H000000?ooo`170?ooo`L0000000@0C4a<
0000000c<c<000000`0I6AUF000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?oo
o`030?oood/00000100=3@d5000000@03@d=100X:2P405mOG`@0Y:BT1@3dm?@<0?ooo`@0g=cL1@2T
Y:@408b<S0@0[Jf]103dm?A70?ooo`D0Vi^K1012@T8401HF5PP03@d=D00000050?ooo`030000003o
ool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooE`00000201TI6@030000000c<c<0
<c<c0080000000@0IVIV000000000000VIVI1000000A0?ooo`<000000P2c/k<00`000000VIVI09VI
V@0509VIV@060000002c/k<000000000003Vi^H00000B03oool50000000606IVIP000000C4a<0000
000c<c<00000100I6AUD000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`03
0?oooe@00000100=3@d402PX:0@0EUIF102TY:@A0?ooo`@0m?Cd1@2f][H808b<S0@0g=cLA`3oool5
0;no_`@0GemO100c<c<401HF5U@000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool20000
00@0ooooE`00000201TI6@050000000c<c<0<c<c0000001<C4`00`0000000`2IVIT0000000000002
00000140oooo00H000000>KViP00000000000;>c/`00000809VIV@D00000B03oool80000000304a<
C0000000<c<c008000000P0I6AUD000000D0oooo0`00000a0?ooo`030000003oool0oooo00<0oooo
E000000400d=3@@0:2PX101FEUH40:BTY140oooo103dm?@50;Jf]PP0S8b<103Lg=a70?ooo`D0_kno
101OGel403<c<`@05QHFE00000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003o
ool0oooo00<0ooooE`00000201TI6@050000000c<c<0<c<c0000001<C4`00`0000000`2IVIT00000
0000000200000140oooo00H000000>KViP00000000000;>c/`00000809VIV@030000002c/k<00000
00800000B03oool600000080IVIV0P00000203<c<`040000000I6AT06ATI01TI6E<000001`3oool0
0`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooE000000400d=3@@0:2PX101FEUH4
0:BTY140oooo103dm?@50;Jf]PP0S8b<103Lg=a70?ooo`D0_kno101OGel403<c<`@05QHFE0000005
0?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooF000000201TI
6@040000000c<c<0000004a<C0<0000000<0VIVI0000000000000P00000A0?ooo`060000003Vi^H0
00000000002c/k<00000202IVIT010000000/k>c0000003<c<`2000004P0oooo1P000000101VIVH0
000004a<C000000203<c<`040000000I6AT06ATI01TI6E8000001`3oool00`000000oooo0?ooo`0_
0?ooo`030000003oool0oooo00<0ooooE000000400d=3@@0:2PX101FEUH40:BTY140oooo103dm?@5
0;Jf]PP0S8b<103Lg=a70?ooo`D0_kno101OGel403<c<`@05QHFE00000050?ooo`030000003oool0
oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooF000000201TI6@050000000c<c<0<c<c
0000001<C4`01`00000B0?ooo`060000003Vi^H000000000002c/k<00000202IVIT00`000000/k>c
00000002000004P0oooo1P00000206IVIP8000000P0c<c<00`0000006ATI01TI6@0201TI6E400000
1`3oool00`000000oooo0?ooo`0_0?ooo`800000103ooomD000000@03@d=100F5QH40492@P@0Vi^K
1@3dm?@@0?ooo`D0_kno202<S8`40;Jf]TL0oooo1@3dm?@408b<S0@0EUIF100X:2P401HF5PD03@d=
B`0000040?ooo`8000004`3oool00280oooo00<000000?ooo`3oool00`3ooomI000000806ATI00<0
000003<c<`0000002000000B0?ooo`060000003Vi^H000000000002c/k<00000202IVIT010000000
/k>c0000003<c<`2000004P0oooo1P000000101VIVH0000004a<C000000203<c<`030000000I6AT0
6ATI00806ATID00000070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooomD
000000@03@d=100F5QH40492@P@0Vi^K1@3dm?@@0?ooo`D0_kno202<S8`40;Jf]TL0oooo1@3dm?@4
08b<S0@0EUIF100X:2P401HF5PD03@d=B`0000050?ooo`030000003oool0oooo0140oooo000R0?oo
o`030000003oool0oooo00<0ooooF@00000201TI6@040000000c<c<0000004a<C0L000004P3oool0
1P000000i^KV000000000000/k>c000000P0VIVI00@000000;>c/`000000c<c<0P0000180?ooo`D0
000000<0Ogmo0000001VIVH00P00000203<c<`<000000`0I6AU?000000L0oooo00<000000?ooo`3o
ool0;`3oool00`000000oooo0?ooo`030?oooe@00000100=3@d401HF5P@0@T92102KVi/50?Cdm100
oooo1@2o_kl808b<S0@0][JfA`3oool50?Cdm0@0S8b<101FEUH402PX:0@05QHF1@0=3@e;000000D0
oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooomI000000806ATI
00@0000003<c<`000000C4a<1P0000000`3Vi^H000000?ooo`0@0?ooo`060000003Vi^H000000000
002c/k<00000202IVIT010000000/k>c0000003<c<`2000004T0oooo1@0000000`1oOgl0000006IV
IP02000000@0<c<c0`0000000`0I6AT000000000001<000000L0oooo00<000000?ooo`3oool0;`3o
ool00`000000oooo0?ooo`030?oooe@00000100=3@d401HF5P@0@T92102KVi/50?Cdm100oooo1@2o
_kl808b<S0@0][JfA`3oool50?Cdm0@0S8b<101FEUH402PX:0@05QHF1@0=3@e;000000D0oooo00<0
00000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooomI000000806ATI00@00000
03<c<`000000C4a<0P0000000`1oOgl000000000000300000180oooo00H000000>KViP0000000000
0;>c/`00000709VIV@040000002c/k<000000<c<c0800000B@3oool2000000050<c<c00000000000
0000001oOgl00P0000000`1<C4`0000003<c<`0403<c<`030000000I6AT0000004d000001`3oool0
0`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooE000000400d=3@@05QHF100i>CT4
07QhN0D0dm?C403oool50=cLg0@0Y:BT102<S8`40:f][@@0m?CdB03oool40=cLg0@0S8b<1012@T84
03<c<`D03@d=B`0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo
00<0ooooF@00000301TI6@040000000c<c<0000004a<C0H0000000<0i^KV0000003oool0403oool0
1P000000i^KV000000000000/k>c000000P0VIVI00@000000;>c/`000000c<c<0P0000190?ooo`80
000000D0c<c<000000000000000007moO`020000000304a<C0000000<c<c00@0<c<c00<0000001TI
6@000000C00000070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooomD0000
00@03@d=100F5QH403Ti>@@0N7Qh1@3Cdm<@0?ooo`D0g=cL102TY:@408b<S0@0[Jf]103dm?A80?oo
o`@0g=cL102<S8`40492@P@0<c<c1@0=3@e;000000D0oooo00<000000?ooo`3oool04@3oool00280
oooo0P0000040?oooeT000000`0I6AT010000000<c<c0000001<C4`800000180oooo0P000000103<
c<`000000;>c/`00000709VIV@040000002c/k<000000<c<c0800000BP3oool90000000304a<C000
0000<c<c00<0<c<c00<0000001TI6@000000C00000050?ooo`<00000<@3oool00`000000oooo0?oo
o`030?oooe@00000100=3@d401HF5P@0>CTi101hN7P50=?Cda00oooo1@3Lg=`40:BTY0@0S8b<102]
[Jd40?Cdm4P0oooo103Lg=`408b<S0@0@T92100c<c<500d=3D/000001@3oool00`000000oooo0?oo
o`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oooeT000000`0I6AT01P000000<c<c0000001<
C4`0000006IVIPD0000000<0i^KV0000003oool0403oool01`000000i^KV0000003<c<`000000;>c
/`0000001@2IVIT01@000000/k>c0;>c/`000000c<c<00800000B`3oool00`000000i^KV00000003
0000000507moO`000000000004a<C00000000`0c<c<00`0000006ATI0000001<000000L0oooo00<0
00000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?oooe@00000100=3@d401HF5P@0>CTi101h
N7P50=?Cda00oooo1@3Lg=`40:BTY0@0S8b<102][Jd40?Cdm4P0oooo103Lg=`408b<S0@0@T92100c
<c<500d=3D/000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`03
0?oooeT000000`0I6AT00`000000<c<c03<c<`020000000506IVIP00000000000000002c/k<00`00
000B0?ooo`80000000@0c<c<0000002c/k<0/k>c0P0000000`2IVIT00000000000020;>c/`050000
003<c<`000000>KViP000000C03oool3000000050;>c/`00000000000000001VIVH00P00000303<c
<`030000000I6AT06ATI04`000001`3oool00`000000oooo0?ooo`0_0?ooo`800000103ooomD0000
00@03@d=100F5QH403Ti>@@0N7Qh1@3Cdm<@0?ooo`D0g=cL102TY:@408b<S0@0[Jf]103dm?A80?oo
o`@0g=cL102<S8`40492@P@0<c<c1@0=3@e;000000@0oooo0P00000C0?ooo`008P3oool00`000000
oooo0?ooo`030?oooeT00000100I6AT01P000000<c<c0000001<C4`0000006IVIPD0000000<0i^KV
0000003oool0403oool01@000000i^KV0000003<c<`0000000<0/k>c00<000000;>c/`2c/k<00P2c
/k<01@000000c<c<0000003Vi^H0000004d0oooo100000001P2IVIT00000000000000000C4a<0000
0080<c<c00<0000001TI6@0I6AT0C00000070?ooo`030000003oool0oooo02l0oooo00<000000?oo
o`3oool00`3ooomH000000@05QHF100X:2P405mOG`D0][Jf103dm?@<0?ooo`D0m?Cd103:b/X40:f]
[@@0][Jf103dm?A<0?ooo`@0dm?C101hN7P403Ti>@D05QHF100=3@e7000000D0oooo00<000000?oo
o`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooomI000000@06ATI0P000000100c<c<0
00000000001VIVH4000000040<c<c0000000i^KV00000140oooo00@000000>KViP000000c<c<0P00
00060;>c/`050000003<c<`000000>KViP000000CP3oool40000000809VIV@00000000000000001<
C4`0000003<c<`00000301TI6D/000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0
oooo00<0ooooF000000401HF5P@0:2PX101OGel50;Jf]P@0m?Cd303oool50?Cdm0@0b/[:102][Jd4
0;Jf]P@0m?CdC03oool40=?Cd`@0N7Qh100i>CT501HF5P@03@d=A`0000050?ooo`030000003oool0
oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooF@00000501TI6@040000000c<c<00000
04a<C0D0000000@0c<c<0000003Vi^H000004P3oool00`000000i^KV000000020<c<c0040000002c
/k<0/k>c0;>c/`@0000000<0i^KV0000003oool0CP3oool2000000030<c<c0000000000000800000
00<0IVIV0000000000000P0c<c<00`0000006ATI01TI6@1;000000L0oooo00<000000?ooo`3oool0
;`3oool00`000000oooo0?ooo`030?oooeP00000100F5QH402PX:0@0GemO1@2f][H40?Cdm0`0oooo
1@3dm?@40<[:bP@0[Jf]102f][H40?Cdm4`0oooo103Cdm<407QhN0@0>CTi1@0F5QH400d=3DL00000
1@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oooeT000001@0I
6AT010000000<c<c0000001<C4`20000000307moO`00000000000080000000<0i^KV0000003oool0
4@3oool010000000i^KV0>KViP0000020<c<c0<000000`3<c<`00`000000i^KV0000001@0?ooo`@0
000000P0VIVI000000000000000004a<C0000000<c<c000000<06ATIBP0000070?ooo`030000003o
ool0oooo02l0oooo00<000000?ooo`3oool00`3ooomH000000@05QHF100X:2P405mOG`D0][Jf103d
m?@<0?ooo`D0m?Cd103:b/X40:f][@@0][Jf103dm?A<0?ooo`@0dm?C101hN7P403Ti>@D05QHF100=
3@e7000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooomI
000000H06ATI0P0000000`1<C4`0000006IVIP04000000030<c<c0000000000001<0oooo00@00000
0>KViP3Vi^H000001P3<c<`00`000000i^KV0000001A0?ooo`80000000<0c<c<0000000000000P00
00000`1VIVH000000000000203<c<`030000000I6AT06ATI04X000001`3oool00`000000oooo0?oo
o`0_0?ooo`030000003oool0oooo00<0ooooC`00000500d=3@@00000200F5QH405IFEPD0S8b<103^
k^hA0?ooo`@0k^k^103:b/X40=?Cde@0oooo102TY:@405IFEPD0:2PX100=3@e7000000D0oooo00<0
00000?ooo`3oool04@3oool00280oooo0P0000040?oooeT000001P0I6AT20000000504a<C0000000
IVIV0000001oOgl01@00000D0?ooo`040000003Vi^H0i^KV000000D0c<c<00<000000>KViP000000
DP3oool2000000030<c<c000000000000080000000<0IVIV0000000000000P0c<c<00`0000006ATI
01TI6@19000000D0oooo0`00000a0?ooo`030000003oool0oooo00<0ooooC`00000500d=3@@00000
200F5QH405IFEPD0S8b<103^k^hA0?ooo`@0k^k^103:b/X40=?Cde@0oooo102TY:@405IFEPD0:2PX
100=3@e7000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3o
oomI000000H06ATI0P0000001@1<C4`0000006IVIP000000Ogmo00D000005@3oool00`000000i^KV
000000030<c<c0<0000000<0i^KV0000003oool0D@3oool2000000030<c<c0000000000000800000
00<0IVIV0000000000000P0c<c<00`0000006ATI01TI6@19000000L0oooo00<000000?ooo`3oool0
;`3oool00`000000oooo0?ooo`030?ooodl000001@0=3@d4000000P05QHF101FEUH508b<S0@0k^k^
4@3oool40>k^kP@0b/[:103Cdm=D0?ooo`@0Y:BT101FEUH502PX:0@03@d=A`0000050?ooo`030000
003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooFP00000501TI6@80000000D0
C4a<0000001VIVH0000007moO`05000001H0oooo00<000000>KViP0000000P0000040>KViP030000
003oool0oooo0500oooo0P0000000`3<c<`00000000000020000000306IVIP00000000000080<c<c
00<0000001TI6@0I6AT0B@0000070?ooo`030000003oool0oooo02l0oooo0P0000040?ooodl00000
1@0=3@d4000000P05QHF101FEUH508b<S0@0k^k^4@3oool40>k^kP@0b/[:103Cdm=D0?ooo`@0Y:BT
101FEUH502PX:0@03@d=A`0000040?ooo`8000004`3oool00280oooo00<000000?ooo`3oool00`3o
oomJ000000@06ATI00H0000003<c<`000000C4a<0000001VIVH4000000030<c<c0000000000001L0
oooo00<000000>KViP3Vi^H0103Vi^H00`000000oooo0?ooo`1B0?ooo`D0000000L0Ogmo00000000
0000C4a<0000000c<c<0000000806ATIB@0000070?ooo`030000003oool0oooo02l0oooo00<00000
0?ooo`3oool00`3ooomH000000@03@d=100X:2P405IFEPD0Vi^K103dm?@E0?ooo`@0k^k^103Lg=aD
0?ooo`@0[Jf]101OGel502PX:0@03@d=A`0000050?ooo`030000003oool0oooo0140oooo000R0?oo
o`030000003oool0oooo00<0ooooF`00000301TI6@060000000c<c<0000004a<C0000000IVIV1000
00000`3<c<`000000000000H0?ooo`030000003Vi^H0i^KV00<0i^KV00<000000?ooo`3oool0DP3o
ool50000000707moO`000000000004a<C0000000<c<c0000000201TI6DT000001`3oool00`000000
oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooF000000400d=3@@0:2PX101FEUH509^KV`@0
m?Cd5@3oool40>k^kP@0g=cLE03oool40:f][@@0GemO1@0X:2P400d=3DL000001@3oool00`000000
oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oooe/000000P0I6AT20000000503<c
<`000000C4a<0000001VIVH0100000000`3<c<`000000000000H0?ooo`030000003Vi^H0i^KV00<0
i^KV00<000000?ooo`3oool0DP3oool50000000707moO`000000000004a<C0000000<c<c00000002
01TI6DT000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooF0000004
00d=3@@0:2PX101FEUH509^KV`@0m?Cd5@3oool40>k^kP@0g=cLE03oool40:f][@@0GemO1@0X:2P4
00d=3DL000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oo
oe/000000P0I6AT01`000000<c<c03<c<`000000C4a<0000001VIVH0100000000`3<c<`000000000
000I0?ooo`030000003Vi^H0i^KV0080i^KV00<000000?ooo`3oool0DP3oool50000000407moO`00
0000000004a<C0800000100I6AU8000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo
0?ooo`030?oooeP00000100=3@d402PX:0@0EUIF1@2KVi/40?Cdm1D0oooo103^k^h40=cLg5@0oooo
102][Jd405mOG`D0:2PX100=3@e7000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<0
00000?ooo`3oool00`3ooomJ000000806ATI00@0000003<c<`0c<c<000000P1<C4`30000000309VI
V@0000000000008000006`3oool2000000030>KViP000000oooo05<0oooo0P0000000`3<c<`00000
000000020000000506IVIP000000000003<c<`000000100I6AU8000000L0oooo00<000000?ooo`3o
ool0;`3oool00`000000oooo0?ooo`030?ooodl000001@0=3@d801HF5P@0<c<c101OGel50:BTY1d0
oooo103^k^iD0?ooo`@0Y:BT101FEUH901HF5TL000001@3oool00`000000oooo0?ooo`0A0?ooo`00
8P3oool00`000000oooo0?ooo`030?oooeX000000P0I6AT01`000000<c<c03<c<`000000C4a<0000
001VIVH00P0000000`2IVIT0000000000002000001d0oooo0P00001D0?ooo`80000000<0c<c<0000
000000000P000000101VIVH0000000000000000601TI6DL000001`3oool00`000000oooo0?ooo`0_
0?ooo`030000003oool0oooo00<0ooooC`00000500d=3@P05QHF100c<c<405mOG`D0Y:BT7@3oool4
0>k^kU@0oooo102TY:@405IFEPT05QHFA`0000050?ooo`030000003oool0oooo0140oooo000R0?oo
o`800000103ooomD000000P06ATI00L0000003<c<`0c<c<0000004a<C0000000IVIV0080000000<0
VIVI0000000000000P00000N0?ooo`030000003oool0oooo0580oooo0P0000000`3<c<`000000000
00020000000406IVIP0000000000000000H06ATIA`0000050?ooo`<00000<@3oool00`000000oooo
0?ooo`030?ooodl000001@0=3@d801HF5P@0<c<c101OGel50:BTY1d0oooo103^k^iD0?ooo`@0Y:BT
101FEUH901HF5TL000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?oo
o`030?oooe800000200I6AT200000080<c<c00D0000004a<C01<C4`0000006IVIP03000000040;>c
/`000000000000000780oooo0P0000000`3<c<`00000000000020000000306IVIP000000C4a<0080
00001@0I6AU8000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?ooodl0
00001@0=3@d801HF5P@0<c<c101OGel50:BTY1d0oooo103^k^iD0?ooo`@0Y:BT101FEUH901HF5TL0
00001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oooe800000
1`0I6AT00`000000<c<c03<c<`0203<c<`040000001<C4`0000006IVIP80000000<0VIVI00000000
00000P00001c0?ooo`@0000000D0VIVI000000000000000004a<C002000000H06ATIB00000070?oo
o`030000003oool0oooo02l0oooo0P0000040?oood/00000100=3@d901HF5P@0>CTi1012@T8407Qh
N0D0_kno7@3oool40?Cdm500oooo103Cdm<407QhN0@0>CTi1@0F5QH400d=3DL00000103oool20000
01<0oooo000R0?ooo`030000003oool0oooo00<0ooooD@00000701TI6@030000000c<c<0<c<c0080
<c<c00D0000004a<C01<C4`0000006IVIP03000000040;>c/`000000000000000780oooo0P000000
0`3<c<`00000000000020000000306IVIP000000C4a<00800000100I6AU:000000L0oooo00<00000
0?ooo`3oool0;`3oool00`000000oooo0?ooo`030?oood/00000100=3@d901HF5P@0>CTi1012@T84
07QhN0D0_kno7@3oool40?Cdm500oooo103Cdm<407QhN0@0>CTi1@0F5QH400d=3DL000001@3oool0
0`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooodl00000200I6AT00`00
0000<c<c03<c<`0203<c<`8000000P1<C4`5000000040;>c/`000000000000000780oooo10000000
202IVIT00000000000000000C4a<0000000c<c<000000`0I6AU;000000L0oooo00<000000?ooo`3o
ool0;`3oool00`000000oooo0?ooo`030?oood/00000100=3@d901HF5P@0>CTi1012@T8407QhN0D0
_kno7@3oool40?Cdm500oooo103Cdm<407QhN0@0>CTi1@0F5QH400d=3DL000001@3oool00`000000
oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooodh00000200I6AT00`000000<c<c
03<c<`03000000<0C4a<0P00000207moO`040000002c/k<000000<c<c0800000L@3oool400000006
09VIV@00000000000000001<C4`000000P0c<c<00`0000006ATI01TI6@1<000000L0oooo00<00000
0?ooo`3oool0;`3oool00`000000oooo0?ooo`030?oood/00000100=3@d901HF5P@0>CTi1012@T84
07QhN0D0_kno7@3oool40?Cdm500oooo103Cdm<407QhN0@0>CTi1@0F5QH400d=3DL000001@3oool0
0`000000oooo0?ooo`0A0?ooo`005@3oool300000080oooo0P0000060?ooo`030000003oool0oooo
00<0ooooCP00000801TI6@030000000c<c<0000000D0C4a<00@0000006IVIP000000Ogmo0P000000
102c/k<0000000000000001a0?ooo`<0000000D0/k>c000000000000000006IVIP0200000080<c<c
00@0000001TI6@0I6AT06ATIC00000070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3o
ool00`3ooom3000000P03@d=100F5QH502PX:0@0>CTi101OGel406IVIP@0Vi^K1@3Lg=`M0?ooo`@0
m?CdC03oool40=cLg0@0S8b<1012@T8402PX:0D03@d=B`0000050?ooo`030000003oool0oooo0140
oooo000F0?ooo`040000003oool0oooo00000080oooo00<000000?ooo`3oool00`3oool00`000000
oooo0?ooo`030?ooodd000001`0I6AT20000000303<c<`000000C4a<00<0C4a<0P000000201VIVH0
000007moO`1oOgl000000;>c/`000000c<c<0P00001`0?ooo`030000003Vi^H0000000H0000000D0
C4a<0000000c<c<0<c<c0000000201TI6Dd000001`3oool00`000000oooo0?ooo`0_0?ooo`030000
003oool0oooo00<0oooo@`00000800d=3@@05QHF1@0X:2P403Ti>@@0GemO101VIVH409^KV`D0g=cL
7@3oool40?Cdm4`0oooo103Lg=`408b<S0@0@T92100X:2P500d=3D/000001@3oool00`000000oooo
0?ooo`0A0?ooo`004`3oool5000000050?ooo`000000oooo0?ooo`0000001@3oool3000000<0oooo
C000000401TI6@@000000P0c<c<00`000000C4a<00000003000000<0IVIV100000001@2c/k<00000
0000003Vi^H0000006l0oooo00<000000>KViP0000001@00000204a<C0030000000c<c<0<c<c0080
00000P0I6AU=000000D0oooo0`00000T0?ooo`<000000P3oool2000000H0oooo00<000000?ooo`3o
ool00`3ooom3000000P03@d=100F5QH502PX:0@0>CTi101OGel406IVIP@0Vi^K1@3Lg=`M0?ooo`@0
m?CdC03oool40=cLg0@0S8b<1012@T8402PX:0D03@d=B`0000050?ooo`030000003oool0oooo0140
oooo000C0?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool000001@3oool00`00
0000oooo0?ooo`030?oood/000000`0I6AT20000000303<c<`000000000000<0000000<0C4a<0000
001VIVH00`1VIVH400000080VIVI0`0000020>KViP030000003oool0oooo06`0oooo00<000000>KV
iP00000010000000101VIVH0000004a<C000000203<c<`030000000I6AT06ATI00806ATIC@000007
0?ooo`030000003oool0oooo02<0oooo00@000000?ooo`3oool000000P3oool00`000000oooo0?oo
o`030?ooo`030000003oool0oooo00<0oooo@`00000800d=3@@05QHF1@0X:2P403Ti>@@0GemO101V
IVH409^KV`D0g=cL7@3oool40?Cdm4`0oooo103Lg=`408b<S0@0@T92100X:2P500d=3D/000001@3o
ool00`000000oooo0?ooo`0A0?ooo`00503oool00`000000oooo000000020?ooo`040000003oool0
oooo000000D0oooo00<000000?ooo`3oool00`3ooom9000000<06ATI0P00000203<c<`030000001<
C4`0C4a<00<0C4a<00<0000006IVIP1VIVH00`00000207moO`060000002IVIT000000000002c/k<0
00000P3Vi^H00`000000oooo0?ooo`1/0?ooo`030000003Vi^H0000000<0000000D0Ogmo00000000
0000C4a<0000000203<c<`030000000I6AT06ATI00806ATICP0000070?ooo`030000003oool0oooo
0200oooo1@0000001@3oool000000?ooo`3oool0000000D0oooo0`0000030?oood<00000200=3@d4
01HF5PD0:2PX100i>CT405mOG`@0IVIV102KVi/50=cLg1d0oooo103dm?A<0?ooo`@0g=cL102<S8`4
0492@P@0:2PX1@0=3@e;000000<0oooo0`00000C0?ooo`005@3oool2000000<0oooo0P0000060?oo
o`030000003oool0oooo00<0ooooB000000301TI6@030000000c<c<0<c<c008000001P1<C4`00`00
0000IVIV0000000307moO`@000000P2c/k<200000080i^KV00<000000?ooo`3oool0K03oool30000
00050;>c/`00000000000000001VIVH00P00000303<c<`030000000I6AT06ATI00806ATICP000007
0?ooo`030000003oool0oooo0200oooo00@000000?ooo`3oool000000P3oool010000000oooo0?oo
o`0000050?ooo`030000003oool0oooo00<0ooooA`00000401HF5P@0<c<c1@1FEUH405mOG`@0S8b<
102TY:@40=?Cd`D0m?Cd7@3oool40?Cdm4L0oooo1@3^k^h409^KV`@0GemO100X:2P401HF5PD03@d=
B`0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooB000
000301TI6@030000000c<c<0000000D0C4a<0`0000000`1VIVH0000007moO`030000000409VIV@00
000000000;>c/`<000000P3Vi^H00`000000oooo0?ooo`1/0?ooo`<0000000L0/k>c000000000000
Ogmo0000001VIVH000000080<c<c0P00000501TI6Dh000001`3oool00`000000oooo0?ooo`0Q0?oo
o`030000003oool000000080oooo00@000000?ooo`3oool000001@3oool00`000000oooo0?ooo`03
0?ooodL00000100F5QH403<c<`D0EUIF101OGel408b<S0@0Y:BT103Cdm<50?Cdm1d0oooo103dm?A7
0?ooo`D0k^k^102KVi/405mOG`@0:2PX100F5QH500d=3D/000001@3oool00`000000oooo0?ooo`0A
0?ooo`008P3oool00`000000oooo0?ooo`030?ooodP000000`0I6AT00`000000<c<c0000000404a<
C0070000001VIVH0IVIV06IVIP000000Ogmo0000000309VIV@040000002c/k<0/k>c00000080c<c<
00@000000>KViP3Vi^H00000K@3oool3000000060;>c/`000000000007moO`000000IVIV0P000002
03<c<`030000000I6AT06ATI00<06ATIC`0000070?ooo`030000003oool0oooo0280oooo0P000003
0?ooo`8000001P3oool00`000000oooo0?ooo`030?ooodL00000100F5QH403<c<`D0EUIF101OGel4
08b<S0@0Y:BT103Cdm<50?Cdm1d0oooo103dm?A70?ooo`D0k^k^102KVi/405mOG`@0:2PX100F5QH5
00d=3D/000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oo
odP000000`0I6AT00`000000<c<c0000000304a<C0070000001VIVH0IVIV06IVIP000000Ogmo0000
000209VIV@8000000P2c/k<010000000c<c<0<c<c00000020>KViP030000003oool0oooo06/0oooo
00<000000>KViP0000000`0000000`1oOgl0000006IVIP0200000080<c<c00<0000001TI6@0I6AT0
0`0I6AU@000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?ooodL00000
100F5QH403<c<`D0EUIF101OGel408b<S0@0Y:BT103Cdm<50?Cdm1d0oooo103dm?A70?ooo`D0k^k^
102KVi/405mOG`@0:2PX100F5QH500d=3D/000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3o
ool00`000000oooo0?ooo`030?ooodP000000`0I6AT00`000000<c<c0000000304a<C0040000001V
IVH0IVIV00000080Ogmo00<0000009VIV@0000000`2c/k<01@000000c<c<0<c<c03<c<`000000080
i^KV00<000000?ooo`3oool0E03oool500000180oooo0`000000202c/k<0000007moO`000000IVIV
0000001<C4`000000P0c<c<00`0000006ATI01TI6@0201TI6E4000001`3oool00`000000oooo0?oo
o`0_0?ooo`030000003oool0oooo00<0oooo?`00000800d=3@@05QHF100i>CT505mOG`@0S8b<102]
[Jd40<[:bP@0g=cL8P3oool40?Cdm2X0oooo103dm?@90=cLg0@0m?Cd203oool40>k^kPD0[Jf]101O
Gel403Ti>@@05QHF100=3@e@000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<00000
0?ooo`3oool00`3ooom8000000<06ATI00<0000003<c<`0000000P1<C4`01@000000IVIV06IVIP00
0000Ogmo0080000000<0VIVI0000002c/k<00P2c/k<01@000000c<c<0<c<c03<c<`000000080i^KV
00<000000?ooo`3oool0D`3oool2000000D0i^KV0P00000>0?ooo`80000000<0i^KV000000000000
0`00000206IVIP8000000P0c<c<00`0000006ATI01TI6@0201TI6E8000001`3oool00`000000oooo
0?ooo`0_0?ooo`030000003oool0oooo00<0oooo?`00000800d=3@@05QHF100i>CT505mOG`@0S8b<
102][Jd40<[:bP@0g=cL8P3oool40?Cdm2X0oooo103dm?@90=cLg0@0m?Cd203oool40>k^kPD0[Jf]
101OGel403Ti>@@05QHF100=3@e@000000D0oooo00<000000?ooo`3oool04@3oool00280oooo0P00
00040?ooodP000000`0I6AT00`000000<c<c0000000204a<C0030000001VIVH000000080Ogmo00@0
000009VIV@2IVIT000000P2c/k<00`000000c<c<0<c<c0020<c<c0040000003Vi^H0i^KV000005<0
oooo0P0000020>KViPD000000P3Vi^H3000000X0oooo0P0000000`3Vi^H000000000000200000006
07moO`00000000000000001<C4`000000P0c<c<0100000006ATI01TI6@0I6AUC000000D0oooo0`00
000a0?ooo`030000003oool0oooo00<0oooo?`00000800d=3@@05QHF100i>CT505mOG`@0S8b<102]
[Jd40<[:bP@0g=cL8P3oool40?Cdm2X0oooo103dm?@90=cLg0@0m?Cd203oool40>k^kPD0[Jf]101O
Gel403Ti>@@05QHF100=3@e@000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<00000
0?ooo`3oool00`3ooom7000000<06ATI00@0000003<c<`0c<c<000000P1<C4`01@000000IVIV0000
001oOgl000000080VIVI00@000000;>c/`2c/k<000001@3<c<`010000000i^KV0>KViP00001B0?oo
o`050000003Vi^H0i^KV0>KViP0000001@3<c<`2000000<0i^KV100000040?ooo`80000000<0i^KV
0000000000000`0000000`1oOgl000000000000204a<C0040000000c<c<0<c<c000000<06ATIE000
00070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooolo000000P03@d=100F
5QH403Ti>@D0GemO102<S8`40:f][@@0b/[:103Lg=`R0?ooo`@0m?Cd:P3oool40?Cdm0T0g=cL103d
m?@80?ooo`@0k^k^1@2][Jd405mOG`@0>CTi100F5QH400d=3E0000001@3oool00`000000oooo0?oo
o`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooodL000000`0I6AT010000000<c<c03<c<`00
000204a<C08000000P1oOgl010000000VIVI09VIV@0000020;>c/`030000003<c<`0c<c<0080c<c<
00D000000>KViP3Vi^H0i^KV0000001A0?ooo`030000003Vi^H0i^KV0080000000<0c<c<00000000
00000`0000020<c<c0<00000103Vi^H4000000040>KViP00000000000<c<c080000000L0VIVI0000
00000000IVIV0000001<C4`0000000<0<c<c00@0000001TI6@0I6AT06ATIE00000070?ooo`030000
003oool0oooo02l0oooo0P0000040?oood<00000100=3@d402PX:0@0>CTi1@1VIVH409^KV`@0][Jf
103Cdm<40=cLg280oooo103dm?@V0?ooo`@0m?Cd103Cdm<90:f][@@0_kno103:b/X40=?Cd`@0[Jf]
1@1hN7P40492@P@0:2PX200=3@e@000000@0oooo0P00000C0?ooo`008P3oool00`000000oooo0?oo
o`030?ooodH000000`0I6AT00`000000<c<c03<c<`0203<c<`060000001<C4`000000000001oOgl0
00000P2IVIT010000000/k>c0;>c/`0000050<c<c0050000003Vi^H0i^KV0>KViP000000D03oool0
10000000i^KV0>KViP0000020<c<c0030000002c/k<0/k>c00<0/k>c0P0000030<c<c0@000000`3V
i^H200000080c<c<00D000000;>c/`000000000007moO`0200000080C4a<00@0000003<c<`0c<c<0
00000`0I6AUE000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?oood<0
0000100=3@d402PX:0@0>CTi1@1VIVH409^KV`@0][Jf103Cdm<40=cLg280oooo103dm?@V0?ooo`@0
m?Cd103Cdm<90:f][@@0_kno103:b/X40=?Cd`@0[Jf]1@1hN7P40492@P@0:2PX200=3@e@000000D0
oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooom6000000<06ATI
00<0000003<c<`0c<c<00P0c<c<01P000000C4a<000000000000Ogmo00000080VIVI00@000000;>c
/`2c/k<000001@3<c<`200000080i^KV00<000000?ooo`3oool0C@3oool010000000i^KV0>KViP00
00020<c<c0030000002c/k<0/k>c00H0/k>c0`0000040<c<c0L0000000T0/k>c000000000000Ogmo
0000001VIVH0000004a<C00000000`0c<c<0100000006ATI01TI6@0I6AUE000000L0oooo00<00000
0?ooo`3oool0;`3oool00`000000oooo0?ooo`030?oood<00000100=3@d402PX:0@0>CTi1@1VIVH4
09^KV`@0][Jf103Cdm<40=cLg280oooo103dm?@V0?ooo`@0m?Cd103Cdm<90:f][@@0_kno103:b/X4
0=?Cd`@0[Jf]1@1hN7P40492@P@0:2PX200=3@e@000000D0oooo00<000000?ooo`3oool04@3oool0
0280oooo00<000000?ooo`3oool00`3ooom6000000<06ATI00<0000003<c<`0c<c<00P0c<c<01`00
0000C4a<0000001VIVH0000007moO`0000000P2IVIT010000000/k>c0;>c/`0000060<c<c0800000
00<0i^KV0000003oool0C@3oool010000000i^KV0000003<c<`200000080/k>c1P0000040;>c/`D0
00001@2c/k<300000080Ogmo0P00000204a<C0040000000c<c<0<c<c000000<06ATIEP0000070?oo
o`030000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooom3000000@03@d=100X:2P403Ti
>@D0IVIV102KVi/40;Jf]P@0dm?C103Lg=`R0?ooo`@0m?Cd9P3oool40?Cdm0@0dm?C2@2][Jd40;no
_`@0b/[:103Cdm<40:f][@D0N7Qh1012@T8402PX:0P03@d=D00000050?ooo`030000003oool0oooo
0140oooo000R0?ooo`030000003oool0oooo00<0ooooA`00000301TI6@040000000c<c<0<c<c0000
0080C4a<00<0000006IVIP0000000P1oOgl010000000VIVI09VIV@0000020;>c/`8000001P3<c<`2
000004d0oooo00D000000>KViP000000c<c<000000030;>c/`030000002IVIT0VIVI00@0VIVI0`00
00090;>c/`8000000P2IVIT00`000000Ogmo07moO`020000000304a<C0000000<c<c0080<c<c00@0
000001TI6@0I6AT06ATIEP0000070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool0
0`3ooom3000000@03@d=100F5QH403Ti>@D0GemO101hN7P409^KV`@0[Jf]102o_kl50?Cdm1d0oooo
203dm?@R0?ooo`@0k^k^102][Jd=08b<S0@0Y:BT102KVi/408b<S0D0GemO100i>CT401HF5P@03@d=
E00000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooA`00
000301TI6@040000000c<c<0<c<c00000080C4a<00@0000006IVIP1VIVH000000P1oOgl010000000
VIVI09VIV@0000030;>c/`800000103<c<`00`000000i^KV0000001<0?ooo`040000003Vi^H00000
00000080/k>c0P00000:09VIV@800000102c/k<3000000<0VIVI00<0000007moO`1oOgl00P000002
04a<C0040000000c<c<0<c<c000000<06ATIE`0000070?ooo`030000003oool0oooo02l0oooo00<0
00000?ooo`3oool00`3ooom3000000@03@d=100F5QH403Ti>@D0GemO101hN7P409^KV`@0[Jf]102o
_kl50?Cdm1d0oooo203dm?@R0?ooo`@0k^k^102][Jd=08b<S0@0Y:BT102KVi/408b<S0D0GemO100i
>CT401HF5P@03@d=E00000050?ooo`030000003oool0oooo0140oooo000R0?ooo`800000103ooom8
000000<06ATI00<0000003<c<`0000000P1<C4`01@000000IVIV06IVIP1VIVH000000080Ogmo00<0
000009VIV@2IVIT00P0000030;>c/`@0000000@0c<c<0000003Vi^H00000B`3oool2000000040<c<
c0000000/k>c000000h0VIVI1000000609VIV@030000001oOgl0Ogmo008000000P1<C4`010000000
<c<c03<c<`00000301TI6EL000001@3oool300000340oooo00<000000?ooo`3oool00`3ooom30000
00@03@d=100F5QH403Ti>@D0GemO101hN7P409^KV`@0[Jf]102o_kl50?Cdm1d0oooo203dm?@R0?oo
o`@0k^k^102][Jd=08b<S0@0Y:BT102KVi/408b<S0D0GemO100i>CT401HF5P@03@d=E00000050?oo
o`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooB000000301TI6@04
0000000c<c<0<c<c00000080C4a<00D0000006IVIP1VIVH0IVIV0000000207moO`040000002IVIT0
VIVI09VIV@<00000102c/k<010000000c<c<00000000001;0?ooo`80000000@0c<c<0000002c/k<0
00005`2IVIT00`000000Ogmo07moO`0200000080C4a<00@0000003<c<`0c<c<00000100I6AUG0000
00L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?oood<00000100=3@d401HF
5P@0>CTi1@1OGel407QhN0@0Vi^K102][Jd40;no_`D0m?Cd7@3oool80?Cdm280oooo103^k^h40:f]
[@d0S8b<102TY:@409^KV`@0S8b<1@1OGel403Ti>@@05QHF100=3@eD000000D0oooo00<000000?oo
o`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooom8000000806ATI00<0000003<c<`0c
<c<00P0c<c<20000000304a<C0000000IVIV0080IVIV00<0000007moO`1oOgl00P00000409VIV@80
00000P2c/k<01@000000c<c<0000003Vi^H000000200oooo00<000000?ooo`3oool09`3oool20000
00040<c<c0000000/k>c000001D0VIVI0P00000207moO`8000000P1<C4`01@000000<c<c03<c<`0c
<c<0000000@06ATIE`0000070?ooo`030000003oool0oooo02l0oooo0P0000040?oood<00000100=
3@d401HF5P@0<c<c1@0i>CT405mOG`@0IVIV101hN7P409^KV`D0b/[:6@3oool40?Cdm0@0g=cL103^
k^h40?Cdm1h0oooo103^k^h40:f][AD0S8b<101VIVH50492@P@0:2PX100F5QH400d=3E@00000103o
ool2000001<0oooo000R0?ooo`030000003oool0oooo00<0ooooB000000201TI6@030000000c<c<0
<c<c00@0<c<c00<0000004a<C00000000`1VIVH200000080Ogmo1000000209VIV@80000000<0/k>c
0000003<c<`00P00000N0?ooo`80000000<0i^KV0000000000009`3oool2000000040<c<c0000000
/k>c000001@0VIVI00L0000007moO`1oOgl0Ogmo0000001VIVH000000080C4a<00@0000003<c<`0c
<c<000001@0I6AUG000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?oo
od<00000100=3@d401HF5P@0<c<c1@0i>CT405mOG`@0IVIV101hN7P409^KV`D0b/[:6@3oool40?Cd
m0@0g=cL103^k^h40?Cdm1h0oooo103^k^h40:f][AD0S8b<101VIVH50492@P@0:2PX100F5QH400d=
3E@000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooodP0
00000P0I6AT00`000000<c<c03<c<`0503<c<`030000001<C4`0000000@0IVIV1@0000001@1oOgl0
00000000002IVIT000000080/k>c0P0000000`3Vi^H000000?ooo`0J0?ooo`8000001@3Vi^H20000
02D0oooo0P000000103<c<`000000;>c/`00000C09VIV@80000000D0Ogmo000000000000IVIV0000
000204a<C0050000000c<c<0<c<c03<c<`0000001@0I6AUG000000L0oooo00<000000?ooo`3oool0
;`3oool00`000000oooo0?ooo`030?oood<00000100=3@d401HF5P@0<c<c1@0i>CT405mOG`@0IVIV
101hN7P409^KV`D0b/[:6@3oool40?Cdm0@0g=cL103^k^h40?Cdm1h0oooo103^k^h40:f][AD0S8b<
101VIVH50492@P@0:2PX100F5QH400d=3E@000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3o
ool00`000000oooo0?ooo`030?ooodP000000`0I6AT00`000000<c<c03<c<`0503<c<`030000001<
C4`0000000X0000000D0Ogmo00000000000000000;>c/`02000000030>KViP000000oooo01T0oooo
00<000000>KViP3Vi^H01`3Vi^H00`000000oooo0?ooo`0R0?ooo`80000000D0c<c<0000002c/k<0
/k>c0000000A09VIV@050000001oOgl0Ogmo07moO`0000000P1VIVH010000000C4a<04a<C0000003
03<c<`030000000I6AT06ATI00<06ATIE`0000070?ooo`030000003oool0oooo02l0oooo00<00000
0?ooo`3oool00`3ooom3000000@03@d=100F5QH403<c<`D0>CTi101OGel406IVIP@0N7Qh102KVi/5
0<[:bQT0oooo103dm?@40=cLg0@0k^k^103dm?@N0?ooo`@0k^k^102][JdE08b<S0@0IVIV1@12@T84
02PX:0@05QHF100=3@eD000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?oo
o`3oool00`3ooom9000000806ATI00<0000003<c<`0c<c<01P0c<c<00`000000C4a<04a<C00704a<
C0030000001VIVH0000000<000000P2c/k<3000001X0oooo00<000000>KViP3Vi^H0203Vi^H00`00
0000oooo0?ooo`0Q0?ooo`050000003Vi^H000000<c<c00000000P2c/k<00`000000VIVI09VIV@0=
09VIV@050000001oOgl0Ogmo07moO`0000000`1VIVH010000000C4a<04a<C000000303<c<`030000
000I6AT06ATI00<06ATIE`0000070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool0
0`3ooom3000000@03@d=100F5QH403<c<`D0>CTi101OGel406IVIP@0N7Qh102KVi/50<[:bQT0oooo
103dm?@40=cLg0@0k^k^103dm?@N0?ooo`@0k^k^102][JdE08b<S0@0IVIV1@12@T8402PX:0@05QHF
100=3@eD000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3o
oom9000000<06ATI0`00000603<c<`800000201<C4`00`000000IVIV06IVIP03000000050;>c/`00
000000000>KViP000000603oool00`000000i^KV0>KViP030>KViP030000003Vi^H0i^KV00<0i^KV
00<000000?ooo`3oool08P3oool2000000030<c<c0000000/k>c0080/k>c00<0000009VIV@2IVIT0
302IVIT01@000000Ogmo07moO`1oOgl000000080IVIV00@0000004a<C01<C4`000000`0c<c<00`00
00006ATI01TI6@0401TI6EL000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo
00<0ooooA`00000400d=3@@05QHF1@0X:2P403<c<`@0>CTi1012@T8406IVIPD0[Jf]5@3oool40?Cd
m0@0g=cL103Cdm<40=cLg0@0m?Cd8P3oool40<[:bP@0[Jf]1@2KVi/808b<S0@0N7Qh101OGel503Ti
>@@0:2PX100F5QH400d=3E@000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000
oooo0?ooo`030?ooodX000001@0I6AT3000000D0<c<c1000000304a<C0040000001<C4`0000006IV
IP<0000000<0/k>c0000003<c<`00P00000G0?ooo`030000003Vi^H0i^KV00<0i^KV00<000000<c<
c00000001@3Vi^H00`000000oooo0?ooo`0Q0?ooo`050000003Vi^H000000<c<c00000000`2c/k<0
0`000000VIVI09VIV@0:09VIV@050000001oOgl0Ogmo07moO`0000000`1VIVH010000000C4a<04a<
C000000303<c<`030000000I6AT06ATI00@06ATIE`0000070?ooo`030000003oool0oooo02l0oooo
00<000000?ooo`3oool00`3ooom7000000@03@d=100F5QH502PX:0@0<c<c100i>CT40492@P@0IVIV
1@2][JdE0?ooo`@0m?Cd103Lg=`40=?Cd`@0g=cL103dm?@R0?ooo`@0b/[:102][Jd509^KV`P0S8b<
101hN7P405mOG`D0>CTi100X:2P401HF5P@03@d=E00000050?ooo`030000003oool0oooo0140oooo
000R0?ooo`800000103ooom;000000H06ATI0P00000803<c<`<000000`1<C4`00`000000IVIV0000
0003000000030<c<c0000000000001H0oooo00<000000>KViP3Vi^H00`3Vi^H01@000000c<c<0<c<
c03<c<`0000000D0i^KV00<000000?ooo`3oool0803oool00`000000i^KV000000020<c<c0800000
0P2c/k<2000000T0VIVI00@0000007moO`1oOgl0Ogmo0P00000306IVIP040000001<C4`0C4a<0000
00<0<c<c00<0000001TI6@0I6AT0100I6AUG000000D0oooo0`00000a0?ooo`030000003oool0oooo
00<0ooooA`00000400d=3@@05QHF1@0X:2P403<c<`@0>CTi1012@T8406IVIPD0[Jf]5@3oool40?Cd
m0@0g=cL103Cdm<40=cLg0@0m?Cd8P3oool40<[:bP@0[Jf]1@2KVi/808b<S0@0N7Qh101OGel503Ti
>@@0:2PX100F5QH400d=3E@000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000
oooo0?ooo`030?ooodd000001P0I6AT7000000<0<c<c00H0000004a<C01<C4`0C4a<0000001VIVH4
000000030<c<c0000000000001D0oooo00D000000>KViP3Vi^H0i^KV000000030>KViP<000001@3V
i^H00`000000oooo0?ooo`0R0?ooo`030000003Vi^H0000000<0c<c<0P0000020;>c/`8000001`2I
VIT01@000000Ogmo07moO`1oOgl0000000@0IVIV00@0000004a<C01<C4`000000`0c<c<00`000000
6ATI01TI6@0401TI6EL000001`3oool00`000000oooo0?ooo`0_0?ooo`800000103ooom7000000@0
3@d=100F5QH502PX:0@0<c<c100i>CT40492@P@0IVIV1@2][JdE0?ooo`@0m?Cd103Lg=`40=?Cd`@0
g=cL103dm?@R0?ooo`@0b/[:102][Jd509^KV`P0S8b<101hN7P405mOG`D0>CTi100X:2P401HF5P@0
3@d=E00000040?ooo`8000004`3oool00280oooo00<000000?ooo`3oool00`3ooom>000000`06ATI
00D0000003<c<`0c<c<0<c<c0000000304a<C0<0000000<0VIVI0000003<c<`00P00000D0?ooo`07
0000003Vi^H0i^KV0>KViP000000c<c<0000000:0>KViP030000003oool0oooo02<0oooo00<00000
0>KViP000000103<c<`01@000000/k>c0;>c/`2c/k<0000000H0VIVI00@0000007moO`1oOgl00000
1@1VIVH010000000C4a<04a<C000000303<c<`030000000I6AT06ATI00@06ATIE`0000070?ooo`03
0000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooom;000000@03@d=3@0F5QH403<c<`@0
EUIF1@2KVi/40?Cdm140oooo103Lg=`40<[:bPP0g=cL9P3oool40?Cdm0@0dm?C1@2f][H409^KV`@0
S8b<101VIVH405IFEPD0>CTi100X:2P401HF5PP03@d=D00000050?ooo`030000003oool0oooo0140
oooo000R0?ooo`030000003oool0oooo00<0ooooCP00000=01TI6@040000000c<c<0<c<c000000<0
C4a<00<0000006IVIP0000000`0000000`3<c<`000000000000C0?ooo`040000003Vi^H0i^KV0000
00<0c<c<00<000000>KViP3Vi^H01P3Vi^H00`000000oooo0?ooo`0U0?ooo`040000003Vi^H00000
000000<0c<c<00@000000;>c/`2c/k<000001P2IVIT010000000Ogmo07moO`00000406IVIP050000
001<C4`0C4a<04a<C0000000100c<c<00`0000006ATI01TI6@0301TI6EL000001`3oool00`000000
oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooB`00000400d=3@d05QHF100c<c<405IFEPD0
Vi^K103dm?@A0?ooo`@0g=cL103:b/X80=cLg2H0oooo103dm?@40=?Cd`D0][Jf102KVi/408b<S0@0
IVIV101FEUH503Ti>@@0:2PX100F5QH800d=3E0000001@3oool00`000000oooo0?ooo`0A0?ooo`00
8P3oool00`000000oooo0?ooo`030?ooodl000003@0I6AT010000000<c<c03<c<`00000204a<C003
0000001VIVH0000000<0000000<0c<c<0000000000004P3oool010000000i^KV0>KViP0000050<c<
c0030000003Vi^H0i^KV00D0i^KV00<000000?ooo`3oool09P3oool00`000000i^KV0>KViP020000
0080c<c<00@000000;>c/`2c/k<000001@2IVIT010000000Ogmo07moO`00000306IVIP030000001<
C4`0C4a<0080C4a<00<0000003<c<`0c<c<00P0c<c<00`0000006ATI01TI6@0301TI6EL000001`3o
ool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooB`00000400d=3@d05QHF100c
<c<405IFEPD0Vi^K103dm?@A0?ooo`@0g=cL103:b/X80=cLg2H0oooo103dm?@40=?Cd`D0][Jf102K
Vi/408b<S0@0IVIV101FEUH503Ti>@@0:2PX100F5QH800d=3E0000001@3oool00`000000oooo0?oo
o`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oooe4000000`0I6AT6000000<06ATI00L00000
03<c<`0c<c<0000004a<C0000000IVIV00@0000000<0c<c<0000000000004P3oool010000000i^KV
0>KViP0000050<c<c0030000003Vi^H0i^KV00@0i^KV00<000000?ooo`3oool0:03oool01@000000
i^KV0>KViP3Vi^H000000080c<c<00<000000;>c/`000000102IVIT010000000Ogmo07moO`000003
06IVIP030000001<C4`0C4a<0080C4a<00<0000003<c<`0c<c<00`0c<c<00`0000006ATI01TI6@03
01TI6EL000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooB`000004
00d=3@d05QHF100c<c<405IFEPD0Vi^K103dm?@A0?ooo`@0g=cL103:b/X80=cLg2H0oooo103dm?@4
0=?Cd`D0][Jf102KVi/408b<S0@0IVIV101FEUH503Ti>@@0:2PX100F5QH800d=3E0000001@3oool0
0`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oooe/000000`0I6AT01P00
0000<c<c0000001<C4`0000006IVIP@0000000<0c<c<0000000000004P3oool010000000i^KV0>KV
iP0000050<c<c0030000003Vi^H0i^KV00@0i^KV00<000000?ooo`3oool0:@3oool2000000070>KV
iP000000c<c<0<c<c0000000/k>c0000000409VIV@040000001oOgl0Ogmo000000<0IVIV00D00000
04a<C01<C4`0C4a<0000000603<c<`030000000I6AT06ATI00<06ATIE`0000070?ooo`030000003o
ool0oooo02l0oooo00<000000?ooo`3oool00`3ooom?000000d03@d=100F5QH40492@PD0S8b<103L
g=`A0?ooo`@0g=cL103:b/X40=cLg0@0m?Cd:P3oool40?Cdm0D0b/[:102KVi/407QhN0@0GemO2@0i
>CT402PX:0@05QHF100=3@eD000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<00000
0?ooo`3oool00`3ooomL000000<06ATI00H0000003<c<`000000C4a<0000001VIVH4000000030<c<
c0000000oooo0140oooo00@000000>KViP3Vi^H000001@3<c<`00`000000i^KV0>KViP030>KViP03
0000003oool0oooo02`0oooo00<000000>KViP0000000P3<c<`00`000000/k>c0000000209VIV@04
0000001oOgl0Ogmo000000<0IVIV00D0000004a<C01<C4`0C4a<0000000703<c<`030000000I6AT0
6ATI00<06ATIE`0000070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooom?
000000d03@d=100F5QH40492@PD0S8b<103Lg=`A0?ooo`@0g=cL103:b/X40=cLg0@0m?Cd:P3oool4
0?Cdm0D0b/[:102KVi/407QhN0@0GemO2@0i>CT402PX:0@05QHF100=3@eD000000D0oooo00<00000
0?ooo`3oool04@3oool00280oooo0P0000040?oooed000000`0I6AT01@000000<c<c000000000000
IVIV00@0000000<0c<c<0000003oool04@3oool010000000i^KV0>KViP0000050<c<c0030000003V
i^H0i^KV0080i^KV00<000000?ooo`3oool0;@3oool020000000i^KV0>KViP000000c<c<0000002c
/k<000000P2IVIT010000000Ogmo07moO`00000306IVIP040000001<C4`0C4a<000000P0<c<c00<0
000001TI6@0I6AT00`0I6AUG000000D0oooo0`00000a0?ooo`030000003oool0oooo00<0ooooC`00
000=00d=3@@05QHF1012@T8508b<S0@0g=cL4@3oool40=cLg0@0b/[:103Lg=`40?Cdm2X0oooo103d
m?@50<[:bP@0Vi^K101hN7P405mOG`T0>CTi100X:2P401HF5P@03@d=E00000050?ooo`030000003o
ool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooG@00000301TI6@050000000c<c<0
00000000001VIVH0100000000`3<c<`000000000000A0?ooo`050000003Vi^H0i^KV0>KViP000000
0`3<c<`00`000000i^KV0>KViP020>KViP030000003oool0oooo02h0oooo00X000000>KViP3Vi^H0
00000<c<c0000000/k>c0000002IVIT000000P1oOgl01@000000IVIV06IVIP1VIVH000000080C4a<
00<0000003<c<`0c<c<01P0c<c<00`0000006ATI01TI6@0401TI6EL000001`3oool00`000000oooo
0?ooo`0_0?ooo`030000003oool0oooo00<0ooooC`00000=00d=3@@05QHF1012@T8508b<S0@0g=cL
4@3oool40=cLg0@0b/[:103Lg=`40?Cdm2X0oooo103dm?@50<[:bP@0Vi^K101hN7P405mOG`T0>CTi
100X:2P401HF5P@03@d=E00000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003o
ool0oooo00<0ooooG@00000301TI6@060000000c<c<0000004a<C0000000IVIV100000000`3<c<`0
00000000000?0?ooo`030000003Vi^H0i^KV00<0i^KV00<000000<c<c0000000103Vi^H00`000000
oooo0?ooo`0_0?ooo`070000003Vi^H000000<c<c0000000/k>c0000000209VIV@030000001oOgl0
000000<0IVIV00@0000004a<C00000000000200c<c<00`0000006ATI01TI6@0501TI6EL000001`3o
ool00`000000oooo0?ooo`0_0?ooo`800000103ooomH000000@03@d=100F5QH403Ti>@D0IVIV102f
][H40?Cdm0P0oooo1@3dm?@40=?Cd`@0g=cL103dm?@^0?ooo`@0m?Cd1@2o_kl408b<S0@0GemO200i
>CT902PX:0@05QHF200=3@e@000000@0oooo0P00000C0?ooo`008P3oool00`000000oooo0?ooo`03
0?oooed000000`0I6AT01P000000<c<c0000001<C4`0000006IVIP@0000000@0c<c<0000003Vi^H0
00003P3oool00`000000i^KV0>KViP0200000080i^KV00<000000>KViP3Vi^H00P3Vi^H00`000000
oooo0?ooo`0`0?ooo`090000003Vi^H000000<c<c0000000/k>c0000002IVIT000000080Ogmo00H0
000006IVIP1VIVH0000004a<C000000903<c<`030000000I6AT06ATI00H06ATIE`0000070?ooo`03
0000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooomH000000@03@d=100F5QH403Ti>@D0
IVIV102f][H40?Cdm0P0oooo1@3dm?@40=?Cd`@0g=cL103dm?@^0?ooo`@0m?Cd1@2o_kl408b<S0@0
GemO200i>CT902PX:0@05QHF200=3@e@000000D0oooo00<000000?ooo`3oool04@3oool00280oooo
00<000000?ooo`3oool00`3ooomM000000<06ATI00<0000003<c<`0000000P1<C4`00`000000IVIV
00000003000000040<c<c0000000i^KV000000d0oooo00D000000>KViP3Vi^H000000<c<c0020000
00@0i^KV00<000000?ooo`3oool0<@3oool02`000000i^KV0000003<c<`000000;>c/`000000VIVI
0000001oOgl000000080IVIV00<0000004a<C0000000200c<c<2000000T06ATIE`0000070?ooo`03
0000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooomH000000@03@d=100F5QH403Ti>@D0
IVIV102f][H40?Cdm0P0oooo1@3dm?@40=?Cd`@0g=cL103dm?@^0?ooo`@0m?Cd1@2o_kl408b<S0@0
GemO200i>CT902PX:0@05QHF200=3@e@000000D0oooo00<000000?ooo`3oool04@3oool00280oooo
00<000000?ooo`3oool00`3ooomM000000<06ATI00L0000003<c<`0c<c<0000004a<C0000000IVIV
00<0000000<0/k>c0000003<c<`00P00000<0?ooo`040000003Vi^H0i^KV0>KViP<00000103Vi^H0
0`000000oooo0?ooo`0b0?ooo`8000000P3<c<`20000000409VIV@000000Ogmo00000080IVIV00<0
000004a<C0000000200c<c<00`0000006ATI01TI6@0901TI6EL000001`3oool00`000000oooo0?oo
o`0_0?ooo`030000003oool0oooo00<0ooooF000000400d=3@@05QHF100i>CT506IVIP@0][Jf103d
m?@80?ooo`D0m?Cd103Cdm<40=cLg0@0m?Cd;P3oool40?Cdm0D0_kno102<S8`405mOG`P0>CTi2@0X
:2P401HF5PP03@d=D00000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0
oooo00<0ooooGP00000301TI6@070000000c<c<0<c<c0000001<C4`0000006IVIP03000000040;>c
/`00000000000>KViP8000002@3oool00`000000i^KV0>KViP020>KViP030000003Vi^H0i^KV00<0
i^KV00<000000?ooo`3oool0<`3oool20000000<0<c<c0000000/k>c0000002IVIT0000007moO`00
0000IVIV0000001<C4`00000200c<c<00`0000006ATI01TI6@0:01TI6EL000001`3oool00`000000
oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooG000000400d=3@@0:2PX1@12@T8408b<S0@0
_kno103Lg=`40?Cdm0T0g=cL103^k^h^0?ooo`@0m?Cd103Cdm<509^KV`@0GemO100i>CT403<c<`@0
:2PX3@0F5QH400d=3E@000001@3oool00`000000oooo0?ooo`0A0?ooo`00503oool2000000@0oooo
0P0000060?ooo`030000003oool0oooo00<0ooooGP00000301TI6@040000000c<c<0<c<c00000080
C4a<0`0000001@2IVIT000000000003<c<`000000080i^KV0P0000060?ooo`030000003Vi^H0i^KV
00T0i^KV00<000000?ooo`3oool0<P3oool200000080c<c<0P000000202IVIT0000007moO`000000
IVIV0000001<C4`000002@0c<c<00`0000006ATI01TI6@0;01TI6EH000001`3oool00`000000oooo
0?ooo`0_0?ooo`030000003oool0oooo00<0ooooG000000400d=3@@0:2PX1@12@T8408b<S0@0_kno
103Lg=`40?Cdm0T0g=cL103^k^h^0?ooo`@0m?Cd103Cdm<509^KV`@0GemO100i>CT403<c<`@0:2PX
3@0F5QH400d=3E@000001@3oool00`000000oooo0?ooo`0A0?ooo`004`3oool010000000oooo0?oo
o`0000020?ooo`040000003oool0oooo000000D0oooo00<000000?ooo`3oool00`3ooomO000000<0
6ATI00L0000003<c<`0c<c<0000004a<C0000000IVIV00<0000000<0/k>c0000003<c<`00P000002
0>KViP800000103oool00`000000i^KV0>KViP080>KViP030000003oool0oooo0340oooo0P000000
2@3Vi^H000000<c<c0000000/k>c0000002IVIT0000007moO`020000000304a<C0000000<c<c00P0
<c<c00<0000001TI6@0I6AT0300I6AUF000000L0oooo00<000000?ooo`3oool08@3oool2000000@0
oooo0P0000060?ooo`030000003oool0oooo00<0ooooG000000400d=3@@0:2PX1@12@T8408b<S0@0
_kno103Lg=`40?Cdm0T0g=cL103^k^h^0?ooo`@0m?Cd103Cdm<509^KV`@0GemO100i>CT403<c<`@0
:2PX3@0F5QH400d=3E@000001@3oool00`000000oooo0?ooo`0A0?ooo`005P3oool010000000oooo
0?ooo`0000020?ooo`030000003oool0oooo00<0oooo0`0000030?oooel000000`0I6AT01P000000
<c<c03<c<`0c<c<0000004a<C0<0000000@0VIVI0000002c/k<000000P3<c<`200000080i^KV00@0
00000?ooo`3oool000002P3Vi^H00`000000oooo0?ooo`0`0?ooo`8000000P3Vi^H00`000000c<c<
0<c<c0020000000309VIV@0000000000008000000P1<C4`00`000000<c<c03<c<`0603<c<`030000
000I6AT06ATI00d06ATIEP0000050?ooo`<000008P3oool010000000oooo0?ooo`0000020?ooo`04
0000003oool0oooo000000D0oooo00<000000?ooo`3oool00`3ooomL000000@03@d=100X:2P50492
@P@0S8b<102o_kl40=cLg0@0m?Cd2@3Lg=`40>k^kRh0oooo103dm?@40=?Cd`D0Vi^K101OGel403Ti
>@@0<c<c100X:2P=01HF5P@03@d=E00000050?ooo`030000003oool0oooo0140oooo000D0?ooo`80
00000`3oool010000000oooo0?ooo`0000050?ooo`030000003oool0oooo00<0ooooG`00000301TI
6@060000000c<c<0<c<c03<c<`000000C4a<0P0000000`1oOgl0000009VIV@03000000<0c<c<00<0
00000>KViP3Vi^H00P0000000`3oool000000>KViP070>KViP030000003oool0oooo0300oooo00<0
00000>KViP3Vi^H00P0000001@3<c<`00000000000000000VIVI0080000000<0IVIV0000001<C4`0
0P00000703<c<`8000002@0I6AT2000000<06ATIF00000070?ooo`030000003oool0oooo02<0oooo
00@000000?ooo`3oool000000P3oool00`000000oooo0?ooo`030?ooo`<000000`3ooomL000000@0
3@d=100F5QH503Ti>@@0GemO102<S8`40;no_`@0g=cL2@3dm?@Z0?ooo`@0m?Cd103Lg=`40;no_`@0
S8b<1@1VIVH403Ti>@@0:2PX3@0F5QH<00d=3E@000000`3oool3000001<0oooo000D0?ooo`030000
003oool0oooo0080oooo00@000000?ooo`3oool000001@3oool00`000000oooo0?ooo`030?ooof00
00000`0I6AT010000000<c<c03<c<`00000204a<C080000000@0Ogmo0000002IVIT0VIVI0P000003
0<c<c0070000003Vi^H0i^KV0>KViP000000oooo000000050>KViP800000<@3oool2000000030>KV
iP00000000000080c<c<00H000000;>c/`000000VIVI0000001oOgl20000000304a<C0000000<c<c
00D0<c<c0`00000:01TI6Eh000001`3oool00`000000oooo0?ooo`0Q0?ooo`8000000`3oool01000
0000oooo0?ooo`0000050?ooo`030000003oool0oooo00<0ooooG000000400d=3@@05QHF1@0i>CT4
05mOG`@0S8b<102o_kl40=cLg0T0m?Cd:P3oool40?Cdm0@0g=cL102o_kl408b<S0D0IVIV100i>CT4
02PX:0d05QHF300=3@eD000000D0oooo00<000000?ooo`3oool04@3oool001@0oooo0`0000030?oo
o`8000001P3oool00`000000oooo0?ooo`030?ooof0000000`0I6AT03`000000<c<c03<c<`0c<c<0
000004a<C0000000IVIV0000001oOgl0000009VIV@000000/k>c000000030<c<c0040000003Vi^H0
i^KV00000080oooo1@00000a0?ooo`80000000<0i^KV0000000000000P3<c<`2000000050;>c/`00
000000000000001oOgl00P0000000`1<C4`0000003<c<`0303<c<`<000003@0I6AUN000000L0oooo
00<000000?ooo`3oool08@3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo000000D0
oooo00<000000?ooo`3oool00`3ooomL000000@03@d=100F5QH503Ti>@@0GemO102<S8`40;no_`@0
g=cL2@3dm?@Z0?ooo`@0m?Cd103Lg=`40;no_`@0S8b<1@1VIVH403Ti>@@0:2PX3@0F5QH<00d=3E@0
00001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooof400000
0`0I6AT010000000<c<c03<c<`00000204a<C0090000001VIVH0000007moO`000000VIVI0000002c
/k<0000000<0c<c<00@000000>KViP3Vi^H00000=03oool3000000040>KViP00000000000<c<c0L0
000000@0Ogmo00000000000000000P1<C4`01@000000<c<c03<c<`0c<c<0000000l06ATIG`000007
0?ooo`030000003oool0oooo0240oooo0`0000030?ooo`8000001P3oool00`000000oooo0?ooo`03
0?oooe`00000100=3@d401HF5PD0>CTi101OGel408b<S0@0_kno103Lg=`90?Cdm2X0oooo103dm?@4
0=cLg0@0_kno102<S8`506IVIP@0>CTi100X:2P=01HF5P`03@d=E00000050?ooo`030000003oool0
oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooH@00000301TI6@0?0000000c<c<0<c<c
03<c<`000000C4a<0000001VIVH0000007moO`000000VIVI0000002c/k<000000080c<c<00@00000
0>KViP3Vi^H00000=03oool00`000000i^KV0>KViP080000000509VIV@000000000007moO`000000
0P1VIVH00`000000C4a<0000000303<c<`030000000I6AT06ATI00<06ATI1`00000301TI6F000000
1`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooG000000400d=3@@05QHF
1@0i>CT405mOG`@0S8b<102o_kl40=cLg0T0m?Cd:P3oool40?Cdm0@0g=cL102o_kl408b<S0D0IVIV
100i>CT402PX:0d05QHF300=3@eD000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<0
00000?ooo`3oool00`3ooomQ000000@06ATI00@0000003<c<`0c<c<000000P1<C4`020000000IVIV
000000000000VIVI0000002c/k<000000P3<c<`010000000i^KV0>KViP00000c0?ooo`050000003V
i^H000000000003<c<`01000000209VIV@8000000P1oOgl01P000000IVIV06IVIP000000C4a<0000
00<0<c<c00<0000001TI6@0I6AT00`0I6AU[000000L0oooo00<000000?ooo`3oool0;`3oool00`00
0000oooo0?ooo`030?ooof000000100F5QH502PX:0@0@T92101hN7P40;no_`@0k^k^;P3oool50>k^
kP@0_kno102<S8`407QhN0@0GemO1@0i>CT402PX:0@05QHF3@0=3@d4000000@03@d=F00000050?oo
o`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooHP00000301TI6@0<
0000000c<c<0<c<c03<c<`000000C4a<0000001VIVH0000007moO`000000VIVI0P0000001@3<c<`0
00000>KViP3Vi^H0000003<0oooo00@000000>KViP000000c<c<0`00000309VIV@8000000P1oOgl2
0000000506IVIP000000000004a<C00000000`0c<c<00`0000006ATI01TI6@0401TI6F/000001`3o
ool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooH000000401HF5PD0:2PX1012
@T8407QhN0@0_kno103^k^h^0?ooo`D0k^k^102o_kl408b<S0@0N7Qh101OGel503Ti>@@0:2PX100F
5QH=00d=3@@00000100=3@eH000000D0oooo00<000000?ooo`3oool04@3oool00280oooo0P000004
0?ooof800000100I6AT020000000<c<c03<c<`0c<c<0000004a<C0000000IVIV0P0000001@2IVIT0
00000000003<c<`000000080i^KV00<000000?ooo`3oool0<03oool010000000i^KV0000003<c<`2
00000080VIVI0`0000001@1oOgl00000000000000000IVIV0080000000<0C4a<0000000000000`0c
<c<00`0000006ATI01TI6@0401TI6F`000001@3oool300000340oooo00<000000?ooo`3oool00`3o
oomP000000@05QHF1@0X:2P40492@P@0N7Qh102o_kl40>k^kRh0oooo1@3^k^h40;no_`@0S8b<101h
N7P405mOG`D0>CTi100X:2P401HF5Pd03@d=1000000400d=3EP000001@3oool00`000000oooo0?oo
o`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooof8000001@0I6AT01`000000<c<c03<c<`00
0000C4a<0000001VIVH00P0000001@2IVIT000000000003<c<`000000080i^KV00<000000?ooo`3o
ool0;`3oool02@000000i^KV0000003<c<`000000;>c/`000000VIVI0000000207moO`8000000P1V
IVH200000080C4a<00@0000003<c<`0c<c<0<c<c0P00000601TI6Fd000001`3oool00`000000oooo
0?ooo`0_0?ooo`800000103ooomP000000@05QHF1@0X:2P40492@P@0N7Qh102o_kl40>k^kRh0oooo
1@3^k^h40;no_`@0S8b<101hN7P405mOG`D0>CTi100X:2P401HF5Pd03@d=1000000400d=3EP00000
103oool2000001<0oooo000R0?ooo`030000003oool0oooo00<0ooooH`00000401TI6@070000000c
<c<0<c<c0000001<C4`0000006IVIP020000000709VIV@00000000000<c<c0000000i^KV0000000a
0?ooo`0:0000003Vi^H000000<c<c0000000/k>c0000002IVIT0000007moO`8000000P1VIVH20000
00@0C4a<00@0000003<c<`0c<c<000001`0I6AU^000000L0oooo00<000000?ooo`3oool0;`3oool0
0`000000oooo0?ooo`030?oooe`00000200=3@d501HF5P@0>CTi101hN7P40;Jf]P@0m?Cd:P3oool4
0?Cdm0D0b/[:102KVi/406IVIP@0@T92100c<c<901HF5P@03@d=1000000400d=3FD000001@3oool0
0`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooofD000000`0I6AT01@00
0000<c<c03<c<`000000C4a<0080000000@0Ogmo000000000000/k>c0P0000000`3Vi^H000000?oo
o`0_0?ooo`030000003Vi^H000000080c<c<00@000000;>c/`000000VIVI0P00000206IVIP800000
0`1<C4`30000000303<c<`000000000000L06ATIK`0000070?ooo`030000003oool0oooo02l0oooo
00<000000?ooo`3oool00`3ooomL000000P03@d=1@0F5QH403Ti>@@0N7Qh102f][H40?Cdm2X0oooo
103dm?@50<[:bP@0Vi^K101VIVH40492@P@0<c<c2@0F5QH400d=3@@00000100=3@eU000000D0oooo
00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooomV000000<06ATI00@0
000003<c<`000000C4a<0P000000101oOgl000000000002c/k<2000000030>KViP000000oooo02h0
oooo00h000000>KViP3Vi^H000000<c<c0000000/k>c0000002IVIT0000007moO`000000IVIV0000
0080C4a<0`00000303<c<`030000000I6AT06ATI00H06ATIL00000070?ooo`030000003oool0oooo
02l0oooo00<000000?ooo`3oool00`3ooomL000000P03@d=1@0F5QH403Ti>@@0N7Qh102f][H40?Cd
m2X0oooo103dm?@50<[:bP@0Vi^K101VIVH40492@P@0<c<c2@0F5QH400d=3@@00000100=3@eU0000
00D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooomV000000<0
6ATI00@0000003<c<`000000C4a<0P000000101oOgl000000000002c/k<2000000030>KViP000000
oooo02d0oooo00@000000>KViP3Vi^H000000P3<c<`02@000000/k>c0000002IVIT0000007moO`00
0000IVIV0000000204a<C0030000000c<c<0<c<c00<0<c<c00<0000001TI6@0I6AT01@0I6AUa0000
00L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?oooe`00000200=3@d501HF
5P@0>CTi101hN7P40;Jf]P@0m?Cd:P3oool40?Cdm0D0b/[:102KVi/406IVIP@0@T92100c<c<901HF
5P@03@d=1000000400d=3FD000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000
oooo0?ooo`030?ooofH000000`0I6AT010000000<c<c0000001<C4`20000000407moO`0000000000
0;>c/`80000000<0i^KV0000003oool0;@3oool010000000i^KV0>KViP0000020<c<c0090000002c
/k<0000009VIV@000000Ogmo0000001VIVH000000080C4a<00<0000003<c<`0c<c<00`0c<c<00`00
00006ATI01TI6@0401TI6G8000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo
00<0ooooH000000400d=3@D05QHF100i>CT406IVIP@0[Jf]103dm?@Z0?ooo`@0g=cL1@2o_kl408b<
S0@0GemO100i>CT403<c<`D05QHF100=3@ea000000D0oooo00<000000?ooo`3oool04@3oool00280
oooo00<000000?ooo`3oool00`3ooomU000000<06ATI00D0000003<c<`0c<c<0000004a<C0020000
0080Ogmo100000000`3Vi^H000000?ooo`0/0?ooo`040000003Vi^H0i^KV00000080c<c<00T00000
0;>c/`000000VIVI0000001oOgl0000006IVIP0000000P1<C4`00`000000<c<c03<c<`0503<c<`03
0000000I6AT06ATI00806ATIL`0000070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3o
ool00`3ooomP000000@03@d=1@0F5QH403Ti>@@0IVIV102][Jd40?Cdm2X0oooo103Lg=`50;no_`@0
S8b<101OGel403Ti>@@0<c<c1@0F5QH400d=3G4000001@3oool00`000000oooo0?ooo`0A0?ooo`00
8P3oool00`000000oooo0?ooo`030?ooofD000000`0I6AT02@000000<c<c03<c<`000000C4a<0000
001VIVH0000007moO`04000000030>KViP000000oooo02`0oooo00@000000>KViP3Vi^H000000P3<
c<`02@000000/k>c0000002IVIT0000007moO`000000IVIV0000000204a<C0030000000c<c<0<c<c
00D0<c<c00@0000001TI6@0I6AT06ATIM00000070?ooo`030000003oool0oooo02l0oooo00<00000
0?ooo`3oool00`3ooomP000000@03@d=1@0F5QH403Ti>@@0IVIV102][Jd40?Cdm2X0oooo103Lg=`5
0;no_`@0S8b<101OGel403Ti>@@0<c<c1@0F5QH400d=3G4000001@3oool00`000000oooo0?ooo`0A
0?ooo`008P3oool2000000@0ooooI@00000301TI6@090000000c<c<0<c<c0000001<C4`0000006IV
IP000000Ogmo00@0000000<0i^KV0000003oool0;03oool00`000000i^KV000000030<c<c0090000
002c/k<0000009VIV@000000Ogmo0000001VIVH000000080C4a<00<0000003<c<`0c<c<01@0c<c<0
0`0000006ATI01TI6@1e000000D0oooo0`00000a0?ooo`030000003oool0oooo00<0ooooH0000004
00d=3@D05QHF100i>CT406IVIP@0[Jf]103dm?@Z0?ooo`@0g=cL1@2o_kl408b<S0@0GemO100i>CT4
03<c<`D05QHF100=3@ea000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?oo
o`3oool00`3ooomU000000<06ATI00T0000003<c<`0c<c<0000004a<C0000000IVIV0000001oOgl0
100000000`3Vi^H000000?ooo`0[0?ooo`040000003Vi^H0i^KV000000<0c<c<00T000000;>c/`00
0000VIVI0000001oOgl0000006IVIP0000000P1<C4`00`000000<c<c03<c<`0303<c<`8000000P0I
6AUf000000L0oooo00<000000?ooo`3oool0;`3oool2000000@0ooooI000000501HF5P@0<c<c101O
Gel40:BTY0@0m?Cd8P3oool40?Cdm0@0g=cL103Cdm<50;Jf]P@0S8b<101VIVH403Ti>@@05QHF2@0=
3@ea000000@0oooo0P00000C0?ooo`008P3oool00`000000oooo0?ooo`030?ooofD000000`0I6AT0
2@000000<c<c03<c<`000000C4a<0000001VIVH0000007moO`04000000030>KViP000000oooo02X0
oooo00@000000>KViP3Vi^H00000103<c<`200000080VIVI00D0000007moO`000000IVIV00000002
04a<C0030000000c<c<0<c<c0080<c<c00@0000001TI6@0I6AT06ATIM`0000070?ooo`030000003o
ool0oooo02l0oooo00<000000?ooo`3oool00`3ooomT000000D05QHF100c<c<405mOG`@0Y:BT103d
m?@R0?ooo`@0m?Cd103Lg=`40=?Cd`D0][Jf102<S8`406IVIP@0>CTi100F5QH900d=3G4000001@3o
ool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooofH000000`0I6AT0
1`000000<c<c03<c<`000000C4a<0000001VIVH00`000000102c/k<0000000000000000Y0?ooo`80
00000`3Vi^H01`000000c<c<0<c<c03<c<`000000;>c/`0000000P2IVIT020000000Ogmo07moO`00
0000IVIV0000001<C4`000000`0c<c<0100000006ATI01TI6@0I6AUh000000L0oooo00<000000?oo
o`3oool0;`3oool00`000000oooo0?ooo`030?ooof@000001@0F5QH403<c<`@0GemO102TY:@40?Cd
m280oooo103dm?@40=cLg0@0dm?C1@2f][H408b<S0@0IVIV100i>CT401HF5PT03@d=L@0000050?oo
o`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooIP00000301TI6@07
0000000c<c<0<c<c0000001<C4`0000006IVIP03000000040;>c/`0000000000000002H0oooo0`00
00040>KViP8000000`3<c<`00`000000/k>c0000000209VIV@080000001oOgl0Ogmo0000001VIVH0
000004a<C000000203<c<`040000000I6AT06ATI01TI6GT000001`3oool00`000000oooo0?ooo`0_
0?ooo`030000003oool0oooo00<0ooooI000000501HF5P@0<c<c101OGel40:BTY0@0m?Cd8P3oool4
0?Cdm0@0g=cL103Cdm<50;Jf]P@0S8b<101VIVH403Ti>@@05QHF2@0=3@ea000000D0oooo00<00000
0?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooomV000000<06ATI00L0000003<c
<`0c<c<0000004a<C0000000IVIV00<0000000@0/k>c00000000000000009P3oool010000000i^KV
0>KViP3Vi^H3000000@0c<c<00@000000;>c/`2c/k<000000P2IVIT020000000Ogmo07moO`000000
IVIV0000001<C4`000000`0c<c<0100000006ATI01TI6@0I6AUh000000L0oooo00<000000?ooo`3o
ool0;`3oool00`000000oooo0?ooo`030?ooof@000001@0F5QH402PX:0@0EUIF102TY:@40?Cdm1h0
oooo103dm?@40=cLg0@0_kno102f][H50:BTY0@0S8b<101VIVH40492@P@0<c<c1@0F5QIe000000D0
oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooomV000000@06ATI
00H0000003<c<`000000C4a<0000001VIVH3000000040;>c/`0000000000000002D0oooo00D00000
0>KViP3Vi^H0i^KV000000050<c<c08000000P2c/k<01@000000VIVI09VIV@2IVIT000000080Ogmo
00D0000006IVIP000000C4a<0000000403<c<`030000000I6AT06ATI00806ATIMP0000070?ooo`03
0000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooomT000000D05QHF100X:2P405IFEP@0
Y:BT103dm?@N0?ooo`@0m?Cd103Lg=`40;no_`@0][Jf1@2TY:@408b<S0@0IVIV1012@T8403<c<`D0
5QHFM@0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0oooo
IP00000401TI6@050000000c<c<0<c<c0000001<C4`010000000102c/k<0000000000000000T0?oo
o`030000003Vi^H0i^KV00800000103<c<`2000000@0/k>c00D0000009VIV@2IVIT0VIVI00000002
07moO`030000001VIVH000000080C4a<00<0000003<c<`0c<c<00P0c<c<0100000006ATI01TI6@0I
6AUf000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?ooof@000001@0F
5QH402PX:0@0EUIF102TY:@40?Cdm1h0oooo103dm?@40=cLg0@0_kno102f][H50:BTY0@0S8b<101V
IVH40492@P@0<c<c1@0F5QIe000000D0oooo00<000000?ooo`3oool04@3oool00280oooo0P000004
0?ooofH00000100I6AT01@000000<c<c03<c<`000000C4a<00@0000000@0/k>c0000000000000000
8`3oool010000000i^KV0>KViP0000030<c<c0<000001@2c/k<2000000<0VIVI00H0000007moO`1o
Ogl0000006IVIP00000204a<C0030000000c<c<0<c<c00<0<c<c00<0000001TI6@0I6AT0MP000005
0?ooo`<00000<@3oool00`000000oooo0?ooo`030?ooof@000001@0F5QH402PX:0@0EUIF102TY:@4
0?Cdm1h0oooo103dm?@40=cLg0@0_kno102f][H50:BTY0@0S8b<101VIVH40492@P@0<c<c1@0F5QIe
000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooomV0000
00@06ATI00<0000003<c<`0c<c<00P0000001@1VIVH00000000000000000/k>c00<000008P3oool0
1@000000i^KV0>KViP3Vi^H000000080c<c<00<000000;>c/`2c/k<0102c/k<2000000@0VIVI00@0
000007moO`1oOgl000000P1VIVH010000000C4a<04a<C000000503<c<`030000000I6AT06ATI07H0
00001`3oool00`000000oooo0?ooo`0_0?ooo`800000103ooomT000000D03@d=100X:2P405mOG`@0
Y:BT103dm?@I0?ooo`D0m?Cd103Cdm<40:f][@@0Vi^K2@2<S8`407QhN0@0GemO100i>CT402PX:0D0
5QHFM@0000040?ooo`8000004`3oool00280oooo00<000000?ooo`3oool00`3ooomW000000<06ATI
00<0000003<c<`0c<c<00P0000001@1VIVH00000000000000000/k>c00<000008@3oool01P000000
i^KV0>KViP3Vi^H000000<c<c0800000102c/k<3000000D0VIVI00D0000007moO`1oOgl0Ogmo0000
000206IVIP030000001<C4`0000000D0<c<c00@0000001TI6@0I6AT06ATIMP0000070?ooo`030000
003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooomT000000D03@d=100X:2P405mOG`@0Y:BT
103dm?@I0?ooo`D0m?Cd103Cdm<40:f][@@0Vi^K2@2<S8`407QhN0@0GemO100i>CT402PX:0D05QHF
M@0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooI`00
000301TI6@030000000c<c<0<c<c0080000000D0IVIV00000000000000000;>c/`03000001l0oooo
0P0000020>KViP80000000<0c<c<0000002c/k<00P2c/k<3000000L0VIVI00D0000007moO`1oOgl0
Ogmo0000000306IVIP030000001<C4`0000000D0<c<c00@0000001TI6@0I6AT06ATIMP0000070?oo
o`030000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooomT000000D03@d=100X:2P405mO
G`@0Y:BT103dm?@I0?ooo`D0m?Cd103Cdm<40:f][@@0Vi^K2@2<S8`407QhN0@0GemO100i>CT402PX
:0D05QHFM@0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0
ooooJ000000201TI6@030000000c<c<0<c<c0080000000<0IVIV0000000000001@00000N0?ooo`03
0000003Vi^H0i^KV0080000000<0c<c<0000000000000P2c/k<2000000@0VIVI1P00000407moO`07
0000001VIVH0IVIV06IVIP000000C4a<0000000403<c<`8000000`0I6AUf000000L0oooo00<00000
0?ooo`3oool0;`3oool00`000000oooo0?ooo`030?ooof@000001@0=3@d402PX:0@0GemO102TY:@4
0?Cdm1T0oooo1@3dm?@40=?Cd`@0[Jf]102KVi/908b<S0@0N7Qh101OGel403Ti>@@0:2PX1@0F5QIe
000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooomX0000
00806ATI00<0000003<c<`0c<c<00P0000001@1VIVH00000000000000000/k>c00<000007@3oool0
10000000i^KV0>KViP0000020<c<c0030000002c/k<0/k>c00800000102IVIT2000000T0Ogmo00<0
000006IVIP1VIVH00P1VIVH00`000000C4a<0000000403<c<`030000000I6AT06ATI00806ATIMP00
00070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooomT000000D03@d=100X
:2P405mOG`@0Y:BT103dm?@I0?ooo`D0m?Cd103Cdm<40:f][@@0Vi^K2@2<S8`407QhN0@0GemO100i
>CT402PX:0D05QHFM@0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0
oooo00<0ooooJ@00000201TI6@050000000c<c<000000000001VIVH00P0000000`2IVIT000000000
0002000001`0oooo00L000000>KViP3Vi^H0i^KV0000003<c<`000000080/k>c00<0000009VIV@2I
VIT00P2IVIT2000000T0Ogmo0P00000406IVIP040000001<C4`0C4a<000000<0<c<c00<0000001TI
6@0I6AT0100I6AUe000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?oo
of@000001@0=3@d401HF5P@0@T92102<S8`40>k^kQD0oooo103dm?@50=cLg0@0[Jf]102<S8`407Qh
N0T0IVIV101OGel405IFEP@0>CTi2@0F5QH400d=3G4000001@3oool00`000000oooo0?ooo`0A0?oo
o`008P3oool00`000000oooo0?ooo`030?ooofT000000P0I6AT00`000000<c<c03<c<`0200000005
06IVIP00000000000000002c/k<00`00000J0?ooo`070000003Vi^H0i^KV0>KViP000000c<c<0000
00020;>c/`030000002IVIT0VIVI0080VIVI00<0000007moO`1oOgl00P1oOgl7000000H0IVIV00D0
000004a<C01<C4`0C4a<0000000203<c<`030000000I6AT06ATI00@06ATIM@0000070?ooo`030000
003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooomT000000D03@d=100F5QH40492@P@0S8b<
103^k^hE0?ooo`@0m?Cd1@3Lg=`40:f][@@0S8b<101hN7P906IVIP@0GemO101FEUH403Ti>@T05QHF
100=3@ea000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3o
oomZ000000806ATI00D0000003<c<`000000000006IVIP07000001X0oooo00L000000>KViP3Vi^H0
i^KV0000003<c<`000000080/k>c00<0000009VIV@0000000P00000307moO`800000301VIVH00`00
0000C4a<04a<C00204a<C0030000000c<c<0000000P06ATIM00000070?ooo`030000003oool0oooo
02l0oooo00<000000?ooo`3oool00`3ooomT000000D03@d=100F5QH40492@P@0S8b<103^k^hE0?oo
o`@0m?Cd1@3Lg=`40:f][@@0S8b<101hN7P906IVIP@0GemO101FEUH403Ti>@T05QHF100=3@ea0000
00D0oooo00<000000?ooo`3oool04@3oool00280oooo0P0000040?ooofX000000P0I6AT010000000
<c<c0000001<C4`30000000309VIV@000000000000800000603oool200000080i^KV0P0000001@3<
c<`000000;>c/`2c/k<000000080VIVI00@0000007moO`1oOgl0Ogmo0P00000506IVIPX00000101<
C4`00`000000<c<c0000000801TI6G@000001@3oool300000340oooo0P0000040?ooof@000001@0=
3@d401HF5P@0@T92102<S8`40>k^kQD0oooo103dm?@50=cLg0@0[Jf]102<S8`407QhN0T0IVIV101O
Gel405IFEP@0>CTi2@0F5QH400d=3G400000103oool2000001<0oooo000R0?ooo`030000003oool0
oooo00<0ooooJP00000201TI6@040000000c<c<0000004a<C080000000@0Ogmo000000000000/k>c
0`00000E0?ooo`8000000`3Vi^H010000000c<c<0<c<c00000020;>c/`040000002IVIT0VIVI0000
0080Ogmo0P00000406IVIP<000003@1<C4`00`000000<c<c0000000801TI6GD000001`3oool00`00
0000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooJ@00000401HF5P@0>CTi101VIVH40:f]
[@D0m?Cd203oool40?Cdm0@0g=cL103:b/X50;Jf]P@0Vi^K101VIVH405mOG`@0@T922@0i>CT403<c
<`@0:2PX100F5QH500d=3GD000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000
oooo0?ooo`030?ooofX000000P0I6AT00`000000<c<c0000000204a<C0<0000000<0VIVI00000000
00000P00000C0?ooo`8000000`3Vi^H200000080c<c<00P000000;>c/`2c/k<0/k>c0000002IVIT0
000007moO`8000001@1VIVH00`000000C4a<04a<C00604a<C0<000000`1<C4`200000080<c<c00<0
000001TI6@0I6AT01@0I6AUf000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?oo
o`030?ooofT00000100F5QH403Ti>@@0IVIV102][Jd50?Cdm0P0oooo103dm?@40=cLg0@0b/[:1@2f
][H409^KV`@0IVIV101OGel40492@PT0>CTi100c<c<402PX:0@05QHF1@0=3@ee000000D0oooo00<0
00000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooomZ000000<06ATI00@00000
03<c<`000000C4a<0P000000101oOgl000000000002c/k<300000100oooo0P0000030>KViP800000
0`3<c<`01@000000/k>c0;>c/`2c/k<000000080VIVI0P00000706IVIP040000001<C4`0C4a<04a<
C0D000000`0c<c<3000000<0<c<c00<0000001TI6@0I6AT0100I6AUh000000L0oooo00<000000?oo
o`3oool0;`3oool00`000000oooo0?ooo`030?ooofT00000100F5QH403Ti>@@0IVIV102][Jd50?Cd
m0P0oooo103dm?@40=cLg0@0b/[:1@2f][H409^KV`@0IVIV101OGel40492@PT0>CTi100c<c<402PX
:0@05QHF1@0=3@ee000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3o
ool00`3ooomZ000000<06ATI00<0000003<c<`0000000P1<C4`20000000307moO`000000000000H0
00002@3oool400000080i^KV0`0000030<c<c08000000`2c/k<01P000000VIVI09VIV@000000Ogmo
000000@0IVIV0`000000101<C4`0000000000000000:03<c<`D000001@0I6AUi000000L0oooo00<0
00000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?ooofT00000100F5QH403Ti>@@0IVIV102]
[Jd50?Cdm0P0oooo103dm?@40=cLg0@0b/[:1@2f][H409^KV`@0IVIV101OGel40492@PT0>CTi100c
<c<402PX:0@05QHF1@0=3@ee000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<00000
0?ooo`3oool00`3ooomZ000000<06ATI00/0000003<c<`0c<c<0000004a<C0000000IVIV0000001o
Ogl0000009VIV@0>000000@0i^KV0P0000030<c<c0<000000`2c/k<200000080VIVI00<0000007mo
O`000000101VIVH01@000000C4a<04a<C01<C4`0000000`0<c<c00<0000001TI6@0I6AT01`0I6AUj
000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?ooof@000002@0=3@d4
01HF5P@0@T92101VIVH509^KV`@0[Jf]102f][H40:f][@@0Y:BT102KVi/508b<S0@0N7Qh101OGel4
0492@P@0>CTi1@0c<c<402PX:0P05QHF2@0=3@ee000000D0oooo00<000000?ooo`3oool04@3oool0
01<0oooo0`0000040?ooo`8000001P3oool00`000000oooo0?ooo`030?ooof/000000`0I6AT00`00
0000<c<c0000000204a<C0030000001VIVH000000080000000<0VIVI0000000000001P0000050>KV
iP@0000000<0c<c<0000000000000P0000040;>c/`8000000`2IVIT3000000@0IVIV00D0000004a<
C01<C4`0C4a<0000000;03<c<`8000002P0I6AUj000000L0oooo00<000000?ooo`3oool0;`3oool0
0`000000oooo0?ooo`030?ooof@000002@0=3@d401HF5P@0@T92101VIVH509^KV`@0[Jf]102f][H4
0:f][@@0Y:BT102KVi/508b<S0@0N7Qh101OGel40492@P@0>CTi1@0c<c<402PX:0P05QHF2@0=3@ee
000000D0oooo00<000000?ooo`3oool04@3oool001<0oooo00@000000?ooo`3oool000000P3oool0
10000000oooo0?ooo`0000050?ooo`030000003oool0oooo00<0ooooK@00000201TI6@030000000c
<c<000000080C4a<00<0000006IVIP1VIVH00P000000102IVIT000000;>c/`2c/k<>000000@0/k>c
1000000309VIV@8000000P1oOgl01@000000IVIV06IVIP1VIVH0000000<0C4a<00<0000003<c<`0c
<c<02@0c<c<00`0000006ATI01TI6@0801TI6G`000001`3oool00`000000oooo0?ooo`0P0?ooo`<0
0000103oool2000000H0oooo00<000000?ooo`3oool00`3ooomT000000T03@d=100F5QH40492@P@0
IVIV1@2KVi/40:f][@@0][Jf102][Jd40:BTY0@0Vi^K1@2<S8`407QhN0@0GemO1012@T8403Ti>@D0
<c<c100X:2P801HF5PT03@d=M@0000050?ooo`030000003oool0oooo0140oooo000C0?ooo`040000
003oool0oooo00000080oooo00@000000?ooo`3oool000001@3oool3000000<0ooooKP00000201TI
6@0;0000000c<c<000000000001<C4`0000006IVIP000000Ogmo0000002IVIT05000000409VIV@<0
00000`1oOgl01@000000IVIV06IVIP1VIVH0000000<0C4a<00<0000003<c<`0c<c<0200c<c<20000
00X06ATIO@0000050?ooo`<000008P3oool010000000oooo0?ooo`0000020?ooo`040000003oool0
oooo000000D0oooo00<000000?ooo`3oool00`3ooomT000000T03@d=100F5QH40492@P@0IVIV1@2K
Vi/40:f][@@0][Jf102][Jd40:BTY0@0Vi^K1@2<S8`407QhN0@0GemO1012@T8403Ti>@D0<c<c100X
:2P801HF5PT03@d=M@0000050?ooo`030000003oool0oooo0140oooo000C0?ooo`<000000`3oool0
10000000oooo0?ooo`0000050?ooo`030000003oool0oooo00<0ooooKP00000301TI6@050000000c
<c<000000000001<C4`04000000509VIV@P00000101oOgl3000000<0IVIV00@0000004a<C01<C4`0
00002@0c<c<2000000H06ATI0P00000301TI6Gh000001`3oool00`000000oooo0?ooo`0P0?ooo`04
0000003oool0oooo00000080oooo00@000000?ooo`3oool000001@3oool3000000<0ooooK@000008
01HF5P@0>CTi1@1FEUH805mOG`@0IVIV101OGel406IVIPD0GemO101FEUH40492@P@0>CTi100c<c<9
01HF5P`03@d=NP0000030?ooo`<000004`3oool001@0oooo00<000000?ooo`3oool00P3oool01000
0000oooo0?ooo`0000050?ooo`030000003oool0oooo00<0ooooKP00000401TI6@030000000c<c<0
<c<c0080000000<0C4a<0000001VIVH00`00000407moO`X00000201oOgl4000000H0IVIV00<00000
04a<C00000002@0c<c<00`0000006ATI01TI6@0501TI6H@000001`3oool00`000000oooo0?ooo`0P
0?ooo`<000000`3oool010000000oooo0?ooo`0000050?ooo`030000003oool0oooo00<0ooooK@00
000801HF5P@0>CTi1@1FEUH805mOG`@0IVIV101OGel406IVIPD0GemO101FEUH40492@P@0>CTi100c
<c<901HF5P`03@d=NP0000050?ooo`030000003oool0oooo0140oooo000D0?ooo`<000000`3oool2
000000H0oooo00<000000?ooo`3oool00`3ooom^000000D06ATI0P00000203<c<`040000001<C4`0
000000000080IVIV5P00000806IVIP80000000<0C4a<0000000c<c<0200c<c<00`0000006ATI01TI
6@0601TI6H@000001`3oool00`000000oooo0?ooo`0Q0?ooo`030000003oool0oooo0080oooo00@0
00000?ooo`3oool000001@3oool00`000000oooo0?ooo`030?ooofd00000200F5QH403Ti>@D0EUIF
201OGel406IVIP@0GemO101VIVH505mOG`@0EUIF1012@T8403Ti>@@0<c<c2@0F5QH<00d=3GX00000
1@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooofh000001`0I
6AT010000000<c<c00000000000204a<C0<00000601VIVH500000080C4a<00<0000003<c<`0c<c<0
1`0c<c<00`0000006ATI01TI6@0601TI6HD000001`3oool00`000000oooo0?ooo`0Q0?ooo`<00000
0`3oool2000000H0oooo00<000000?ooo`3oool00`3ooom]000000P05QHF100i>CT505IFEPP0GemO
101VIVH405mOG`@0IVIV1@1OGel405IFEP@0@T92100i>CT403<c<`T05QHF300=3@ej000000D0oooo
00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooom^000000@06ATI00D0
000001TI6@0I6AT06ATI0000000203<c<`<000000P1<C4`H000000H0C4a<00<0000003<c<`0c<c<0
1`0c<c<00`0000006ATI01TI6@0601TI6HH000001`3oool00`000000oooo0?ooo`0_0?ooo`030000
003oool0oooo00<0ooooK@00000800d=3@T05QHF300c<c<A03Ti>@@0<c<c100X:2P901HF5PP03@d=
PP0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0ooooK`00
00000`0I6AT0000000000002000000<06ATI0P00000303<c<`800000701<C4`2000000T0<c<c00<0
000001TI6@0I6AT01P0I6AV7000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?oo
o`030?ooofd00000200=3@d901HF5P`0<c<c4@0i>CT403<c<`@0:2PX2@0F5QH800d=3H8000001@3o
ool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooogD00000100I6AT4
0000000303<c<`000000000000h000001@1<C4`7000000T0<c<c0P00000801TI6HP000001`3oool0
0`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooK@00000800d=3@T05QHF300c<c<A
03Ti>@@0<c<c100X:2P901HF5PP03@d=PP0000050?ooo`030000003oool0oooo0140oooo000R0?oo
o`800000103ooomf000000L06ATI0P00000?03<c<`D00000300c<c<4000000T06ATIR@0000050?oo
o`<00000<@3oool00`000000oooo0?ooo`030?ooofd00000200=3@d901HF5P`0<c<c4@0i>CT403<c
<`@0:2PX2@0F5QH800d=3H8000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000
oooo0?ooo`030?ooogL000000`0I6AT2000000<06ATI0P00000F03<c<`P00000300I6AV:000000L0
oooo00<000000?ooo`3oool0;`3oool2000000@0ooooM@00000=00d=3BD05QHF2@0=3@f6000000@0
oooo0P00000C0?ooo`008P3oool00`000000oooo0?ooo`030?ooogd00000100I6ATF000001@06ATI
RP0000070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooome000000d03@d=
9@0F5QH900d=3HH000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?oo
o`030?ooogl00000:`0I6AV;000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?oo
o`030?ooogD000003@0=3@dU01HF5PT03@d=QP0000050?ooo`030000003oool0oooo0140oooo000R
0?ooo`030000003oool0oooo00<0ooooP000000X01TI6Hd000001`3oool00`000000oooo0?ooo`0_
0?ooo`030000003oool0oooo00<0ooooM@00000=00d=3BD05QHF2@0=3@f6000000D0oooo00<00000
0?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooon2000000@06ATI1000000M01TI
6Hh000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooM@00000=00d=
3BD05QHF2@0=3@f6000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3o
ool00`3ooonO000000L06ATIS`0000070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3o
ool00`3ooon2000000@03@d=1000000M00d=3Hl000001@3oool00`000000oooo0?ooo`0A0?ooo`00
8P3oool00`000000oooo0?ooo`030?ooool00000=P0000070?ooo`030000003oool0oooo02l0oooo
00<000000?ooo`3oool00`3ooon2000000@03@d=1000000M00d=3Hl000001@3oool00`000000oooo
0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooool00000=P0000070?ooo`030000003o
ool0oooo02l0oooo00<000000?ooo`3oool00`3ooon2000000@03@d=1000000M00d=3Hl000001@3o
ool00`000000oooo0?ooo`0A0?ooo`008P3oool2000000@0ooooo`00000f000000D0oooo0`00000a
0?ooo`030000003oool0oooo00<0ooooPP00000400d=3@@000007@0=3@f?000000D0oooo00<00000
0?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooooo000003H000001`3oool00`00
0000oooo0?ooo`0_0?ooo`800000103ooooo000003L00000103oool2000001<0oooo000R0?ooo`03
0000003oool0oooo00<0ooooo`00000f000000L0oooo00<000000?ooo`3oool0;`3oool00`000000
oooo0?ooo`030?ooool00000=`0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000
003oool0oooo00<0ooooo`00000f000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo
0?ooo`030?ooool00000=`0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003o
ool0oooo00<0ooooo`00000f000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?oo
o`030?ooool00000=`0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0
oooo00<0ooooo`00000f000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`03
0?ooool00000=`0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo
00<0ooooo`00000f000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?oo
ool00000=`0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0oooo00<0
ooooo`00000f000000L0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`030?ooool0
0000=`0000050?ooo`030000003oool0oooo0140oooo000R0?ooo`800000103ooooo000003H00000
1@3oool300000340oooo00<000000?ooo`3oool00`3ooooo000003L000001@3oool00`000000oooo
0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooool00000=P0000070?ooo`030000003o
ool0oooo02l0oooo0P0000040?ooool00000=`0000040?ooo`8000004`3oool00280oooo00<00000
0?ooo`3oool00`3ooooo000003H000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0
oooo00<0ooooo`00000g000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?oo
o`3oool00`3ooooo000003H000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo
00<0ooooo`00000g000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3o
ool00`3ooooo000003H000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0
ooooo`00000g000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool0
0`3ooooo000003H000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0oooo
o`00000g000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3o
oooo000003H000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooo`00
000g000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooooo
000003H000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooo`00000g
000000D0oooo00<000000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooooo0000
03H000001`3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooo`00000g0000
00D0oooo00<000000?ooo`3oool04@3oool00280oooo0P0000040?ooool00000=P0000050?ooo`<0
0000<@3oool2000000@0ooooo`00000g000000@0oooo0P00000C0?ooo`008P3oool00`000000oooo
0?ooo`030?ooool00000=P0000070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool0
0`3ooooo000003L000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?oo
o`030?ooool00000=P0000070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool00`3o
oooo000003L000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`03
0?ooool00000=P0000070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooooo
000003L000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?oo
ool00000=P0000070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooooo0000
03L000001@3oool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooool0
0000=P0000070?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooooo000003L0
00001@3oool00`000000oooo0?ooo`0A0?ooo`005@3oool00`000000oooo0?ooo`020?ooo`800000
1P3oool00`000000oooo0?ooo`030?ooool00000=P0000070?ooo`030000003oool0oooo02l0oooo
00<000000?ooo`3oool00`3ooooo000003L000001@3oool00`000000oooo0?ooo`0A0?ooo`005@3o
ool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool00`3oool00`000000oooo
0?ooo`030?ooool00000=P0000070?ooo`030000003oool0oooo0280oooo00<000000?ooo`3oool0
0P3oool2000000H0oooo00<000000?ooo`3oool00`3ooooo000003L000001@3oool00`000000oooo
0?ooo`0A0?ooo`005@3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool0
0`3oool3000000<0ooooo`00000f000000D0oooo0`00000T0?ooo`050000003oool0oooo0?ooo`00
00000P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00<0ooooo`00000g000000D0
oooo00<000000?ooo`3oool04@3oool001H0oooo00@000000?ooo`3oool000000P3oool00`000000
oooo0?ooo`030?ooo`030000003oool0oooo00<0ooooo`00000f000000L0oooo00<000000?ooo`3o
ool08P3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool00`3oool30000
00<0ooooo`00000g000000<0oooo0`00000C0?ooo`004`3oool010000000oooo0?ooo`0000020?oo
o`040000003oool0oooo000000D0oooo00<000000?ooo`3oool00`3ooooo000003H000001`3oool0
0`000000oooo0?ooo`0S0?ooo`040000003oool0oooo00000080oooo00<000000?ooo`3oool00`3o
ool00`000000oooo0?ooo`030?ooool00000=`0000050?ooo`030000003oool0oooo0140oooo000C
0?ooo`@000000`3oool2000000H0oooo00<000000?ooo`3oool00`3ooooo000003H000001`3oool0
0`000000oooo0?ooo`0P0?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool00000
1@3oool00`000000oooo0?ooo`030?ooool00000=`0000050?ooo`030000003oool0oooo0140oooo
000R0?ooo`030000003oool0oooo00<0ooooo`00000f000000L0oooo00<000000?ooo`3oool0803o
ool4000000<0oooo0P0000060?ooo`030000003oool0oooo00<0ooooo`00000g000000D0oooo00<0
00000?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooooo000003H000001`3oool0
0`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooo`00000g000000D0oooo00<00000
0?ooo`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooooo000003H000001`3oool00`00
0000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooo`00000g000000D0oooo00<000000?oo
o`3oool04@3oool00280oooo00<000000?ooo`3oool00`3ooooo000003H000001`3oool00`000000
oooo0?ooo`0_0?ooo`030000003oool0oooo00<0ooooo`00000g000000D0oooo00<000000?ooo`3o
ool04@3oool00280oooo00<000000?ooo`3oool00`3ooooo000003H000001`3oool00`000000oooo
0?ooo`0_0?ooo`030000003oool0oooo00<0ooooo`00000g000000D0oooo00<000000?ooo`3oool0
4@3oool00280oooo0P0000040?ooool00000=P0000050?ooo`<00000<@3oool2000000@0ooooo`00
000g000000@0oooo0P00000C0?ooo`008P3oool00`000000oooo0?ooo`030?ooool00000=P000007
0?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooooo000003L000001@3oool0
0`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooool00000=P0000070?oo
o`030000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooooo000003L000001@3oool00`00
0000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooool00000=P0000070?ooo`03
0000003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooooo000003L000001@3oool00`000000
oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooool00000=P0000070?ooo`030000
003oool0oooo02l0oooo00<000000?ooo`3oool00`3ooooo000003L000001@3oool00`000000oooo
0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooool00000=P0000070?ooo`030000003o
ool0oooo02l0oooo00<000000?ooo`3oool00`3ooooo000003L000001@3oool00`000000oooo0?oo
o`0A0?ooo`008P3oool00`000000oooo0?ooo`030?ooool00000=P0000070?ooo`030000003oool0
oooo02l0oooo00<000000?ooo`3oool00`3ooooo000003L000001@3oool00`000000oooo0?ooo`0A
0?ooo`008P3oool00`000000oooo0?ooo`030?ooool00000=P0000070?ooo`030000003oool0oooo
02l0oooo00<000000?ooo`3oool00`3ooooo000003L000001@3oool00`000000oooo0?ooo`0A0?oo
o`008P3oool2000000@0ooooo`00000f000000D0oooo0`00000a0?ooo`800000o`3ooolo0?ooo`80
00004`3oool00280oooo00<000000?ooo`3oool0o`3ooom00?ooo`030000003oool0oooo02l0oooo
00<000000?ooo`3oool0o`3ooolo0?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003o
ool0oooo0?l0oooo@03oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo0?l0oooo?`3o
ool00`000000oooo0?ooo`0A0?ooo`008P3oool00`000000oooo0?ooo`3o0?oood00oooo00<00000
0?ooo`3oool0;`3oool00`000000oooo0?ooo`3o0?ooocl0oooo00<000000?ooo`3oool04@3oool0
0280oooo00<000000?ooo`3oool0o`3ooom00?ooo`030000003oool0oooo02l0oooo00<000000?oo
o`3oool0o`3ooolo0?ooo`030000003oool0oooo0140oooo000R0?ooo`030000003oool0000000L0
oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00<0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0140
oooo000R0?ooo`030000003oool0000000L0oooo00<000000?ooo`3oool01P3oool00`000000oooo
0?ooo`050?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool01P3oool00`000000oooo
0?ooo`050?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool01P3oool00`000000oooo
0?ooo`050?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool01P3oool00`000000oooo
0?ooo`050?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool01P3oool00`000000oooo
0?ooo`050?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0103oool00`000000oooo
0?ooo`0_0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`050?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool01P3oool00`000000oooo
0?ooo`050?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool01P3oool00`000000oooo
0?ooo`050?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool01P3oool00`000000oooo
0?ooo`050?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool01P3oool00`000000oooo
0?ooo`050?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool01P3oool00`000000oooo
0?ooo`050?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`050?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`050?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`030?ooo`030000003oool0oooo0140oooo000R0?ooool00000A000000a0?ooool00000@`00
000C0?ooo`00o`3ooooo0?ooond0oooo003o0?ooool0ooook@3oool00?l0ooooo`3oooo]0?ooo`00
o`3ooooo0?ooond0oooo003o0?ooool0ooook@3oool00?l0ooooo`3oooo]0?ooo`00o`3ooooo0?oo
ond0oooo003o0?ooool0ooook@3oool00?l0ooooo`3oooo]0?ooo`00\
\>"],
  ImageRangeCache->{{{0, 746.313}, {354.813, 0}} -> {-0.0517093, -0.0238146, \
0.00281842, 0.00281842}, {{18.3125, 356.25}, {346.313, 8.4375}} -> {-8.56106, \
-5.89946, 0.235932, 0.235932}, {{390, 727.938}, {346.313, 8.4375}} -> \
{-98.5862, -6.99397, 0.239164, 0.239164}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["thresholdImage",
    FontWeight->"Bold"],
  "\nConverts a grayscale image I into a binary image by setting all the \
values below the threshold t to zero"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[thresholdImage];\)\), "\[IndentingNewLine]", 
    \(\(thresholdImage[I_, \ t_]\  := \ 
        Map[If[#\  < \ t, \ 0, \ 1] &, \ I, \ {2}];\)\)}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["invertImage",
    FontWeight->"Bold"],
  "\nInverts an image "
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[invertImage];\)\), "\[IndentingNewLine]", 
    \(\(invertImage[I_]\  := \ 
        Map[If[#\  == \ 0, \ 1, \ 0] &, \ I, \ {2}];\)\)}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["n4, n8",
    FontWeight->"Bold"],
  "\nReturns the points in the 4 neighborhood and the 8 neighborhood of p"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[n4];\)\), "\[IndentingNewLine]", 
    \(\(\(n4[
          p_]\  := {{p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
            p\[LeftDoubleBracket]2\[RightDoubleBracket] - 
              1}, \ {p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
            p\[LeftDoubleBracket]2\[RightDoubleBracket] + 
              1}, \ {p\[LeftDoubleBracket]1\[RightDoubleBracket] - 1, \ 
            p\[LeftDoubleBracket]2\[RightDoubleBracket]}, \ {p\
\[LeftDoubleBracket]1\[RightDoubleBracket] + 1, \ 
            p\[LeftDoubleBracket]2\[RightDoubleBracket]}};\)\(\
\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(Clear[n8];\)\), "\[IndentingNewLine]", 
    \(\(n8[p_]\  := 
        Complement[
          Flatten[Table[{p\[LeftDoubleBracket]1\[RightDoubleBracket] + x, \ 
                p\[LeftDoubleBracket]2\[RightDoubleBracket] + y}, {\ 
                x, \ \(-1\), \ 1\ }, \ {y, \ \(-1\), \ 1}], \ 
            1]\ , \ {p}];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getN4, getN8",
    FontWeight->"Bold"],
  "\nReturns the points in the 4 / 8 neighborhood of p if it is in the \
thresholded image I"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[getN4];\)\), "\[IndentingNewLine]", 
    \(\(\(getN4[p_, \ I_]\  := \ 
        Select[n4[p], \ 
          I\[LeftDoubleBracket]#\[LeftDoubleBracket]1\[RightDoubleBracket], \ \
#\[LeftDoubleBracket]2\[RightDoubleBracket]\[RightDoubleBracket]\  > \ 
              0\  &];\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(Clear[getN8];\)\), "\n", 
    \(\(getN8[p_, \ I_]\  := \ 
        Select[n8[p], \ 
          I\[LeftDoubleBracket]#\[LeftDoubleBracket]1\[RightDoubleBracket], \ \
#\[LeftDoubleBracket]2\[RightDoubleBracket]\[RightDoubleBracket]\  > \ 
              0 &];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getC4",
    FontWeight->"Bold"],
  "\nGets the number of 4-connected elements around point p in the pointset \
X"
}], "Subsubtitle"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[getC4];\)\), "\[IndentingNewLine]", 
    \(getC4[p_, \ 
        X_]\  := \ \[IndentingNewLine]Module\ [\[IndentingNewLine]{n, \ xx, \ 
          yy}, \[IndentingNewLine]xx\  = \ 
          p\[LeftDoubleBracket]1\[RightDoubleBracket]; \[IndentingNewLine]yy\ \
 = \ p\[LeftDoubleBracket]2\[RightDoubleBracket]; \[IndentingNewLine]n\  = \ 
          0; \[IndentingNewLine]If[
          MemberQ[X, \ {xx + 1, \ yy + 1}]\  && \ \(! MemberQ[
                X, \ {xx\  + \ 1, \ 
                  yy}\ ]\), \ \(n++\)]; \[IndentingNewLine]If[
          MemberQ[X, \ {xx, \ yy + 1}]\  && \ \(! MemberQ[
                X, \ {xx + 1, \ 
                  yy + 1}\ ]\), \ \(n++\)]; \[IndentingNewLine]If[
          MemberQ[X, \ {xx\  - 1, \ yy + 1}]\  && \ \(! MemberQ[
                X, \ {xx, \ yy + 1}\ ]\), \ \(n++\)]; \[IndentingNewLine]If[
          MemberQ[X, \ {xx - 1, \ yy}]\  && \ \(! MemberQ[
                X, \ {xx\  - 1, \ 
                  yy + 1}\ ]\), \ \(n++\)]; \[IndentingNewLine]If[
          MemberQ[X, \ {xx - 1, \ yy - 1}]\  && \ \(! MemberQ[
                X, \ {xx - 1, \ yy}\ ]\), \ \(n++\)]; \[IndentingNewLine]If[
          MemberQ[X, \ {xx, \ yy - 1}]\  && \ \(! MemberQ[
                X, \ {xx - 1, \ 
                  yy - 1}\ ]\), \ \(n++\)]; \[IndentingNewLine]If[
          MemberQ[X, \ {xx + 1, \ yy - 1}]\  && \ \(! MemberQ[
                X, \ {xx, \ yy - 1}\ ]\), \ \(n++\)]; \[IndentingNewLine]If[
          MemberQ[X, \ {xx + 1, \ yy}]\  && \ \(! MemberQ[
                X, \ {xx + 1, \ 
                  yy - 1}\ ]\), \ \(n++\)]; \[IndentingNewLine]\
\[IndentingNewLine]If[
          Length[X]\  > \ 0\  && \ 
            n \[Equal] 0\ , \ \(n++\)]; \[IndentingNewLine]Return[
          n];\[IndentingNewLine]]\)}], "Input"],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(getC4\)\" is similar to \
existing symbol \"\!\(getN4\)\"."\)], "Message"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getC8",
    FontWeight->"Bold"],
  "\nGets the number of 8-connected elements around point p in the pointset \
X"
}], "Subsubtitle"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[getC8];\)\), "\[IndentingNewLine]", 
    \(getC8[p_, \ 
        X_]\  := \ \[IndentingNewLine]Module\ [\[IndentingNewLine]{n, \ xx, \ 
          yy}, \[IndentingNewLine]xx\  = \ 
          p\[LeftDoubleBracket]1\[RightDoubleBracket]; \[IndentingNewLine]yy\ \
 = \ p\[LeftDoubleBracket]2\[RightDoubleBracket]; \[IndentingNewLine]n\  = \ 
          0; \[IndentingNewLine]If[
          MemberQ[X, \ {xx + 1, \ yy + 1}]\  && \ \(! MemberQ[
                X, \ {xx\  + \ 1, \ 
                  yy}\ ]\), \ \(n++\)]; \[IndentingNewLine]If[
          MemberQ[X, \ {xx, \ yy + 1}]\  && \ \(! MemberQ[
                X, \ {xx + 1, \ yy + 1}\ ]\)\  && \ \(! MemberQ[
                X, \ {xx + 1, \ yy}\ ]\), \ \(n++\)]; \[IndentingNewLine]If[
          MemberQ[X, \ {xx - 1, \ yy + 1}]\  && \ \(! MemberQ[
                X, \ {xx, \ yy + 1}\ ]\), \ \(n++\)]; \[IndentingNewLine]If[
          MemberQ[X, \ {xx - 1, \ yy}]\  && \ \(! MemberQ[
                X, \ {xx - 1, \ yy + 1}\ ]\)\  && \ \(! MemberQ[
                X, \ {xx, \ 
                  yy\  + \ 1}\ ]\), \ \(n++\)]; \[IndentingNewLine]If[
          MemberQ[X, \ {xx - 1, \ yy - 1}]\  && \ \(! MemberQ[
                X, \ {xx - 1, \ yy}\ ]\), \ \(n++\)]; \[IndentingNewLine]If[
          MemberQ[X, \ {xx, \ yy - 1}]\  && \ \(! MemberQ[
                X, \ {xx - 1, \ yy\  - 1}\ ]\)\  && \ \(! MemberQ[
                X, \ {xx\  - \ 1, \ 
                  yy}\ ]\), \ \(n++\)]; \[IndentingNewLine]If[
          MemberQ[X, \ {xx + 1, \ yy - 1}]\  && \ \(! MemberQ[
                X, \ {xx, \ yy - 1}\ ]\), \ \(n++\)]; \[IndentingNewLine]If[
          MemberQ[X, \ {xx + 1, \ yy}]\  && \ \(! MemberQ[
                X, \ {xx + 1, \ yy\  - 1}\ ]\)\  && \ \(! MemberQ[
                X, \ {xx\ , \ 
                  yy - 1}\ ]\), \ \(n++\)]; \[IndentingNewLine]\
\[IndentingNewLine]If[
          Length[X]\  > \ 0\  && \ 
            n \[Equal] 0\ , \ \(n++\)]; \[IndentingNewLine]Return[
          n];\[IndentingNewLine]]\)}], "Input"],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(getC8\)\" is similar to \
existing symbol \"\!\(getN8\)\"."\)], "Message"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["isCurveEnd",
    FontWeight->"Bold"],
  "\nTells us whether the point p is a curve end point in the image V"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[isCurveEnd];\)\), "\[IndentingNewLine]", 
    \(isCurveEnd[p_, \ V_, \ 
        W_]\  := \ \[IndentingNewLine]Module[\ {currentN4, \ 
          n}, \[IndentingNewLine]currentN4 = \ 
          getN4[p, \ V]; \[IndentingNewLine]n\  = \ 
          Length[currentN4]; \[IndentingNewLine]\[IndentingNewLine]Return[\ \
\((n \[Equal] 0)\)\  || \ \((\((n \[Equal] 1)\) && \ 
                isBoundaryPoint[
                  currentN4\[LeftDoubleBracket]1\[RightDoubleBracket], \ V, \ 
                  W])\)];\[IndentingNewLine]]\), "\[IndentingNewLine]", 
    \(\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["isSimple",
    FontWeight->"Bold"],
  "\nTells us whether the point p is simple in the image V, inverse of the \
image W"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[isSimple];\)\), "\[IndentingNewLine]", 
    \(\(isSimple[p_, \ V_, \ 
          W_]\  := \((\((getC4[p, \ getN8[p, \ V]]\ \  \[Equal] \ 
                1)\)\  && \ \((getC8[p, \ getN4[p, \ W]]\ \  \[Equal] \ 
                1)\))\);\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  "\n",
  StyleBox["isBoundaryPoint",
    FontWeight->"Bold"],
  "\nTells us whether the point p is in the boundary point of the Image V, \
inverse of the image W"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[isBoundaryPoint];\)\), "\[IndentingNewLine]", 
    \(\(isBoundaryPoint[p_, \ V_, \ 
          W_]\  := \ \((\((V\[LeftDoubleBracket]
                  p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
                  p\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket]\  > \ 0)\)\  && \((\ 
              Length[getN4[p, \ W]]\  > \ 0)\))\);\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["isBorderingBackground",
    FontWeight->"Bold"],
  "\nTells us whether the point p is bordering a background pixel."
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[isBorderingBackground];\)\), "\[IndentingNewLine]", 
    \(\(isBorderingBackground[p_, \ V_, \ 
          W_]\  := \ \((\((V\[LeftDoubleBracket]
                  p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
                  p\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket]\  > \ 0)\)\  && \((\ 
              Length[getN8[p, \ W]]\  > \ 0)\))\);\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["isDestructible",
    FontWeight->"Bold"],
  "\nTells us whether a point p can be destroyed from image V (inverse W) \
while preserving skeleton Pres..\n\tthinOperator = 0 \[Rule] Topology \
preservation \n\tthinOperator = 1 \[Rule] Curve preservation \n\tthinOperator \
= 2 \[Rule] Surface preservation (To be implemented)"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[isDestructible];\)\), "\[IndentingNewLine]", 
    \(isDestructible[p_, \ V_, \ W_, \ Pres_, \ 
        thinOperator_]\  := \ \[IndentingNewLine]If[
        thinOperator == 
          0, \ \[IndentingNewLine]\((isBoundaryPoint[p, \ V, \ W]\  && \ 
            isSimple[p, \ V, \ 
              W]\  && \ \((Pres\[LeftDoubleBracket]
                  p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
                  p\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket]\  \[Equal] \ 
                0)\))\), \ \[IndentingNewLine]\((isBoundaryPoint[p, \ V, \ 
              W]\  && \ isSimple[p, \ V, \ 
              W]\  && \ \(! isCurveEnd[p, \ V, \ 
                W]\)\  && \ \((Pres\[LeftDoubleBracket]
                  p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
                  p\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket]\  \[Equal] \ 0)\))\)]\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["isSkeletalSurfacePoint",
    FontWeight->"Bold"],
  "\nLets us know whether a given skeletal point p is a surface point... \n\t\
Pre: p is on the skeleton"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[isSkeletalSurfacePoint];\)\), "\[IndentingNewLine]", 
    \(isSkeletalSurfacePoint[p_, \ 
        S_]\  := \ \[IndentingNewLine]Module[\ {imageN8}, \
\[IndentingNewLine]imageN8\  = \ 
          getN8[p, \ 
            S]; \[IndentingNewLine]Return[\[IndentingNewLine]\((\((MemberQ[
                    imageN8, \ {p\[LeftDoubleBracket]1\[RightDoubleBracket]\ \
, \ p\[LeftDoubleBracket]2\[RightDoubleBracket]\  + \ 1}]\  && \ 
                  MemberQ[
                    imageN8, \ {p\[LeftDoubleBracket]1\[RightDoubleBracket]\  \
+ 1, \ p\[LeftDoubleBracket]2\[RightDoubleBracket]\ }]\  && \ 
                  MemberQ[
                    imageN8, \ {p\[LeftDoubleBracket]1\[RightDoubleBracket] + 
                        1\ , \ 
                      p\[LeftDoubleBracket]2\[RightDoubleBracket]\  + \ 
                        1}]\ )\)\  || \((MemberQ[
                    imageN8, \ {p\[LeftDoubleBracket]1\[RightDoubleBracket]\ \
, \ p\[LeftDoubleBracket]2\[RightDoubleBracket]\  - \ 1}]\  && \ 
                  MemberQ[
                    imageN8, \ {p\[LeftDoubleBracket]1\[RightDoubleBracket]\  \
- 1, \ p\[LeftDoubleBracket]2\[RightDoubleBracket]\ }]\  && \ 
                  MemberQ[
                    imageN8, \ {p\[LeftDoubleBracket]1\[RightDoubleBracket] - 
                        1\ , \ 
                      p\[LeftDoubleBracket]2\[RightDoubleBracket]\  - \ 
                        1}]\ )\)\  || \[IndentingNewLine]\((MemberQ[
                    imageN8, \ {p\[LeftDoubleBracket]1\[RightDoubleBracket]\ \
, \ p\[LeftDoubleBracket]2\[RightDoubleBracket]\  + \ 1}]\  && \ 
                  MemberQ[
                    imageN8, \ {p\[LeftDoubleBracket]1\[RightDoubleBracket]\  \
- 1, \ p\[LeftDoubleBracket]2\[RightDoubleBracket]\ }]\  && \ 
                  MemberQ[
                    imageN8, \ {p\[LeftDoubleBracket]1\[RightDoubleBracket] - 
                        1\ , \ 
                      p\[LeftDoubleBracket]2\[RightDoubleBracket]\  + \ 
                        1}]\ )\)\  || \[IndentingNewLine]\((MemberQ[
                    imageN8, \ {p\[LeftDoubleBracket]1\[RightDoubleBracket]\ \
, \ p\[LeftDoubleBracket]2\[RightDoubleBracket]\  - \ 1}]\  && \ 
                  MemberQ[
                    imageN8, \ {p\[LeftDoubleBracket]1\[RightDoubleBracket]\  \
+ 1, \ p\[LeftDoubleBracket]2\[RightDoubleBracket]\ }]\  && \ 
                  MemberQ[
                    imageN8, \ {p\[LeftDoubleBracket]1\[RightDoubleBracket] + 
                        1\ , \ 
                      p\[LeftDoubleBracket]2\[RightDoubleBracket]\  - \ 
                        
                        1}]\ )\))\)\[IndentingNewLine]];\[IndentingNewLine]]\)\
, "\[IndentingNewLine]", 
    \(\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["isSkeletalSurfaceInteriorPoint",
    FontWeight->"Bold"],
  "\nLets us know whether the point is an interior point of a surface"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[isSkeletalSurfaceInteriorPoint];\)\), "\[IndentingNewLine]", 
    \(\(isSkeletalSurfaceInteriorPoint[p_, \ 
          S_]\  := \((Length[getN8[p, \ S]]\  \[Equal] \ 
            8)\);\)\), "\[IndentingNewLine]", 
    \(\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getSkeletalPixelType",
    FontWeight->"Bold"],
  "\nGets the point type of a pixel p in the Skeleton S\n\t0 - Not in the \
skeleton\n\t1 - A skeletal point\n\t2 - A curve end point\n\t3 - A curve \
interior point\n\t4 - A surface boundary point\n\t5 - A surface interior \
point"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[getSkeletalPixelType];\)\), "\[IndentingNewLine]", 
    \(getSkeletalPixelType[p_, \ 
        S_]\  := \ \[IndentingNewLine]Module[\ {ret}, \[IndentingNewLine]If[
          S\[LeftDoubleBracket]p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
              p\[LeftDoubleBracket]2\[RightDoubleBracket]\[RightDoubleBracket]\
\ \  == 0, \ \[IndentingNewLine]ret\  = \ 0, \[IndentingNewLine]If[
            isSkeletalSurfacePoint[p, \ S], \[IndentingNewLine]If[
              isSkeletalSurfaceInteriorPoint[p, \ S], \ ret\  = \ 5, \ 
              ret\  = \ 4], \[IndentingNewLine]If[
              Length[getN4[p, \ S]]\  \[Equal] \ 
                0, \[IndentingNewLine]ret\  = \ 1, \[IndentingNewLine]If[
                Length[getN4[p, \ S]]\  \[Equal] \ 1, \ ret\  = \ 2, \ 
                ret\  = \ 
                  3]\[IndentingNewLine]]\[IndentingNewLine]]\
\[IndentingNewLine]]; \[IndentingNewLine]Return[
          ret];\[IndentingNewLine]]\), "\[IndentingNewLine]", 
    \(\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getBlankImage",
    FontWeight->"Bold"],
  "\nReturns a blank image of the same size as the source image."
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[getBlankImage]\ ;\)\), "\[IndentingNewLine]", 
    \(\(getBlankImage[]\  := \ 
        Table[0, \ {x, \ sliceSize[1, 1] - gaussianRadius, \ 
            sliceSize[1, 2] + gaussianRadius}, \ {y, \ 
            sliceSize[2, 1] - gaussianRadius, \ 
            sliceSize[2, 2] + gaussianRadius}];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  "\n",
  StyleBox["performThinning",
    FontWeight->"Bold"],
  "\nPerforms the thinning operation on image V, (Inverse of the image W) for \
a maximum of n iterations, while preserving earlier skeleton Pres, for \
topology/curve or surface preservation."
}], "Subsubtitle"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[performThinning];\)\), "\[IndentingNewLine]", 
    \(performThinning[V_, \ W_, \ n_, \ Pres_, \ 
        thinOperator_]\  := \[IndentingNewLine]Module[{G, H, m, \ dMap, \ 
          boundaryPoints, \ thicknessImage, \ 
          thickness}, \[IndentingNewLine]m\  = \ 
          Max[V]; \[IndentingNewLine]G\  = \ V; \[IndentingNewLine]H\  = \ 
          W; \[IndentingNewLine]thicknessImage\  = \ 
          getBlankImage[]; \[IndentingNewLine]thickness\  = \ 
          1; \[IndentingNewLine]Do[\[IndentingNewLine] (*\(ListDensityPlot[
                G, \ Mesh \[Rule] False, \ 
                ColorFunctionScaling \[Rule] True, \ 
                ImageSize \[Rule] {600, 
                    600}];\)\ *) \[IndentingNewLine]thickness\  = \ 
            thickness + 1; \[IndentingNewLine]dMap\  = \ 
            Flatten[Table[
                If[isDestructible[{x, \ y}, \ G, \ H, \ Pres, \ 
                    thinOperator]\ , \ {x, \ y, \ 
                    Length[getN4[{x, \ y}, \ G]]}, \ {}], \ {x, 
                  sliceSize[1, 1], sliceSize[1, 2]}, \ {y, sliceSize[2, 1], \ 
                  sliceSize[2, 2]}], \ 1]; \[IndentingNewLine]dMap\  = \ 
            Select[dMap, \ Length[#] > 0 &]; \[IndentingNewLine]dMap\  = \ 
            Sort[dMap, \ \((#2\[LeftDoubleBracket]3\[RightDoubleBracket] > #1\
\[LeftDoubleBracket]3\[RightDoubleBracket])\) &]; \[IndentingNewLine]If[
            Length[dMap]\  \[Equal] \ 0, \ 
            Break[]]; \[IndentingNewLine]\[IndentingNewLine]boundaryPoints\  \
= \ Flatten[Table[
                If[isBorderingBackground[{x, y}, \ G, \ H]\ , \ {x, \ 
                    y}, \ {}], \ {x, sliceSize[1, 1], sliceSize[1, 2]}, \ {y, 
                  sliceSize[2, 1], \ sliceSize[2, 2]}], \ 
              1]; \[IndentingNewLine]boundaryPoints\  = \ 
            Select[boundaryPoints, \ 
              Length[#] > 0 &]; \[IndentingNewLine]Scan[\(If[
                  thicknessImage\[LeftDoubleBracket]#\[LeftDoubleBracket]1\
\[RightDoubleBracket], \ #\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket]\  \[Equal] \ 0, 
                  thicknessImage\[LeftDoubleBracket]#\[LeftDoubleBracket]1\
\[RightDoubleBracket], \ #\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket] = \ thickness];\)\  &, \ 
            boundaryPoints]; \[IndentingNewLine]Scan[\ \(If[
                  
                  isDestructible[{#\[LeftDoubleBracket]1\[RightDoubleBracket],\
 #\[LeftDoubleBracket]2\[RightDoubleBracket]}, \ G, \ H, \ Pres, \ 
                    thinOperator], \ 
                  Module[{}, 
                    G\[LeftDoubleBracket]\ #\[LeftDoubleBracket]1\
\[RightDoubleBracket], #\[LeftDoubleBracket]2\[RightDoubleBracket]\ \
\[RightDoubleBracket]\ \  = \ 0; 
                    thicknessImage\[LeftDoubleBracket]\ \
#\[LeftDoubleBracket]1\[RightDoubleBracket], #\[LeftDoubleBracket]2\
\[RightDoubleBracket]\ \[RightDoubleBracket]\  = \ 0]];\) &, 
            dMap]; \[IndentingNewLine]H = 
            invertImage[G];\[IndentingNewLine], \ {i, \ 
            n}]; \[IndentingNewLine]\[IndentingNewLine]boundaryPoints\  = \ 
          Flatten[Table[
              If[isBorderingBackground[{x, y}, \ G, \ H]\ , \ {x, \ 
                  y}, \ {}], \ {x, sliceSize[1, 1], sliceSize[1, 2]}, \ {y, 
                sliceSize[2, 1], \ sliceSize[2, 2]}], \ 
            1]; \[IndentingNewLine]boundaryPoints\  = \ 
          Select[boundaryPoints, \ 
            Length[#] > 0 &]; \[IndentingNewLine]Scan[\(If[
                thicknessImage\[LeftDoubleBracket]#\[LeftDoubleBracket]1\
\[RightDoubleBracket], \ #\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket]\  \[Equal] \ 0, 
                thicknessImage\[LeftDoubleBracket]#\[LeftDoubleBracket]1\
\[RightDoubleBracket], \ #\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket] = \ thickness];\)\  &, \ 
          boundaryPoints]; \[IndentingNewLine]\[IndentingNewLine]\
\[IndentingNewLine]\[IndentingNewLine] (*\(ListDensityPlot[G, \ 
              Mesh \[Rule] True, \ 
              ColorFunctionScaling \[Rule] 
                True, \ \ ImageSize \[Rule] {600, 
                  600}];\)*) \[IndentingNewLine]Return[{G, \ 
            thicknessImage}];\[IndentingNewLine]]\)}], "Input"],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(dMap\)\" is similar to \
existing symbol \"\!\(Map\)\"."\)], "Message"],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(thickness\)\" is \
similar to existing symbol \"\!\(Thickness\)\"."\)], "Message"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell["\<\
Clear[thinnedImages];
Clear[binaryImage];
Clear[stats];
binaryImage=thresholdImage[slice,15];
thinnedImages=performThinning[binaryImage,invertImage[binaryImage],100,\
thresholdImage[slice,300],1];
Show[GraphicsArray[{ListDensityPlot[thinnedImages\[LeftDoubleBracket]1\
\[RightDoubleBracket],Mesh\[Rule]True,ColorFunctionScaling\[Rule]True,\
ImageSize\[Rule]{300,300},DisplayFunction\[Rule]Identity],ListDensityPlot[\
thinnedImages\[LeftDoubleBracket]2\[RightDoubleBracket],Mesh\[Rule]True,\
ColorFunctionScaling\[Rule]True,ImageSize\[Rule]{300,300},DisplayFunction\
\[Rule]Identity],ListDensityPlot[binaryImage,Mesh\[Rule]True,\
ColorFunctionScaling\[Rule]True,ImageSize\[Rule]{300,300},DisplayFunction\
\[Rule]Identity]}],DisplayFunction\[Rule]$DisplayFunction];\
\>", "SmallText"],

Cell["\<\
ListDensityPlot[Table[getSkeletalPixelType[{x,y},thinnedImages\
\[LeftDoubleBracket]1\[RightDoubleBracket]],{x,sliceSize[1,1],sliceSize[1,2]},\
{y,sliceSize[2,1],sliceSize[2,2]}],Mesh\[Rule]True,ColorFunctionScaling\[Rule]\
True,ImageSize\[Rule]{300,300}];\
\>", "SmallText"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["performErosion",
    FontWeight->"Bold"],
  "\nErodes the image by removing the curve end points"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[performErosion];\)\), "\[IndentingNewLine]", 
    \(performErosion[V_, \ 
        W_]\  := \ \[IndentingNewLine]Module[\[IndentingNewLine]{dMap, \ 
          outImage}, \[IndentingNewLine] (*\(ListDensityPlot[V, \ 
              Mesh \[Rule] False, \ 
              ImageSize \[Rule] {600, \ 
                  600}];\)*) \[IndentingNewLine]dMap\  = \ 
          Flatten[Table[
              If[\((isBoundaryPoint[{x, \ y}, \ V, \ W]\ \  && \ 
                    isCurveEnd[{x, \ y}, \ V, \ W])\)\ , \ {x, \ 
                  y}, \ {}], \ {x, sliceSize[1, 1], \ sliceSize[1, 2]}, \ {y, 
                sliceSize[2, 1], \ sliceSize[2, 2]}], \ 
            1]; \[IndentingNewLine]dMap\  = \ 
          Select[dMap, \ Length[#] > 0 &]; \[IndentingNewLine]outImage\  = \ 
          V; \[IndentingNewLine]Scan[\(outImage\[LeftDoubleBracket]\ #\
\[LeftDoubleBracket]1\[RightDoubleBracket], #\[LeftDoubleBracket]2\
\[RightDoubleBracket]\ \[RightDoubleBracket]\ \  = \ 0;\) &, 
          dMap]; \[IndentingNewLine] (*\(ListDensityPlot[outImage, \ 
              Mesh \[Rule] False, \ 
              ImageSize \[Rule] {600, \ 
                  600}];\)\ *) \[IndentingNewLine]Return[
          outImage];\[IndentingNewLine]]\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["isCurveNeighbor",
    FontWeight->"Bold"],
  "\nSpecifies whether a given point q is a curve neighbor of the point p in \
image V"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[isCurveNeighbor];\)\), "\[IndentingNewLine]", 
    \(isCurveNeighbor[q_, \ p_, \ 
        V_]\  := \ \[IndentingNewLine]Module[\[IndentingNewLine]{currentN4}, \
\[IndentingNewLine]currentN4\  = \ 
          getN4[p, \ 
            V]; \[IndentingNewLine]Return[\((\((Length[currentN4]\  == \ 
                  2)\)\  && \ 
              MemberQ[currentN4, \ q])\)];\[IndentingNewLine]]\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["addPixelToImage",
    FontWeight->"Bold"],
  "\nAdds a pixel to a binary Image"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[addPixelToImage];\)\), "\[IndentingNewLine]", 
    \(addPixelToImage[p_, \ 
        V_]\  := \ \[IndentingNewLine]Module[\[IndentingNewLine]{outImage}, \
\[IndentingNewLine]outImage\  = \ 
          V; \[IndentingNewLine]outImage\[LeftDoubleBracket]
            p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
            p\[LeftDoubleBracket]2\[RightDoubleBracket]\[RightDoubleBracket]\ \
 = 1; \[IndentingNewLine]Return[outImage];\[IndentingNewLine]]\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getCurveNeighbors",
    FontWeight->"Bold"],
  "\nGets the curve neighbors of a given point p"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[getCurveNeighbors];\)\), "\[IndentingNewLine]", 
    \(getCurveNeighbors[p_, \ 
        V_]\  := \ \[IndentingNewLine]Module[\[IndentingNewLine]{currentN4}, \
\[IndentingNewLine]currentN4\  = \ getN4[p, \ V]; \[IndentingNewLine]Return[
          Select[currentN4, \ 
            isCurveNeighbor[#, \ p, \ 
                V] &\ ]];\[IndentingNewLine]]\), "\[IndentingNewLine]", 
    \(\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["performDilation",
    FontWeight->"Bold"],
  "\nDilates the image by adding curve end points"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[performDilation];\)\), "\[IndentingNewLine]", 
    \(performDilation[V_, \ W_, \ 
        oldV_]\  := \[IndentingNewLine]Module[\[IndentingNewLine]{dMap, \ 
          outImage, \ 
          neighbors}, \[IndentingNewLine] (*\(ListDensityPlot[V, \ 
              Mesh \[Rule] False, \ 
              ImageSize \[Rule] {600, \ 
                  600}];\)*) \[IndentingNewLine]dMap\  = \ 
          Flatten[Table[
              If[isBoundaryPoint[{x, \ y}, \ V, \ W]\ \  && \ 
                  isCurveEnd[{x, \ y}, \ V, \ W]\ , \ {x, \ y}, \ {}], \ {x, 
                sliceSize[1, 1], \ sliceSize[1, 2]}, \ {y, sliceSize[2, 1], \ 
                sliceSize[2, 2]}], \ 1]; \[IndentingNewLine]dMap\  = \ 
          Select[dMap, \ 
            Length[#] > 
                0 &]; \[IndentingNewLine]neighbors\  = \ {}; \
\[IndentingNewLine]Scan[\(neighbors\  = \ 
                Join[neighbors, \ getCurveNeighbors[#, \ oldV]];\) &, \ 
          dMap]; \[IndentingNewLine]outImage\  = \ 
          V; \[IndentingNewLine]Scan[\(outImage\[LeftDoubleBracket]#\
\[LeftDoubleBracket]1\[RightDoubleBracket], \ #\[LeftDoubleBracket]2\
\[RightDoubleBracket]\[RightDoubleBracket]\  = 1;\) &, 
          neighbors]; \[IndentingNewLine] (*\(ListDensityPlot[outImage, \ 
              Mesh \[Rule] False, \ 
              ImageSize \[Rule] {600, \ 
                  600}];\)\ *) \[IndentingNewLine]Return[
          outImage];\[IndentingNewLine]]\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["performPruning",
    FontWeight->"Bold"],
  "\nPrunes the image n times."
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[performPruning];\)\), "\[IndentingNewLine]", 
    \(performPruning[V_, \ W_, \ n_]\  := \[IndentingNewLine]If[\ 
        n\  \[Equal] \ 0, \ 
        V, \ \[IndentingNewLine]Module[\[IndentingNewLine]{erodedImage, \ 
            prunedImage, \ 
            dilatedImage}, \[IndentingNewLine] (*\(ListDensityPlot[V, \ 
                Mesh \[Rule] False, \ 
                ImageSize \[Rule] {600, \ 
                    600}];\)*) \[IndentingNewLine]erodedImage\  = \ 
            performErosion[V, \ W]; \[IndentingNewLine]prunedImage\  = \ 
            performPruning[erodedImage, \ invertImage[erodedImage], \ 
              n - 1]; \[IndentingNewLine]dilatedImage\  = \ 
            performDilation[prunedImage, \ invertImage[prunedImage], \ 
              V]; \[IndentingNewLine] (*\(ListDensityPlot[dilatedImage, \ 
                Mesh \[Rule] False, \ 
                ImageSize \[Rule] {600, \ 
                    600}];\)\ *) \[IndentingNewLine]Return[
            dilatedImage];\[IndentingNewLine]]\[IndentingNewLine]]\)}], \
"Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getCurveLength:",
    FontWeight->"Bold"],
  "\nGets the length of a curve area given the starting point p, and the \
annotated skeleton A"
}], "Subsubtitle"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[getCurveLength];\)\), "\[IndentingNewLine]", 
    \(getCurveLength[p_, \ A_, \ curveTypes_, \ 
        hashKey_]\  := \[IndentingNewLine]Module[\ {n, \ dMap, \ dMap2, \ 
          n4Temp, \ A2, \ toHash, \ doHash, \ curveEndPoints, \ 
          allCurvePoints}, \[IndentingNewLine]If[
          hashKey\[LeftDoubleBracket]2\[RightDoubleBracket]\  \[NotEqual] \ 
            curveLengthHashKey\[LeftDoubleBracket]
              hashKey\[LeftDoubleBracket]1\[RightDoubleBracket]\
\[RightDoubleBracket], \ \[IndentingNewLine]Module[{}, \ \
\[IndentingNewLine]curveLengthHashKey\[LeftDoubleBracket]
                hashKey\[LeftDoubleBracket]1\[RightDoubleBracket]\
\[RightDoubleBracket]\  = \ 
              hashKey\[LeftDoubleBracket]2\[RightDoubleBracket]; \
\[IndentingNewLine]curveLengthHash\[LeftDoubleBracket]
                hashKey\[LeftDoubleBracket]1\[RightDoubleBracket]\
\[RightDoubleBracket]\  = \ 
              getBlankImage[];\[IndentingNewLine]]\[IndentingNewLine]]; \
\[IndentingNewLine]\[IndentingNewLine]If[
          curveLengthHash\[LeftDoubleBracket]
              hashKey\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
              p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
              p\[LeftDoubleBracket]2\[RightDoubleBracket]\[RightDoubleBracket]\
\  > \ 0, \ 
          Return[curveLengthHash\[LeftDoubleBracket]
              hashKey\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
              p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
              p\[LeftDoubleBracket]2\[RightDoubleBracket]\[RightDoubleBracket]\
]]; \[IndentingNewLine]\[IndentingNewLine]A2\  = \ 
          A; \[IndentingNewLine]dMap\  = \ 
          Flatten[Table[
              If[\(! MemberQ[curveTypes, \ 
                    A\[LeftDoubleBracket]x, 
                      y\[RightDoubleBracket]]\), \ {x, \ y}, \ {}], \ {x, 
                sliceSize[1, 1], \ sliceSize[1, 2]}, \ {y, sliceSize[2, 1], \ 
                sliceSize[2, 2]}], \ 1]; \[IndentingNewLine]dMap\  = \ 
          Select[dMap, \ 
            Length[#] > 
                0 &]; \[IndentingNewLine]Scan[\(A2\[LeftDoubleBracket]#\
\[LeftDoubleBracket]1\[RightDoubleBracket], \ #\[LeftDoubleBracket]2\
\[RightDoubleBracket]\[RightDoubleBracket]\  = \ 0;\) &, \ 
          dMap]; \[IndentingNewLine]\[IndentingNewLine] \
(*\(Show[{ListDensityPlot[A2, \ DisplayFunction \[Rule] Identity], 
                Graphics[{RGBColor[1, 0, 0], PointSize[0.02], 
                    Point[Reverse[p] + {\(-0.5\), \(-0.5\)}]}]}, 
              DisplayFunction \[Rule] $DisplayFunction];\)\
*) \[IndentingNewLine]n\  = \ 
          0; \[IndentingNewLine]toHash\  = {}; \[IndentingNewLine]dMap\  = \ \
{p}; \[IndentingNewLine]doHash\  = \ 
          Length[getN4[p, \ A2]]\  \[LessEqual] \ 
            2; \[IndentingNewLine]curveEndPoints\  = \ {}; \
\[IndentingNewLine]If[Length[getN4[p, \ A2]]\  \[NotEqual] \ 2, \ 
          curveEndPoints\  = \ {p}]; \
\[IndentingNewLine]\[IndentingNewLine]allCurvePoints\  = \ {p}; \
\[IndentingNewLine]While[\ 
          True, \[IndentingNewLine]toHash\  = \ 
            Join[toHash, \ 
              dMap]; \[IndentingNewLine]dMap2\  = \ {}; \[IndentingNewLine]n\ \
 = \ n\  + \ Length[
                dMap]; \[IndentingNewLine]Scan[\[IndentingNewLine]\(Module[{},\
 \[IndentingNewLine]A2\[LeftDoubleBracket]#\[LeftDoubleBracket]1\
\[RightDoubleBracket], \ #\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket]\  = \ 0; \[IndentingNewLine]n4Temp = \ 
                    getN4[#, \ A2]; \[IndentingNewLine]dMap2\  = \ 
                    Join[dMap2, 
                      Select[n4Temp, \ \((Length[
                                getN4[#, \ A2]]\  \[LessEqual] \ 
                              1)\)\ \  &]]; \ \
\[IndentingNewLine]allCurvePoints\  = \ 
                    Join[allCurvePoints, 
                      Select[n4Temp, \ \((Length[
                                getN4[#, \ A2]]\  \[LessEqual] \ 
                              1)\)\ \  &]]; \ \
\[IndentingNewLine]curveEndPoints\  = \ 
                    Join[curveEndPoints, 
                      Select[n4Temp, \ \((Length[
                                getN4[#, \ A2]]\  \[NotEqual] \ 
                              1)\)\ \  &]];\ \[IndentingNewLine]];\) &, \ \
\[IndentingNewLine]dMap]; \[IndentingNewLine]dMap\  = \ 
            dMap2; \[IndentingNewLine]If[Length[dMap]\  \[Equal] \ 0, \ 
            Break[]];\[IndentingNewLine]]; \[IndentingNewLine]\
\[IndentingNewLine] (*\(Show[{\[IndentingNewLine]ListDensityPlot[A, \ 
                  DisplayFunction \[Rule] 
                    Identity], \[IndentingNewLine]Graphics[{RGBColor[1, 0, 
                      0], PointSize[0.02], \[IndentingNewLine]Map[
                      Point[Reverse[#] + {\(-0.5\), \(-0.5\)}] &, \ 
                      allCurvePoints]}]}, 
              DisplayFunction \[Rule] $DisplayFunction];\)\
*) \[IndentingNewLine]\[IndentingNewLine]If[
          doHash, \ \[IndentingNewLine]Scan[\(curveLengthHash\
\[LeftDoubleBracket]
                    hashKey\[LeftDoubleBracket]1\[RightDoubleBracket], \ #\
\[LeftDoubleBracket]1\[RightDoubleBracket], \ #\[LeftDoubleBracket]2\
\[RightDoubleBracket]\[RightDoubleBracket]\  = \ {n, \ curveEndPoints, \ 
                    allCurvePoints};\) &, \ 
            toHash]]; \[IndentingNewLine]Return[{n, \ curveEndPoints, \ 
            allCurvePoints}];\[IndentingNewLine]]\)}], "Input"],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(doHash\)\" is similar \
to existing symbol \"\!\(toHash\)\"."\)], "Message"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getClosestValue:",
    FontWeight->"Bold"],
  "\nGets the closest value to a given pixel in the image"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[getClosestValue];\)\), "\[IndentingNewLine]", 
    \(getClosestValue[p_, \ image_, \ 
        level_]\  := \ \[IndentingNewLine]Module[{n4List, \ 
          closestValues}, \[IndentingNewLine]If[
          image\[LeftDoubleBracket]
              p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
              p\[LeftDoubleBracket]2\[RightDoubleBracket]\[RightDoubleBracket]\
\  \[NotEqual] \ 0, \ 
          Return[{{image\[LeftDoubleBracket]
                  p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
                  p\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket], \ level}}]]; \[IndentingNewLine]If[
          level\  \[LessEqual] \ 0, \ 
          Return[{{0, \ 
                level}}]]; \[IndentingNewLine]\[IndentingNewLine]n4List\  = \ 
          Select[n4[
              p], \ \((#\[LeftDoubleBracket]1\[RightDoubleBracket]\  \
\[GreaterEqual] \ sliceSize[1, 
                      1])\)\ \  && \ \((#\[LeftDoubleBracket]1\
\[RightDoubleBracket]\  \[LessEqual] \ 
                    sliceSize[1, 
                      2])\)\  && \ \((#\[LeftDoubleBracket]2\
\[RightDoubleBracket]\  \[GreaterEqual] \ 
                    sliceSize[2, 
                      1])\)\ \  && \ \((#\[LeftDoubleBracket]2\
\[RightDoubleBracket]\  \[LessEqual] \ 
                    sliceSize[2, 
                      2])\) &]; \[IndentingNewLine]closestValues\  = \ {}; \
\[IndentingNewLine]Scan[\(closestValues\  = \ 
                Join[closestValues, \ 
                  getClosestValue[#, \ image, \ level - 1]];\) &, \ 
          n4List]; \[IndentingNewLine]closestValues\  = \ 
          Sort[closestValues, \ \((#1\[LeftDoubleBracket]2\
\[RightDoubleBracket]\  > \ #2\[LeftDoubleBracket]2\[RightDoubleBracket])\) \
&]; \[IndentingNewLine]closestValues\  = \ 
          Select[closestValues, \ #\[LeftDoubleBracket]2\[RightDoubleBracket]\
\  \[Equal] \ closestValues\[LeftDoubleBracket]1, 
                  2\[RightDoubleBracket] &]; \[IndentingNewLine]closestValues\
\  = \ Sort[
            closestValues, \ \((#1\[LeftDoubleBracket]1\[RightDoubleBracket]\ \
 > \ #2\[LeftDoubleBracket]1\[RightDoubleBracket])\) &]; \
\[IndentingNewLine]Return[{closestValues\[LeftDoubleBracket]1\
\[RightDoubleBracket]}];\[IndentingNewLine]]\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["canRemovePixel:",
    FontWeight->"Bold"],
  "\nLets you know whether the given pixel can be removed from the skeleton \
based in the filter criteria.\nCost Function has the following values\n\t1: \
Remove if the length of the added segment >= filter threshold\n\t2: Remove if \
the length of the added segment / length of the total curve >= filter \
threshold\n\t3: Remove if the thickness difference between grayscale levels \
<= filter threshold\n\t4: Remove if the curve has not been growing recently\n\
\t5: Remove if the curve does not fall close to the eigen vector value"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[canRemovePixel];\)\), "\[IndentingNewLine]", 
    \(\(canRemovePixel[p_, \ annotatedTopologyCurves_, \ annotatedCurves_, \ 
          annotatedSkeleton_, thicknessMap_, \ curveEndHistory_, \ 
          costFunction5Val_, \ currentGrayLevel_, \ 
          filterThreshold_, \ \ costFunction_, \ 
          hashGrayValue_]\  := \[IndentingNewLine]Module[{canRemove, \ 
            type}, \[IndentingNewLine]type\  = \ 
            annotatedSkeleton\[LeftDoubleBracket]
              p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
              p\[LeftDoubleBracket]2\[RightDoubleBracket]\[RightDoubleBracket]\
; \ \[IndentingNewLine]canRemove\  = \ False; \[IndentingNewLine]Switch[
            costFunction, \[IndentingNewLine]1, 
            Switch[type, \[IndentingNewLine]1, \ 
              canRemove\  = \ False, \[IndentingNewLine]2, \ 
              canRemove\  = \ \(getCurveLength[p, \ 
                      annotatedTopologyCurves, \ {2, 3, 4}, \ {1, \ 
                        hashGrayValue}]\)\[LeftDoubleBracket]1\
\[RightDoubleBracket]\  >= \ filterThreshold, \[IndentingNewLine]3, \ 
              canRemove\  = \ \(getCurveLength[p, \ 
                      annotatedTopologyCurves, \ {2, 3, 4}, \ {1, \ 
                        hashGrayValue}]\)\[LeftDoubleBracket]1\
\[RightDoubleBracket]\  >= \ filterThreshold, \[IndentingNewLine]4, \ 
              canRemove\  = \ \(getCurveLength[p, \ 
                      annotatedTopologyCurves, \ {2, 3, 4}, \ {1, \ 
                        hashGrayValue}]\)\[LeftDoubleBracket]1\
\[RightDoubleBracket]\  >= \ filterThreshold, \[IndentingNewLine]5, \ 
              canRemove\  = \ True\[IndentingNewLine]], \[IndentingNewLine]2, 
            Switch[type, \[IndentingNewLine]1, \ 
              canRemove\  = \ False, \[IndentingNewLine]2, \ 
              canRemove\  = \ \((\(getCurveLength[p, \ 
                          annotatedTopologyCurves, \ {2, 3, 4}, \ {1, \ 
                            hashGrayValue}]\)\[LeftDoubleBracket]1\
\[RightDoubleBracket]\ /\ \(getCurveLength[p, \ 
                          annotatedSkeleton, \ {2, 3, 4}, \ {2, \ 
                            hashGrayValue}]\)\[LeftDoubleBracket]1\
\[RightDoubleBracket])\)\  >= \ filterThreshold, \[IndentingNewLine]3, \ 
              canRemove\  = \ \((\(getCurveLength[p, \ 
                          annotatedTopologyCurves, \ {2, 3, 4}, \ {1, \ 
                            hashGrayValue}]\)\[LeftDoubleBracket]1\
\[RightDoubleBracket]/\ \(getCurveLength[p, \ 
                          annotatedSkeleton, \ {2, 3, 4}, \ {2, \ 
                            hashGrayValue}]\)\[LeftDoubleBracket]1\
\[RightDoubleBracket])\)\  >= \ filterThreshold, \[IndentingNewLine]4, \ 
              canRemove\  = \ \((\(getCurveLength[p, \ 
                          annotatedTopologyCurves, \ {2, 3, 4}, \ {1, \ 
                            hashGrayValue}]\)\[LeftDoubleBracket]1\
\[RightDoubleBracket]\ /\ \(getCurveLength[p, \ 
                          annotatedSkeleton, \ {2, 3, 4}, \ {2, \ 
                            hashGrayValue}]\)\[LeftDoubleBracket]1\
\[RightDoubleBracket])\)\  >= \ filterThreshold, \[IndentingNewLine]5, \ 
              canRemove\  = \ 
                True\[IndentingNewLine]], \[IndentingNewLine]3, \ 
            Module[{curveStats, \ curveLength, \ endPoints, \ thicknesses, \ 
                totalThickness}, \[IndentingNewLine]curveStats\  = \ \ \
getCurveLength[p, \ 
                  annotatedSkeleton, \ {2, 3, 4}, \ {1, \ 
                    hashGrayValue}]; \[IndentingNewLine]endPoints\  = \ 
                curveStats\[LeftDoubleBracket]2\[RightDoubleBracket]; \
\[IndentingNewLine]curveLength\  = \ 
                curveStats\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]thicknesses\  = \ 
                Map[thicknessMap\[LeftDoubleBracket]#\[LeftDoubleBracket]1\
\[RightDoubleBracket], \ #\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket] &, \ 
                  endPoints]; \[IndentingNewLine]totalThickness\  = \ 
                Sum[thicknesses\[LeftDoubleBracket]i\[RightDoubleBracket], \ \
{i, \ 1, \ Length[thicknesses]}]; \[IndentingNewLine]Switch[
                type, \[IndentingNewLine]1, \ 
                canRemove\  = \ False, \[IndentingNewLine]2, \ 
                canRemove\  = \ \((Length[thicknesses]\  \[Equal] \ 
                        2)\) && \((curveLength\  - \ 
                          totalThickness\ \  \[LessEqual] \ \ \
filterThreshold)\), \[IndentingNewLine]3, \ 
                canRemove\  = \ \ \((Length[thicknesses]\  \[Equal] \ 
                        2)\) && \ \((curveLength\  - \ 
                          totalThickness\ \  \[LessEqual] \ 
                        filterThreshold)\), \[IndentingNewLine]4, \ 
                canRemove\  = \ \ \((Length[thicknesses]\  \[Equal] \ 
                        2)\) && \ \((curveLength\  - \ 
                          totalThickness\ \  \[LessEqual] \ \ \
filterThreshold)\), \[IndentingNewLine]5, \ 
                canRemove\  = \ 
                  True\[IndentingNewLine]];\[IndentingNewLine]], \
\[IndentingNewLine]4, \ 
            Module[{endPoints, \ endValues, \ 
                endFailed}, \[IndentingNewLine]endPoints\  = \ \ \
\(getCurveLength[p, \ 
                    annotatedCurves, \ {2, 3, 4}, \ {1, \ 
                      hashGrayValue}]\)\[LeftDoubleBracket]2\
\[RightDoubleBracket]; \[IndentingNewLine]endValues\  = \ 
                Map[\(getClosestValue[#, \ curveEndHistory, \ 
                        5]\)\[LeftDoubleBracket]1, 1\[RightDoubleBracket] &, 
                  endPoints]; \[IndentingNewLine]endFailed\  = \ 
                False; \[IndentingNewLine]Scan[\(endFailed\  = \ \((endFailed\
\  || \ \((#\  \[GreaterEqual] \ 
                              currentGrayLevel\  + \ 
                                filterThreshold)\))\);\) &, 
                endValues]; \[IndentingNewLine]Map\[IndentingNewLine]Switch[
                  type, \[IndentingNewLine]1, \ 
                  canRemove\  = \ False, \ \[IndentingNewLine]2, \ 
                  canRemove\  = \ endFailed, \[IndentingNewLine]3, \ 
                  canRemove\  = \ \ endFailed, \[IndentingNewLine]4, \ 
                  canRemove\  = \ \ endFailed, \[IndentingNewLine]5, \ 
                  canRemove\  = \ 
                    True\[IndentingNewLine]];\[IndentingNewLine]], \
\[IndentingNewLine]5, \ 
            Module[\[IndentingNewLine]{}, \[IndentingNewLine]\(Switch[
                  type, \[IndentingNewLine]1, \ 
                  canRemove\  = \ False, \[IndentingNewLine]2, \ 
                  canRemove\  = \ 
                    True, \  (*\(costFunction5Val\[LeftDoubleBracket]p\
\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
                        p\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket]\  < \ filterThreshold\)\(,\)*) \[IndentingNewLine]3, \ 
                  canRemove\  = \ 
                    True, \  (*\(costFunction5Val\[LeftDoubleBracket]p\
\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
                        p\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket]\  < \ filterThreshold\)\(,\)*) \[IndentingNewLine]4, \ 
                  canRemove\  = \ 
                    True, \  (*\(costFunction5Val\[LeftDoubleBracket]p\
\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
                        p\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket]\  < \ filterThreshold\)\(,\)*) \[IndentingNewLine]5, \ 
                  canRemove\  = \ 
                    True\[IndentingNewLine]];\)\[IndentingNewLine]]\
\[IndentingNewLine]]; \[IndentingNewLine]Return[
            canRemove];\[IndentingNewLine]];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["annotateImageWithPixelType:",
    FontWeight->"Bold"],
  "\nAnnotates an image with the pixel type"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[annotateImageWithPixelType];\)\), "\[IndentingNewLine]", 
    \(\(annotateImageWithPixelType[
          image_]\  := \ \[IndentingNewLine]Module[{annotatedImage}, \
\[IndentingNewLine]annotatedImage\  = \ 
            getBlankImage[]; \[IndentingNewLine]dMap\  = \ 
            Flatten[Table[
                If[image\[LeftDoubleBracket]x, \ y\[RightDoubleBracket]\  > \ 
                    0, \ {x, \ y, \ 
                    getSkeletalPixelType[{x, y}, \ image]}, \ {}], \ {x, 
                  sliceSize[1, 1], \ sliceSize[1, 2]}, \ {y, 
                  sliceSize[2, 1], \ sliceSize[2, 2]}], \ 
              1]; \[IndentingNewLine]dMap\  = \ 
            Select[dMap, \ 
              Length[#] > 
                  0 &]; \[IndentingNewLine]Scan[\(annotatedImage\
\[LeftDoubleBracket]#\[LeftDoubleBracket]1\[RightDoubleBracket], #\
\[LeftDoubleBracket]2\[RightDoubleBracket]\[RightDoubleBracket]\  = \ #\
\[LeftDoubleBracket]3\[RightDoubleBracket];\) &, \ 
            dMap]; \[IndentingNewLine]annotatedImage\[IndentingNewLine]];\)\)}\
], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["makeGraySkeleton:",
    FontWeight->"Bold"],
  "\nCreates a Gray scale skeleton of the grayImage, starting at the \
grayscale level startLevel, ending at endLevel at a grayscale step of step, \
while perfoming pruneAmount pruning steps."
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[makeGraySkeleton];\)\), "\n", 
    \(makeGraySkeleton[grayImage_, startLevel_, endLevel_, step_, 
        pruneAmount_, filterThreshold_, costFunction_, eigenValues_] := 
      Module[{maxThinningIterations, olderSkeleton, graySkeleton, grayLevels, 
          binaryImage, thinningResults, curveSkeleton, prunedCurveSkeleton, 
          prunedCurveSkeletonWithOlder, topologySkeleton, topologyBranches, 
          annotatedTopologyBranches, annotatedSkeleton, removedPixels, 
          allRemovedPixels, dMap, thicknessMap, lastThicknessMap, 
          actualGraySkeleton, allBranches, annotatedAllBranches, 
          curveEndHistory, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, 
          s12}, maxThinningIterations = 
          100; \[IndentingNewLine]olderSkeleton = 
          getBlankImage[]; \[IndentingNewLine]graySkeleton = 
          getBlankImage[]; \[IndentingNewLine]grayLevels = 
          getBlankImage[]; \[IndentingNewLine]allRemovedPixels = 
          getBlankImage[]; \[IndentingNewLine]curveEndHistory = 
          getBlankImage[]; \[IndentingNewLine]lastThicknessMap = 
          getBlankImage[]; \[IndentingNewLine]Do[
          binaryImage = 
            thresholdImage[grayImage, 
              i]; \[IndentingNewLine]thinningResults = 
            performThinning[binaryImage, invertImage[binaryImage], 
              maxThinningIterations, olderSkeleton, 
              1]; \[IndentingNewLine]curveSkeleton = 
            thinningResults\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]prunedCurveSkeleton = 
            performPruning[curveSkeleton, invertImage[curveSkeleton], 
              pruneAmount]; \[IndentingNewLine]prunedCurveSkeletonWithOlder = 
            BitOr[prunedCurveSkeleton, 
              olderSkeleton]; \[IndentingNewLine]thinningResults = 
            performThinning[binaryImage, invertImage[binaryImage], 
              maxThinningIterations, prunedCurveSkeletonWithOlder, 
              0]; \[IndentingNewLine]topologySkeleton = 
            thinningResults\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]thicknessMap = 
            thinningResults\[LeftDoubleBracket]2\[RightDoubleBracket]; \
\[IndentingNewLine]topologyBranches = \(performThinning[topologySkeleton, 
                invertImage[topologySkeleton], maxThinningIterations, 
                olderSkeleton, 
                0]\)\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]topologyBranches = 
            BitXor[olderSkeleton, 
              topologyBranches]; \[IndentingNewLine]allBranches = 
            BitXor[olderSkeleton, 
              topologySkeleton]; \[IndentingNewLine]annotatedTopologyBranches \
= annotateImageWithPixelType[
              topologyBranches]; \[IndentingNewLine]annotatedSkeleton = 
            annotateImageWithPixelType[
              topologySkeleton]; \[IndentingNewLine]annotatedAllBranches = 
            annotateImageWithPixelType[
              allBranches]; \[IndentingNewLine]removedPixels = 
            getBlankImage[]; \[IndentingNewLine]dMap = 
            Flatten[Table[
                If[MemberQ[{1, 2}, 
                      annotatedSkeleton\[LeftDoubleBracket]x, 
                        y\[RightDoubleBracket]] && \((curveEndHistory\
\[LeftDoubleBracket]x, y\[RightDoubleBracket] \[Equal] 0)\), {x, y}, {}], {x, 
                  sliceSize[1, 1], sliceSize[1, 2]}, {y, sliceSize[2, 1], 
                  sliceSize[2, 2]}], 1]; \[IndentingNewLine]dMap = 
            Select[dMap, 
              Length[#] > 
                  0 &]; \[IndentingNewLine]Scan[\(curveEndHistory\
\[LeftDoubleBracket]#\[LeftDoubleBracket]1\[RightDoubleBracket], #\
\[LeftDoubleBracket]2\[RightDoubleBracket]\[RightDoubleBracket] = i;\) &, 
            dMap]; \[IndentingNewLine]dMap = 
            Flatten[Table[
                If[\((topologyBranches\[LeftDoubleBracket]x, 
                          y\[RightDoubleBracket] \[Equal] 1)\) && 
                    canRemovePixel[{x, y}, annotatedTopologyBranches, 
                      annotatedAllBranches, annotatedSkeleton, 
                      lastThicknessMap, curveEndHistory, eigenValues, i, 
                      filterThreshold, costFunction, i], {x, y}, {}], {x, 
                  sliceSize[1, 1], sliceSize[1, 2]}, {y, sliceSize[2, 1], 
                  sliceSize[2, 2]}], 1]; \[IndentingNewLine]dMap = 
            Select[dMap, 
              Length[#] > 
                  0 &]; \[IndentingNewLine]Scan[\(removedPixels\
\[LeftDoubleBracket]#\[LeftDoubleBracket]1\[RightDoubleBracket], #\
\[LeftDoubleBracket]2\[RightDoubleBracket]\[RightDoubleBracket] = 1;\) &, 
            dMap]; \[IndentingNewLine]allRemovedPixels = 
            BitOr[removedPixels, allRemovedPixels]; \[IndentingNewLine]dMap = 
            Flatten[
              Table[If[\((topologySkeleton\[LeftDoubleBracket]x, 
                          y\[RightDoubleBracket] \[Equal] 
                        1)\) && \((graySkeleton\[LeftDoubleBracket]x, 
                          y\[RightDoubleBracket] \[Equal] 0)\), {x, 
                    y}, {}], {x, sliceSize[1, 1], sliceSize[1, 2]}, {y, 
                  sliceSize[2, 1], sliceSize[2, 2]}], 
              1]; \[IndentingNewLine]dMap = 
            Select[dMap, 
              Length[#] > 
                  0 &]; \[IndentingNewLine]Scan[\(graySkeleton\
\[LeftDoubleBracket]#\[LeftDoubleBracket]1\[RightDoubleBracket], #\
\[LeftDoubleBracket]2\[RightDoubleBracket]\[RightDoubleBracket] = i;\) &, 
            dMap]; \[IndentingNewLine]olderSkeleton = 
            topologySkeleton; \[IndentingNewLine]lastThicknessMap = 
            thicknessMap; \[IndentingNewLine]actualGraySkeleton = 
            graySkeleton; \[IndentingNewLine]dMap = 
            Flatten[Table[
                If[allRemovedPixels\[LeftDoubleBracket]x, 
                      y\[RightDoubleBracket] \[Equal] 1, {x, y}, {}], {x, 
                  sliceSize[1, 1], sliceSize[1, 2]}, {y, sliceSize[2, 1], 
                  sliceSize[2, 2]}], 1]; \[IndentingNewLine]dMap = 
            Select[dMap, 
              Length[#] > 
                  0 &]; \[IndentingNewLine]Scan[\(actualGraySkeleton\
\[LeftDoubleBracket]#\[LeftDoubleBracket]1\[RightDoubleBracket], #\
\[LeftDoubleBracket]2\[RightDoubleBracket]\[RightDoubleBracket] = 0;\) &, 
            dMap]; \[IndentingNewLine]s1 = 
            ListDensityPlot[binaryImage, Mesh \[Rule] False, 
              DisplayFunction \[Rule] Identity, 
              PlotLabel \[Rule] "\<Binary Image\>"]; \[IndentingNewLine]s2 = 
            ListDensityPlot[curveSkeleton, Mesh \[Rule] False, 
              DisplayFunction \[Rule] Identity, 
              PlotLabel \[Rule] "\<Curve Skeleton\>"]; \[IndentingNewLine]s3 \
= ListDensityPlot[prunedCurveSkeleton, Mesh \[Rule] False, 
              DisplayFunction \[Rule] Identity, 
              PlotLabel \[Rule] "\<Pruned Curve Skeleton\>"]; \
\[IndentingNewLine]s4 = 
            ListDensityPlot[prunedCurveSkeletonWithOlder, Mesh \[Rule] False, 
              DisplayFunction \[Rule] Identity, 
              PlotLabel \[Rule] "\<Pruned Curve Skeleton with Older\>"]; \
\[IndentingNewLine]s5 = 
            ListDensityPlot[topologySkeleton, Mesh \[Rule] False, 
              DisplayFunction \[Rule] Identity, 
              PlotLabel \[Rule] "\<Topology Skeleton\>"]; \
\[IndentingNewLine]s6 = 
            ListDensityPlot[graySkeleton, Mesh \[Rule] False, 
              DisplayFunction \[Rule] Identity, 
              PlotLabel \[Rule] "\<Grayscale Skeleton\>"]; \
\[IndentingNewLine]s7 = 
            ListDensityPlot[topologyBranches, Mesh \[Rule] False, 
              DisplayFunction \[Rule] Identity, 
              PlotLabel \[Rule] "\<Topology Branches\>"]; \
\[IndentingNewLine]s8 = 
            ListDensityPlot[removedPixels, Mesh \[Rule] False, 
              DisplayFunction \[Rule] Identity, 
              PlotLabel \[Rule] "\<Removed Pixels\>"]; \[IndentingNewLine]s9 \
= ListDensityPlot[allRemovedPixels, Mesh \[Rule] False, 
              DisplayFunction \[Rule] Identity, 
              PlotLabel \[Rule] "\<All Removed Pixels\>"]; \
\[IndentingNewLine]s10 = 
            ListDensityPlot[actualGraySkeleton, Mesh \[Rule] False, 
              DisplayFunction \[Rule] Identity, 
              PlotLabel \[Rule] "\<Actual Grayskeleton\>"]; \
\[IndentingNewLine]s11 = 
            ListDensityPlot[curveEndHistory, Mesh \[Rule] False, 
              DisplayFunction \[Rule] Identity, 
              PlotLabel \[Rule] "\<Curve End History\>"]; \
\[IndentingNewLine]s12 = 
            ListDensityPlot[allBranches, Mesh \[Rule] False, 
              DisplayFunction \[Rule] Identity, 
              PlotLabel \[Rule] "\<All Branches\>"]; \[IndentingNewLine]s13 = 
            ListDensityPlot[annotatedSkeleton, Mesh \[Rule] False, 
              DisplayFunction \[Rule] Identity, 
              PlotLabel \[Rule] "\<Annotated Skeleton\>"]; \
\[IndentingNewLine]Show[GraphicsArray[{s1, s4, s5, s6, s12, s9, s10}], 
            PlotLabel \[Rule] "\<Grayscale value: \>" <> ToString[i], 
            DisplayFunction \[Rule] $DisplayFunction, 
            ImageSize \[Rule] {1200, 1200/5}];, {i, endLevel, 
            startLevel, \(-step\)}]; \[IndentingNewLine]Return[{graySkeleton, 
            actualGraySkeleton}];]\)}], "Input"],

Cell[BoxData[""], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Structure Tensor Methods", "Subtitle"],

Cell[TextData[{
  StyleBox["getGradientField",
    FontWeight->"Bold"],
  ":\nGets the gradient field of the image"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[getGradientField];\)\), "\[IndentingNewLine]", 
    \(\(getGradientField[
          arr_] := \[IndentingNewLine]Module[\[IndentingNewLine]{grad, len, 
            wid}, \[IndentingNewLine]grad\  = \ 
            Map[Map[{0, 0} &, #] &, arr]; \[IndentingNewLine]{len, wid} = 
            Dimensions[
              arr]; \[IndentingNewLine]Do[\[IndentingNewLine]grad\
\[LeftDoubleBracket]x, 
                y\[RightDoubleBracket] = {arr\[LeftDoubleBracket]x + 1, 
                    y\[RightDoubleBracket] - 
                  arr\[LeftDoubleBracket]x - 1, y\[RightDoubleBracket], 
                arr\[LeftDoubleBracket]x, y + 1\[RightDoubleBracket] - 
                  arr\[LeftDoubleBracket]x, 
                    y - 1\[RightDoubleBracket]}, \[IndentingNewLine]{x, 2, 
              len - 1}, {y, 2, 
              wid - 1}]; \[IndentingNewLine]grad\[IndentingNewLine]];\)\)}], \
"Input"],

Cell["\<\
ListPlotVectorField[Reverse[getGradientField[slice]],ScaleFunction\[Rule](.2&)\
,Frame\[Rule]True];\
\>", "SmallText"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getGaussianMask",
    FontWeight->"Bold"],
  ":\nGets a Gaussian Mask"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[getGaussianMask];\)\), "\[IndentingNewLine]", 
    \(\(getGaussianMask[
          a_] := \[IndentingNewLine]Module[\[IndentingNewLine]{res}, \
\[IndentingNewLine]res\  = \ 
            Flatten[Table[
                Binomial[2*a, Floor[\@\(x\^2 + y\^2\)] + a], {x, \(-a\), 
                  a}, {y, \(-a\), a}]]; \[IndentingNewLine]N[
            res/Tr[res]]\[IndentingNewLine]];\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(getGaussianMask[2]\)], "Input"],

Cell[BoxData[
    \({0.018518518518518517`, 0.018518518518518517`, 0.018518518518518517`, 
      0.018518518518518517`, 0.018518518518518517`, 0.018518518518518517`, 
      0.07407407407407407`, 0.07407407407407407`, 0.07407407407407407`, 
      0.018518518518518517`, 0.018518518518518517`, 0.07407407407407407`, 
      0.1111111111111111`, 0.07407407407407407`, 0.018518518518518517`, 
      0.018518518518518517`, 0.07407407407407407`, 0.07407407407407407`, 
      0.07407407407407407`, 0.018518518518518517`, 0.018518518518518517`, 
      0.018518518518518517`, 0.018518518518518517`, 0.018518518518518517`, 
      0.018518518518518517`}\)], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getLocalStructureTensor",
    FontWeight->"Bold"],
  ":\nGets the local structure tensor given the gradient field grad_ and the \
mask width a_"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[getLocalStructureTensor];\)\), "\[IndentingNewLine]", 
    \(\(getLocalStructureTensor[grad_, 
          a_] := \[IndentingNewLine]Module[\[IndentingNewLine]{tensors, 
            lst, \ len, wid, t, mask}, \[IndentingNewLine]tensors = 
            Map[Map[\((Transpose[{#}] . {#})\) &, #] &, 
              grad]; \[IndentingNewLine]lst = 
            Map[Map[{{0, 0}, {0, 0}} &, #] &, grad]; \[IndentingNewLine]len = 
            Length[grad]; \[IndentingNewLine]wid = 
            Length[grad\[LeftDoubleBracket]1\[RightDoubleBracket]]; \
\[IndentingNewLine]mask = 
            getGaussianMask[
              a]; \[IndentingNewLine]Do[\[IndentingNewLine]\(lst\
\[LeftDoubleBracket]x, y\[RightDoubleBracket] = 
                mask . Flatten[Take[tensors, {x - a, x + a}, {y - a, y + a}], 
                    1];\), \[IndentingNewLine]{x, a + 1, len - a}, {y, a + 1, 
              wid - a}]; \[IndentingNewLine]lst];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["normalizeVector",
    FontWeight->"Bold"],
  ":\nNormalizes a vector"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[normalizeVector];\)\), "\[IndentingNewLine]", 
    \(\(normalizeVector[v_] := \[IndentingNewLine]If[
          v . v\  \[NotEqual] \ 0, \ v/\@\(v . v\), \ {0, 0}];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getEigen",
    FontWeight->"Bold"],
  ":\nGets the eigen values of a list of structure tensors"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[getEigen];\)\), "\n", 
    \(\(getEigen[lst_] := Map[Map[Eigensystem, #] &, lst];\)\)}], "Input"],

Cell["\<\
lst=getLocalStructureTensor[getGradientField[slice],gaussianRadius];
eigens=getEigen[lst];
Show[{ListDensityPlot[slice/255.0,Mesh\[Rule]False,ColorFunctionScaling\[Rule]\
False,DisplayFunction\[Rule]Identity],Graphics[{RGBColor[0,0,1],Table[If[\
eigens\[LeftDoubleBracket]x,y,1,1\[RightDoubleBracket]>0,Line[{{y,x},{y,x}+\
Reverse[normalizeVector[eigens\[LeftDoubleBracket]x,y,2,2\[RightDoubleBracket]\
]]*(1-eigens\[LeftDoubleBracket]x,y,1,2\[RightDoubleBracket]/eigens\
\[LeftDoubleBracket]x,y,1,1\[RightDoubleBracket])}],Circle[{y,x},0.01]],{x,\
Length[eigens]},{y,Length[eigens\[LeftDoubleBracket]1\[RightDoubleBracket]]}]}\
,AspectRatio\[Rule]Automatic,PlotRange\[Rule]{{0,65},{0,65}},Frame\[Rule]True,\
DisplayFunction\[Rule]Identity]},DisplayFunction\[Rule]$DisplayFunction];\
\>", "SmallText"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getCostFunction5",
    FontWeight->"Bold"],
  ":\nReturns the cost of adding in a new pixel based on the structure tensor \
eigen analysis."
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[getCostFunction5];\)\), "\[IndentingNewLine]", 
    \(\(getCostFunction5[p_, \ \ eigenValues_, \ \ skeletonDirections_, \ 
          annotatedSkeleton_]\  := \ \[IndentingNewLine]Module[{cost}, \
\[IndentingNewLine]cost\  = \ 
            0; \[IndentingNewLine]If[\((eigenValues\[LeftDoubleBracket]
                  p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
                  p\[LeftDoubleBracket]2\[RightDoubleBracket], \ 1, \ 
                  1\[RightDoubleBracket]\  \[NotEqual] \ 
                0)\), \[IndentingNewLine]cost\  = \ \((Abs[
                    skeletonDirections\[LeftDoubleBracket]
                        p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
                        p\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket]\  . \ 
                      eigenValues\[LeftDoubleBracket]
                        p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
                        p\[LeftDoubleBracket]2\[RightDoubleBracket], \ 2, \ 
                        2\[RightDoubleBracket]])\)\ *\ \((1 - \ 
                    Abs[eigenValues\[LeftDoubleBracket]
                          p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
                          p\[LeftDoubleBracket]2\[RightDoubleBracket], \ 1, \ 
                          2\[RightDoubleBracket]\ /\ \ eigenValues\
\[LeftDoubleBracket]p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
                          p\[LeftDoubleBracket]2\[RightDoubleBracket], \ 1, \ 
                          1\[RightDoubleBracket]]\ )\)]; \[IndentingNewLine]\
\[IndentingNewLine]If[
            annotatedSkeleton\[LeftDoubleBracket]
                p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
                p\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket]\  \[Equal] \ 1, \ \[IndentingNewLine]cost\  = \ 
              Max[{cost, \ 
                  Abs[eigenValues\[LeftDoubleBracket]
                        p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
                        p\[LeftDoubleBracket]2\[RightDoubleBracket], \ 1, \ 
                        2\[RightDoubleBracket]\ /\ \ eigenValues\
\[LeftDoubleBracket]p\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
                        p\[LeftDoubleBracket]2\[RightDoubleBracket], \ 1, \ 
                        1\[RightDoubleBracket]]\ }]]; \
\[IndentingNewLine]Return[cost];\[IndentingNewLine]];\)\)}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getCostFunction5Image",
    FontWeight->"Bold"],
  ":\nGets an image annotated using the 5th cost function (Eigen Analysis)"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[getCostFunction5Image];\)\), "\[IndentingNewLine]", 
    \(\(getCostFunction5Image[skeleton_, \ eigenValues_, \ 
          skeletonDirections_, \ 
          annotatedSkeleton_]\  := \[IndentingNewLine]Module[{retVal, \ 
            s2}, \[IndentingNewLine]s2\  = \ 
            skeleton; \[IndentingNewLine]retVal\  = \ 
            Table[\[IndentingNewLine]If[
                s2\[LeftDoubleBracket]x, \ y\[RightDoubleBracket]\  > \ 
                  0, \ \[IndentingNewLine]getCostFunction5[{x, 
                    y}, \ \ eigenValues, \ \ skeletonDirections, \ 
                  annotatedSkeleton], \[IndentingNewLine]0], \
\[IndentingNewLine]{x, \ 
                1, \ \(Dimensions[
                    skeleton]\)\[LeftDoubleBracket]1\[RightDoubleBracket]}, \ \
\[IndentingNewLine]{y, \ 
                1, \ \(Dimensions[
                    skeleton]\)\[LeftDoubleBracket]2\[RightDoubleBracket]}]; \
\[IndentingNewLine]Return[retVal];\[IndentingNewLine]];\)\)}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getSkeletonDirection",
    FontWeight->"Bold"],
  ":\nGets the Vector field of the skeleton"
}], "Subsubtitle"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[getSkeletonDirection];\)\), "\[IndentingNewLine]", 
    \(\(getSkeletonDirection[
          skeleton_]\  := \ \[IndentingNewLine]Module[{direction, \ 
            defaultDirections}, \[IndentingNewLine]defaultDirections\  = \ 
            getEigen[
              getLocalStructureTensor[getGradientField[skeleton], 
                1]]; \[IndentingNewLine]direction\  = \ 
            Table[\[IndentingNewLine]If[
                skeleton\[LeftDoubleBracket]x, y\[RightDoubleBracket]\  > \ 
                  0, \ \[IndentingNewLine]Module[{n4, \ 
                    dir}, \[IndentingNewLine]n4\  = \ 
                    getN4[{x, y}, \ skeleton]; \[IndentingNewLine]dir\  = \ 
                    defaultDirections\[LeftDoubleBracket]x, y, 2, 
                      2\[RightDoubleBracket]; \[IndentingNewLine]Switch[
                    Length[n4], \[IndentingNewLine]1, \ \(dir\  = \ 
                        n4\[LeftDoubleBracket]1\[RightDoubleBracket]\  - \ \
{x, y};\), \[IndentingNewLine]2, \ 
                    dir\  = \ 
                      n4\[LeftDoubleBracket]2\[RightDoubleBracket]\  - \ 
                        n4\[LeftDoubleBracket]1\[RightDoubleBracket]]; \
\[IndentingNewLine]normalizeVector[
                    dir]\[IndentingNewLine]], \ \[IndentingNewLine]{0, 
                  0}], \[IndentingNewLine]\ {x, \ 
                1, \ \(Dimensions[
                    skeleton]\)\[LeftDoubleBracket]1\[RightDoubleBracket]}, \ \
\[IndentingNewLine]{y, \ 
                1, \ \(Dimensions[
                    skeleton]\)\[LeftDoubleBracket]2\[RightDoubleBracket]}\
\[IndentingNewLine]]; \[IndentingNewLine]Return[
            direction]\[IndentingNewLine]];\)\)}], "Input"],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(direction\)\" is \
similar to existing symbol \"\!\(Direction\)\"."\)], "Message"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["doSkeletonCleanup:",
    FontWeight->"Bold"],
  "\nCleans up the skeleton using cost function 5"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[doSkeletonCleanup];\)\), "\[IndentingNewLine]", 
    \(doSkeletonCleanup[sourceImage_, \ skeleton_, \ threshold_, \ 
        stepSize_, \ showGeneralPlots_, \ 
        showIterationPlots_]\  := \ \[IndentingNewLine]Module[\
\[IndentingNewLine]{sourceEigens, \ binarySkeleton, \ skeletonDirections, \ 
          pixelCosts, \ prunedSkeleton, \ newPixels, \ annotatedNewPixels, 
          grayValueSkeleton, \[IndentingNewLine]p1, p2, p3, p4, p5, p6, p7, \ 
          p01, \ p02, \ p03}, \[IndentingNewLine]sourceEigens\  = \ 
          getEigen[
            getLocalStructureTensor[getGradientField[sourceImage], 
              gaussianRadius]]; \[IndentingNewLine]binarySkeleton\  = \ 
          thresholdImage[skeleton, \ 
            1]; \[IndentingNewLine]skeletonDirections\  = \ 
          getSkeletonDirection[
            binarySkeleton]; \[IndentingNewLine]pixelCosts\  = \ 
          getCostFunction5Image[binarySkeleton, \ \ sourceEigens, \ 
            skeletonDirections, \ \ annotateImageWithPixelType[
              binarySkeleton]]; \[IndentingNewLine]prunedSkeleton\  = \ 
          getBlankImage[]; \[IndentingNewLine]\[IndentingNewLine]If[
          showGeneralPlots, \ \[IndentingNewLine]\(Module[\ {}, \
\[IndentingNewLine]p1\  = \ 
                ListDensityPlot[sourceImage, \ Mesh \[Rule] False, \ 
                  DisplayFunction \[Rule] Identity, \ 
                  PlotLabel -> "\<Source Image\>"]; \[IndentingNewLine]p2\  = \
\ \ ListDensityPlot[skeleton, \ Mesh \[Rule] False, \ 
                  DisplayFunction \[Rule] Identity, \ 
                  PlotLabel -> "\<Grayscale Skeleton\>"]; \
\[IndentingNewLine]p3\  = \ \ ListDensityPlot[binarySkeleton, \ 
                  Mesh \[Rule] False, \ DisplayFunction \[Rule] Identity, \ 
                  PlotLabel -> "\<Binary Skeleton\>"]; \[IndentingNewLine]p4\ \
 = \ Show[{ListDensityPlot[sourceImage/255.0, Mesh \[Rule] False, 
                      ColorFunctionScaling \[Rule] False, 
                      DisplayFunction \[Rule] Identity], 
                    Graphics[{RGBColor[0, 0, 1], \ \[IndentingNewLine]Table[
                          If[sourceEigens\[LeftDoubleBracket]x, y, 1, 
                                1\[RightDoubleBracket] > 
                              0, \[IndentingNewLine]Line[{{y - 0.5, 
                                  x - 0.5}, {y - 0.5, x - 0.5} + 
                                  Reverse[
                                      normalizeVector[
                                        sourceEigens\[LeftDoubleBracket]x, y, 
                                        2, 2\[RightDoubleBracket]]]*\((1 - 
                                        sourceEigens\[LeftDoubleBracket]x, y, 
                                        1, 2\[RightDoubleBracket]/
                                        sourceEigens\[LeftDoubleBracket]x, y, 
                                        1, 1\[RightDoubleBracket])\)}], \
\[IndentingNewLine]Line[{{y - 0.5, x - 0.5}, {y - 0.5, 
                                  x - 0.5}}]], \[IndentingNewLine]{x, 
                            Length[sourceEigens]}, \[IndentingNewLine]{y, 
                            Length[
                              sourceEigens\[LeftDoubleBracket]1\
\[RightDoubleBracket]]}]}, \[IndentingNewLine]AspectRatio \[Rule] Automatic, 
                      PlotRange \[Rule] {{0, 65}, {0, 65}}, 
                      Frame \[Rule] True, DisplayFunction \[Rule] Identity]}, 
                  DisplayFunction \[Rule] Identity, \ 
                  PlotLabel -> "\<Source Vector Field\>"]; \
\[IndentingNewLine]p5\  = \ 
                Show[{ListDensityPlot[thresholdImage[skeleton, 1]/255.0, 
                      Mesh \[Rule] False, ColorFunctionScaling \[Rule] False, 
                      DisplayFunction \[Rule] Identity], 
                    Graphics[{RGBColor[0, 0, 
                          1], \ \[IndentingNewLine]Table[\[IndentingNewLine]\
Line[{{y - 0.5, x - 0.5}, {y - 0.5, x - 0.5} + 
                                Reverse[
                                  normalizeVector[
                                      skeletonDirections\[LeftDoubleBracket]x,\
 y\[RightDoubleBracket]]/2]}], \[IndentingNewLine]{x, 
                            Length[
                              skeletonDirections]}, \[IndentingNewLine]{y, 
                            Length[
                              skeletonDirections\[LeftDoubleBracket]1\
\[RightDoubleBracket]]}]}, \[IndentingNewLine]AspectRatio \[Rule] Automatic, 
                      PlotRange \[Rule] {{0, 65}, {0, 65}}, 
                      Frame \[Rule] True, DisplayFunction \[Rule] Identity]}, 
                  DisplayFunction \[Rule] Identity, \ 
                  PlotLabel -> "\<Skeleton Vector Field\>"]; \
\[IndentingNewLine]p6\  = \ 
                Show[{ListDensityPlot[slice/255.0, Mesh \[Rule] False, 
                      ColorFunctionScaling \[Rule] False, 
                      DisplayFunction \[Rule] Identity], 
                    Graphics[{RGBColor[0, 0, 1], \ \[IndentingNewLine]Table[
                          If[sourceEigens\[LeftDoubleBracket]x, y, 1, 
                                1\[RightDoubleBracket] > 
                              0, \[IndentingNewLine]Line[{{y - 0.5, 
                                  x - 0.5}, {y - 0.5, x - 0.5} + 
                                  Reverse[
                                      normalizeVector[
                                        sourceEigens\[LeftDoubleBracket]x, y, 
                                        2, 2\[RightDoubleBracket]]]*\((1 - 
                                        sourceEigens\[LeftDoubleBracket]x, y, 
                                        1, 2\[RightDoubleBracket]/
                                        sourceEigens\[LeftDoubleBracket]x, y, 
                                        1, 1\[RightDoubleBracket])\)}], \
\[IndentingNewLine]Line[{{y - 0.5, x - 0.5}, {y - 0.5, 
                                  x - 0.5}}]], \[IndentingNewLine]{x, 
                            Length[sourceEigens]}, \[IndentingNewLine]{y, 
                            Length[
                              sourceEigens\[LeftDoubleBracket]1\
\[RightDoubleBracket]]}]}, \[IndentingNewLine]AspectRatio \[Rule] Automatic, 
                      PlotRange \[Rule] {{0, 65}, {0, 65}}, 
                      Frame \[Rule] True, 
                      DisplayFunction \[Rule] 
                        Identity], \[IndentingNewLine]Graphics[{RGBColor[1, 
                          0, 0], \ \[IndentingNewLine]Table[\
\[IndentingNewLine]Line[{{y - 0.5, x - 0.5}, {y - 0.5, x - 0.5} + 
                                Reverse[
                                  normalizeVector[
                                      skeletonDirections\[LeftDoubleBracket]x,\
 y\[RightDoubleBracket]]/2]}], \[IndentingNewLine]{x, 
                            Length[
                              skeletonDirections]}, \[IndentingNewLine]{y, 
                            Length[
                              skeletonDirections\[LeftDoubleBracket]1\
\[RightDoubleBracket]]}]}, \[IndentingNewLine]AspectRatio \[Rule] Automatic, 
                      PlotRange \[Rule] {{0, 65}, {0, 65}}, 
                      Frame \[Rule] True, 
                      DisplayFunction \[Rule] Identity]\[IndentingNewLine]}, 
                  DisplayFunction \[Rule] Identity, \ 
                  PlotLabel -> "\<Source  Field on Skeleton Field\>"]; \
\[IndentingNewLine]p7 = \ 
                ListDensityPlot[pixelCosts, Mesh \[Rule] False, 
                  DisplayFunction \[Rule] Identity, \ 
                  PlotLabel -> "\<Cost Function\>"]; \[IndentingNewLine]Show[
                GraphicsArray[{{p1, p2, p3}, \ {p4, p5, p6}, \ {p7}}], \ 
                ImageSize \[Rule] {1200, 
                    1200}];\[IndentingNewLine]];\)]; \[IndentingNewLine]\
\[IndentingNewLine]\[IndentingNewLine]Do[\[IndentingNewLine]grayValueSkeleton\
\  = \ thresholdImage[skeleton, \ 
              grayValue]; \[IndentingNewLine]newPixels\  = \ 
            grayValueSkeleton\  - \ 
              prunedSkeleton; \[IndentingNewLine]annotatedNewPixels\  = \ 
            annotateImageWithPixelType[
              newPixels]; \
\[IndentingNewLine]\[IndentingNewLine]skeletonDirections\  = \ 
            getSkeletonDirection[
              grayValueSkeleton]; \[IndentingNewLine]pixelCosts\  = \ 
            getCostFunction5Image[grayValueSkeleton, \ \ sourceEigens, \ 
              skeletonDirections, \ 
              annotatedNewPixels]; \[IndentingNewLine]\[IndentingNewLine]If[
            showIterationPlots, \ \[IndentingNewLine]\(p01\  = \ 
                ListDensityPlot[newPixels, \ Mesh \[Rule] False, \ 
                  DisplayFunction \[Rule] Identity, \ 
                  PlotLabel -> "\<New Pixels\>"];\)\[IndentingNewLine]]; \
\[IndentingNewLine]\[IndentingNewLine]dMap = 
            Flatten[Table[
                If[\((newPixels\[LeftDoubleBracket]x, 
                        y\[RightDoubleBracket]\ \  > \ 0)\), {x, y}, {}], {x, 
                  sliceSize[1, 1], sliceSize[1, 2]}, {y, sliceSize[2, 1], 
                  sliceSize[2, 2]}], 1]; \[IndentingNewLine]dMap = 
            Select[dMap, 
              Length[#] > 
                  0 &]; \[IndentingNewLine]Scan[\[IndentingNewLine]\(If[
                  newPixels\[LeftDoubleBracket]#\[LeftDoubleBracket]1\
\[RightDoubleBracket], \ #\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket]\  > \ 
                    0, \ \[IndentingNewLine]\(Module[{curvePoints, \ 
                        curveCost}, \[IndentingNewLine]curvePoints\  = \ \
\(getCurveLength[#, \ annotatedNewPixels, \ {1, 2, 3, 4}, \ {1, 
                              grayValue}]\)\[LeftDoubleBracket]3\
\[RightDoubleBracket]; \[IndentingNewLine]curveCost\  = \ 
                        Sum[\(Map[
                                pixelCosts\[LeftDoubleBracket]#\
\[LeftDoubleBracket]1\[RightDoubleBracket], \ #\[LeftDoubleBracket]2\
\[RightDoubleBracket]\[RightDoubleBracket] &, \ 
                                curvePoints]\)\[LeftDoubleBracket]i\
\[RightDoubleBracket], \ {i, \ 1, \ Length[curvePoints]}\ ]/
                          Length[curvePoints]; \[IndentingNewLine]If[
                        curveCost\  >= \ 
                          threshold, \
\[IndentingNewLine]\(Scan[\(prunedSkeleton\[LeftDoubleBracket]#\
\[LeftDoubleBracket]1\[RightDoubleBracket], \ #\[LeftDoubleBracket]2\
\[RightDoubleBracket]\[RightDoubleBracket]\  = \ 1;\) &, 
                            curvePoints];\)\[IndentingNewLine]]; \
\[IndentingNewLine]Scan[\(newPixels\[LeftDoubleBracket]#\[LeftDoubleBracket]1\
\[RightDoubleBracket], \ #\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket]\  = \ 0;\) &, 
                        curvePoints];\[IndentingNewLine]];\)];\)\
\[IndentingNewLine] &, dMap]; \[IndentingNewLine]\[IndentingNewLine]If[
            showIterationPlots, \[IndentingNewLine]p02\  = \ 
              ListDensityPlot[prunedSkeleton, \ Mesh \[Rule] False, \ 
                DisplayFunction \[Rule] Identity, \ 
                PlotLabel -> "\<Pruned Skeleton\>"]; \[IndentingNewLine]p03\  \
= \ Show[{ListDensityPlot[slice/255.0, Mesh \[Rule] False, 
                    ColorFunctionScaling \[Rule] False, 
                    DisplayFunction \[Rule] Identity], 
                  Graphics[{RGBColor[0, 0, 1], \ \[IndentingNewLine]Table[
                        If[sourceEigens\[LeftDoubleBracket]x, y, 1, 
                              1\[RightDoubleBracket] > 
                            0, \[IndentingNewLine]Line[{{y - 0.5, 
                                x - 0.5}, {y - 0.5, x - 0.5} + 
                                Reverse[
                                    normalizeVector[
                                      sourceEigens\[LeftDoubleBracket]x, y, 
                                        2, 2\[RightDoubleBracket]]]*\((1 - 
                                      sourceEigens\[LeftDoubleBracket]x, y, 
                                        1, 2\[RightDoubleBracket]/
                                        sourceEigens\[LeftDoubleBracket]x, y, 
                                        1, 1\[RightDoubleBracket])\)}], \
\[IndentingNewLine]Line[{{y - 0.5, x - 0.5}, {y - 0.5, 
                                x - 0.5}}]], \[IndentingNewLine]{x, 
                          Length[sourceEigens]}, \[IndentingNewLine]{y, 
                          Length[
                            sourceEigens\[LeftDoubleBracket]1\
\[RightDoubleBracket]]}]}, \[IndentingNewLine]AspectRatio \[Rule] Automatic, 
                    PlotRange \[Rule] {{0, 65}, {0, 65}}, Frame \[Rule] True, 
                    DisplayFunction \[Rule] 
                      Identity], \[IndentingNewLine]Graphics[{RGBColor[1, 0, 
                        0], \ \[IndentingNewLine]Table[\[IndentingNewLine]\
Line[{{y - 0.5, x - 0.5}, {y - 0.5, x - 0.5} + 
                              Reverse[
                                normalizeVector[
                                    skeletonDirections\[LeftDoubleBracket]x, 
                                      y\[RightDoubleBracket]]/
                                  2]}], \[IndentingNewLine]{x, 
                          Length[skeletonDirections]}, \[IndentingNewLine]{y, 
                          Length[
                            skeletonDirections\[LeftDoubleBracket]1\
\[RightDoubleBracket]]}]}, \[IndentingNewLine]AspectRatio \[Rule] Automatic, 
                    PlotRange \[Rule] {{0, 65}, {0, 65}}, Frame \[Rule] True, 
                    DisplayFunction \[Rule] Identity]\[IndentingNewLine]}, 
                DisplayFunction \[Rule] Identity, \ 
                PlotLabel -> "\<Source  Field on Skeleton Field\>"]; \
\[IndentingNewLine]p04 = \ 
              ListDensityPlot[pixelCosts, Mesh \[Rule] False, 
                DisplayFunction \[Rule] Identity, \ 
                PlotLabel -> "\<Cost Function\>"]; \[IndentingNewLine]Show[
              GraphicsArray[{p01, \ p02, \ p03, \ p04}], \ 
              ImageSize \[Rule] {1200, 300}, \ 
              PlotLabel -> "\<Gray Value : \>" <> \ 
                  ToString[
                    grayValue]];\[IndentingNewLine]];\[IndentingNewLine]\
\[IndentingNewLine], \[IndentingNewLine]{grayValue, \ 255, \ 1, \ 
            stepSize}]; \[IndentingNewLine]\[IndentingNewLine]\
\[IndentingNewLine]newSkeleton\ \  = \ 
          skeleton; \[IndentingNewLine]\[IndentingNewLine]dMap = 
          Flatten[Table[
              If[\((prunedSkeleton\[LeftDoubleBracket]x, 
                      y\[RightDoubleBracket]\ \  \[Equal] \ 0)\), {x, 
                  y}, {}], {x, sliceSize[1, 1], sliceSize[1, 2]}, {y, 
                sliceSize[2, 1], sliceSize[2, 2]}], 
            1]; \[IndentingNewLine]dMap = 
          Select[dMap, 
            Length[#] > 
                0 &]; \[IndentingNewLine]Scan[\(newSkeleton\
\[LeftDoubleBracket]#\[LeftDoubleBracket]1\[RightDoubleBracket], \ #\
\[LeftDoubleBracket]2\[RightDoubleBracket]\[RightDoubleBracket]\  = \ 0;\) &, 
          dMap]; \[IndentingNewLine]\[IndentingNewLine]Return[{newSkeleton, \ 
            prunedSkeleton}];\[IndentingNewLine]\[IndentingNewLine]]\)}], \
"Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Statistical Profiles", "Subtitle"],

Cell[TextData[{
  StyleBox["getPriorVal",
    FontWeight->"Bold"],
  "\nGets the earlier value in the histogram table"
}], "Subsubtitle"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[getPriorVal];\)\), "\[IndentingNewLine]", 
    \(getPriorVal[hist_, \ 
        currentIndex_]\  := \[IndentingNewLine]Module[{priorVal, \ cVal, \ 
          pVal, \ i}, \[IndentingNewLine]priorVal\  = \ 
          0; \[IndentingNewLine]cVal\  = \ 
          hist\[LeftDoubleBracket]currentIndex, \ 
            2\[RightDoubleBracket]; \[IndentingNewLine]i\  = \ 
          currentIndex\  - \ 1; \[IndentingNewLine]While[
          i\  >= \ 1, \[IndentingNewLine]priorVal\  = \ 
            hist\[LeftDoubleBracket]i, \ 
              2\[RightDoubleBracket]; \[IndentingNewLine]Break[]; \
\[IndentingNewLine]\(i--\);\[IndentingNewLine]]; \[IndentingNewLine]priorVal\
\[IndentingNewLine]]\)}], "Input"],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(pVal\)\" is similar to \
existing symbol \"\!\(cVal\)\"."\)], "Message"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getNextVal",
    FontWeight->"Bold"],
  "\nGets the next value in the histogram table"
}], "Subsubtitle"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[getNextVal];\)\), "\[IndentingNewLine]", 
    \(getNextVal[hist_, \ 
        currentIndex_]\  := \[IndentingNewLine]Module[{nextVal, \ cVal, \ 
          nVal, \ i}, \[IndentingNewLine]nextVal\  = \ 
          0; \[IndentingNewLine]cVal\  = \ 
          hist\[LeftDoubleBracket]currentIndex, \ 
            2\[RightDoubleBracket]; \[IndentingNewLine]i\  = \ 
          currentIndex\  + \ 1; \[IndentingNewLine]While[
          i\  <= \ Length[hist], \[IndentingNewLine]nVal\  = \ 
            hist\[LeftDoubleBracket]i, \ 
              2\[RightDoubleBracket]; \[IndentingNewLine]If[
            nVal\  \[NotEqual] \ cVal, \ 
            Module[{}, \ nextVal\  = \ nVal; \ 
              Break[]]]; \[IndentingNewLine]\(i++\);\[IndentingNewLine]]; \
\[IndentingNewLine]nextVal\[IndentingNewLine]]\)}], "Input"],

Cell[BoxData[
    \(General::"spell" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(nVal\)\" is similar to \
existing symbols \!\({cVal, pVal}\)."\)], "Message"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["smudgeHistogram",
    FontWeight->"Bold"],
  "\nSmudges a histogram by averaging the neighbors"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[smudgeHistogram];\)\), "\[IndentingNewLine]", 
    \(smudgeHistogram[
        hist_]\  := \[IndentingNewLine]Module[{newHist}, \
\[IndentingNewLine]newHist\  = \ 
          Table[0, \ {Length[hist] - 
                1}, \ {2}]; \[IndentingNewLine]Do[\[IndentingNewLine]newHist\
\[LeftDoubleBracket]i, 
              1\[RightDoubleBracket]\  = \ \((\ 
                hist\[LeftDoubleBracket]i, 1\[RightDoubleBracket]\  + \ 
                  hist\[LeftDoubleBracket]i + 1, 
                    1\[RightDoubleBracket])\)\ /\ 
              3.0; \[IndentingNewLine]newHist\[LeftDoubleBracket]i, 
              2\[RightDoubleBracket]\  = \ \((hist\[LeftDoubleBracket]i, 
                    2\[RightDoubleBracket]\  + \ 
                  hist\[LeftDoubleBracket]i + 1, 
                    2\[RightDoubleBracket])\)\ /\ 
              3.0;\[IndentingNewLine], {i, \ 1, \ 
            Length[hist] - 
              1}\[IndentingNewLine]]; \[IndentingNewLine]newHist\
\[IndentingNewLine]]\), "\[IndentingNewLine]", 
    \(\)}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getPeakCount",
    FontWeight->"Bold"],
  "\nCounts the number of peaks"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[getPeakCount];\)\), "\n", 
    \(getPeakCount[hist_, 
        s_] := \[IndentingNewLine]Module[{priorVal, currVal, nextVal, n, \ 
          newHist}, \[IndentingNewLine]newHist\  = \ 
          hist; \[IndentingNewLine]Do[
          newHist\  = \ 
            smudgeHistogram[newHist], \ {s}]; \[IndentingNewLine]n = 
          0; \[IndentingNewLine]Do[\[IndentingNewLine]priorVal = 
            getPriorVal[newHist, \ i]; \[IndentingNewLine]currVal = 
            newHist\[LeftDoubleBracket]i, 
              2\[RightDoubleBracket]; \[IndentingNewLine]nextVal = 
            getNextVal[newHist, \ 
              i]; \[IndentingNewLine]If[\((currVal\  > \ 
                  priorVal\ )\) && \ \((\ 
                currVal\  > \ nextVal)\), \ \(n++\)];\[IndentingNewLine], {i, 
            1, Length[
              newHist]}]; \[IndentingNewLine]n\[IndentingNewLine]]\)}], \
"Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getTypeDurationGraph",
    FontWeight->"Bold"],
  "\nDisplays a graph of how long a skeletal point stays as a skeletal type"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[getTypeDurationGraph];\)\), "\[IndentingNewLine]", 
    \(getTypeDurationGraph[stats_, \ 
        types_]\  := \[IndentingNewLine]Module[\[IndentingNewLine]{image, \ 
          newStats}, \[IndentingNewLine]image\  = \ 
          getBlankImage[]; \[IndentingNewLine]newStats\  = \ 
          Select[stats, \ 
            MemberQ[types, \ #\[LeftDoubleBracket]1\[RightDoubleBracket]] &]; \
\[IndentingNewLine]Scan[\(\(image\[LeftDoubleBracket]\ #\[LeftDoubleBracket]2\
\[RightDoubleBracket], \ #\[LeftDoubleBracket]3\[RightDoubleBracket]\
\[RightDoubleBracket]++\);\) &, newStats]; \[IndentingNewLine]ListDensityPlot[
          Map[# &, \ image, \ 1], \ Mesh \[Rule] True, \ 
          ColorFunctionScaling \[Rule] True, 
          DisplayFunction \[Rule] 
            Identity\ ]\[IndentingNewLine]]\), "\[IndentingNewLine]", 
    \(\)}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getTypeLengthSummationGraph",
    FontWeight->"Bold"],
  "\nDisplays a graph of the cumulative length / area of a curve or surface"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[getTypeLengthSummationGraph];\)\), "\[IndentingNewLine]", 
    \(getTypeLengthSummationGraph[stats_, \ 
        types_]\  := \[IndentingNewLine]Module[\[IndentingNewLine]{image, \ 
          newStats}, \[IndentingNewLine]image\  = \ 
          getBlankImage[]; \[IndentingNewLine]newStats\  = \ 
          Select[stats, \ 
            MemberQ[types, \ #\[LeftDoubleBracket]1\[RightDoubleBracket]] &]; \
\[IndentingNewLine]Scan[\(image\[LeftDoubleBracket]\ #\[LeftDoubleBracket]2\
\[RightDoubleBracket], \ #\[LeftDoubleBracket]3\[RightDoubleBracket]\
\[RightDoubleBracket]\  += \ \ #\[LeftDoubleBracket]6\[RightDoubleBracket];\) \
&, newStats]; \[IndentingNewLine]ListDensityPlot[Map[# &, \ image, \ 1], \ 
          Mesh \[Rule] False, \ ColorFunctionScaling \[Rule] True, \ 
          DisplayFunction \[Rule] 
            Identity]\[IndentingNewLine]]\), "\[IndentingNewLine]", 
    \(\)}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getThicknessHistogram",
    FontWeight->"Bold"],
  "\nGets the list of thicknesses and their frequencies"
}], "Subsubtitle"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[getThicknessHistogram];\)\), "\[IndentingNewLine]", 
    \(getThicknessHistogram[
        list_]\  := \[IndentingNewLine]Module[\ {tList, \ 
          plot}, \[IndentingNewLine]tList\  = \ 
          Table[{\(-1\), \ 0}, \ {x, \ 0, \ 
              sliceSize[1, 2]\ *\ 
                sliceSize[2, 
                  2]}]; \[IndentingNewLine]Scan[\(tList\[LeftDoubleBracket]#\
\[LeftDoubleBracket]2\[RightDoubleBracket] + 
                    1\[RightDoubleBracket]\  = \ {#\[LeftDoubleBracket]2\
\[RightDoubleBracket], \ \(tList\[LeftDoubleBracket]#\[LeftDoubleBracket]2\
\[RightDoubleBracket] + 
                          1\[RightDoubleBracket]\)\[LeftDoubleBracket]2\
\[RightDoubleBracket]\  + \ 1};\) &, \ list]; \[IndentingNewLine]tList\  = \ 
          Select[tList, \ #\[LeftDoubleBracket]1\[RightDoubleBracket]\  \
\[NotEqual] \ \(-1\) &]; \[IndentingNewLine]If[
          Length[tList]\  > \ 0, \[IndentingNewLine]plot\  = \ 
            ListPlot[tList, \ PlotJoined \[Rule] True, \ 
              PlotRange \[Rule] All, \ 
              DisplayFunction \[Rule] 
                Identity]]; \[IndentingNewLine]{tList, \ 
          plot}\[IndentingNewLine]]\)}], "Input"],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(tList\)\" is similar to \
existing symbol \"\!\(List\)\"."\)], "Message"],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(plot\)\" is similar to \
existing symbol \"\!\(Plot\)\"."\)], "Message"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getPeakCountForImage",
    FontWeight->"Bold"],
  "\nGets a plot of the number of histogram peaks there are at each point"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[getPeakCountForImage];\)\), "\[IndentingNewLine]", 
    \(getPeakCountForImage[stats_, \ types_, \ skel_, \ 
        noiseValue_] := \[IndentingNewLine]Module[{newStats, \ 
          img}, \[IndentingNewLine]newStats\  = \ 
          Select[stats, \ 
            MemberQ[types, \ #\[LeftDoubleBracket]1\[RightDoubleBracket]] &]; \
\[IndentingNewLine]img\  = \ 
          getBlankImage[]; \[IndentingNewLine]Do[\[IndentingNewLine]\(Do[\
\[IndentingNewLine]\(If[
                  skel\[LeftDoubleBracket]x, y\[RightDoubleBracket]\  > \ 
                    0, \ \[IndentingNewLine]Module[{thicknessData}, \
\[IndentingNewLine]thicknessData\  = \ 
                      getThicknessListAndGraph[{x, y}, \ stats, \ 
                        types]; \[IndentingNewLine]img\[LeftDoubleBracket]x, 
                        y\[RightDoubleBracket]\  = \ 
                      getPeakCount[
                        thicknessData\[LeftDoubleBracket]2, 
                          1\[RightDoubleBracket]\ , 
                        noiseValue];\[IndentingNewLine]]\[IndentingNewLine]];\
\)\[IndentingNewLine], {y, sliceSize[2, 1], \ 
                sliceSize[2, 2]}];\)\[IndentingNewLine], {x, \ 
            sliceSize[1, 1], \ 
            sliceSize[1, 
              2]}]; \[IndentingNewLine]img\[IndentingNewLine]]\)}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["getThicknessListAndGraph",
    FontWeight->"Bold"],
  "\nGets the list of thickness information and the graph of how the \
thickness changes along the grayscale value"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[getThicknessListAndGraph];\)\), "\[IndentingNewLine]", 
    \(\(getThicknessListAndGraph[p_, \ stats_, \ 
          types_] := \[IndentingNewLine]Module[{d, \ newStats, \ 
            plot}, \[IndentingNewLine]newStats\  = \ 
            Select[stats, \ 
              MemberQ[types, \ #\[LeftDoubleBracket]1\[RightDoubleBracket]] \
&]; \[IndentingNewLine]d\  = 
            Select[newStats, \ \((#\[LeftDoubleBracket]2\[RightDoubleBracket]\
\  \[Equal] \ 
                      p\[LeftDoubleBracket]1\[RightDoubleBracket])\)\  && \ \
\((#\[LeftDoubleBracket]3\[RightDoubleBracket]\  \[Equal] \ 
                      p\[LeftDoubleBracket]2\[RightDoubleBracket])\) &\ ]; \
\[IndentingNewLine]d = 
            Sort[d, \ \((#1\[LeftDoubleBracket]4\[RightDoubleBracket]\  < \ \
#2\[LeftDoubleBracket]4\[RightDoubleBracket])\) &]; \[IndentingNewLine]d = 
            Map[#\[LeftDoubleBracket]{4, 5}\[RightDoubleBracket] &, 
              d]; \[IndentingNewLine]If[
            Length[d]\  > \ 0, \[IndentingNewLine]plot\  = \ 
              ListPlot[d, \ PlotJoined \[Rule] True, \ 
                PlotRange \[Rule] All, \ DisplayFunction \[Rule] Identity, \ 
                AxesLabel \[Rule] {"\<Grayscale\>", \ "\<Thickness\>"}]]; \
\[IndentingNewLine]{{d, {plot}}, 
            getThicknessHistogram[d]}\[IndentingNewLine]];\)\)}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["displayThicknessStatisticsPerPoint",
    FontWeight->"Bold"],
  "\nDisplays the thickness statistics graph per point"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[
        displayThicknessStatisticsPerPoint];\)\), "\[IndentingNewLine]", 
    \(\(displayThicknessStatisticsPerPoint[p_, \ stats_, \ types_, skel_, \ 
          img_] := \[IndentingNewLine]Module[{d, arr, s0, \ s1, s2, s3, \ 
            s4, \ thicknessInfo}, \[IndentingNewLine]newStats\  = \ 
            Select[stats, \ 
              MemberQ[types, \ #\[LeftDoubleBracket]1\[RightDoubleBracket]] \
&]; \[IndentingNewLine]d\  = 
            Map[#\[LeftDoubleBracket]{2, 3}\[RightDoubleBracket] &, 
              newStats]; \[IndentingNewLine]arr = 
            getBlankImage[]; \
\[IndentingNewLine]Scan[\(arr\[LeftDoubleBracket]#\[LeftDoubleBracket]1\
\[RightDoubleBracket], #\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket]++\) &, d]; \[IndentingNewLine]thicknessInfo\  = \ 
            getThicknessListAndGraph[p, \ stats, \ 
              types]; \[IndentingNewLine]s0\  = \ 
            Show[thicknessInfo\[LeftDoubleBracket]2, 
                2\[RightDoubleBracket], \ 
              PlotLabel -> "\<Thickness Histogram (Peak Count {0, 1, 2, 3}= {\
\>" <> \ ToString[getPeakCount[
                      thicknessInfo\[LeftDoubleBracket]2, 
                        1\[RightDoubleBracket], 
                      0]]\  <> \ "\<,\>"\  <> \[IndentingNewLine]ToString[
                    getPeakCount[
                      thicknessInfo\[LeftDoubleBracket]2, 
                        1\[RightDoubleBracket], 1]]\  <> \ "\<,\>"\  <> \ 
                  ToString[
                    getPeakCount[
                      thicknessInfo\[LeftDoubleBracket]2, 
                        1\[RightDoubleBracket], 2]] <> \ "\<,\>"\  <> \ 
                  ToString[
                    getPeakCount[
                      thicknessInfo\[LeftDoubleBracket]2, 
                        1\[RightDoubleBracket], 
                      3]]\  <> "\<}\>"]; \[IndentingNewLine]s1\  = \ 
            Show[thicknessInfo\[LeftDoubleBracket]1, 
                2\[RightDoubleBracket], \ 
              PlotLabel -> "\<Thickness Variation\>"]; \[IndentingNewLine]s2\ \
 = \ Show[{ListDensityPlot[img, DisplayFunction \[Rule] Identity, \ 
                  Mesh \[Rule] False], 
                Graphics[{RGBColor[1, 0, 0], PointSize[0.02], 
                    Point[Reverse[p] + {\(-0.5\), \(-0.5\)}]}]}, 
              DisplayFunction \[Rule] Identity, \ 
              PlotLabel -> "\<Source Image\>"]; \[IndentingNewLine]s3\  = \ 
            Show[{ListDensityPlot[arr, DisplayFunction \[Rule] Identity], 
                Graphics[{RGBColor[1, 0, 0], PointSize[0.02], 
                    Point[Reverse[p] + {\(-0.5\), \(-0.5\)}]}]}, 
              DisplayFunction \[Rule] Identity, \ 
              PlotLabel -> "\<Curve Duration\>"]; \[IndentingNewLine]s4\  = \ 
            Show[{ListDensityPlot[skel, DisplayFunction \[Rule] Identity], 
                Graphics[{RGBColor[1, 0, 0], PointSize[0.02], 
                    Point[Reverse[p] + {\(-0.5\), \(-0.5\)}]}]}, 
              DisplayFunction \[Rule] Identity, \ 
              PlotLabel -> "\<Grayscale Skeleton\>"]; \[IndentingNewLine]Show\
\ [GraphicsArray[{s0, \ s1}], \ DisplayFunction \[Rule] $DisplayFunction, \ 
            PlotLabel \[Rule] "\<Point :{\>"\  <> \ 
                ToString[
                  p\[LeftDoubleBracket]1\[RightDoubleBracket]]\  <> \ "\<,\>"\
\  <> \ ToString[
                  p\[LeftDoubleBracket]2\[RightDoubleBracket]]\  <> \ \
"\<}\>"]; \[IndentingNewLine]Show\ [GraphicsArray[{s2, \ s3, \ s4}], \ 
            DisplayFunction \[Rule] $DisplayFunction];\[IndentingNewLine]];\)\
\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["displayThicknessStatisticsPerPointSet",
    FontWeight->"Bold"],
  "\nDisplays the thickness statistics graph for a set of points"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[
        displayThicknessStatisticsPerPointSet];\)\), "\[IndentingNewLine]", 
    \(\(displayThicknessStatisticsPerPointSet[points_, \ stats_, \ types_, 
          skel_, \ 
          img_] := \[IndentingNewLine]Scan[\(\
displayThicknessStatisticsPerPoint[#, \ stats, \ types, \ skel, \ img];\) &, 
          points];\)\)}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["displayThicknessStatistics",
    FontWeight->"Bold"],
  "\nDisplays the thickness statistics for all the points"
}], "Subsubtitle"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[displayThicknessStatistics];\)\), "\[IndentingNewLine]", 
    \(displayThicknessStatistics[stats_, \ types_, \ pointsOfInterest_, \ 
        skel_, \ img_]\  := \[IndentingNewLine]Module[{image, \ points, \ 
          lists, \ n, \ trueList, \ newStats}, \[IndentingNewLine]image\  = \ 
          getBlankImage[]; \[IndentingNewLine]newStats\  = \ 
          Select[stats, \ 
            MemberQ[types, \ #\[LeftDoubleBracket]1\[RightDoubleBracket]] &]; \
\[IndentingNewLine]points\  = \ {}; \[IndentingNewLine]lists\  = \ {}; \
\[IndentingNewLine]Scan[\(points\  = \ 
                Union[points, \ \
{{#\[LeftDoubleBracket]2\[RightDoubleBracket], \ #\[LeftDoubleBracket]3\
\[RightDoubleBracket]}}];\) &, \ 
          newStats]; \[IndentingNewLine]Scan[\[IndentingNewLine]\(Module[{p, \
\ pointData, \ 
                  list}, \[IndentingNewLine]p\  = \ #; \
\[IndentingNewLine]list\  = \ \(getThicknessListAndGraph[p, \ stats, \ 
                      types]\)\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]lists\  = \ 
                  Append[lists, \ 
                    list]; \[IndentingNewLine]\
displayThicknessStatisticsPerPoint[p, \ stats, \ types, \ skel, 
                  img]; \[IndentingNewLine]If[\ 
                  MemberQ[pointsOfInterest, \ p]\ , \ 
                  displayThicknessStatisticsPerPoint[p, \ stats, \ types, \ 
                    skel, img]]];\) &, \ \[IndentingNewLine]points\
\[IndentingNewLine]]; \[IndentingNewLine]lists\  = \ 
          Append[lists, \ {PlotJoined \[Rule] 
                True}]; \[IndentingNewLine]lists\  = \ 
          Append[lists, \ {ImageSize \[Rule] {350, \ 
                  350}}]; \[IndentingNewLine]Apply[MultipleListPlot, 
          lists];\[IndentingNewLine]]\), "\[IndentingNewLine]", 
    \(\)}], "Input"],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(lists\)\" is similar to \
existing symbol \"\!\(list\)\"."\)], "Message"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["displayStatistics",
    FontWeight->"Bold"],
  "\nDisplays an analysis of the statistics"
}], "Subsubtitle"],

Cell[BoxData[{
    \(\(Clear[displayStatistics];\)\), "\[IndentingNewLine]", 
    \(displayStatistics[
        stats_]\  := \ \[IndentingNewLine]Module[\[IndentingNewLine]{s1, \ 
          s2, \ s3, \ s4}, \[IndentingNewLine]s1\  = 
          Show[getTypeDurationGraph[stats, \ {1}], \ 
            PlotLabel \[Rule] \ "\<Point Duration\>"]; \[IndentingNewLine]s2\ \
 = \ Show[getTypeDurationGraph[stats, \ {2, 3}], \ 
            PlotLabel \[Rule] \ "\<Curve Duration\>"]; \[IndentingNewLine]s3\ \
 = \ Show[getTypeLengthSummationGraph[stats, \ {2, 3}], \ 
            PlotLabel \[Rule] \ "\<Curve Length Summation\>"]; \
\[IndentingNewLine]s4\  = \ 
          Show[getTypeDurationGraph[stats, \ {4, 5}], \ 
            PlotLabel \[Rule] \ "\<Surface Duration\>"]; \
\[IndentingNewLine]Show[GraphicsArray[{{s1, \ s2}, \ {s3, \ s4}}], \ 
          DisplayFunction \[Rule] $DisplayFunction];\[IndentingNewLine]]\)}], \
"Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Gets the statistics of all the images and stores them in a file\
\>", "Subsubtitle"],

Cell["\<\
Do[Print[i];
  Clear[slice];
  Clear[sliceSize];
  inputs=getInput[i];
  slice=inputs\[LeftDoubleBracket]1\[RightDoubleBracket];
  sliceSize=inputs\[LeftDoubleBracket]2\[RightDoubleBracket];
  Clear[inputs];
  finalResult=makeGraySkeleton[slice,1,255,1,3];
  finalImage=finalResult\[LeftDoubleBracket]1\[RightDoubleBracket];
  finalStats=finalResult\[LeftDoubleBracket]2\[RightDoubleBracket];
  Put[finalImage,rootPath<>\"/results/FinalImage\"<>ToString[i]<>\".nb\"];
  Put[finalStats,rootPath<>\"/results/FinalStats\"<>ToString[i]<>\".nb\"];
  ,{i,1,9}
  ]\
\>", "SmallText"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loads the statistics from a file", "Subsubtitle"],

Cell["\<\
finalImage = Get[ rootPath<> \"/results/FinalImage3.nb\"];
ListDensityPlot[Map[#/255.0&, finalImage, 1], Mesh\[Rule]False, \
ColorFunctionScaling\[Rule]False, ImageSize\[Rule]{350, 350}];
finalStats = Get[ rootPath<> \"/results/FinalStats3.nb\"];
displayStatistics[finalStats];\
\>", "SmallText"],

Cell["\<\
finalResult=makeGraySkeleton[slice,1,255,50,3];
finalImage=finalResult\[LeftDoubleBracket]1\[RightDoubleBracket];
finalStats=finalResult\[LeftDoubleBracket]2\[RightDoubleBracket];
ListDensityPlot[Map[#/255.0&,finalImage,1],Mesh\[Rule]False,\
ColorFunctionScaling\[Rule]False,ImageSize\[Rule]{350,350}];\
\>", "SmallText"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Misc Tests", "Subsubtitle"],

Cell["\<\
displayThicknessStatisticsPerPointSet[{{28,40},{29,40},{30,40},{31,40}},\
finalStats,{2,3,4},finalImage,slice];\
\>", "SmallText"],

Cell["\<\
displayThicknessStatistics[finalStats, {2,3,4}, {},finalImage,slice];\
\>", "SmallText"],

Cell["\<\
displayThicknessStatisticsPerPointSet[{{36,18},{35,18},{30,54},{48,35},{42,20}\
,{38,8}},finalStats,{2,3,4},finalImage,slice];\
\>", "SmallText"],

Cell["\<\
displayThicknessStatisticsPerPointSet[{{30,52},{30,51},{31,51},{31,50},{31,49}\
},finalStats,{2,3,4},finalImage,slice];\
\>", "SmallText"],

Cell["\<\
displayThicknessStatisticsPerPointSet[{{45,40}, {34,49},{31,32}}, finalStats, \
{2,3,4}, finalImage,slice];\
\>", "SmallText"],

Cell["\<\
displayThicknessStatisticsPerPointSet[{{32,34}, {33,34}, {34,34},{35,34}, \
{36,34}, {37,34}},finalStats,{2,3,4},finalImage,slice];\
\>", "SmallText"],

Cell["\<\
displayThicknessStatisticsPerPointSet[{{10,28},{32,26},{32,27}, {32,28}, \
{32,29},{32,30} },finalStats,{2,3,4},finalImage,slice];\
\>", "SmallText"],

Cell["\<\
displayThicknessStatistics[finalStats, {2,3,4}, {}, finalImage, slice];\
\>", "SmallText"],

Cell["\<\
displayThicknessStatisticsPerPoint[{26,37},finalStats,{2,3,4},finalImage,\
slice];\
\>", "SmallText"],

Cell["DEBUG : Input 1, (28,40) , (29,40), (30,40), (31,40)", "SmallText"],

Cell["\<\
peakCount=getPeakCountForImage[finalStats,{2,3,4},finalImage,1];\
\>", "SmallText"],

Cell["peakCount = Get[rootPath<>\"/results/PeakCount1-0.nb\"];", "SmallText"],

Cell["\<\
mpc=Max[peakCount];ListDensityPlot[Map[Map[If[#>0,(mpc-#),0]&,#]&,peakCount], \
Mesh\[Rule]False];\
\>", "SmallText"],

Cell["\<\
filteredImage=Table[0,{x,sliceSize[1,1]-1,sliceSize[1,2]+1},{y,sliceSize[2,1]-\
1,sliceSize[2,2]+1}];
dMap=Flatten[Table[If[(finalImage\[LeftDoubleBracket]x,y\[RightDoubleBracket]>\
0)&&(peakCount\[LeftDoubleBracket]x,y\[RightDoubleBracket]\[Equal]1),{x,y},{}]\
,{x,sliceSize[1,1],sliceSize[1,2]},{y,sliceSize[2,1],sliceSize[2,2]}],1];
dMap=Select[dMap,Length[#]>0&];
Scan[filteredImage\[LeftDoubleBracket]#\[LeftDoubleBracket]1\
\[RightDoubleBracket],#\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket]=finalImage\[LeftDoubleBracket]#\[LeftDoubleBracket]1\
\[RightDoubleBracket],#\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket];&,dMap];
Show[GraphicsArray[{ListDensityPlot[filteredImage/255.0,DisplayFunction\[Rule]\
Identity,Mesh\[Rule]False],ListDensityPlot[slice,DisplayFunction\[Rule]\
Identity,Mesh\[Rule]False],ListDensityPlot[finalImage,DisplayFunction\[Rule]\
Identity,Mesh\[Rule]False]}],DisplayFunction\[Rule]$DisplayFunction];
\
\>", "SmallText"],

Cell["Put[peakCount,rootPath<>\"/results/PeakCount1-1.nb\"];", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Test Area", "Subtitle"],

Cell["Build the skeleton", "Subsubtitle"],

Cell["\<\
thresholds[1]={1,2,3,4,5,6,7,8,9,10,15,25};
thresholds[2]={0.01,0.05,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0};
thresholds[3]={1,2,3,4,5,6,7,8,9,10,15,25};
thresholds[4]={1,2,3,4,5,10,15,20,25,30,35,40};
thresholds[5]={0.01,0.05,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0};
inputSequence={1,2,3,4,5,6,7,8,9};
stepList={15,4,2,1};
eigenValues = getEigen[getLocalStructureTensor[getGradientField[slice], \
gaussianRadius]];
Do[Clear[slice];
    inp=inputSequence\[LeftDoubleBracket]inpnum\[RightDoubleBracket];
    Clear[sliceSize];
    inputs=getInput[inp];
    slice=inputs\[LeftDoubleBracket]1\[RightDoubleBracket];
    sliceSize=inputs\[LeftDoubleBracket]2\[RightDoubleBracket];
    Clear[inputs];
    curveLengthHashKey={-1,-1};
    curveLengthHash={{},{}};
    Do[table={};
      Do[line={};
        step=stepList\[LeftDoubleBracket]st\[RightDoubleBracket];
        Do[timeTaken=Timing[finalImages=makeGraySkeleton[slice,1,255,step,3,\
thresholds[cf]\[LeftDoubleBracket]i\[RightDoubleBracket],cf, eigenValues];]\
\[LeftDoubleBracket]1\[RightDoubleBracket];
          Print[\"Timing(Input \"<>ToString[inp]<>\", cost function \
\"<>ToString[cf]<>\", step size \"<>ToString[step]<>\", Threshold \
\"<>ToString[thresholds[cf]\[LeftDoubleBracket]i\[RightDoubleBracket]]<>\") = \
\"<>ToString[timeTaken]];
          image=ListDensityPlot[finalImages\[LeftDoubleBracket]2\
\[RightDoubleBracket],Mesh\[Rule]False,DisplayFunction\[Rule]Identity,\
ImageSize\[Rule]{350,350},PlotLabel\[Rule]\"Threshold = \
\"<>ToString[thresholds[cf]\[LeftDoubleBracket]i\[RightDoubleBracket]]<>\" \
Step Size = \"<>ToString[step],Frame\[Rule]False];
          line=Append[line,image];,
          {i,5,5}];
        table=Append[table,line];,
        {st,1,1}];
      outFileName=rootPath<>\"results\\\\Decision\\\\Input\"<>ToString[inp]<>\
\"-CostFunction-\"<>ToString[cf]<>\" Vary Step-Threshold.gif\";
      Export[outFileName,Show[GraphicsArray[table],DisplayFunction\[Rule]\
Identity,ImageSize\[Rule]{Dimensions[table]\[LeftDoubleBracket]2\
\[RightDoubleBracket]*350,Dimensions[table]\[LeftDoubleBracket]1\
\[RightDoubleBracket]*350}]];
      Print[\"Wrote to file: \"<>outFileName];,
      {cf,5,5,-1}];,
    {inpnum,1,1}];
\
\>", "SmallText"],

Cell[CellGroupData[{

Cell["Prune the skeleton using the structure tensor cost function", \
"Subsubtitle"],

Cell[BoxData[{
    \(\(stepSize\  = \ \(-1\);\)\), "\[IndentingNewLine]", 
    \(\(gaussianRadius\  = \ 4;\)\), "\[IndentingNewLine]", 
    \(\(binarySkeletons\  = \ {};\)\), "\[IndentingNewLine]", 
    \(\(grayscaleSkeletons\  = \ {};\)\), "\[IndentingNewLine]", 
    \(\(Do[\[IndentingNewLine]Print["\<Input \>"\  <> \ 
            ToString[input]]; \[IndentingNewLine]inputs = 
          getInput[input]; \[IndentingNewLine]slice = 
          inputs\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]sliceSize = 
          inputs\[LeftDoubleBracket]2\[RightDoubleBracket]; \
\[IndentingNewLine]skeleton\  = \ \(getInput[
              100\  + \ 
                input]\)\[LeftDoubleBracket]1\[RightDoubleBracket]; \
\[IndentingNewLine]binarySkeletonsPerInput\  = \ {}; \
\[IndentingNewLine]grayscaleSkeletonsPerInput\  = \ {}; \
\[IndentingNewLine]Do[\[IndentingNewLine]Print["\<   Threshold \>"\  <> \ 
              ToString[
                threshold]]; \[IndentingNewLine]curveLengthHashKey = {\(-1\), \
\(-1\)}; \[IndentingNewLine]curveLengthHash = {{}, {}}; \
\[IndentingNewLine]skeletons\  = \ 
            doSkeletonCleanup[slice, \ skeleton, \ threshold, \ stepSize, \ 
              False, \ False]; \[IndentingNewLine]binarySkeletonsPerInput = \ 
            Join[binarySkeletonsPerInput, \ \
\[IndentingNewLine]{ListDensityPlot[
                  skeletons\[LeftDoubleBracket]2\[RightDoubleBracket], \ 
                  Mesh \[Rule] False, DisplayFunction \[Rule] Identity, 
                  ImageSize \[Rule] {350, 350}, 
                  PlotLabel \[Rule] "\<Input = \>" <> 
                      ToString[input] <> "\< Threshold = \>" <> 
                      ToString[threshold], 
                  Frame \[Rule] 
                    False]}]; \[IndentingNewLine]grayscaleSkeletonsPerInput = \
\ Join[grayscaleSkeletonsPerInput, \ \[IndentingNewLine]{ListDensityPlot[
                  skeletons\[LeftDoubleBracket]1\[RightDoubleBracket], \ 
                  Mesh \[Rule] False, DisplayFunction \[Rule] Identity, 
                  ImageSize \[Rule] {350, 350}, 
                  PlotLabel \[Rule] "\<Input = \>" <> 
                      ToString[input] <> "\< Threshold = \>" <> 
                      ToString[threshold], 
                  Frame \[Rule] False]}];\[IndentingNewLine], {threshold, \ 
            0.0, \ 1.0, \ 
            0.05}]; \[IndentingNewLine]\[IndentingNewLine]binarySkeletons\  = \
\ Join[binarySkeletons, \ {binarySkeletonsPerInput}]; \
\[IndentingNewLine]grayscaleSkeletons\  = \ 
          Join[grayscaleSkeletons, \ {grayscaleSkeletonsPerInput}];\
\[IndentingNewLine], {input, \ 1, \ 
          1}];\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(outFileName = 
        rootPath <> "\<results\\StructureTensor\\BinarySkeletons.gif\>";\)\), \
"\n", 
    \(\(Export[outFileName, 
        Show[GraphicsArray[binarySkeletons], 
          DisplayFunction \[Rule] Identity, 
          ImageSize \[Rule] {\(Dimensions[
                    binarySkeletons]\)\[LeftDoubleBracket]2\
\[RightDoubleBracket]*350, \(Dimensions[
                    binarySkeletons]\)\[LeftDoubleBracket]1\
\[RightDoubleBracket]*350}]];\)\), "\[IndentingNewLine]", 
    \(\(outFileName = 
        rootPath <> "\<results\\StructureTensor\\GrayscaleSkeletons.gif\>";\)\
\), "\n", 
    \(\(Export[outFileName, 
        Show[GraphicsArray[grayscaleSkeletons], 
          DisplayFunction \[Rule] Identity, 
          ImageSize \[Rule] {\(Dimensions[
                    grayscaleSkeletons]\)\[LeftDoubleBracket]2\
\[RightDoubleBracket]*350, \(Dimensions[
                    grayscaleSkeletons]\)\[LeftDoubleBracket]1\
\[RightDoubleBracket]*350}]];\)\)}], "Input"],

Cell["\<\

gaussianRadius = 4;
input = 9;
minThreshold = 0.6;
avgThreshold = 0.6;

curveLengthHashKey={-1,-1};
curveLengthHash={{},{}};
inputs=getInput[input];
slice=inputs\[LeftDoubleBracket]1\[RightDoubleBracket];
sliceSize=inputs\[LeftDoubleBracket]2\[RightDoubleBracket];
skeleton = getInput[100 + input]\[LeftDoubleBracket]1\[RightDoubleBracket];

eigens=getEigen[getLocalStructureTensor[getGradientField[slice],\
gaussianRadius]];
skeletonDirections = getSkeletonDirection[thresholdImage[skeleton,1]];
annotatedSkeleton= annotateImageWithPixelType[thresholdImage[skeleton,1]];
costFunctionImage = getCostFunction5Image[skeleton,  eigens, \
skeletonDirections];

prunedSkeleton = thresholdImage[skeleton, 1];
dMap=Flatten[Table[If[(costFunctionImage\[LeftDoubleBracket]x,y\
\[RightDoubleBracket]<minThreshold) && \
(costFunctionImage\[LeftDoubleBracket]x,y\[RightDoubleBracket]>0),{x,y},{}],{\
x,sliceSize[1,1],sliceSize[1,2]},{y,sliceSize[2,1],sliceSize[2,2]}],1];
dMap=Select[dMap,Length[#]>0&];
Scan[
    Module[{curvePoints},
          If[prunedSkeleton\[LeftDoubleBracket]#\[LeftDoubleBracket]1\
\[RightDoubleBracket], #\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket] > 0, 
              Module[{},
                  curvePoints = getCurveLength[#, annotatedSkeleton, {2,3,4}, \
{1,1}]\[LeftDoubleBracket]3\[RightDoubleBracket];
                  If[Sum[Map[costFunctionImage\[LeftDoubleBracket]#\
\[LeftDoubleBracket]1\[RightDoubleBracket], #\[LeftDoubleBracket]2\
\[RightDoubleBracket]\[RightDoubleBracket]&, \
curvePoints]\[LeftDoubleBracket]i\[RightDoubleBracket], {i, 1, \
Length[curvePoints]} ]/Length[curvePoints] < avgThreshold,
                    Scan[prunedSkeleton\[LeftDoubleBracket]#\
\[LeftDoubleBracket]1\[RightDoubleBracket], #\[LeftDoubleBracket]2\
\[RightDoubleBracket]\[RightDoubleBracket] = 0;&,curvePoints];
                    ];
                  ];];
          ];&,
    dMap];

prunedGraySkeleton = getBlankImage[];
dMap=Flatten[Table[If[(prunedSkeleton\[LeftDoubleBracket]x,y\
\[RightDoubleBracket] > \
0),{x,y},{}],{x,sliceSize[1,1],sliceSize[1,2]},{y,sliceSize[2,1],sliceSize[2,\
2]}],1];
dMap=Select[dMap,Length[#]>0&];
Scan[prunedGraySkeleton\[LeftDoubleBracket]#\[LeftDoubleBracket]1\
\[RightDoubleBracket], #\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket] = skeleton\[LeftDoubleBracket]#\[LeftDoubleBracket]1\
\[RightDoubleBracket], #\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket];&,dMap];




p1 = ListDensityPlot[slice, Mesh\[Rule]False, DisplayFunction\[Rule]Identity, \
PlotLabel->\"Source Image\"];
p2 =  ListDensityPlot[skeleton, Mesh\[Rule]False, \
DisplayFunction\[Rule]Identity, PlotLabel->\"Grayscale Skeleton\"];
p3 = Show[{ListDensityPlot[slice/255.0,Mesh\[Rule]False,ColorFunctionScaling\
\[Rule]False,DisplayFunction\[Rule]Identity],Graphics[{RGBColor[0,0,1], 
            Table[If[eigens\[LeftDoubleBracket]x,y,1,1\[RightDoubleBracket]>0,\

                Line[{{y-0.5,x-0.5},{y-0.5,x-0.5}+Reverse[normalizeVector[\
eigens\[LeftDoubleBracket]x,y,2,2\[RightDoubleBracket]]]*(1-eigens\
\[LeftDoubleBracket]x,y,1,2\[RightDoubleBracket]/eigens\[LeftDoubleBracket]x,\
y,1,1\[RightDoubleBracket])}],
                Line[{{y-0.5,x-0.5},{y-0.5,x-0.5}}]],
              {x,Length[eigens]},
              {y,Length[eigens\[LeftDoubleBracket]1\[RightDoubleBracket]]}]},
          AspectRatio\[Rule]Automatic,PlotRange\[Rule]{{0,65},{0,65}},Frame\
\[Rule]True,DisplayFunction\[Rule]Identity],
        Graphics[{RGBColor[1,0,0], 
            Table[
              Line[{{y-0.5,x-0.5},{y-0.5,x-0.5}+Reverse[normalizeVector[\
skeletonDirections\[LeftDoubleBracket]x,y\[RightDoubleBracket]]/2]}],
              {x,Length[skeletonDirections]},
              {y,Length[skeletonDirections\[LeftDoubleBracket]1\
\[RightDoubleBracket]]}]},
          AspectRatio\[Rule]Automatic,PlotRange\[Rule]{{0,65},{0,65}},Frame\
\[Rule]True,DisplayFunction\[Rule]Identity]
        
        
        },DisplayFunction\[Rule]Identity, PlotLabel->\"Source Vector \
Field\"];
p4 = Show[{ListDensityPlot[thresholdImage[skeleton,1]/255.0,Mesh\[Rule]False,\
ColorFunctionScaling\[Rule]False,DisplayFunction\[Rule]Identity],Graphics[{\
RGBColor[0,0,1], 
            Table[
              Line[{{y-0.5,x-0.5},{y-0.5,x-0.5}+Reverse[normalizeVector[\
skeletonDirections\[LeftDoubleBracket]x,y\[RightDoubleBracket]]/2]}],
              {x,Length[skeletonDirections]},
              {y,Length[skeletonDirections\[LeftDoubleBracket]1\
\[RightDoubleBracket]]}]},
          AspectRatio\[Rule]Automatic,PlotRange\[Rule]{{0,65},{0,65}},Frame\
\[Rule]True,DisplayFunction\[Rule]Identity]},DisplayFunction\[Rule]Identity, \
PlotLabel->\"Skeleton Vector Field\"];
p5= ListDensityPlot[costFunctionImage,Mesh\[Rule]False,DisplayFunction\[Rule]\
Identity, PlotLabel->\"Cost Function\"];
p6= ListDensityPlot[thresholdImage[costFunctionImage, minThreshold],Mesh\
\[Rule]False,DisplayFunction\[Rule]Identity, PlotLabel->\"Cost Function - Min \
Threshold\"];
p7= ListDensityPlot[thresholdImage[costFunctionImage, avgThreshold],Mesh\
\[Rule]False,DisplayFunction\[Rule]Identity, PlotLabel->\"Cost Function - Avg \
Threshold\"];
p8 = Histogram[Select[Flatten[costFunctionImage], #>0&], DisplayFunction\
\[Rule]Identity];
p9 = ListDensityPlot[prunedSkeleton,Mesh\[Rule]False,DisplayFunction\[Rule]\
Identity, PlotLabel->\"Pruned after thresholding\"];
p10 = ListDensityPlot[prunedGraySkeleton,Mesh\[Rule]False,DisplayFunction\
\[Rule]Identity, PlotLabel->\"Final Skeleton\"];
Show[GraphicsArray[{{p1,p2}, {p3,p4}, {p5,p6}, {p7,p8},{p9, p10}}], \
DisplayFunction\[Rule]$DisplayFunction];




\
\>", "SmallText"]
}, Open  ]]
}, Open  ]]
},
FrontEndVersion->"4.1 for Microsoft Windows",
ScreenRectangle->{{0, 1600}, {0, 1127}},
Evaluator->"Scratch",
WindowSize->{1592, 1100},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
CellLabelAutoDelete->True,
Magnification->1,
StyleDefinitions -> "Default.nb"
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1727, 52, 63, 0, 64, "Subtitle"],
Cell[1793, 54, 95, 2, 50, "Input"],
Cell[1891, 58, 259, 5, 70, "Input"],
Cell[2153, 65, 122, 2, 50, "Input"],

Cell[CellGroupData[{
Cell[2300, 71, 134, 4, 71, "Subsubtitle"],
Cell[2437, 77, 780, 15, 186, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[3254, 97, 124, 4, 60, "Subsubtitle"],
Cell[3381, 103, 389, 7, 110, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[3807, 115, 439, 8, 222, "Subsubtitle"],
Cell[4249, 125, 3924, 79, 850, "Input"],

Cell[CellGroupData[{
Cell[8198, 208, 786, 17, 150, "Input"],
Cell[8987, 227, 217661, 6838, 364, 83611, 5179, "GraphicsData", "PostScript", \
"Graphics"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[226697, 7071, 201, 5, 60, "Subsubtitle"],
Cell[226901, 7078, 183, 3, 50, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[227121, 7086, 109, 4, 71, "Subsubtitle"],
Cell[227233, 7092, 172, 3, 50, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[227442, 7100, 155, 4, 71, "Subsubtitle"],
Cell[227600, 7106, 981, 19, 110, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[228618, 7130, 180, 5, 60, "Subsubtitle"],
Cell[228801, 7137, 636, 13, 110, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[229474, 7155, 160, 5, 60, "Subsubtitle"],

Cell[CellGroupData[{
Cell[229659, 7164, 1796, 32, 390, "Input"],
Cell[231458, 7198, 183, 3, 24, "Message"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[231690, 7207, 160, 5, 60, "Subsubtitle"],

Cell[CellGroupData[{
Cell[231875, 7216, 2031, 35, 390, "Input"],
Cell[233909, 7253, 183, 3, 24, "Message"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[234141, 7262, 155, 4, 60, "Subsubtitle"],
Cell[234299, 7268, 601, 11, 190, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[234937, 7284, 168, 5, 60, "Subsubtitle"],
Cell[235108, 7291, 279, 5, 50, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[235424, 7301, 198, 6, 78, "Subsubtitle"],
Cell[235625, 7309, 401, 7, 50, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[236063, 7321, 163, 4, 60, "Subsubtitle"],
Cell[236229, 7327, 413, 7, 50, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[236679, 7339, 370, 7, 114, "Subsubtitle"],
Cell[237052, 7348, 937, 17, 110, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[238026, 7370, 202, 5, 78, "Subsubtitle"],
Cell[238231, 7377, 2754, 49, 250, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[241022, 7431, 175, 4, 60, "Subsubtitle"],
Cell[241200, 7437, 262, 5, 70, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[241499, 7447, 327, 7, 168, "Subsubtitle"],
Cell[241829, 7456, 1026, 17, 330, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[242892, 7478, 153, 4, 60, "Subsubtitle"],
Cell[243048, 7484, 338, 6, 50, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[243423, 7495, 291, 7, 78, "Subsubtitle"],

Cell[CellGroupData[{
Cell[243739, 7506, 4288, 73, 650, "Input"],
Cell[248030, 7581, 180, 3, 24, "Message"],
Cell[248213, 7586, 191, 3, 24, "Message"]
}, Open  ]],
Cell[248419, 7592, 26, 0, 30, "Input"],
Cell[248448, 7594, 792, 15, 124, "SmallText"],
Cell[249243, 7611, 285, 5, 28, "SmallText"]
}, Closed]],

Cell[CellGroupData[{
Cell[249565, 7621, 144, 4, 60, "Subsubtitle"],
Cell[249712, 7627, 1262, 22, 250, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[251011, 7654, 177, 5, 60, "Subsubtitle"],
Cell[251191, 7661, 429, 8, 150, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[251657, 7674, 126, 4, 60, "Subsubtitle"],
Cell[251786, 7680, 495, 8, 170, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[252318, 7693, 141, 4, 60, "Subsubtitle"],
Cell[252462, 7699, 428, 8, 170, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[252927, 7712, 140, 4, 60, "Subsubtitle"],
Cell[253070, 7718, 1475, 27, 290, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[254582, 7750, 120, 4, 60, "Subsubtitle"],
Cell[254705, 7756, 1075, 19, 270, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[255817, 7780, 186, 5, 60, "Subsubtitle"],

Cell[CellGroupData[{
Cell[256028, 7789, 5446, 96, 1050, "Input"],
Cell[261477, 7887, 185, 3, 24, "Message"]
}, Open  ]],
Cell[261677, 7893, 26, 0, 30, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[261740, 7898, 149, 4, 60, "Subsubtitle"],
Cell[261892, 7904, 2296, 43, 290, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[264225, 7952, 626, 10, 168, "Subsubtitle"],
Cell[264854, 7964, 7756, 128, 1230, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[272647, 8097, 146, 4, 60, "Subsubtitle"],
Cell[272796, 8103, 1087, 20, 190, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[273920, 8128, 284, 6, 60, "Subsubtitle"],
Cell[274207, 8136, 9335, 162, 1210, "Input"],
Cell[283545, 8300, 26, 0, 30, "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[283620, 8306, 44, 0, 53, "Subtitle"],
Cell[283667, 8308, 134, 4, 71, "Subsubtitle"],
Cell[283804, 8314, 923, 17, 230, "Input"],
Cell[284730, 8333, 128, 3, 28, "SmallText"],

Cell[CellGroupData[{
Cell[284883, 8340, 117, 4, 71, "Subsubtitle"],
Cell[285003, 8346, 426, 8, 156, "Input"],

Cell[CellGroupData[{
Cell[285454, 8358, 51, 1, 30, "Input"],
Cell[285508, 8361, 655, 9, 70, "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[286212, 8376, 191, 5, 60, "Subsubtitle"],
Cell[286406, 8383, 965, 16, 270, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[287408, 8404, 116, 4, 60, "Subsubtitle"],
Cell[287527, 8410, 208, 3, 75, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[287772, 8418, 142, 4, 60, "Subsubtitle"],
Cell[287917, 8424, 126, 2, 50, "Input"],
Cell[288046, 8428, 811, 12, 76, "SmallText"]
}, Closed]],

Cell[CellGroupData[{
Cell[288894, 8445, 187, 5, 60, "Subsubtitle"],
Cell[289084, 8452, 2418, 38, 230, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[291539, 8495, 171, 4, 71, "Subsubtitle"],
Cell[291713, 8501, 1011, 18, 250, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[292761, 8524, 139, 4, 71, "Subsubtitle"],

Cell[CellGroupData[{
Cell[292925, 8532, 1728, 30, 410, "Input"],
Cell[294656, 8564, 191, 3, 70, "Message"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[294896, 8573, 143, 4, 60, "Subsubtitle"],
Cell[295042, 8579, 15235, 249, 2150, "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[310326, 8834, 40, 0, 64, "Subtitle"],
Cell[310369, 8836, 137, 4, 71, "Subsubtitle"],

Cell[CellGroupData[{
Cell[310531, 8844, 729, 13, 270, "Input"],
Cell[311263, 8859, 181, 3, 24, "Message"]
}, Open  ]],

Cell[CellGroupData[{
Cell[311481, 8867, 133, 4, 71, "Subsubtitle"],

Cell[CellGroupData[{
Cell[311639, 8875, 839, 15, 270, "Input"],
Cell[312481, 8892, 185, 3, 24, "Message"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[312715, 8901, 142, 4, 71, "Subsubtitle"],
Cell[312860, 8907, 1062, 21, 250, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[313959, 8933, 119, 4, 71, "Subsubtitle"],
Cell[314081, 8939, 913, 18, 290, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[315031, 8962, 171, 4, 71, "Subsubtitle"],
Cell[315205, 8968, 876, 15, 210, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[316118, 8988, 178, 4, 71, "Subsubtitle"],
Cell[316299, 8994, 929, 15, 210, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[317265, 9014, 152, 4, 71, "Subsubtitle"],

Cell[CellGroupData[{
Cell[317442, 9022, 1209, 22, 210, "Input"],
Cell[318654, 9046, 182, 3, 24, "Message"],
Cell[318839, 9051, 181, 3, 24, "Message"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[319069, 9060, 169, 4, 71, "Subsubtitle"],
Cell[319241, 9066, 1348, 24, 350, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[320626, 9095, 214, 5, 71, "Subsubtitle"],
Cell[320843, 9102, 1370, 23, 230, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[322250, 9130, 164, 4, 71, "Subsubtitle"],
Cell[322417, 9136, 3625, 63, 350, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[326079, 9204, 177, 4, 60, "Subsubtitle"],
Cell[326259, 9210, 362, 7, 70, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[326658, 9222, 159, 4, 71, "Subsubtitle"],

Cell[CellGroupData[{
Cell[326842, 9230, 1834, 32, 450, "Input"],
Cell[328679, 9264, 182, 3, 24, "Message"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[328910, 9273, 136, 4, 71, "Subsubtitle"],
Cell[329049, 9279, 926, 16, 210, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[330012, 9300, 94, 2, 53, "Subsubtitle"],
Cell[330109, 9304, 586, 15, 236, "SmallText"]
}, Open  ]],

Cell[CellGroupData[{
Cell[330732, 9324, 55, 0, 53, "Subsubtitle"],
Cell[330790, 9326, 306, 6, 76, "SmallText"],
Cell[331099, 9334, 331, 6, 76, "SmallText"]
}, Open  ]],

Cell[CellGroupData[{
Cell[331467, 9345, 33, 0, 53, "Subsubtitle"],
Cell[331503, 9347, 140, 3, 28, "SmallText"],
Cell[331646, 9352, 98, 2, 28, "SmallText"],
Cell[331747, 9356, 155, 3, 28, "SmallText"],
Cell[331905, 9361, 148, 3, 28, "SmallText"],
Cell[332056, 9366, 136, 3, 28, "SmallText"],
Cell[332195, 9371, 160, 3, 28, "SmallText"],
Cell[332358, 9376, 159, 3, 28, "SmallText"],
Cell[332520, 9381, 100, 2, 28, "SmallText"],
Cell[332623, 9385, 111, 3, 28, "SmallText"],
Cell[332737, 9390, 73, 0, 28, "SmallText"],
Cell[332813, 9392, 93, 2, 28, "SmallText"],
Cell[332909, 9396, 77, 0, 28, "SmallText"],
Cell[332989, 9398, 127, 3, 28, "SmallText"],
Cell[333119, 9403, 1001, 17, 124, "SmallText"],
Cell[334123, 9422, 75, 0, 28, "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[334247, 9428, 29, 0, 53, "Subtitle"],
Cell[334279, 9430, 41, 0, 53, "Subsubtitle"],
Cell[334323, 9432, 2232, 48, 540, "SmallText"],

Cell[CellGroupData[{
Cell[336580, 9484, 84, 1, 53, "Subsubtitle"],
Cell[336667, 9487, 3707, 69, 630, "Input"],
Cell[340377, 9558, 5658, 126, 1244, "SmallText"]
}, Open  ]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

