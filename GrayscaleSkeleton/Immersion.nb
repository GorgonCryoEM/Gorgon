(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[   1563114,      30855]
NotebookOptionsPosition[   1548445,      30415]
NotebookOutlinePosition[   1548854,      30433]
CellTagsIndexPosition[   1548811,      30430]
WindowFrame->Normal
ContainsDynamic->False*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Grayscale Skeletonization", "Title",
 CellChangeTimes->{3.407087037187301*^9}],

Cell["Connectivity Functions, and Skeletonization", "Subtitle",
 CellChangeTimes->{3.407087037187301*^9}],

Cell[TextData[StyleBox["Initializations",
 FontWeight->"Bold"]], "Subsubtitle",
 CellChangeTimes->{3.407087037187301*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "rootPath", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "rootPath", " ", "=", " ", 
   "\"\<C:\\\\_WashU\\\\ssa1\\\\source\\\\GrayscaleSkeleton\\\\\>\""}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.398387709633*^9, 3.398387725028*^9}, {3.398387818031*^9,
    3.398387818158*^9}, {3.3984405071139064`*^9, 3.3984405113014064`*^9}, 
   3.407087037187301*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "gaussianRadius", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gaussianRadius", " ", "=", " ", "4"}], ";"}]}], "Input",
 CellChangeTimes->{3.407087037187301*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getProteinSlice",
  FontWeight->"Bold"],
 "\nGets a slice from the protein data set"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037187301*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getProteinSlice", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getProteinSlice", "[", "i_", "]"}], " ", ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vol", ",", " ", "maxVal", ",", "minVal"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vol", " ", ":=", " ", 
       RowBox[{"Get", "[", 
        RowBox[{
        "rootPath", " ", "<>", " ", "\"\<data\\\\proteinVolume.nb\>\""}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxVal", " ", "=", " ", 
       RowBox[{"Max", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{
         "vol", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "]"}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"minVal", " ", "=", " ", 
       RowBox[{"Min", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{
         "vol", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "]"}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Map", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Round", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "-", "minVal"}], ")"}], " ", "*", "255.0"}], 
            RowBox[{"maxVal", "-", "minVal"}]], "]"}], "&"}], ",", " ", 
         RowBox[{
         "vol", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
         " ", "1"}], "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.407087037187301*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getVolume",
  FontWeight->"Bold"],
 "\nGets a slice from the protein data set"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037187301*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getVolume", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getVolume", "[", 
    RowBox[{
    "fileName_", ",", " ", "xRange_", ",", " ", "yRange_", ",", " ", 
     "zRange_"}], "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vol", ",", " ", "maxVal", ",", "minVal"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vol", " ", ":=", " ", 
       RowBox[{"Get", "[", 
        RowBox[{
        "rootPath", " ", "<>", " ", "\"\<data\\\\\>\"", " ", "<>", " ", 
         "fileName"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxVal", " ", "=", " ", 
       RowBox[{"Max", "[", 
        RowBox[{"Flatten", "[", "vol", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"minVal", " ", "=", " ", 
       RowBox[{"Min", "[", 
        RowBox[{"Flatten", "[", "vol", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Map", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Round", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"#", "-", "minVal"}], ")"}], " ", "*", "255.0"}], 
              RowBox[{"maxVal", "-", "minVal"}]], "]"}], "&"}], ",", " ", 
           "vol", ",", " ", "1"}], "]"}], ",", " ", "xRange", ",", " ", 
         "yRange", ",", " ", "zRange"}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.407087037187301*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getImage",
  FontWeight->"Bold"],
 "\nGets a slice from a grayscale image"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037187301*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getImage", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getImage", "[", "imgName_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "picture", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"picture", "=", 
       RowBox[{"Import", "[", 
        RowBox[{
        "rootPath", " ", "<>", " ", "\"\<\\\\data\\\\\>\"", " ", "<>", " ", 
         "imgName"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"picture", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.407087037187301*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getInput",
  FontWeight->"Bold"],
 "\nGets the input \n\t1: Protein Sliced at 32\n\t2: Protein Sliced at 20\n\t\
3: Random.gif\n\t4: Blobs.gif\n\t5: Dragon.gif\n\t6: Letters.gif\n\t7: \
Rings.gif\n\t8: XWithGraySpots.gif\n\t9: Vessel\nAlso defines sliceSize which \
is a hash map of the pixels that span the image... The rest of the pixels \
make up a blank boundary which simplifies the calculations."
}], "Subsubtitle",
 CellChangeTimes->{3.407087037187301*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getInput", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getInput", "[", "i_", "]"}], " ", ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"inputImage", ",", " ", "sliceSize"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Switch", "[", 
       RowBox[{"i", ",", "\[IndentingNewLine]", "1", ",", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{"getImage", "[", "\"\<Protein32.gif\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", "2", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{"getImage", "[", "\"\<Protein40.gif\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", "3", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{"getImage", "[", "\"\<Random.gif\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", "4", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{"getImage", "[", "\"\<Blobs.gif\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", "5", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{"getImage", "[", "\"\<Dragon.gif\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", "6", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{"getImage", "[", "\"\<Letters.gif\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", "7", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{"getImage", "[", "\"\<Rings.gif\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", "8", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{"getImage", "[", "\"\<XWithGraySpots.gif\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", "9", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{"getImage", "[", "\"\<vessel_1.gif\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", "10", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{"getImage", "[", "\"\<Basin.gif\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", "11", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{"getImage", "[", "\"\<Basin2.gif\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", "12", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{"getImage", "[", "\"\<BinaryText.gif\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", "13", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{"getImage", "[", "\"\<BinaryMan.gif\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", "14", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{"getImage", "[", "\"\<Question.gif\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", "15", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{"getImage", "[", "\"\<Fingerprint1.gif\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", "16", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{"getImage", "[", "\"\<Fingerprint2.gif\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", "101", ",", " ", 
        RowBox[{"inputImage", " ", "=", "  ", 
         RowBox[{
         "getImage", "[", "\"\<Protein32-surfaceRemoved.gif\>\"", "]"}]}], 
        ",", "\[IndentingNewLine]", "102", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{
         "getImage", "[", "\"\<Protein40-surfaceRemoved.gif\>\"", "]"}]}], 
        ",", "\[IndentingNewLine]", "103", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{
         "getImage", "[", "\"\<Random-surfaceRemoved.gif\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", "104", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{"getImage", "[", "\"\<Blobs-surfaceRemoved.gif\>\"", "]"}]}],
         ",", "\[IndentingNewLine]", "105", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{
         "getImage", "[", "\"\<Dragon-surfaceRemoved.gif\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", "106", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{
         "getImage", "[", "\"\<Letters-surfaceRemoved.gif\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", "107", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{"getImage", "[", "\"\<Rings-surfaceRemoved.gif\>\"", "]"}]}],
         ",", "\[IndentingNewLine]", "108", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{
         "getImage", "[", "\"\<XWithGraySpots-surfaceRemoved.gif\>\"", 
          "]"}]}], ",", "\[IndentingNewLine]", "109", ",", " ", 
        RowBox[{"inputImage", " ", "=", " ", 
         RowBox[{
         "getImage", "[", "\"\<vessel_1-surfaceRemoved.gif\>\"", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sliceSize", "[", 
        RowBox[{"1", ",", "1"}], "]"}], " ", "=", " ", "1"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sliceSize", "[", 
        RowBox[{"2", ",", "1"}], "]"}], " ", "=", " ", "1"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sliceSize", "[", 
        RowBox[{"1", ",", "2"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"Dimensions", "[", "inputImage", "]"}], 
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sliceSize", "[", 
        RowBox[{"2", ",", "2"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"Dimensions", "[", "inputImage", "]"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"inputImage", " ", "=", " ", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", " ", ">=", " ", 
              RowBox[{"sliceSize", "[", 
               RowBox[{"1", ",", "1"}], "]"}]}], " ", ")"}], "&&", 
            RowBox[{"(", " ", 
             RowBox[{"x", " ", "<=", " ", 
              RowBox[{"sliceSize", "[", 
               RowBox[{"1", ",", "2"}], "]"}]}], " ", ")"}], " ", "&&", " ", 
            RowBox[{"(", 
             RowBox[{"y", " ", ">=", " ", 
              RowBox[{"sliceSize", "[", 
               RowBox[{"2", ",", "1"}], "]"}]}], ")"}], " ", "&&", " ", 
            RowBox[{"(", 
             RowBox[{"y", " ", "<=", " ", 
              RowBox[{"sliceSize", "[", 
               RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"inputImage", "\[LeftDoubleBracket]", 
            RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], ",", 
           "\[IndentingNewLine]", "0"}], "\[IndentingNewLine]", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", 
           RowBox[{"1", "-", "gaussianRadius"}], ",", " ", 
           RowBox[{
            RowBox[{"sliceSize", "[", 
             RowBox[{"1", ",", "2"}], "]"}], "+", "gaussianRadius"}]}], "}"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", 
           RowBox[{"1", "-", "gaussianRadius"}], ",", " ", 
           RowBox[{
            RowBox[{"sliceSize", "[", 
             RowBox[{"2", ",", "2"}], "]"}], "+", "gaussianRadius"}]}], 
          "}"}]}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]",
       
      RowBox[{
       RowBox[{"sliceSize", "[", 
        RowBox[{"1", ",", "1"}], "]"}], " ", "=", " ", 
       RowBox[{"gaussianRadius", "+", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sliceSize", "[", 
        RowBox[{"2", ",", "1"}], "]"}], " ", "=", " ", 
       RowBox[{"gaussianRadius", "+", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sliceSize", "[", 
        RowBox[{"1", ",", "2"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Dimensions", "[", "inputImage", "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-", 
        "gaussianRadius"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sliceSize", "[", 
        RowBox[{"2", ",", "2"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Dimensions", "[", "inputImage", "]"}], 
         "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
        "gaussianRadius"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"inputImage", ",", " ", "sliceSize"}], "}"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.399300820164509*^9, 3.399300848289689*^9}, {
   3.3993015453566504`*^9, 3.3993015523098197`*^9}, {3.399317356035963*^9, 
   3.3993173605828667`*^9}, {3.406922250312436*^9, 3.406922262015561*^9}, 
   3.4070870372029257`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "slice", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "sliceSize", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"inputs", "=", 
   RowBox[{"getInput", "[", "15", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"slice", "=", 
   RowBox[{"inputs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"sliceSize", "=", 
   RowBox[{"inputs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
   ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ListContourPlot", "[", 
       RowBox[{"slice", ",", 
        RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
        RowBox[{"Contours", "\[Rule]", "5"}], ",", " ", 
        RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"ListDensityPlot", "[", 
       RowBox[{"slice", ",", 
        RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
        RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", " ", 
        RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}]}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "inputs", "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.39930001179996*^9, {3.3993008660554276`*^9, 3.3993008661960535`*^9}, {
   3.3993015585286093`*^9, 3.399301558637985*^9}, 3.3993022786738434`*^9, {
   3.3993035366506443`*^9, 3.3993035850728292`*^9}, {3.3993114115760436`*^9, 
   3.399311411638544*^9}, 3.3993116924997163`*^9, {3.4065545788194394`*^9, 
   3.4065545811006894`*^9}, {3.4065547402725644`*^9, 
   3.4065548352725644`*^9}, {3.4065562948350644`*^9, 
   3.4065563143194394`*^9}, {3.4065564100069394`*^9, 
   3.4065564107413144`*^9}, {3.4065564556163144`*^9, 3.4065564852725644`*^9}, 
   3.4070870372029257`*^9, {3.4071673318691063`*^9, 3.4071673480409813`*^9}, {
   3.4071675344316063`*^9, 3.4071675481503563`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJys3XuUrXlaF/YjoikVyD6ni1CGAsuaoqwUZVH3++WdMz1n+jbdPTM4IqIS
TFREZBBBZwnkJxAyAsMtggPDVRHD8hIgQVGMPCpGEAVEAkZRVBghgUAYLxMG
s1ZOz9TzHfdn9f4vvVhr8znf85yePrdvPfv37vf9jZ/wKa//r9/v3r17/92n
3rv30ut7//m/b+df703zXsIzvIxX8Cpew+t4A2/iLbyNd/Au3sP7+AAf4iN8
jE/wKT7D5/gCX+IrfI1v8C2e5j3wvVeS43sPyfG9V5Hje0+S43uvJsf3HpHj
e68hx/eeIsf3nibH954hx/eeJcf3niPH915Lju89T47vvUCO77047wkPXPje
65jHAxe+93rm8cCF772BeTxw4XsfzTweuPC938I8HrjwvTcyjwcufO+3Mo8H
LnzvY5jHAxe+99uYxwMXvvexzOOBC9/77dje8nUJz/AyXsGreA2v4w28ibfw
Nt7Bu3gP7+MDfIiP8DE+waf4DJ/jC3yJr/A1vsG3eJr3wOmvznH6q3Oc/uoc
p786x+mvznH6q3Oc/uocp786x+mvznH6q3Oc/uocp786x+mvznH6q3Oc/uoc
p7/uPOGBC6e/eh4PXDj91fN44MLpr57HAxdOf/U8Hrhw+qvn8cCF0189jwcu
nP7qeTxw4fRXz+OBC6e/eh4PXDj91fN44MLpr0V7lr3l6wwv4xW8itfwOt7A
m3gLb+MdvIv38D4+wIf4CB/jE3yKz/A5vsCX+Apf4xt8i6d5D5z+6hynvzrH
6a/Ocfqrc5z+6hynvzrH6a/Ocfqrc5z+6hynvzrH6a/Ocfqrc5z+6hynvzrH
6a/OcfrrzhMeuHD6q+fxwIXTXz2PBy6c/up5PHDh9FfP44ELp796Hg9cOP3V
83jgwumvnscDF05/9TweuHD6q+fxwIXTXz2PBy6c/lr0vqB7lr3l6zJewat4
Da/jDbyJt/A23sG7eA/v4wN8iI/wMT7Bp/gMn+MLfImv8DW+wbd4mvfA6a/O
cfqrc5z+6hynvzrH6a/Ocfqrc5z+6hynvzrH6a/Ocfqrc5z+6hynvzrH6a/O
cfqrc5z+6hynv+484YELp796Hg9cOP3V83jgwumvnscDF05/9TweuHD6q+fx
wIXTXz2PBy6c/up5PHDh9FfP44ELp796Hg9cOP3V83jgwumvtudYvi/onmVv
+bqCV/EaXscbeBNv4W28g3fxHt7HB/gQH+FjfIJP8Rk+xxf4El/ha3yDb/E0
74HTX53j9FfnOP3VOU5/dY7TX53j9FfnOP3VOU5/dY7TX53j9FfnOP3VOU5/
dY7TX53j9FfnOP3VOU5/3XnCAxdOf/U8Hrhw+qvn8cCF0189jwcunP7qeTxw
4fRXz+OBC6e/eh4PXDj91fN44MLpr57HAxdOf/U8Hrhw+qvn8cCF019tr7vw
HMv3Bd2z7C1fV/EaXscbeBNv4W28g3fxHt7HB/gQH+FjfIJP8Rk+xxf4El/h
a3yDb/E074HTX53j9FfnOP3VOU5/dY7TX53j9FfnOP3VOU5/dY7TX53j9Ffn
OP3VOU5/dY7TX53j9FfnOP3VOU5/3XnCAxdOf/U8Hrhw+qvn8cCF0189jwcu
nP7qeTxw4fRXz+OBC6e/eh4PXDj91fN44MLpr57HAxdOf/U8Hrhw+qvn8cCF
019trxPs/vLcyvcB3avsqdUFr2t4HW/gTbyFt/EO3sV7eB8f4EN8hI/xCT7F
Z/gcX+BLfIWv8Q2+xdO8B05/dY7TX53j9FfnOP3VOU5/dY7TX53j9FfnOP3V
OU5/dY7TX53j9FfnOP3VOU5/dY7TX53j9FfnOP115wkPXDj91fN44MLpr57H
AxdOf/U8Hrhw+qvn8cCF0189jwcunP7qeTxw4fRXz+OBC6e/eh4PXDj91fN4
4MLpr57HAxdOfy26rr37y+ssPLfyfUD3KntqbcHrOt7Am3gLb+MdvIv38D4+
wIf4CB/jE3yKz/A5vsCX+Apf4xt8i6d5D5z+6hynvzrH6a/Ocfqrc5z+6hyn
vzrH6a/Ocfqrc5z+6hynvzrH6a/Ocfqrc5z+6hynvzrH6a/OcfrrzhMeuHD6
q+fxwIXTXz2PBy6c/up5PHDh9FfP44ELp796Hg9cOP3V83jgwumvnscDF05/
9TweuHD6q+fxwIXTXz2PBy6c/mr7Oazur7bXCc6w51i+L+ieZW/5uoE38Rbe
xjt4F+/hfXyAD/ERPsYn+BSf4XN8gS/xFb7GN/gWT/MeOP3VOU5/dY7TX53j
9FfnOP3VOU5/dY7TX53j9FfnOP3VOU5/dY7TX53j9FfnOP3VOU5/dY7TX53j
9NedJzxw4fRXz+OBC6e/eh4PXDj91fN44MLpr57HAxdOf/U8Hrhw+qvn8cCF
0189jwcunP7qeTxw4fRXz+OBC6e/eh4PXDj91fZzw91fXsfudYFeZ+G5le8D
ulfZUxsLXjfxFt7GO3gX7+F9fIAP8RE+xif4FJ/hc3yBL/EVvsY3+BZP8x44
/dU5Tn91jtNfneP0V+c4/dU5Tn91jtNfneP0V+c4/dU5Tn91jtNfneP0V+c4
/dU5Tn91jtNfneP0150nPHDh9FfP44ELp796Hg9cOP3V83jgwumvnscDF05/
9TweuHD6q+fxwIXTXz2PBy6c/up5PHDh9FfP44ELp796Hg9cOP3V9j4X3V9+
7srr2L0u0OssPLfyfUD3Kntqc8HrFt7GO3gX7+F9fIAP8RE+xif4FJ/hc3yB
L/EVvsY3+BZP8x44/dU5Tn91jtNfneP0V+c4/dU5Tn91jtNfneP0V+c4/dU5
Tn91jtNfneP0V+c4/dU5Tn91jtNfneP0150nPHDh9FfP44ELp796Hg9cOP3V
83jgwumvnscDF05/9TweuHD6q+fxwIXTXz2PBy6c/up5PHDh9FfP44ELp796
Hg9cOP3V9r5M3V/tJTzDy3gFe92F51jr2D3L3vJ1G+/gXbyH9/EBPsRH+Bif
4FN8hs/xBb7EV/ga3+BbPM174PRX5zj91TlOf3WO01+d4/RX5zj91TlOf3WO
01+d4/RX5zj91TlOf3WO01+d4/RX5zj91TlOf3WO0193nvDAhdNfPY8HLpz+
6nk8cOH0V8/jgQunv3oeD1w4/dXzeODC6a+exwMXTn/1PB64cPqr5/HAhdNf
PY8HLpz+6nk8cOH0V9v7CHZ/eV8LPyfs5668jt3rAr3OwnMr3wd0r7Knthe8
7uBdvIf38QE+xEf4GJ/gU3yGz/EFvsRX+Brf4Fs8zXvg9FfnOP3VOU5/dY7T
X53j9FfnOP3VOU5/dY7TX53j9FfnOP3VOU5/dY7TX53j9FfnOP3VOU5/dY7T
X3ee8MCF0189jwcunP7qeTxw4fRXz+OBC6e/eh4PXDj91fN44MLpr57HAxdO
f/U8Hrhw+qvn8cCF0189jwcunP7qeTxw4fRX2/vedn95Hybva+HnhP3cldex
e12g11l4buX7gO5V9tTOgtddvIf38QE+xEf4GJ/gU3yGz/EFvsRX+Brf4Fs8
zXvg9FfnOP3VOU5/dY7TX53j9FfnOP3VOU5/dY7TX53j9FfnOP3VOU5/dY7T
X53j9FfnOP3VOU5/dY7TX3ee8MCF0189jwcunP7qeTxw4fRXz+OBC6e/eh4P
XDj91fN44MLpr57HAxdOf/U8Hrhw+qvn8cCF0189jwcunP7qeTxw4fRX2/u0
d39530Dvw+R9LfycsJ+78jp2rwv0OgvPrXwf0L3Kntpd8LqH9/EBPsRH+Bif
4FN8hs/xBb7EV/ga3+BbPM174PRX5zj91TlOf3WO01+d4/RX5zj91TlOf3WO
01+d4/RX5zj91TlOf3WO01+d4/RX5zj91TlOf3WO0193nvDAhdNfPY8HLpz+
6nk8cOH0V8/jgQunv3oeD1w4/dXzeODC6a+exwMXTn/1PB64cPqr5/HAhdNf
PY8HLpz+6nk8cOH0V9vninR/tZfwDC/jFeznhtfwOvY6Qa+78BzL9wXds+wt
X/fxAT7ER/gYn+BTfIbP8QW+xFf4Gt/gWzzNe+D0V+c4/dU5Tn91jtNfneP0
V+c4/dU5Tn91jtNfneP0V+c4/dU5Tn91jtNfneP0V+c4/dU5Tn91jtNfd57w
wIXTXz2PBy6c/up5PHDh9FfP44ELp796Hg9cOP3V83jgwumvnscDF05/9Twe
uHD6q+fxwIXTXz2PBy6c/up5PHDh9Ffb52B1f3lfdu9z630DvQ+T97Xwc8J+
7srr2L0u0OssPLfyfUD3Kntqf8HrAT7ER/gYn+BTfIbP8QW+xFf4Gt/gWzzN
e+D0V+c4/dU5Tn91jtNfneP0V+c4/dU5Tn91jtNfneP0V+c4/dU5Tn91jtNf
neP0V+c4/dU5Tn91jtNfd57wwIXTXz2PBy6c/up5PHDh9FfP44ELp796Hg9c
OP3V83jgwumvnscDF05/9TweuHD6q+fxwIXTXz2PBy6c/up5PHDh9Ffb5zZ2
f/kcEe/L7n1uvW+g92HyvhZ+TtjPXXkdu9cFep2F51a+D+heZU8dLHg9xEf4
GJ/gU3yGz/EFvsRX+Brf4Fs8zXvg9FfnOP3VOU5/dY7TX53j9FfnOP3VOU5/
dY7TX53j9FfnOP3VOU5/dY7TX53j9FfnOP3VOU5/dY7TX3ee8MCF0189jwcu
nP7qeTxw4fRXz+OBC6e/eh4PXDj91fN44MLpr57HAxdOf/U8Hrhw+qvn8cCF
0189jwcunP7qeTxw4fRX2+cMd3/53CufI+J92b3PrfcN9D5M3tfCzwn7uSuv
Y/e6QK+z8NzK9wHdq+ypwwWvR/gYn+BTfIbP8QW+xFf4Gt/gWzzNe+D0V+c4
/dU5Tn91jtNfneP0V+c4/dU5Tn91jtNfneP0V+c4/dU5Tn91jtNfneP0V+c4
/dU5Tn91jtNfd57wwIXTXz2PBy6c/up5PHDh9FfP44ELp796Hg9cOP3V83jg
wumvnscDF05/9TweuHD6q+fxwIXTXz2PBy6c/up5PHDh9Fe7+6v/Xu7+ai/h
GV7GK9j73q7hdex9LvzcsJ/D8rp2rxP0ugvPsXxf0D3L3vL1GJ/gU3yGz/EF
vsRX+Brf4Fs8zXvg9FfnOP3VOU5/dY7TX53j9FfnOP3VOU5/dY7TX53j9Ffn
OP3VOU5/dY7TX53j9FfnOP3VOU5/dY7TX3ee8MCF0189jwcunP7qeTxw4fRX
z+OBC6e/eh4PXDj91fN44MLpr57HAxdOf/U8Hrhw+qvn8cCF0189jwcunP7q
eTxw4fRXu/ur/x7u/vK5wj6n0ede+RwR78vufW69b6D3YfK+Fn5O2M9deR27
1wV6nYXnVr4P6F5lTx0veD3Bp/gMn+MLfImv8DW+wbd4mvfA6a/Ocfqrc5z+
6hynvzrH6a/Ocfqrc5z+6hynvzrH6a/Ocfqrc5z+6hynvzrH6a/Ocfqrc5z+
6hynv+484YELp796Hg9cOP3V83jgwumvnscDF05/9TweuHD6q+fxwIXTXz2P
By6c/up5PHDh9FfP44ELp796Hg9cOP3V83jgwumvdvdX/73b/dVewjO8jFew
zxVZw+vY+wh6Xybvc+Hnhv0clte1e52g1114juX7gu5Z9pavp/gMn+MLfImv
8DW+wbd4mvfA6a/Ocfqrc5z+6hynvzrH6a/Ocfqrc5z+6hynvzrH6a/Ocfqr
c5z+6hynvzrH6a/Ocfqrc5z+6hynv+484YELp796Hg9cOP3V83jgwumvnscD
F05/9TweuHD6q+fxwIXTXz2PBy6c/up5PHDh9FfP44ELp796Hg9cOP3V83jg
wumvdvdX/z3b/dVewjO8jFewz8Faw+vY+956H8Et7H0u/Nywn8PyunavE/S6
C8+xfF/QPcve8vUMn+MLfImv8DW+wbd4mvfA6a/Ocfqrc5z+6hynvzrH6a/O
cfqrc5z+6hynvzrH6a/Ocfqrc5z+6hynvzrH6a/Ocfqrc5z+6hynv+484YEL
p796Hg9cOP3V83jgwumvnscDF05/9TweuHD6q+fxwIXTXz2PBy6c/up5PHDh
9FfP44ELp796Hg9cOP3V83jgwumvdvdX/73a/dVewjO8jFewz21cw+vY+7R7
39st7H2ZvM+Fnxvew17X7nWCXnfhOZbvC7pn2Vu+nuMLfImv8DW+wbd4mvfA
6a/Ocfqrc5z+6hynvzrH6a/Ocfqrc5z+6hynvzrH6a/Ocfqrc5z+6hynvzrH
6a/Ocfqrc5z+6hynv+484YELp796Hg9cOP3V83jgwumvnscDF05/9TweuHD6
q+fxwIXTXz2PBy6c/up5PHDh9FfP44ELp796Hg9cOP3V83jgwumvdvdX/z3a
/dVewjO8jFewzxlew+t4A3uf9i3sfQS9L5P3udjDfg7L69q9TtDrLjzH8n1B
9yx7y9cLfImv8DW+wbd4mvfA6a/Ocfqrc5z+6hynvzrH6a/Ocfqrc5z+6hyn
vzrH6a/Ocfqrc5z+6hynvzrH6a/Ocfqrc5z+6hynv+484YELp796Hg9cOP3V
83jgwumvnscDF05/9TweuHD6q+fxwIXTXz2PBy6c/up5PHDh9FfP44ELp796
Hg9cOP3V83jgwumvdvdX/73Z/dVewjO8jFfwKl7D63gD+1yRLex9b72PoPdl
2sN+btjPYXldu9cJet2F51i+L+ieZW/5eomv8DW+wbd4mvfA6a/Ocfqrc5z+
6hynvzrH6a/Ocfqrc5z+6hynvzrH6a/Ocfqrc5z+6hynvzrH6a/Ocfqrc5z+
6hynv+484YELp796Hg9cOP3V83jgwumvnscDF05/9TweuHD6q+fxwIXTXz2P
By6c/up5PHDh9FfP44ELp796Hg9cOP3V83jgwumvdvdX/z3Z/dVewjO8jFfw
Kl7D63gDb+It7H3ave+t9xHcw/vYzw37OSyva/c6Qa+78BzL9wXds+wtX6/w
Nb7Bt3ia98Dpr85x+qtznP7qHKe/Osfpr85x+qtznP7qHKe/Osfpr85x+qtz
nP7qHKe/Osfpr85x+qtznP7qHKe/7jzhgQunv3oeD1w4/dXzeODC6a+exwMX
Tn/1PB64cPqr5/HAhdNfPY8HLpz+6nk8cOH0V8/jgQunv3oeD1w4/dXzeODC
6a9291f/vdj91V7CM7yMV/AqXsPreANv4i3sc0W8T7v3vd3D+/gA+7nhI+x1
7V4n6HUXnmP5vqB7lr3l6zW+wbd4mvfA6a/Ocfqrc5z+6hynvzrH6a/Ocfqr
c5z+6hynvzrH6a/Ocfqrc5z+6hynvzrH6a/Ocfqrc5z+6hynv+484YELp796
Hg9cOP3V83jgwumvnscDF05/9TweuHD6q+fxwIXTXz2PBy6c/up5PHDh9FfP
44ELp796Hg9cOP3V83jgwumvdvdX/z3Y/dVewjO8jFfwKl7D63gDb+It7HOw
fK6I92nfw/v4AB/iI+znsLyu3esEve7CcyzfF3TPsrd8vcG3eJr3wOmvznH6
q3Oc/uocp786x+mvznH6q3Oc/uocp786x+mvznH6q3Oc/uocp786x+mvznH6
q3Oc/uocp7/uPOGBC6e/eh4PXDj91fN44MLpr57HAxdOf/U8Hrhw+qvn8cCF
0189jwcunP7qeTxw4fRXz+OBC6e/eh4PXDj91fN44MLpr3b3V/+91/3VXsIz
vIxX8Cpew+t4A2/iLbyNfQ6WzxXZw/v4AB/iI+znhv0clte1e52g1114juX7
gu5Z9pavt3ia98Dpr85x+qtznP7qHKe/Osfpr85x+qtznP7qHKe/Osfpr85x
+qtznP7qHKe/Osfpr85x+qtznP7qHKe/7jzhgQunv3oeD1w4/dXzeODC6a+e
xwMXTn/1PB64cPqr5/HAhdNfPY8HLpz+6nk8cOH0V8/jgQunv3oeD1w4/dXz
eODC6a9291f/Pdf91V7CM7yMV/AqXsPreANv4i28jXewz8Haw/v4AB/iI+x9
LvzcsJ/D8rp2rxP0ugvPsXxf0D3L3vJ1mvfA6a/Ocfqrc5z+6hynvzrH6a/O
cfqrc5z+6hynvzrH6a/Ocfqrc5z+6hynvzrH6a/Ocfqrc5z+6hynv+484YEL
p796Hg9cOP3V83jgwumvnscDF05/9TweuHD6q+fxwIXTXz2PBy6c/up5PHDh
9FfP44ELp796Hg9cOP3V83jgwumvdvdX/z3W/dVewjO8jFfwKl7D63gDb+It
vI13sM9t3MP7+AAf4iN8jL3PhZ8b9nNYXtfudYJed+E5lu8LumfZW7wOv/2V
5Dj91TlOf3WO01+d4/RX5zj91TlOf3WO01+d4/RX5zj91TlOf3WO01+d4/RX
5zj91TlOf3WO0193nvDAhdNfPY8HLpz+6nk8cOH0V8/jgQunv3oeD1w4/dXz
eODC6a+exwMXTn/1PB64cPqr5/HAhdNfPY8HLpz+6nk8cOH0V/uuv/L32F1/
xUt4hpfxCl7Fa3gdb+BNvIW38Q7exXt4Hx/gQ3yEj/EJ9j4XZ9jPYXldu9cJ
et2F51i+L+ieRW/52v2Vb8fdX8lx91dy3P2VHHd/JcfdX8lx91dy3P2VHHd/
JcfdX8lx91dy3P2VHHd/JcfdX8lx91dy3P3VnvDAhbu/Mo8HLtz9lXk8cOHu
r8zjgQt3f2UeD1y4+yvzeODC3V+ZxwMX7v7KPB64cPdX5vHAhbu/Mo8HLtz9
lXk8cOHur7j3r/46+66/4iU8w8t4Ba/iNbyON/Am3sLbeAfv4j28jw/wIT7C
x/gEn+Iz7OeG/RyW17V7naDXXXiO5fuCC3oqOa/Db39IjrN/dY6zf3WOs391
jrN/dY6zf3WOs391jrN/dY6zf3WOs391jrN/dY6zf3WOs391jrN/dY6zf915
wgMXzv7V83jgwtm/eh4PXDj7V8/jgQtn/+p5PHDh7F89jwcunP2r5/HAhbN/
9TweuHD2r57HAxfO/tXzeODC2b96Hg9cOPtXu/cv+itewjO8jFfwKl7D63gD
b+ItvI138C7ew/v4AB/iI3yMT/ApPsPe58LPDfs5LK9r9zpBr7vwHGvBXmVP
jQWv2b/or+SvIsfZv+iv5K8mx9m/6K/kryHH2b/or+RPk+PsX/RX8mfJcfYv
+iv5a8lx9i/6K/kL5Dj7F/2V748LZ/+ivzKPC2f/or8yjwtn/6K/Mo8LZ/+i
vzKPC2f/or8yjwtn/6K/Mo8LZ/+ivzKPC2f/or8yjwtn/6K/Mo8LZ/+ivzKP
C2f/or/ydXXvX+0lPMPLeAWv4jW8jjfwJt7C23gH7+I9vI8P8CE+wsf4BJ/i
M+x9mbzPhZ8b9nNYXtfudYJed7HgfUD3KnsqOa/Db38VOc7+1TnO/tU5zv7V
Oc7+1TnO/tU5zv7VOc7+1TnO/tU5zv7VOc7+1TnO/tU5zv7VOc7+decJD1w4
+1fP44ELZ//qeTxw4exfPY8HLpz9q+fxwIWzf/U8Hrhw9q+exwMXzv7V83jg
wtm/eh4PXDj7V8/jgQtn/+p5PHDh7F/t3r/avX+1l/AML+MVvIrX8DrewJt4
C2/jHbyL9/A+PsCH+Agf4xN8is/wOfa+TN7nws8N+zksr2v3OsFp3p5jZf/q
HNtbvmb/6m/H2b86x9m/OsfZvzrH2b86x9m/OsfZvzrH2b86x9m/OsfZvzrH
2b86x9m/OsfZvzrH2b/uPOGBC2f/6nk8cOHsXz2PBy6c/avn8cCFs3/1PB64
cPavnscDF87+1fN44MLZv3oeD1w4+1fP44ELZ//qeTxw4exfPY8HLpz9q937
V3+dfNdf8RKe4WW8glfxGl7HG3gTb+FtvIN38R7exwf4EB/hY3yCT/EZPscX
2PsyeZ8LPzfs57C8rn2at9ddZP/yfT/3KHvpVS//Ovz2J8lx9q/OcfavznH2
r85x9q/OcfavznH2r85x9q/OcfavznH2r85x9q/OcfavznH2rztPeODC2b96
Hg9cOPtXz+OBC2f/6nk8cOHsXz2PBy6c/avn8cCFs3/1PB64cPavnscDF87+
1fN44MLZv3oeD1w4+1fP44ELZ/9q9/5Ff8VLeIaX8QpexWt4HW/gTbyFt/EO
3sV7eB8f4EN8hI/xCT7FZ/gcX2DvI+h9mbzPhZ8b9nNY07y9TjD7F/2V/CE5
trd8zf5FfyV/NTnO/kV/JX8NOc7+RX8lf5ocZ/+iv5I/S46zf9FfyV9LjrN/
0V/JXyDH2b/or3x/XDj7F/2VeVw4+xf9lXlcOPsX/ZV5XDj7F/2VeVw4+xf9
lXlcOPsX/ZV5XDj7F/2VeVw4+xf9lXlcOPsX/ZV5XDj7F/2VeVw4+xf9la+L
e/9qL+EZXsYreBWv4XW8gTfxFt7GO3gX7+F9fIAP8RE+xif4FJ/hc3yBve+t
9xH0vkze58LPDU/z9rr27F9eV+E5le/7uUfZS0++/Ovw219NjrN/dY6zf3WO
s391jrN/dY6zf3WOs391jrN/dY6zf3WOs391jrN/dY6zf915wgMXzv7V83jg
wtm/eh4PXDj7V8/jgQtn/+p5PHDh7F89jwcunP2r5/HAhbN/9TweuHD2r57H
AxfO/tXzeODC2b96Hg9cOPtXu/cv+itewjO8jFfwKl7D63gDb+ItvI138C7e
w/v4AB/iI3yMT/ApPsPn+AJ7n3bve+t9BL0vk/e5mObt57Cyf9FfyR+S4+xf
9Jc9NRa8Zv+iv5I/IsfZv+iv5E+R4+xf9FfyZ8hx9i/6K/lz5Dj7F/2V/Hly
nP2L/kr+4rwnPHDh7F/0V+Zx4exf9FfmceHsX/RX5nHh7F/0V+Zx4exf9Ffm
ceHsX/RX5nHh7F/0V+Zx4exf9FfmceHsX/RX5nHh7F/0V+Zx4exf9Fe+7u39
q72EZ3gZr+BVvIbX8QbexFt4G+/gXbyH9/EBPsRH+Bif4FN8hs/xBfa5It6n
3fveeh9B78s0zdvPDWf/8rp1rwP0ugrPqXzfzz3KXnr1y78Ov/0ROc7+1TnO
/tU5zv7VOc7+1TnO/tU5zv7VOc7+1TnO/tU5zv7VOc7+decJD1w4+1fP44EL
Z//qeTxw4exfPY8HLpz9q+fxwIWzf/U8Hrhw9q+exwMXzv7V83jgwtm/eh4P
XDj7V8/jgQtn/+p5PHDh7F/t3r/or3gJz/AyXsGreA2v4w28ibfwNt7Bu3gP
7+MDfIiP8DE+waf4DJ/jC+xzsHyuiPdp97633kdwmrf3ucj+RX8lf0iOs3/R
X8kX7FX21Fjwmv2L/kr+GnKc/Yv+Sv40Oc7+RX8lf5YcZ/+iv5K/lhxn/6K/
kr9AjrN/0V/5/rhw9i/6K/O4cPYv+ivzuHD2L/or87hw9i/6K/O4cPYv+ivz
uHD2L/or87hw9i/6K/O4cPYv+ivzuHD2L/or87hw9i/6K/O4cPYv+itf1/b+
1V7CM7yMV/AqXsPreANv4i28jXfwLt7D+/gAH+IjfIxP8Ck+w+f4AvvcRp+D
5XNFvE+7972d5u19mbJ/+blgP2fldeteB+h1FZ5T+b6fe5S99OjlX4ff/hpy
nP2rc5z9q3Oc/atznP2rc5z9q3Oc/atznP2rc5z9q3Oc/evOEx64cPavnscD
F87+1fN44MLZv3oeD1w4+1fP44ELZ//qeTxw4exfPY8HLpz9q+fxwIWzf/U8
Hrhw9q+exwMXzv7V83jgwtm/2r1/0V/xEp7hZbyCV/EaXscbeBNv4W28g3fx
Ht7HB/gQH+FjfIJP8Rk+xxfY5wz73Eafg+VzRbxP+zRv7yOY/Yv+Sv6QHGf/
or+SLzi3Sr5gr7KnxoLX7F/0V/KnyHH2L/or+TPkOPsX/ZX8OXKc/Yv+Sv48
Oc7+RX8lf3HeEx64cPYv+ivzuHD2L/or87hw9i/6K/O4cPYv+ivzuHD2L/or
87hw9i/6K/O4cPYv+ivzuHD2L/or87hw9i/6K/O4cPYv+ivzuHD2L/orX7f2
/tVewjO8jFfwKl7D63gDb+ItvI138C7ew/v4AB/iI3yMT/ApPsPn+AJfYp8z
7HMbfQ6WzxWZ5u19b7N/ed8l72Ph54L9nJXXrXsdoNdVeE7l+37uUfbSa17+
dfjtT5Hj7F+d4+xfnePsX53j7F+d4+xfnePsX53j7F+d4+xfd57wwIWzf/U8
Hrhw9q+exwMXzv7V83jgwtm/eh4PXDj7V8/jgQtn/+p5PHDh7F89jwcunP2r
5/HAhbN/9TweuHD2r57HAxfO/tXu/Yv+ipfwDC/jFbyK1/A63sCbeAtv4x28
i/fwPj7Ah/gIH+MTfIrP8Dm+wJf4CvucYZ/b6HOwpnl7n/bsX/RX8ofkOPsX
/ZV8wXWByRecWyVfsFfZU2PBa/Yv+iv50+Q4+xf9lfxZcpz9i/5K/lpynP2L
/kr+AjnO/kV/5fvjwtm/6K/M48LZv+ivzOPC2b/or8zjwtm/6K/M48LZv+iv
zOPC2b/or8zjwtm/6K/M48LZv+ivzOPC2b/or8zjwtm/6K/M48LZv+ivfF3a
+1d7Cc/wMl7Bq3gNr+MNvIm38Dbewbt4D+/jA3yIj/AxPsGn+Ayf4wt8ia/w
NfY5wz63cZq3zxXJ/uV9bb1PoPdd8j4Wfi7Yz1l53brXAXpdhedUvu/nHmUv
PfXyr8Nvf5ocZ//qHGf/6hxn/+ocZ//qHGf/6hxn/+ocZ/+684QHLpz9q+fx
wIWzf/U8Hrhw9q+exwMXzv7V83jgwtm/eh4PXDj7V8/jgQtn/+p5PHDh7F89
jwcunP2r5/HAhbN/9TweuHD2r3bvX/RXvIRneBmv4FW8htfxBt7EW3gb7+Bd
vIf38QE+xEf4GJ/gU3yGz/EFvsRX+BrfYJ8zPM3b52Bl/6K/kj8kx9m/6K/k
Cz53lXzBdYHJF5xbJV+wV9lTY8Fr9i/6K/kz5Dj7F/2V/DlynP2L/kr+PDnO
/kV/JX9x3hMeuHD2L/or87hw9i/6K/O4cPYv+ivzuHD2L/or87hw9i/6K/O4
cPYv+ivzuHD2L/or87hw9i/6K/O4cPYv+ivzuHD2L/or87hw9i/6K1939v7V
XsIzvIxX8Cpew+t4A2/iLbyNd/Au3sP7+AAf4iN8jE/wKT7D5/gCX+IrfI1v
8C2e5u1zG7N/+dwQ78PufW29T6D3XfI+Fn4u2M9Zed261wF6XYXnVL7v5x5l
Lz398q/Db3+GHGf/6hxn/+ocZ//qHGf/6hxn/+ocZ/+684QHLpz9q+fxwIWz
f/U8Hrhw9q+exwMXzv7V83jgwtm/eh4PXDj7V8/jgQtn/+p5PHDh7F89jwcu
nP2r5/HAhbN/9TweuHD2r3bvX/RXvIRneBmv4FW8htfxBt7EW3gb7+BdvIf3
8QE+xEf4GJ/gU3yGz/EFvsRX+Brf4Fs8zdvnDGf/or+SPyTH2b/or+QL7muR
fMHnrpIvuC4w+YJzq+QL9ip7aix4zf5FfyV/lhxn/6K/kr+WHGf/or+Sv0CO
s3/RX/n+uHD2L/or87hw9i/6K/O4cPYv+ivzuHD2L/or87hw9i/6K/O4cPYv
+ivzuHD2L/or87hw9i/6K/O4cPYv+ivzuHD2L/or87hw9i/6K19X9v7VXsIz
vIxX8Cpew+t4A2/iLbyNd/Au3sP7+AAf4iN8jE/wKT7D5/gCX+IrfI1v8C2e
5j1w9i+fy+hzrnxuiPdh97623ifQ+y55Hws/F+znrLxu3esAva7Ccyrf93OP
speeefnX4bc/S46zf3WOs391jrN/dY6zf3WOs3/decIDF87+1fN44MLZv3oe
D1w4+1fP44ELZ//qeTxw4exfPY8HLpz9q+fxwIWzf/U8Hrhw9q+exwMXzv7V
83jgwtm/eh4PXDj7V7v3L/orXsIzvIxX8Cpew+t4A2/iLbyNd/Au3sP7+AAf
4iN8jE/wKT7D5/gCX+IrfI1v8C2e5j1w9i/6K/lDcpz9i/5KvuC+gckX3Nci
+YLPXSVfcF1g8gXnVskX7FX21Fjwmv2L/kr+HDnO/kV/JX+eHGf/or+Svzjv
CQ9cOPsX/ZV5XDj7F/2VeVw4+xf9lXlcOPsX/ZV5XDj7F/2VeVw4+xf9lXlc
OPsX/ZV5XDj7F/2VeVw4+xf9lXlcOPsX/ZV5XDj7F/2Vrxt7/2ov4Rlexit4
Fa/hdbyBN/EW3sY7eBfv4X18gA/xET7GJ/gUn+FzfIEv8RW+xjf4Fk/zHjj7
l8+99znCPpfR51z53BDvw+59bb1PoPdd8j4Wfi7Yz1l53brXAXpdhedUvu/n
HmUvPfvyr8Nvf44cZ//qHGf/6hxn/+ocZ/+684QHLpz9q+fxwIWzf/U8Hrhw
9q+exwMXzv7V83jgwtm/eh4PXDj7V8/jgQtn/+p5PHDh7F89jwcunP2r5/HA
hbN/9TweuHD2r3bvX/RXvIRneBmv4FW8htfxBt7EW3gb7+BdvIf38QE+xEf4
GJ/gU3yGz/EFvsRX+Brf4Fs8zXvg7F/0V/KH5Dj7F/2VfMF92ZMvuG9g8gX3
tUi+4HNXyRdcF5h8wblV8gV7lT01Frxm/6K/kr+WHGf/or+Sv0COs3/RX/n+
uHD2L/or87hw9i/6K/O4cPYv+ivzuHD2L/or87hw9i/6K/O4cPYv+ivzuHD2
L/or87hw9i/6K/O4cPYv+ivzuHD2L/or87hw9i/6K18X9v7VXsIzvIxX8Cpe
w+t4A2/iLbyNd/Au3sP7+AAf4iN8jE/wKT7D5/gCX+IrfI1v8C2e5j1w9q/O
cfYvn3vvc4R9LqPPufK5Id6H3fvaep9A77vkfSz8XLCfs/K6da8D9LoKz6l8
3889yl567uVfh9/+WnKc/atznP2rc5z9684THrhw9q+exwMXzv7V83jgwtm/
eh4PXDj7V8/jgQtn/+p5PHDh7F89jwcunP2r5/HAhbN/9TweuHD2r57HAxfO
/tXzeODC2b/avX/RX/ESnuFlvIJX8Rpexxt4E2/hbbyDd/Ee3scH+BAf4WN8
gk/xGT7HF/gSX+FrfINv8TTvgbN/0V/JH5Lj7F/0V/IFz71KvuC+7MkX3Dcw
+YL7WiRf8Lmr5AuuC0y+4Nwq+YK9yp4aC16zf9FfyZ8nx9m/6K/kL857wgMX
zv5Ff2UeF87+RX9lHhfO/kV/ZR4Xzv5Ff2UeF87+RX9lHhfO/kV/ZR4Xzv5F
f2UeF87+RX9lHhfO/kV/ZR4Xzv5Ff2UeF87+RX/l677ev9pLeIaX8QpexWt4
HW/gTbyFt/EO3sV7eB8f4EN8hI/xCT7FZ/gcX+BLfIWv8Q2+xdO8B87+1TnO
/tU5zv7lc+99jrDPZfQ5Vz43xPuwe19b7xPofZe8j4WfC/ZzVl637nWAXlfh
OZXv+7lH2UuvffnX4bc/T46zf3WOs3/decIDF87+1fN44MLZv3oeD1w4+1fP
44ELZ//qeTxw4exfPY8HLpz9q+fxwIWzf/U8Hrhw9q+exwMXzv7V83jgwtm/
eh4PXDj7V7v3L/orXsIzvIxX8Cpew+t4A2/iLbyNd/Au3sP7+AAf4iN8jE/w
KT7D5/gCX+IrfI1v8C2e5j1w9i/6K/lDcpz9i/5KvuC5wskXPPcq+YL7sidf
cN/A5Avua5F8weeuki+4LjD5gnOr5Av2KntqLHjN/kV/JX+BHGf/or/y/XHh
7F/0V+Zx4exf9FfmceHsX/RX5nHh7F/0V+Zx4exf9FfmceHsX/RX5nHh7F/0
V+Zx4exf9FfmceHsX/RX5nHh7F/0V+Zx4exf9Fe+ruv9q72EZ3gZr+BVvIbX
8QbexFt4G+/gXbyH9/EBPsRH+Bif4FN8hs/xBb7EV/ga3+BbPM174OxfnePs
X53j7F+d4+xfPvfe5wj7XEafc+VzQ7wPu/e19T6B3nfJ+1j4uWA/Z+V1614H
6HUVnlP5vp97lL30/Mu/Dr/9BXKc/evOEx64cPavnscDF87+1fN44MLZv3oe
D1w4+1fP44ELZ//qeTxw4exfPY8HLpz9q+fxwIWzf/U8Hrhw9q+exwMXzv7V
83jgwtm/2r1/0V/xEp7hZbyCV/EaXscbeBNv4W28g3fxHt7HB/gQH+FjfIJP
8Rk+xxf4El/ha3yDb/E074Gzf9FfyR+S4+xf9FfyJ8lx9i/6K/mC514lX3Bf
9uQL7huYfMF9LZIv+NxV8gXXBSZfcG6VfMFeZU+NBa/Zv+iv5C/Oe8IDF87+
RX9lHhfO/kV/ZR4Xzv5Ff2UeF87+RX9lHhfO/kV/ZR4Xzv5Ff2UeF87+RX9l
HhfO/kV/ZR4Xzv5Ff2UeF87+RX9lHhfO/kV/5eu23r/aS3iGl/EKXsVreB1v
4E28hbfxDt7Fe3gfH+BDfISP8Qk+xWf4HF/gS3yFr/ENvsXTvAfO/tU5zv7V
Oc7+1TnO/tU5zv7lc+99jrDPZfQ5Vz43xPuwe19b7xPofZe8j4WfC/ZzVl63
7nWAXlfhOZXv+7lH2UsvvPzr8NtfnPeEBy6c/avn8cCFs3/1PB64cPavnscD
F87+1fN44MLZv3oeD1w4+1fP44ELZ//qeTxw4exfPY8HLpz9q+fxwIWzf/U8
Hrhw9q9271/0V7yEZ3gZr+BVvIbX8QbexFt4G+/gXbyH9/EBPsRH+Bif4FN8
hs/xBb7EV/ga3+BbPM174Oxf9Ffyh+Q4+xf9lfxJcpz9i/5KvuC5wskXPPcq
+YL7sidfcN/A5Avua5F8weeuki+4LjD5gnOr5Av2KntqLHjN/kV/5fvhwtm/
6K/M48LZv+ivzOPC2b/or8zjwtm/6K/M48LZv+ivzOPC2b/or8zjwtm/6K/M
48LZv+ivzOPC2b/or8zjwtm/6K/M48LZv+ivfF3W+1d7Cc/wMl7Bq3gNr+MN
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
OOdf9Ffyp8hxzr/or+TPkOOcf9FfyZ8jxzn/or+SL3juVfIF92VPzn0rJjyw
97nI+Rf9lfkF1wVmnr1pwgO7Z9lbvg5cOOdf9FfmceGcf9FfmceFc/5Ff2Ue
F875F/2VeVw451/0V+Zx4Zx/0V+Zx4Vz/kV/ZR4XzvkX/dW/7t1f8RKe4WW8
glfxGl7HG3gTb+FtvIN38R7exwf4EB/hY3yCT/EZPscX+BJf4Wt8g2/xNO+B
c/5FfyV/SI5z/kV/JX+SHOf8i/5K/ogc5/yL/kr+FDnO+Rf9lfwZcpzzL/or
+XPkOOdf9FfyBc9pTL7gOSLJuc/ShAf2vkw5/6K/Mr/gOvbM8z7fhAf2fcHu
L3tqLHgtnPMv+itzuHDOv+ivzOPCOf+ivzKPC+f8i/7KPC6c8y/6K/O4cM6/
6K/M48I5/6K/Mo8L5/yL/upf5+6veAnP8DJewat4Da/jDbyJt/A23sG7eA/v
4wN8iI/wMT7Bp/gMn+MLfImv8DW+wbd4mvfAOf+iv5I/JMc5/6K/kj9JjnP+
RX8lf0SOc/5FfyV/ihzn/Iv+Sv4MOc75F/2V/DlynPMv+iv5gucKJ1/w3Kvk
3BdwwgN7H8Gcf9FfmV/wuavMcy414YE9x+r+yvyCnqoFrzn/or8yjwvn/Iv+
yjwunPMv+ivzuHDOv+ivzOPCOf+ivzKPC+f8i/7KPC6c8y/6K/O4cM6/6K+8
L9znX+0lPMPLeAWv4jW8jjfwJt7C23gH7+I9vI8P8CE+wsf4BJ/iM3yOL/Al
vsLX+Abf4mneA+f8q3Oc86/Occ6/Osc5/+oc5/yrc5zzr85xzr86xzn/6hzn
/KtznPOvznHOvzrHOf/qHOf8q3Oc86/Occ6/Osc5/+r3xfDA3vc25189jwf2
c8M5//K6dK/z87oJz6F8X889yd756Jd/nfDA5dxvmfeEBy6c86+exwMXzvlX
z+OBC+f8q+fxwIVz/tXzeODCOf/qeTxw4Zx/tfv8i/6Kl/AML+MVvIrX8Dre
wJt4C2/jHbyL9/A+PsCH+Agf4xN8is/wOb7Al/gKX+MbfIuneQ+c8y/6K/lD
cpzzL/or+ZPkOOdf9FfyR+Q451/0V/KnyHHOv+iv5M+Q45x/0V/JnyPHOf+i
v5I/T45z/kV/Jee+6xMe2Pu05/yL/sr8gvtaZJ7r/iY8sNcJdn9lHg/snmVv
+Tpw4Zx/0V+Zx4Vz/kV/ZR4XzvkX/ZV5XDjnX/RX5nHhnH/RX5nHhXP+RX9l
HhfO+Rf91b9u3V/xEp7hZbyCV/EaXscbeBNv4W28g3fxHt7HB/gQH+FjfIJP
8Rk+xxf4El/ha3yDb/E074Fz/kV/JX9IjnP+RX8lf5Ic5/yL/kr+iBzn/Iv+
Sv4UOc75F/2V/BlynPMv+iv5c+Q451/0V/LnyXHOv+iv5DwnZMID+1yRnH/R
X5lfcB+mzHOd+oQH9rr27q/M44F9X7D7y54aC14L5/yL/socLpzzL/or87hw
zr/or8zjwjn/or8yjwvn/Iv+yjwunPMv+ivzuHDOv+iv/nXq/oqX8Awv4xW8
itfwOt7Am3gLb+MdvIv38D4+wIf4CB/jE3yKz/A5vsCX+Apf4xt8i6d5D5zz
L/or+UNynPMv+iv5k+Q451/0V/JH5DjnX/RX8qfIcc6/6K/kz5DjnH/RX8mf
I8c5/6K/kj9PjnP+RX8l57lWEx7Y52Dl/Iv+yvyC+wZmns9VTXhgP4eV8y/6
K/MLzq0yTy9N2N7yNedf9FfmceGcf9FfmceFc/5Ff2UeF875F/2VeVw451/0
V+Zx4Zx/0V+Zx4Vz/kV/5X3dPv9qL+EZXsYreBWv4XW8gTfxFt7GO3gX7+F9
fIAP8RE+xif4FJ/hc3yBL/EVvsY3+BZP8x4451+d45x/dY5z/tU5zvlX5zjn
X53jnH91jnP+1TnO+VfnOOdfneOcf3WOc/7VOc75V+c451+d45x/dY5z/tU5
zvlXv6+FB/a5jTn/6nk8sPe9zfmX91XyPhV+7tfPUXldutf5ed2E51C+r+ee
ZO/8lpd/nfDA5dwb5z3hgQvn/Kvn8cCFc/7V83jgwjn/6nk8cOGcf/U8Hrhw
zr/e1z/f/THv/MKP+O5Z/Nnf9lMf8uxn34+vf+2P/Zk3XT+I/8MnfN9HfeV/
eJ//+ne99M8T/7/9OO33vq5Mf+1n/vQX7v61WfyH/+GrP+R3/OH78e57vsOD
+D3f/Wfe5z/zEv90/7ir02d9/1/5zO//K7P43V/5Kb/0lZ9yP/4jn/CbPuMT
ftOD+N/85p9452/+iff5Tb/00kD/eGv8eGv8eGv8eGv8eGv8eOvTL/z8S//M
4n/+z1765378D/7+S/88iPvn7fyLf/Lsi3+yvz7on7/+euA+foD73785/fTX
fNoPnP/0LH6Mx99yP/6OH/3YT/qL3/Eg/tqXvvvX9PzW9Itv3dr7P35kFv+r
D33dx//wt9yP/9G3vPlLv+uzH8R/+/RP1ze9oee3+fnc5udzm5/PbX4+t+d/
Pkd/vdM/Hzv8+Dv8+Dv8+Dv8+Dv8eu1Oq8992Q/+tb85i8/etv71n/659+M3
/NT/9Af3Xv0g/pS9V9/87K9+3/wXfOaPfuA3f297b/quX/u7/uBbfsX9+DM+
+G/8+OxXPoj31z7s2a96/yemd33gJ/3Et/77j8p/35s+5pc//zs+ZTd+7+v+
9IN/9H89/LpfnMVf94tf9HuvfvJ+/Mm//w1v/yc/8iC++slf/3jkienxH7LH
f9L2+PEO+O894L/3gP/eA/57D/Lf+94/1/v8+If8PXLI3yOH/D1yyN8jh/w9
cjT9vU/a+h+/8a/P4j/5Yy/+zle9+X78GB/4juMH8Uvf+/Pf+T6/8z9/6Ufo
H+/47s/fLP7qr3rpn/vx7/09L/3zID46fOmfnu+vb+/jB7i//+n0q3/6d7/p
5lffjz/gB/7uv/jMD3gQP/iOj3zddz3o7382ve2HfufDP/Zr7sd73/i/fN6/
f/Ag/rufuvr4//r7n0//+i3Lr/p/3zGL//79/+Lz3/399+Nv/+rr73vXtz2I
3/aK13/Av/tTT9z9OvTX4/3rd8Gfrwv+fF3w5+uCP18X+fP1dW999w88+qxz
fvxLfvxLfvxLfvxLfvxL/vxeTXvf8wU//P987yz++Ld88J/9xS+7H3/pc9/w
R/7Pj30Q1+wjn/nJV7xv/hd+5DtWf/zn2tfTt/+6L/yyF//JLP6vPuQ/e8U3
/s/345f0i1/8IP7e3Z1HDz/xienqvf/w33tDH9zQBzf0wQ2//2/59b3l1/eW
X9/b/Pq+19N08St+8M/93X8wiz/t/b7uhS95+/34L/7KT37XGz/xQfyv3//q
6z/8tP/+neZ/vR577tfrsed+vR577tfrsfvX67/92dd954f/qt63+ufnlfx+
eCW/H17J74dX8vvhlfTFK6f/5NHXfuKP1yz+oC+6+Eff+cfvxx/8wz929RUP
H8SrK5/+zZ/6K983/4rf+WD2/Pf0z99Dfv4f8vP/kJ//h/n5/6nHbX72l3p/
vPvvfbwvvv3j//pXfNYH3Y+P/+Yf/chfXn0Q/9BvfOlbnpj+4D/9y5/8T9/4
kJ+vV01/+U98+e94+9b9+A888RHfdfK6B/H61/6VlR9+c//3vGr6zi/5Fzef
88uz+E2/4W9+1vu/63489/flY//Lx9976eefmJYvv+2Jy0/t/bX//U++9/fr
B9yP3/P3569/EL/n78/NJ+6+bmP+8b47/7/nSf73PMn/nifzv+c9dfY7npz/
8R7vy1/0v/3oT3z4P57FK3/+L3739bfej79pfN7Xf9xbHsT7b/zt/80f+/j+
+Xn1fB8+9lwfPvZcHz72XB8+dvfh1/zzf/vNp9e9r/f/vkf01yP66xH99Yj+
ejTfX4/3/efePl7/I98/i7/q5Ff82f/hT92P3/EP//i7PvN3P4gPPvn9nnnd
R71v/rOXPvdrPuKX+/d3vz9wHz/AT0zf+FE/8+ve/Tn9fkP/er5m+g3v+YN9
P775j/v9sT/uS/7Wv9v6uP73PTX9qjc/86V/7v3vx7/2nX9y7YVf8yD+oJe+
LPrA/t/71PSWL/6Xf+fNPzOL/9MP+9tf+G9+6H78p/78N73uk//qg/jDLz7/
Q376G5+Y3lvb/f5G/3o8zdc/T/P1z9N8/fM0X/88nV/v3/fPPv7x/8uPP56e
//rnsee+/nnsua9/Hnvu65/Hnv/7/5np7zz/c9/z/M/N4i/42n/8J772H9+P
X3gp/p4H8Xv+3H7bE9Mn/b2v/vZv/gv9/k3/73tmvt8ee67fHnuu3x67++29
P86z085bvu+Dv+enZvFvnf33H/mW77sff+7bPu6Vz/2lB/FfWtt8/F361/PZ
6fve+uPf+9Yfn8Vf/qF/9cs+9K/ej3/7t3zFx37LVzyIN07/0CtO/1D/+5+b
fs9zv3Sx8y9n8d9/2zs//WP+1v344B0/+62f92cexG/bf+kb+t//3Pzf5489
9/f5Y8/9ff7Y83362ulv/aEXXrHzrln8ee/4ukcf8/P348f4xM97x4P413z/
9Vu/9cf73//a6bu/4aU/SLP4s175u37oQ/7t/fjqX33xd77i5x/E7/6cv/F4
ov/9z/Pvf55///P8+5/n3//8/NeXjz339eVjz319OfX7a/3n54VpbfvD/vfD
2f34lR998e2/d+1B/F9+9m/9wrfv9b/vhenpT/um8x9evR9/+b9+6vG3PIj/
6W/7v/7CZ7yx//tenP/+jz33/R977vtPL04/9NY3v/v3Hd+Pv+FD/82//Ye/
/0H8pm/5A79w8Q39v+f/4+o9wKOqnv/h/BWkWSCEEHo66WVTNptks5Pe6ya7
G2yIooCoWLDLL2DDgoINBFRUBBFQmoqVYEHsKEVARVAsoCAoKgp8n/ecM3PO
ee/cJ8+zzydT7t27956ZM2dmTgv88WXjuP6hAQb/8NyC96JXhcOrVwiDe4uO
99H37W7BeMWx/gZjfGKAwcoufRtusApvfDEQSuUx3er7+y9xvMz0h7Wy+V0r
m9+1svldq5nf4fdrhbgJBctO/NHf4KotU9r++XGAwYq8M9zg+xbtW3z4Y30/
Wp3ji8CO8UVgx/gisB5f8Pu2wu9jN2zftKW/wXs2Tls+6+kBBn8SWzK9/Zpw
g1+//VRgWLn+vdtg65fy6G/wkufkMcDgm26UR7jBDfXy0N+/DeZ13X9XH+3/
C5z9/4acNXD2AIM/nP7cw8ND4QaPO801NDHayuv3S/krsTreqsfLNrhGvg4f
2L7ryq97YIDBgQ55hBvseH8ExriOvl9tzvmKwI75isCO+YrAjvmKwM75it/p
Dwjs8AcEdvgDAjv8AYEd/gD4nd9XYMf3FdjxfQV2jhd+5/ft8jP/ys/8Kz/z
r/zMv/I74yvdfqd/L7DDvxfY4d8L7PDvBXb69+3O7yuw4/sK7Pi+Ajvn3+3O
7wvt7HlsZ89jO3se29nz2O4c77vanfEKgR3xCoEd8QqBHfGK7nZIb47duupb
m3cz5smKJRe9McDguw9delP44+EGryu+p+Hd6/X362DjUwcbnzrY+NTBxqcO
p70S2GGvBHbYK4Gd9qqDzZc62Hypw8yX1H3pZOuy3R2wrX1m/q3/62/w88v6
X3H85ACDb/3fvGevOxFucIs/ZveRf0nfa3ydNwBfrh8+6+Mv+hu8+GrP0LnP
DjD4+pTA0nFTww2u/uGa3IxqfT8C7P0KsPcrwN6vAHu/AuZ5U3ZnhF4f0eNV
gM3XA2y+HmDz9QCbrwec8+lupq+b6etm+rqZvm6mLyzI4jVBFq8JsnhNkMVr
gs7xD4JOf0Rghz8isPZHah+Kr30oV68HRSDuYTF+/yDk/Pbo/xYe6m/wpTtT
T3m+HmDw4+9tPLFjc7jBn6wK/nftKwPhYONVN289l+nrDkLV/VHZ497rb7CC
MwcY/OXi2ocTG8MNRvJAgy986+a/Dm4fCGKS+MhXq5j+sBCLn4RY/CTE4ich
Fj8JOX8fCEH4Y7cMvei1/gbHp/2T+841AwzOUy90uMHVjvc3BAo+qd/fELy7
273itnf7G3z3y1eFTtw1wGA5G7ypLtxg5/wvZPwpvB/s+3az79vNvm83+77d
7PuGdbL1jk623tHJ1js6nesdR/T6IP0e0Mne7072fney97uTvd+d5v1Wz2d8
p1N/Vyd7vzvZ+93J3u9O9n53sveb6etm+rqZvm6mr5vpCxvDnscx7Hkcw57H
Mex5HGP01dyeK/70+mcEzD5j4uwzki2WXuo9IyyOPuvL6LPCLZ6oBCye/Ndv
/devtuuQOw/uiplysV2HrNi7yZU0yK47rtq+tnzvJouHf7yofd6NAw3Gz2jy
hwfDzVsX7Dm2ZBSjx9J9HwTqZ++IYfREuD35j073vEg4PLNIzPziDX1lspzB
JzB+vR42iD4z4Nbf3/pnzy2DDd4UdfH92ZsiQC0zfJZu5DdL+EEa05cFZ76b
Jf4iIEE9cBmMng2jbv8zu2DUYHhFrRtmMXouzpu+jmQ4AqKCvl+e784x/NMz
X5y2pTWHyefR+z4YpNQrh/IYXecPaf0FcOv7QfEXYfAPqW9/n/p2JMTK4xk3
k/eAmOweSlin71chqMfv+kgoj1wz+84VHsZfBNevu+mp7x/S/MUwQB2DDa5Q
RwTkq0BeEZOnfKRFmr8ExqgjEu6X4dB+XsOfKRfQXvQyeR+IwVKMmPr8FC+P
1u9/KWy7If9g0bBB0Es+4P1LmXwZfP3o8+ffs3sQ3Q9G7yqj3zkS7vw7fHf9
hDImX47+ZgPd765yvO77BsPyF8QxqZzxV+B7OdHGhxWcreUr4PnbC8Wf/v0q
Qb6mX0bT9+uqxPuQEQnSvLVcUMn0V2Ec/BXNXwWLS4eKvwi4VVippXOqGH+N
eZ411s9n36sD08oWVhv+lplr/xj4fbVT3tSj6OuthbTWN8JfTh2E92F5DeOv
hXR16N+rDn7sO+6antmDQA0LD9cy/jqKi2v99TBhxTmz/npaf7965/cNazC/
hzILNzYwfU3m/uH/m0FNtyK0vmaKv2p9LRC5tbPhsmzC0AI16975CZ7R/C2w
sWfGlOn9Igy+8J/Xv3rrsKWf+qXa998X9Hx3t4CaflxKeK+Ob+g66lbzvBWo
gaTVSe9qBTWdrx+M4+OjjC7m5+o5jh1sMI6j2n9rY/ra4NcJf5a8nzDY4BFX
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
fK2/FXbOSBd/enxtpfpufT2tFN+29gDHKy3fBp+IYauneF6Cf3sWJ0bp8Vp/
Pz/5i3b8xni41u+HiotvEy51Ms7HOv1OeVNvlYRx958YXczPsF9PEuZPXdzB
5Dswzjk5mfL2OT1A9R3JaA9/CDjpEIR3ZDrOxmSY2tJrakt1kNH1fnTJMOjN
hTPm+kOGLrPyHvs65OC34znJpzqxHc+JHsno/Sw+78ND/55aZvvmrn/o6z9P
+G3f3AjFYPGUhFd//mdpuMGfHF6876/WgQbj53BoO+PJKz89JxUOntxdnpE6
lNGjYZRM/3vH5l0vusM9v3BDCj1/Ixh/POUnptD4GsvoiZQ3k0J5DPGGjnEz
izFvIYHJp8AXsv3VoVSD8XdOofliMuPnOI3mA6kGY/8a/fxmUH4O4VVpTN5F
dTCpmF/8XTaj59B8hOzT6zmMngc//iYDVNYeXd4gM7BTaZzMNfxBFXjJY/IF
8NAceaQavOFteaTg+P6+2/Dj/MnN5D2wc91TadMbUw2+/Zej5xfMtPYM5VJo
3ddj5PE+e5g+vd9rKuWpeBld75+n9QPFvej8XT4nv5j/qfYDt6YYjPXIqViX
eQYYftX3+jxwyov5IcZ5UgzG/oz6fKWUv2vtLfLp+1EO/kU7Xop43uKbi+QK
cQrIWdaYfWXmfKrs9lGLUV85zKyTAehUgyeoBifWHqth8ypN1+vFml4Ff9Vv
OFa/weLX5y9/bf7yVMyznVFpzqfKBPdYjPqq4I7//+8psPP3rqZ+ddbe7oal
Z123W5+vlvKTUg3G/mkpaM+O15jzKfP2osWor9Y5Xgisxwvkq4Ms2Yby7VSD
cf6rr6eO4vupBmP+tJavx/XM3ppeT/lsWl8D1W+nUv9WHY/W19cAKp1/pfUH
8DOV7HuDkz+siexXqsG4XmftPfoJqZgfeFaTkce8Z4vxPjY59Zv9mVJwHn1N
s5MeRvb+Ez2eMLqw39iPP5XqJVqZfsJd5I/ey+hiPjckad+sJZ+lGix+rL9n
i/HZmd+l9bVRPVoq5aFYumrztp7z+0GFc3qSfmHfMT6k7yfFX7NSMS61ze+U
h3bqc6B/73bYHJADo9ZH8kmp1Ceg3Skv/AXsJ6D5O8j/0+cP0Hw7BX/XTR1O
eTGfxPWNVKr/DDjpYr44vveOL366LQX9lvygk94VpHU7ff4g5VPo84dAVuPs
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
EeP30vupr8dHdQ8W43puNs2LSow85k+WMH0AKry51/pzKo+1J80PPvEZ/sqb
F11zfT+w+uQyxbnA9JVS/Wc25oUfZfSuUvP+aKzqlt/VuBySZFnFl9k0Xy5n
+iswbhXU/LT/qfj91Lp5boXhx3W/SiZfhf7ledYfw/dQjz+MX/hfDw7qHXco
ZP0xXK/Lpn5eVUx/NfQU7sS1NdlUH8TpdRQPzobXX5NHrZPeVQdr0z5ek/Zx
tsG9Z0SLv2z6/eqYvnr0Sw8T/zFGl/nuqn+R/r7kb7TQ+/xMPeNvoHU+zd9o
3j98PxoYfyPVx1j/BdeP9PPc6OTX/YRzsjFO/iCjj212YuEvYF8MsneLWwxd
rWt81eLkl+sPqg+Y9Q+wjk//vq0Yh96tvx/1r99usepL6MoG9Rj2ajP6Vd5D
QpvzfN1tVN9E7/t8S8c8F87vp/XbbFw/uLjdSRf+g3pun82m9c0ORg9g3vLk
bLhr7Igr9vxs6ep3iws4+bsCMLpRVsRmG/yHsJajfNmYx3CP5Y+V4+kSJg9B
ihtYe68+b8zGeMzNIcbfifPABdm4b0dbp5Peben4/zHYL20K4b8t/7W5GdU/
uMYY/NOE8x7YlGBx5xP3bl8WZfEnX6wfPqufxfgZQetJLraPew7bxz2H7SPH
9kVpcDnxMd03JtLwYx7jECYfi/PfUy6D8Tm2WOmpc1FdRoyRPxwn/2MxjhvR
TH887uf2qvUvpHd/yxiNE6k/ocUqnLjfBR9skke80Yf1JAlMfxKE1Iad1v/4
ZGv18tqZFoP7pwPPbndBiiq8Gs3kU2C9DLtvdNH6dzKjp4HsEj/vO5fBuM7j
orzBVMafARf+cucFv9zpIj8gjdGzQKUhVLoozyiD0V3ory53OXE9Xf+ybMOv
6sRqspl8DqjlhOMug7GO1mLV3jeG8CIXk6d4Uq7Lib9xkX9rz4PjUg6Tz4MP
/tsSGjXU+kfYz87i21SBowvniftzmXwB5bW4DMb5iov6ursNP8bHLMY+F26m
zwNqu6DLrf+jnuehDP8n/LFFW88ovMJj5LEPhYfpK6L1GpfBqm3AWy5YkT1n
5PMLCxl/CeWZuQxW87gqF/UH8xp+3J/Ey+SB9mex/tBFqqDfBevmfTau8D6f
k78LcD+H8S7KbwGmrwzear76w/4rXNR3oZTJl2Ge0lGXwWo9/wYX2/9H6yvH
Po2/uQxW/VYftFgtn7lcOA/+ickLfwrzE1wGo/9k/Sn82i7M9/msnMlXUNzJ
BWvkY1ZV4aSHVUKVOlwGY/9+F+3Dxfi7KuG0/+sedaSXy+C56xKuqD3X4rSD
977+zIvWX/v5xLKjXzZajPXH1j/DOiSNqymORv5fnI5n6evV/Y40fw3tz2Ex
5nm6KD5ew+RrQXZv2r7JZXCc3E73Ai1fC2s/znjjtzUW+04d29rsc+F7trfW
qa+rznk9wp/7du4HgR5nWfzPj6sHlb5r/bn/Xr77vMCZFr+2Iipp3yzN3wCz
2j9Z+VmNxa8Wxg26Vox3WAej/T19/gZQ5chp1v/7qfaSoa8s0PKN0PcC2YHF
+m+yGjt3ouZvwjhxk6Y3U72epjdT/pXFc2bLQ/NTvCmB4Ue1P9ECk90fP7w5
1+LTLzzv1CLz+7fAt+FLp32ebvGR1xKaTj1p/Ue1P8Ikrb8VXr645zs1RRZv
7nvHnOtXWP8R33sX+rEpOn6k71cr+Xtav94vyYXr2ycYv8zHlQkN8+h5PL2N
6Wuj38WF8YuvOd1P/RHJ36jzO+nCn4y6+enBNz+tv087vPuSTChz4TwlpZ3p
a4d+G4YOPDBdX387Xr/4virP51fGDx1U/6Pvbwf8dIPMWLIY85Vc8J9sK35T
h5HHvuEdTn3Cf1X9jQL6fgdQf6rFKv77nPVf9fjz80/iuDTg1NcdwDwJPb4J
rH4HMZ7IXTX+eoLxh+l+zNa/xfmfC+s1SoOMP4T25C4XbJLb23zP6BCi+LLL
YIwvu6iPU8jJ3xWi/GUXPpd1lq7Ws6cw/u4Q7e/jwn0G9nB9nbDzK3nQ73df
p5Mu/Gu1/jEEr8/WLxE91Ylt/RLRIxm9H6ML/xr71VmM+/nksH1lc9m+srls
X9lctq9sLttXW/sxUTjPWqPPFw37ZLh8bw7t4zbK8I+TZcxLYgzOUwNJNNOn
+3TQvhEfxjnpZ8Y78TqGz0swuH+JjNzbvg9Yl5Ls5N+b4sTCn8X1vRyK09o8
30dXXJKQqvPcDH829VPIoTqTLEbXz2EO7eNu1zHb1cHWNcUn5ofkwNX9vW/3
62X91AV/P5ywaqLF739z8P72T5gfG5aPeW0P59BnHqOTv7gzx4mzcqj/fz7j
L6C4Uw75wwWMXkjzlxxal/EYOq7bWIzrOh4mX0z56jmUz1DE6F6sUztDn9/L
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
8igO0sr0tdJ6trWnkSqhmJ6Hs/yGX63vtvud8nq/bcij9zLA9AcovyoPBsqC
xIsYXdg7aSW3hOh8Ky1d7V/1C+MHvZ5h7RnmI9D3CwYNvxp3Dged8l0hyiux
9gf3F8kD1cbnrU7DL7NWZzzZ6ZQX9kW1U16dR/nxlq7qXUePMVju+jrnnDFM
PoL61Ynnpd99c1p2a3vjhksGR8Y9vW6AwRIdfSDc4M0ZaVVlEwcajJ+0v1Vn
Pvkzwwwdx/Eoxh9N9ak0Hj0+itFj4YH/Pqu67TJrnxbLcNaufLjqsdFzJu60
+0Iv/FEunMYw+XjUe5O1R1i/lI/r9tckM36qr73b9t3AfQQsVuP3bRZjXXI+
jdPpRp9KQ2xMY/qzoP35lqfL7syn/QVt34+5Z0rH3mJpJUdckcnks6mviz6/
i+Lx+VSnk834c6g/Vj7FYdg6gHgOVH3rOflO/GA+7fOUx/jdcHf3rPEtKda+
eot6XJl2u8V/vnzz9b2/yac853wmX4DzypP5Bqt9NMX1Yf9Kex71HtS4mbwH
zrvizMYbVuUb/OObad8PrNGY+pmAxViHQ32624uMPjV/3GcxfnrRj+ibb7D6
WKSxj+r08iluVsLkAe7sOyil/fl8g3H/23yc58X5GL/un2bttQoHifM98M3m
Wd9sBid/VymoZR79+wuM65Pkz6WVMv1lMEA1ZMg3WO56GnOHli+n/l358NO5
b/94bkk5k6+ABbJd2mv5BhfcUS7+8qlujfHrfGD9+wqs7tf1+bReU8H0k33v
ysf59x2M3kX0sfkGq2HlL8LRlYYf3/NKp3xYFeXj5RuM+XpaXxX44o/8XX6a
xUsjAzdPusji/n3ePDW7W8vXYNx9rcXKH2wg/+1LHf9wo71+1GLUVwMzpXl5
Kt9gNX5na321cPirhEfP+cFiXMe3+JmVZ3w+IIne92drmP5aUG7xqXyD702c
P+GZeyyODI2d3jNS66ujurN87Nsxo9boU3kTO2uZ/jrq76Xl66H85NW//nG2
xYsnzPRdeb7FPbc/+fCB5RZfVvryz5f8l0/7ndcx/fWwftiJkXMGWv/nrZMT
+50Vsvidb3f+M3OhxR+8Xb2/xz6tvwF6XHuo+7wii/8dkjCt6h6LDwtq1lda
vgH6Rva8b0alxd+4rhzy6v0Wv9j81dJft2p58qe6NL0R81aLLVZ++Reav4ny
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
pbIN4lCbd32GnKDO9TD+YpC7Cw6Z6YX9clubaUWM7qV9TqzfXqMOr/HznfxA
+0x4KW7nc9KFf79QLj+/5cV56xZg8mUUP/DC06phRimTLyP/wvrTeN+8JFfO
9FXQ/s9eg7GfjvWfv7vz9l+Onm9xn8m7mx/r1vyVtK+axchnMe7L5qV5uo4H
6uuthL9+679+9Zleg8XkpXvWeIsv+v7U5olva31V1K/fYuzXr/mrsF6h3mL1
aa63mvq1WP8a8xE0vZb8Iy/Vn+l4nr7eWpDdOwfp8UbgUOvQUY+L51WZ7eRa
J7/wl+dJ9/KA1+C84LXiz0v9bC0/xnmZvPCfv33t2p8/e8L602p5r6+X5n11
Tn7hP2N/NOtfH5V9mY94aR84y6/G808txnxQpk/40+q9GGz9b5XH/IiX4pr1
Tn7hP+t9fFX7kc8ZXfjP6D/o62uESwc8BSkei7/dOG35rKe91Fergck34nkH
eg126muieajFmG+j+ZucfbcFVuudV1us+optJ2z2O9XfrxnXA9K9Bp8rAyS7
rX+N+YEWY36r5m+h/ACLVyyXhx4/WyiP0frTcnfEowHtH7RA86ar5t7ssljt
u/mh9Z//CMiOKBar7RWPerG/US/t/9L3Ef6xqp/6yvrD6vV/R19PG+1z58Vx
6bY2Jt9GdtJrMPbztv4u2kUv/i4nrbwa/z9g+oT/ivs8WX9XDh8XHSJ7NMzv
5Bf+rarXfcxL69iM3u3HfczXeQ127jPdTv0RhX/zjTysvBo2I9uZPsImT7aD
8gHpffiT8QP5r3r8GdvhpAv/N0W2h471GqzSJ9dafxf7hXsxPys34JQX/i7m
33kNxvw7L9bx3Gr5v9z2r9zZhX2fAPUB9Dpxm5f2UbX88ws3/D37Y4vrbnx2
2Z+/Mn0QpP1SvAbjfin6+oIwKfjM9QmTLMb9HK3/rPatOKjrpIJO/WHk/y7y
GozrvuQfbGL8EIICuT3ZzURPDBm6Wla9IOTkF/43rmdq/Z3w2wj/6bd8YLFK
1ynyQoxMcPzDyv/72FX/PvY50yf8cfVzXqm/byfV/Xlxnj2508kfNgZ2yzbQ
N3hxnvSLpUf9/PTFN2aPMTjzs/IPjsRaXP3yjykTIyy+YOHdD+zrabHKx3tN
+98+iFcD9ACD1XibFm4w7ltkMdqPgQbjZxTIXzP4TAnt8xVp6LhP6FDGH03v
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
eC6a5zD2+c13GOu7ChzG/MXRDmMeBWO8Dxjj+yH/rUdQje20rlD/c/ItkFfM
eM6kLvofY8yTLxLjUZ/BkiDx1nJfPaz7EX33DI+kSYefwTg96vP1E9oH6b5h
nnxzNS27njHWDZeK8crV329HL5k2MKjqgUiMeSaw73u5r6/9uUvgwbgrPILI
x3WJcvoQf8thjHX5AX+8LHsdBumcQcgz1k9ljH1OaT8zMyjGC+H1mwxSv56Q
kJN/djpjOz7yNbA+8jUIe+3PAb9xlyD5m2ExPvUfviiIdXV/shz4PPaLCP0o
5QcFlTm2PvAfIdf+GPwsAasfU5eAA2HldH45Noh5P2/FhH2c/IAgxaXi4vUT
uP+cGMT8oGtYDm2YvxT62h+Efnal1j5JdftBrC9YmhD6SWXYDf4otvopqg+w
cuKHy7c4TX23rX4l5gG1Zwx8DjVWv5J4VhjD73gaff9FNj5n7avIz7P74Spf
rv0x5Jmx41XTPBgkPuVqp498ytW+fabW8SRCX9OnasX4ddi/Z3IQ/bYOdU6O
cTfGI0wixAzGJmuv46+Mwb/4sM4fX/tHR98+Q3tAhNvqcb+9v/38DRQHCtK5
U71vr/2hVY/ox8gg5llaf8jOR9MZjzLnwLUNvr32jzBuYV+vkfjUaP3Yxvrw
tXZo9O0zhLODmHf/hJBr/2iSCTRODVK/1CYnh3jYMMawb36CMeT73dLkj7db
YO2vjLpu5UG9Ku3naabrJIj9/BY1O330axhDnswZLf542r+AdWVYEPm0f2C5
V+9v3t//1vub9f1/6/019ur9Nb6w9pJBvz5u42Eh9dvSv5I7p3Vy+PQ/zztz
c+/ODn+T+P3mN99hfMIdZz/74qVdHMbnHsSPGcQ8w5e7C3kf9Iu+Dfr4Kv17
vHXE/Jvm9Hb60D7v9J6+veorxhtA+4ugw9jf2/4e2U4f4gTX9Bf2Ochv+IC1
H6yAlu83xus3j9h36puMsT96UK252EQCBrnxkM+AMeYD5TiMz7mUnx90+MuO
Hb7seG1Q5GNRnvLLQxxGnv9cMd5wPw7h+H6tPE/VfrF5+U8rgg7DedtOfT1+
0uv/iq4b7vTnHfbn0EWu31JILZ/w3od7nh0hxhuF+dEfBtWR0IhhpJObKMHA
i/KEfr6Ik+RTnXCQeA5G+fq5+cJ+tOqRmv3o9luDDkM90BdBijsXCP0xav6S
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
D1t98o/WhVXMHFy7czWOYyGfWZh4p4Rc3/eF0MCN42eLzjn1qO0PM+4Kf7Dx
J/47xqfCYrwI1QeHHcZ6R7s+RXx9y++6iv0n/36NKWgnvoFxB5PwuZDjaYGh
xSPn72F8YO0bF7S8wtigo7U+7sssn5h9/bgqv/eVd3JdXllcAT37vex/hfOG
tUvuYbz9sROWXKZ/f+TdiIvxyL/6OIx8jvNZjjzlQj+TcPMF/j1JdVeMYR38
1t4PCWGfVL1M+O4a9ufu2XR92f72+9b+GOYL2zqLlLNHnq2UGK/Svx6zqpTp
AnX383a8KswvupUx0NluZP8Mxl0g8Fth7H+cUy1erxrzyXeEsd/NdCFvq0Z/
2P4+GsN5xAo7fg3GXR4lvEna16it8x/qd877HM/rtmfbd+3vpO/j8hpfP6uW
+n+HHcZ8Uvb3LjYbn30UL+5U6+zhewvW+uO11RIPbtjh6dDgzo5f56532L/+
zfa4r6zzx8uqx33sE/b91ON8qd/Pa6ZNwgn1Tn/u8nNOfEfV+/baH4Tzd/15
gDZ9E8vHQz2l0M80UL4y+4NY7xomHv0GXz+L+huuDWMfwqGNYrxGykcMqy7m
wjqe5cDLfB9j0/5w+juMcw1h1E9yPDpPde+vCeebn2k/cHOTr5/VrL5smjKg
bCPFM9azHHDHZh8Pb/bt25qRZ/aKsKiPtOO3oP+o5yvYF2xhOZy/92rx9TMt
amvbnP3bX8vxs4t+/+6Dhz6i/dpSoZ/Virzk33B8bON+IzbutzKsNqyZuqXA
8r+a+fks/Zc+jE8Ymn/zokMYY52MjWdF6Pyts8MYH+riMNr1wLzzugjGLQ47
UsjJv1MRyufv7eTYt72/w5B/vnuAb78wx8cbcx3G/KGh4vXysE4iFKH43Agh
H4V5QIexfwZ8NadE6L4eJfQLqK9hhPqA5ws5xZuqCVt+DC3/8CYTEB0t9AvV
G+v0Ix6h/hpjhHws8UsRVkVOjrxi44R+CeVPsL+EecQWk/9zMftL2IcnonpA
Y5YyMZ6ieroI9acp9+WWT1WPD3w2M5WTQ/y7D2OM8wXE+OTfJCO4z35HykNU
7yTyvjPkX9wS8vUzNO8eLLD+PaHsqjf7HdjXJOzbZ0XcuZ/v10WUSVe5/xT2
Y4CGqmvEt9f+CebLWV6wqBg/hv3BtB3W1cWFPIHnSWMZzwaC3Yi6QD329s1X
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
Rjv/Vzh9yP9dV+HbZ1Wq9n9c+8CcMmtfiXWIRzKG8U9kfwvOhXszxnw/q1+l
ToUAAH2e6VXu9bDOlTHaV2N+qP3+VLU6ck3bgXlnMv6q5zvnv2bvD8uHqj8v
5Ik1Vvvjaf8M+zsSvkXIs2rUvj0/f/X6EYxvHTHxyRn6+9Wb87Nb8mucvmH9
/KNjjW+fof5DI6LUv4bl2L9G6Gt/C/g58tm/Munhx3VkjH2D7fuvxXhmM2PM
i9TzyaXXHnLxo7Vu/I4lQ3e/ejNjyBN5izGEP75mjM912IdmAvtj0MfyP4yB
9sK+n6x64o+LUn1onT+eqse8lwsYA2+EHh/5BuudPsaVGEO85fh6f7w24qto
iIr4nt4v3jbmlE0nNjgM8/B2xpD/1L/RHy/TqBI9z3+msDxKcWIhb2uk+lfC
S4Rc+1dwPl7AGHgKZ0TV0VAQ3+T0rx6s/3Bwk2+faVK/GfrtmYwLICErqhqz
r1k95XLWx35jwl77U7CuHczYnw+b0X/W6+PqC+7adsPxzb79MwJrfwr5Fu14
LeoUSBiNqocNjeeoFl9f+1M/Pf/n5xedEcV8pfNZbqr56i5lbE6VS+8X9tp/
gum2N2O4jo6N+vnxZr343/x4jb38+EzUz4/X2MuP19jMEot/tvHCmFr88zXT
xn/VyeHTTq27/ZP3Ozs8HiaWLg5D/VDXbg7jczad09P+46a+Qj6A4ntRjG9f
MEDIB5PfxP4UrKv36PnY0PY/Ntjpgx90zBBhP5x4o6JqKhyUDRNyiv9ttL/n
CCc3tN2FU0cJ/QKM3/xBffD+yPflll/B6RdiXuZLUeTjsOeHTk7+UVsU+42v
LRTyIvIroxQXG+vkeJ+PE/qltN/V+4O2pXW/Zpc6+W3tn/5+2vxSoT+B7pso
nkfsKHNyjEswhvyhGGOMs04Q4yn3fSJPaLmT4/xX7utr/weu49/IX7Tnk1nc
NxB+t+0cb4Of8caomnZB5/9esYv179iROLHXk8Je+0dYb8XxNHjaSvHIQ4JC
n/IKPoliPKaM85Y8PlKrf1DEx46fKop8jxuivjwTw/7K79Pfq2PCPq6GQ0Im
+YNvSnmCeKasPO7kyE+REPrEL/qpvX6SQl6Bv/+X7P9gXjvtN4dUCP00/Y5R
qncS8kwa/dlf6Pu9Ou3k2E8qLfSrlKEfHHIf7d8aq5wc32+V0K/G/ddP+vo2
ZfBzq50c+jTcy/irp1JlPctrHM6FP9T447XVuPkH4wMsN+VUkX+lfi2e+71J
39fyWieHPPWvGMP59Q91DsP5wNH1DmPfH8bAS3gSY8jP3sYYeVwaHMbvo4Hi
qeRfRFn+mWkTtEDoZzVSHJjjKeDnLLPrQ6MYn/gTrohivtBxLAdexWsYw+d5
gPGaL6/offq4Jod7n27+wviB7c8N33Yj49c3ntP+75WM8fWbkS/lY+tvNBMv
TBT5f2y/Hq0P55W7m317vT7juTCvx3h+Qf7dtBanD2nedzGGfNLCVocxH6rV
1+/HGN5PV8aGXuyYgxnjc1c6h2IM8fIuMVUEBXs2fhGj+uguDqN+D+J5sLgP
1jX0ZAz12ifE1Jn7Ha3/9XD2h9zRdvAdbT0dvrewVf/rLcbPVpAmUsnrM+zP
joyp/E3XdjtoYH+nf+hl189aYfkSnH0O8QbHqJ5sgJATP8Jgxt+3Mz9cTH2d
YxpM5Tj9/c+6e2dOx0EOH/V8wZNfvMsY81KPdhh4Mo8cIl5vOOW183oPy914
fX/c1q/7kP1HCP1RxCMcU3dN3Pb+T0+PdHLsg5In9AvovD9Gfc/ynfzFn/5+
4ae/84X+aOIxt3gMxufKKO/kptFCfyzFSYjnMFro5MhrVyj0xynT7mni+Ywh
zz03pkw7y8dt/2ezDt1x810dpxUJ+2Kqz4qpXUlzRY8T8hJ1HjREINyx2Jfv
FjiL/I1eAp9OeGOJ0B+P89yF9vctFfIy4pdmPBn4hGK0Ho4X+hPc50Fcjr9j
U0xtPLP2zx2PTnD6eB5c7ttr/wTyyU6OqQPad+gz7kzl5KdsWpq4cbDy9T8W
OBPE+thRjGH/ot//C2v+CsQODDr9qypenvX4eMb1kPga9MdzPHIx5BddLOSZ
EPEFWX+YeZdMFfjI7oxxHQ/59rau0L1eBOel/fmcDOsiYtif7s6Ir6/3EVjH
wf4O9nVm/wZ4v/T8hP0BYsI+QXFO9l+mQAMRxmt7m4bGMdW65MDWJZcnnP2h
q/W/NsbPvX7Rc6//nRDjJ+l3Y7w//K52/BTyVSSsPCXOHStU382jO97cgfF9
Ay9qd0+t1a9AXtsC9pfwHCSmYHu018aP2F/y89orqQ5fYL0+oF+fdvaQdpZf
6TDk71xQKcavUlffk6v/2fGq8Xs7kDF8b8qul9XYx7gHY4PyT2D/C86FDo3h
vuykav/12qopnkZ4q5CrGgVlOP9hvKv77MLB7vurIb77GNavn1Ijxid/rSKG
++k1Qm7zvfX1in4Oy3FdqhXj1aoTTYMp9/3X0X3O2F4vJp35iL1sD23JPhbj
qToFbalmMja75vv1/ATtRaJ1Tt+k0182tc63z6qnvENrX4/5Iv1jlO9b7+tn
6tVs0y5qIuHFQp7VoMZAQYQdr0GZ9nbZBzE27fDOPYb9ydMhASKG9+mpDW48
WEcrGvzx2xowP+pCxnB9DKP7fq3Q3yqw9j+Rfy+Gfa0sH4SWQ1y9sVG8ns0/
i1EeDsuxz6DQV03qxuOG7321M+NPTcex1pgavqptv0NnNDn968b/sm5gVZN4
vSbsXz6NMaYxx9RN68bMKNrA+hea7ehOYa+aad0m7Pi+tL9sCLamMoY+tMub
ffusFjzXOYaxoYE4t2MM/drtrA/9XA5vcRj6aw5t8cfT/i/yaNnP00J5iYRv
Y3343H8yntEhp/V4279HY+gzNphx2PT37MV4VfHCky8/nHFf05Ysi/Hdb9x6
+G0X2/hSXAVvHNl7zN7ODuO+tYePJ/YS8t4O43M21TPGqI9kHyc39HLXPJUt
9Ac6/Nh+xy/tOyzHYczDHOTwP4uNQ8gY+wANdng8EHPnOozPeXSuRvu3B4c7
OfQZfmOEw5u/Xnjb5OdGOjwVCOnyHIb23YMZI49kvsPYb4AxPo+mODD9vq4f
pJUXUl9Vu78c4+SLp4b7VfctdHjBN/s/OOUMxhdNf3nMeS8VivHG4TnSjzGM
U1h/U8vxPEzgAsZwPx9R7PC1C8yDMfbHLnEYeKFmlzoMZXBjxjuMz+XEYxlT
z5i2W6UTnBzabr3N2KT9tD9JOWyyfvr2YAx8Ke8pf/xMAP35l+n7dX2d7esH
1U3PjLxu5byYw3cbev6vYtQnQuhniKf6V/b3cN8RU6trzIY76PQtb65vH3G/
N/LwRoQ8iv2A9f1h0mubY+Jc79eo0Kd1/skY8TGxH4d8mHGhT/5WG/tr8LRV
34/t7tl0vctvsrwISd9e+0uYT/c/8SRT17A9RrzeaaePvN9p3z5TSfWsMRq/
UoxfhXVsr8TUmsfe6V8YqBL21XSfkr/g+gVa+xo8/3khRnUXNcK+hvqhsr8C
eSWLY5gXdLfQV8RH9XPMYewTH6N8j1oxfq3Kv/PVc7q/F0M/Oc1y2H7exBjy
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
a/bHs+eDev2E/KVJLEd/gfFdcwwhKOOvBr/506k/i/G0vwdxwjHEI1fc4uSQ
Rvl/jHeb6/TYFt9e+3dwPx6o9xumcHwOyyFutELoa38O6ib1fAJ5zJ+x/Nt1
i+csd/VpCWVobWuGMDbu9d6+jCGPsjNjOPZr3yperyv5w/r7mWzuSBu/SqpC
aPTV2eGN/c1fujiMfRZ6O3wiJOb2cRhfJ9th6H+1foDDyDs3yNffPdhh5FfI
dRj9/mEOo186wmFwn0N5Dv+zaaT+N9JhfM4n/vIE5cnnC3khvU8b7xoj5OMo
bzShtsTO7PfSJUVCTv1PbkhQX4txQl5CfODsb2F+RYLq34qdPvq7xcJ+PNXL
Wf1SIS9TR5sL/X4av6LMl//GuPTFPxZuuHqCw9DX/uAJvr72n/Bcjf0l5MtK
UH9p5etrfwjqS39NYB+yCwNODn3ISgNi/CDeV5vZf8H4ll3vg0I/RHwlCdXF
EFUvZ3n7nZ/MefoPoa/9GTgHmMv+DfQx+Jz8uwLu89bf0LVND/n21t9ZZe9n
KY9Q3nWC+KyZpxr5rkXfEcebkFCd4cAx6suXMIZ8w0+EPCvuri84L9zEeUFw
XninyBPS/gm8v302HhwX49F522t2fksIeVKdZgrJ5vHfv77k6tQVWxPYl+JD
oZ9Jqt2mTOMF9k8wX4/G75kS46cVhI1fsvpp9eQZJjGC/RHku7PyKtw3PpAg
vt0qMV61430Cf3RAtS/X/gjGMxLIPzi9xsmxvovx9xvPeLLD87UO37jtwIIh
i2v98bLqkI/zDVqf32A5/H696oR+PeUjJSh/neWYLyP0tf+A8YGEX6+u5V69
usZY18oY4kCNDQ5/kFz5fnJXgxi/kc719Xry/t4nrpzU6OR//G4ejUK/ifiq
E2owFMY0+XK93oM/e5/ej6qDzxjzO8vN6dC77wv9Ds0+HiewXs9xX5mg+CvL
Ia1tntDPaiH+ePK3PpHjtVBdSkLUq9n330J5NQl11V0126a9z/IDTNrI34z/
KLp12v/Z/F3TN/KMvHf+Hcz4q2Wvjp3di/EnX0xa/M/hjKF/6X8YY92/jack
VQE8OjuM8a0uDqNdD4orES/+f48U8j5UL5EU/desPBuvr05J7Gv8QF8hH4B5
yScxPn5m9ruH9E6qFzcbgqj+Tv+fk8wdky3sc4j/wuLBGL8fTbh6kNDPxfV3
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
Jn/8P5rEeM1u/vL43+x6sJkxxDnzWxw2bXC/7cJ44T8fX/fPIsZDbz17yK2P
MYanHxjD/rSg1WHwXwcxjpsv+EjGuK9o9cfT+2+sB0mrwZWGcd7yl6RVxR1/
lT31SieHz/7uzy2dl3V2+NZxv190+lVdHMa+uT0dxvEH4LnP9DTFR/sLOcXP
VRrn/ZYcJweeu5MGCX3qXz06jdfJO0Oc/C44N811GPmIhzqMdiPFeLS+VqQp
z3iUk2PeyiihX0DrKn3fl+cL+Wjqg5Mmv6FAyGn9zeX1GvPhGcO8M4Ex8ruk
sX/6lkI33nIgbCwU4xfhPmgSY9gnDbB4HNY5HUjrwdVFwr6Y9rNiPdfyoyDx
u9hh7JtUIuzHu98byqNrS4W8DPnopzAGvvqD0pRHOF7oUzxcWVyOccjDef32
5Hq/Dvv09oxxHaT5r8Huz608gDyCZzBedspt95/SK63yvvhlxBdnB5y+gb+M
CPj2ev3HehHCbUKu13s4byhiDHHh2Wna1wXFeCHanzJeYcp4LrT2IexroT8v
9Ely9SlpqvcJifEiVAeexr6ggYgv1+v9i49rx8ldj7Z/EuHlUaePdaExYU+8
qlPTlB8c9+V6vw3phxcxfg22M4w1mJbfN03nW2yP/GNivAzxiEUZ47kA+xe4
v0tT/8yEsE9i34vxnPf45JWTGg/ryri7qcOsp+v7waSwT2G+S1fGcJ5WZe0r
VFP5N8vbjmQ84L1Vnw23cu1/QL1ZN8ZN0FjS6lfheUVeWp106zGzNk+1+/k0
9o8Zzhj1q4mvKU3nodVCXoO8dZ3Zv4B1bGxaGS/sg3E1Tv/Oz9Y+8loOY5NN
/lTHGn887X9snqrfWAvju2b/9e2yfvr1i46f3TSf9Z8++NdnW+9gPHHLZXuP
WSnGU7VuPse/16LfEST/b1ad08f9MWPgW9jA+PP1E658f3udP36mHvsS2N/D
9au2uAHjQ5Xsf7Q3iW8d02pO95PndP+mwY33wDXrl1+zvsEfX9n4AGPkjdTz
2fw9B9QmGp1++rxVX5w6pdG3b2sk/pI08kPcK+RZTdgHU3+/WI/X5Mu1PzP3
74N+HDgujf1KbhfyrGZ1X6Np/MMY49Z6f2IalrVvdvr10an10UGMgT9vNmPs
A9vsj69acP84gLGd/2Gdmdri9GF7HG/x7dta1ERIeNP+CiTkC3lWK/I1DCa8
ieVP3Dv6gVmO7yOtTo1Nq92Vy7jf97f9PaUv4w+ufXvpJ50YX12wX2VNO8b4
el2JNzPt1xtnVfr1xhp79cZZdp/QA+efN/Tnv65f+ex92UI+mOJmtH/fkiPk
ubSfYn8H8jKvZgz1vhvTWH/VmivsKV9gYdrHrg/uMKePfGsjHEY+tuEO4/Mo
qotOOwxPbYzx3DpNedh5zh72ZV+OFOPlq+WXliy/9Bn2pzCfPY36L+U7fcjf
PJsxxEcGMkbe6TEOQz5MW6HDQXgwxudxdC6UpjqsIifH771I6JcgL8BK+35L
xecfr575oOcDiz5lfN8Jp58bfTCtDD3npmWlbrx2hoZrFGN8LkO/81/2h8Dv
fJzWn+/GC/0JFE9K+/gPfb2Puqjth/+UOf3h3R6tf6WWcclfO7+5/V7GsS/6
XDLztzIxfrn6v29vnf3trexvjQKiGPa3MC7DGPIV97K/hX5CWv05Zu3ZVVOU
Gx/yodsxxucA5eOkHcbvLY3xyA1CX/tnmC+SpjzJgBgv6H5fjMezHPvzBB0G
//ysoLAP0XVL72erlIdxX/Ecx2Og7uxVer2nw75+dsTH2t+CfemiNPWFiIrx
4ypXe0EH/5x2eNuKfZeNeyjt+rb448Wp7x3pf8O8/BinT/j62j/Si/Tto15M
Yz7J5SwH9/4Voa/9JdjP3Mn+jOnud+8rafV9aMolJ69ICf0K7GO/g/2boUAc
liY+rQpfX+9Dd2wc8Oled/2n1ZXdN7/953uMIW9leZrmTWFv9omnfXjSaR+m
HZ4HRM/0e/RMO32Ily1n3EjXiT9eFfZzsde3xtDv5Tf2t1KGQGC9Xh9MOtei
Kt9eVas90a6Lzvku7fDFAw+pKHkijXnC+dVOH/YBHap9+0y1+uLyS7/5+bO0
w+s7f7z6rhVpPP85kfX/3fLOP1uuY3y6+RruF+Npfw/yNPXnKftl3cDrxtc4
+RLw2xiP/Cyn3ZybGR/7TOKw/R6q8cfT/hnyOev9rynPO7nWl7fVqvOh0Ffv
/zYMOb/4VSHP1GGeo+srWqdMVUDfzdYfqFPQjmUJ429Wz6ns/Y39/uvVDWUm
gEzzo+1foMeH7yen3n+9rAY8J/k97TCOyxjiIlfTeH+xPeDPBV4rxrf5qN+m
ffxoGvN0jmhw+vdPWn/fpCRj9ceU8j+mMIb0jC8ZQ75BstFhOBc7kfHc9ZtH
7HuQMT43YZ7vajt/sfx8aCja5HCuIWoY2eTbtzXRObD2x9KjPl//L8vNbr7L
m4xNufImWz+ksWkfEB/Y7I+XacZ1+9K0mnvu6gvuuofl/Q0h5Vap34L9nvV6
FjAFI5NbfHkb4bXkb1zO8h96vPr0te8yvuLmxa3N3zI++fpdF5e7/ur6+9bT
zuyhjItXr5v1Qj/G90Se/PWfroz9+Fml6nZV0/Xnd7PxMf39dH5kwM9DOzus
bm+3+hTVxWGsY+7vMI4zGHn+T2L/D3n5LB6K9XSnVKq/N58wdU8019n/MG3+
zV/2HuLwZ78//ur63YyxbmCEwMMdBt7nNXkOw8teN9JhrBfKd/h+2Ecwxn0E
Y3y/dB6VXUnxvgIhH0N9brQ/19esOKOdPOfHeaXbrh0t9MdSvUClmmDSK+YV
CnkRxvuT7N8hb1WlenDO81NOnVzk9KGu5wfG6D+PE+OVql8/vnrJlzkWj8f9
XZT80U2lTh/6M3Ypc/hV83lqGP924CWB4xYyhs/3dpl4PUX5QpXIF/hcuZPD
91+mHMZzGeXba38I3l+7SjxXOyro5HDudkJQvB7lhzRYe8KDKnE/8lxI6EeI
B6US875/DDs55IVfHxb6Uew7qH9fjOdFfHkm5n4v7BsVc3L4fG8yhnqSG2LC
Po55OnFbRyH6Dlle7sNofloi5JmE36dRY/QDK9VXpp2H4zGtVJMKDvj+5JkJ
MX6K+F8rqR95UoxPdTC1jKHu/EjaX/ROifEqVD9IxGD/Cetx6Ps5sUKMnyZ+
Cmtf6fTBP1yQdvoQp17PGOtEKv3xtD8D9Zr17L8Aj8W0Sow/Dap2+m9o7+GX
gxj3WrGx54qFjFcFp60KLqv2x9f+B8Tpj9Dv52n9KK5xcownM54ARNGMfzS8
JffV+ONp/wL6D+j5ENb1J2qdHPhVXmMM++bvaoV9HeXlViJP6xN1vlz7F8g/
rH9faEwt5KqeeKysf1/v5HAeVVkvxmugc8JKdcPVT3/Q81uWt3/3q2fP3MgY
/LmqBofBnzuJMdBqf8UY+mAc3ugw5GekGOP5CWP8/I14vngm+wsYv6Lr4xXW
B/6FYU0OY54rY69/pbneCsuH17ZrdvitI+bfNOdoxt76776fFqV3iQOHn0f3
s81X1XLM72G8fUhgceeljKE+bRNjOHf9jfE5n6hlh7v4UCX6kbmMYZ3tw9gc
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
mcsbeTmVXWUJjsvrJRt59VT5Era6ofCEkO+fkXeHy7/9pPZbEY+J01b/+vlX
x4k3fnX8RvmnxK32bgq/NKbE3L5HmcyTLuO8LC1VctC7DxLDvtofxBBuN7tM
a0/aVW+j8RjX4yW/VW4uX6lxS42f0FjYxYlu4wM53x2nyd1yn2SNVcYHtyh5
poiH5iCG9Yy5FnN9Ju+7kVfQ6Gf58wn7kGoctbL6FYde+fm01Vyfj+eQ/51/
v3hI0G5Xct/CZtd6Treby/PxHPs1Pl7tb9xu9AmSC2u5Ob9q5ZmDrbsvEkxb
2V9ePxQMCHMoOY7HxBAmdZVDO18FG1dfOA5b2VN1mw/pfF6T8/Ef7F758wzP
dZMK7fdV4HvEz492gSTH54gY9q8/0+ozOf4beRrdlbhPwb8P5v2qVOXRD48Y
8vlMJcb1KWKwX09xKobhZyAxrGNO1HgFcVLV4KSqhCrFHUWiaT9i/L5V+D0/
k/p0X5KjvzBxX6GffUSMcUi09jxkfuMpfPyD9GMuJQd7q0BiiEs1nhjUwMUu
rb1qfH43GNe7WvWXJ5/iGlpCtSq/SYQLf6LaXN9dzYTbdPhUOb4v1OQe7dEO
hcvvfJv1x4NfSd6zdr9zllPETXq5Bqw04vVzzj+09oI9kLhPUm3b46eJTfau
HjazvStnk72rh2FHHiDtm43vF4zxwq6QvgF5pn6S872jIVr9xgzCgPxiZdEw
ADbS5E2lP5XRXgTmI9tL3FTkRbzH9Wk+zf18dFNVH+MMNNPai0S7xe+N+i2k
fYaVFUGHEqXKg/3cgkitfjTaNZ4x6reSefusmj2LjS0V1nMPW2n14+W6r5XF
iXQ5Kt6NDeOefxCnlU9gwr0k/wCtv0CYqLtWtDc28hPy8pB/KD9Bq5+E+a8P
03oL+k1YWYNRSRHHnkxS5TEuBjHYkf6arHgYBFxL1tpPRb+YW7Qecuum+BBD
HNajBqfjOiR/HkDd6pWm2rtwUmwMp2ntZ+B78LMV/XFD0pUc3teOmYqhO/o1
01zfzaTdpJwvDGFKPmUy/7zAzOU9smRcUFpfAbviHVy/F+7lIVmq/P33Vo7+
urvOOYqxPPHqKBEohRjbz5V+41Z8D6JyzXKPPFxHvG3FOMbfa3J3nvRTsCqG
cehbuf+TmKfK75+xN7Hfl8Qzm0/vc+ZXYojjEpFvbp/rZ5h/RNrv/E1y2M+e
o5cvxLwVqj8oZMLN+vd/+fgvPt8UqPKjxOffAnN9dyHOl0+QfgfxMnn9I7bR
rdeo/Mo29vS2TQ+z9hBDfvqpRVp7xfj8/E36HuSD4P3F1DojBv45tliVb/9x
7rKuW4ibifQV94rN7XnIuP67eX9pvxfd5CHl4Zs/7f1egUeJmx2OX1R/RYm5
fpdSrT2Z75nf33o/e9b7eRrJv/mj5Js/9hOHi4SdtSnu36w34kdtqSgzt8f1
PYzvy8e/zOpac4eWK3nlgdWHCvOIGRff9ynX6lvw+/wo99tesSg5XLf1xI1E
+vmbxBCvsrvV3B4fV8De5qTcj5tCcsy3Toz55fT6Nrbta/75x6oY9NvzVnb+
Usb5S1/bVPln2i94uv0CYnwPiGHd8ibxEPEx/MtFf3KSfz4krgIDaeKOWaVr
wq8Sw4HJ/AaX+Pz2zpTI2D4OJa/708RaM8od5vKGv9IROZ84RXLwv7pFDNsH
Rr5EdX8q0E6T9/8p4jOc5BhfVytfUyHXDa2KYb30kByPp1P51yAgDDHsx17W
z1+JdpMXrGzi7odHXJ0rlRz0z82V5vLMyfZeEA6jfHxNc4ZPfs2p5MLKg7mc
5vI1Thn/3Ip+tTNIjvGGtPKsig16Om7zGD4eQ7yKuColh+s5jBj0siriB45L
S+eOI24e99yq4DnEznox6+d/Roznc2F+4J1WxbDfw/snjMPoUuU9H9fUf8yI
0f6AeO+JmvNxG11a+9UYR+pnuX8XUG2WlxKP6FHra8csYk6nB63VynN98YRI
q3ec9MeBIvHGHWmvYvjP8/IQfyWSGNZnQogxTyRxQ4HPELMem6q2Rxv2LDY2
eu+Az8ZUeyveHh31bO54H8VYLxjjoqTbMA7Zjw01ebi0u7NJ++4wJc+DTyPF
hfAJVwxhEL5uqhjnrc209luwIZCg2ibjxUdp8mj0q6prcBz6LQXZ5PparCqP
63NxWv0Emf9Kyq/GK/n6domnJuxO0MonyX1kG65fvJGo5GDeMy/JXH52G62+
tIdpY8O8z32TNXkKxjdpRPob2n3Y0J4yOlUrny7zDdnkPkWaJpf2LHWM/iFT
yWG91LDHVeWzcD3I1yb3Q0iO+6FZWvkcjLPPnw8Q/5Ntlrtz2J3tz4aNiLWx
UjFgvpaj5HM/3Tzn05Qcrb1c9Xtx/ZTkWbBBl6t4U4lwmM7V6ufhc5phw/2B
f0gu0jenLNfKc30M7mOqPF9gntZevvSTMMrnY9wNfn1OHb06clJJvioP4alO
E8P+eViBYrieMzU+VGA+n7tIPR/oh1ek5L98uO6f984TX8w+WBS+hhj2FacX
K0Z/RmLIP3Sh2Hw+Q1/i7++ZwglTXlP2MVwf/mv/G9+sIgb1dxjlNRo7y3Fn
UJ1SrT0Z9/0FGxPm2DPHkjzsI/bbiY3EYvvC5zox5ueiOMloD0VxbGAcTyg3
n89t2FXL8dHwY+Dy6XO6bP3wa2LYr7lDDPMGQx8y2jPW8fn18AbDPZJDPrR3
tfK8X8W4QkZeCJJH9K1aNPQKMdr52RTPXb9sVdSnxG3Ehs9Mm9a+He2S+POH
9kckh/M+b1cM+0PriYuFIeoHxHahuB8gBv3pF7v5fG6H3Cfj/W3DzdMbDnco
OcTj6UEshs8aCzGY73xHPG8u/3xPjHq0w3w+ViH3+Ul/gvcwxYZxAbpXqPLg
F5lPDPFx9hNDPo7LFeb2uT4E+65RNtSnhlcqOeif7SvN5WsqZTwvo/8m+Zt/
3jj56WliiF/X16kY4tVVED/fTWg+xMdO/L1xwg9O8/m4ftRbLHD5G9+3Sj1/
6I9YpcrDupKFGNIWfUiM64lVWvsy3yUfr8C+N86l5LB+0MllLl8jOUhezyWa
/Dgx7LNEVyvG/XFijIdNDGHQjfh/nMXr0awFMcbhIoZ1Yl9ijKdKjOO7YQ9k
Y7C88z9vxXD0CMD1vZ6kz4zvdP3tTr1t0i4hQJWHeNvbAhVjvoGGitEuuZHi
PbvFJ9x8vpqmiqH995qZ5VyfgfXsMtJfML4b17/EdtTrMar8Ef+WO5IXRWv1
Y2WeK5vcj2qtyeOknZjxPMVq8kTU34fZcFy+k6DkEOakjBj1yUTFmA8yUWuv
DesJhkGSrcmaPEWuA9mkvXJbJZ8wQySeSNHKp6G952uk3+A6sg3tdX9OU+Ux
n2q6Vj8T47y8bEO7imXtNDmTcbZtuF+Rm2mWuxnq911t0v+dafVlvL98m8x/
q8ndWbjP6bRhnKTsLK1+Nvvpzd++/qsTH2+Fe2ZMtibPYSKreb2RxDMuPh0f
xct/9cmjzZ88ovLfrzp4btVB4sebRQG9vVy5/y37k5U5So7zdGLYv2uUq9XP
w79nEQuz+kGvkv4EcZqGkb4k3JzzRsn385881R7wlDyt/QLMP1JIDPuoQ20y
n1e+uby7gE0R4Y8txM9ePTd6My8P8Xy6FWjtF7Iu0X/ver+zoc9qcnch5nUZ
QVwgAlv1JH5bxIkpt8k4hYWqPsYxLNTOVyT1FpuMa0tyu1iYPkr8WxcRmKdI
8YaJlvAP5xHDcvOsYsWwnvcVMfp/EOP5ZR7MaunnY6x/ueX4d5QYth1XEMO8
WcU7JH0O1sOdUv+fQHL0dyKG93EnMYyvF/X2ylmZcEDj/cU60Z2oOMs2fK4+
KzOXd8u4ikZ/doHi6IjlxQLDr5TzO6U7hm7YSlxx4d1Pw/6waO1Ju/wqG/qD
DbQqOazjl1rN5Y19nS427Fd/JHn+iForL2+1KY6cVnxo/yLiOkve/339RGKM
O0R84Ddh4EVs0uc4d5gwasOQFcSQd/YdYjBXOUq8f8LAb1r9Qhx56cuSDEN/
4/zdg9t2y0vE/eo1bd/VQfzuzk8Lt35HHJyx/ajPD8TgN3ub+JsFra8//0aF
4uXCvaQ9sWm9yq2tV3EGv+O+lYqHdA7t4FVBjNe/Usb/sLESkQbgBMlntl/5
YftfiMfltB2XM8ypeBWfXm5u79Tak8zHf/Cf+5bk4D/3E7H/0rvTa79WpXha
6YLXb7Sv0tqrYg/HbFvQmreHeQxJfm6rZeC+I8So17nM9d0uzJPDn0ehXla9
SnKRhvrtYq0818/egIAUNrSn+JzkZfs+KN13gnjrty23fntTq8/k/udgG9oB
9q5Wcphf5BILcyfHPGKYv+yrNrXnNvQ5o/2WZnaHa3J/Tf48MbiTl0l9rkY+
T3O8FcN1vu6jGPO++Srec/5c7MGOAYpH3zjToeGyQMVp90+N7/NrkGJQD75s
pBj9IMMVw3FaUzNfaGZmrr9hPDybzA/WUslRP41RDHZu11spxvjHsYrBHu9Q
nNZ+oswzapN5vBOUHOxDX0/Uykv9axp//usLj6Q2mjwFr9tkGwPztlZtlbx0
fJeQ/ueJwf7wgxTFz4CDNjHuy6dp7WdgvrRJNvbgPFd0Xs/Q5JlynVWut6Qw
Jcd8bcxc3sjfvdbG6t4KcTz5ZpaS7xHrs0lZWvvZ0i9cvm/jNfkF4q/56+l5
K9ssryEGe78ZmtwjV30fWG9ZmKPksO50kBjj2eeY63N9CfwOJ8r5geHPxeWY
rzLPXJ7rQ7Cut9RY38lX8up77zb75ky+Vr5Qxunm87EF/HOhQMlh3/dTYsxz
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
z7i3LJfGajxbFl9q4sPSh8Q8m/wojf12YmPwD7d82O1vuzX9oE06W//8u9Ot
5zzZ2bd3FUb2T2c9Gvg3Wfi5F9vNaevidCbo7nveslw629sqOj+7jxx30jJU
/zsM+uMM1f/Cc7IhQ/W/WC5DPc94v9pp96uddr/aafernbpf5TW//zIwIZOl
PnF4+Z6Dnmye+9rxSy9lssG1PrZMnevFbrLvv66ck8lWP9n/L2cfb5YC5TLZ
1afSPwlN9sHr6s/U/bkA94up+wP2H7lM3R+8f0zdn1biMIip+4NHrb3VWns7
tfa+19q7R+1tX5EwpWFAFns2f36fH2o82Rhbr6Dk2CxWb3Lq8U2jvVjOwznL
7YVZzO/Y6fQPs73ZU4sPJb7SJYsFBwxZNvBJH7azpNa37wzLYk06eXuW7/Rh
IdO7rfhmXpa63qni+m/OUte7akPzv9udylLXG+7HvSx1vX0mf7n+cKNsNreL
SLjpxcCcIyebJUHiTW+WCgYe2SoPQrJt/cs+S7PZF++833FupBd7ZVGP0xHf
Zcu4at5sye/+Oam/Zcs4aj7sL68fCgaE5bBNUy+0G/PIk/3aRPwrh4nwm0/9
5SX7uxzVn4nS20fmsJ956ed+9cF+a6Hc33nBC/u3HXJ/J9Bb5g2U+zsRxvly
tfPlaufL1c6Xq863/tzD75+cm8smnzz1U+gZT9Z9459fPvtFLgv4dPU3GWv5
eDHtzoznj+ayJe5xn7w40Zvt7nvz1fr8gYpzdnjrzS4+Mn5GnhpvcPzJU+MN
jCOFeWq8wfEoT403ED5teJ4abzAfaZ4aH7Cfz1PjA/x5d54aHzD+Vp76ffD3
P/PU+NDXxzrpjcB8VjrXbT+x35Mdj1jg+2d8PvuozRNLV8zi+mnqnY9fLc1n
V46O/mtEd2+2rIxF3eiZz+L71yq2tfZhnl2nbejxVj4b9dzYec0eyfFiQb55
vKjJN48XF/LVeAF5MZsUyLylXmh3UlDA2snx8hb/69svF+B69os+aJ+5oIA9
zdXx5U95yfj/BayOyMtX25t1E+H1fy5g9V7+ae39uj7saNzWtvVDCtnE937e
Nfy6J1vUfdjA0NRCVj9kx7u/H/Figz9M/F9MVSGb9ekSW//N3ix3z52L6a8V
stDU8Q2uLZT3b3ah+f6tLTTfv72F5vt3odB8//4uVPcvoERoBkVKX0D9oUjp
C/j7i5S+gPpEkdIXsP8tUv0r+lsV4Xz/lidbD3FUi2R8RC95LJL9kre0Vy2S
eSJ82NCucd7FDYvV+HALxotiNT4IOm8rVuMDjh/FanyA8I3zilm0SLN32ZM9
301EdCxmVZCozQvztZ0sxjgva7zR7vdeMVsTHsGL+LDN0xvy/0rYvik/7J3y
gyeDdFrJJex98efNXpgfy17COgh3gA+92eX8V/h/JawpBEz2YVOiOk9oNq+E
vVT6d2r0z54syLGtXsmmEnZg9r0hrm+92PIRITMHnChh8Vdurh232JslLON/
uFPCZseJP8j+MrjU3F+mlJr7S2epub8cVKr6S4ynXcq+HSQcCjwZpIf/uhTz
fP7qhfE8fyjF9YIr3jJuZKn8O38e/nh6ZFZYGftmQevrzz/kzwP//5h2ZWxk
VucjDf7gz4NwH+9YxtIvvrepya/erDMEsCpjD8ds4zWM85dp5y/Tzl+mnb9M
nR/sxBuVK/0L9bFypX9hfJxypX/lwsJBOQtvEXI2wdOLwTboznKWVZG6vlc4
1x9/6zvQ52o56zqq6t25sT6sz3uJBXOaWFjR4CUpx4K92LFg8RcLe/9qIf+L
N0v7dP7JQ30t7Pvq26uGOmX5xVr5PVr5G1T+x9nLpzp9rOzIlOEPeyd5sa/i
LGGrI6xsQcPf/zja15vN+u7+midTrWzAyn6/pS7wYa1/bPrM6EqrivvV6aui
F2q9bFVxv8CuaqpV5sP2xHn0x1Y5f/ZC//PVVlzf+NEbj19bpd80fx57iZmG
Vc1PgsQ/zlvV/GR5m40ry25b1fwE5jOPrWp+AnGs69tYk95tVz6654n5zEJt
LP/IAPtfV7wYhLmOsTEQn/HGONfpNpkHzQfXBcttqj8A9bOjTfUH6NdpU/0B
+nPbVH9Q/36H/i9MsbHfunxzcvcRTxYKAYRs7Pz2UZ9OWejFYi76FDZbbmMH
GrcbXTHIm6WfeXVj3Oc29hXEhfdB+92DNmn37Sn9620y7oMXE2mFJlyzseGw
4ejNwO3oDxsrhQVYH1Znb+/Z7hfsbLZ78vjaXP/1mXY09olAO4t7IrCuzzQv
FuJK3Te6mZ3tG710RrDLm0WEL+5aK97OutWKD4oI95Hvj129H/Dclso42Xs8
0c/PZcTp95LxlezMCf/wlvHC7ep5h3KjjLj/PixnVeSUqZPtSj8f77IFhX1k
V/r5vqfeWL5mqV3p5xjPya70c0vH/dsPbrMr/Xxj7ci8rw/Y1fgL4/FZuxp/
w0KGHU6+alfjL4zP9+xq/J0Yu7d6/f/Z1fgL3/sFh/n3BjjMv7eZw/x74xzm
39vOoX4v5nd3qPFvnBgPXQ41/uWL+XwPhxr/jDgMxviH+b4davzrcuKj3XUn
O5S+C/rvbIfSdxuNPOiIWuJQ+i7ow2sdSt+92OyJn3O3OpS+C9/7gPZ7z2i/
94r2e+9qv/df+r34/FVoz1+F9vxVaM9fhfb8VajnD/0xKtT8G+MdVaj5N867
K9T8G+ZTgyvU/Pv3pvF1v59SwWIsjY+v/dGTXS3qEfTF3ArW/uPcZV23eLGz
r8xsPn1lBZtwWwQK8mb7Z+xN7PdlBfs8/Z3SHUON/qhC648qtP6oQuuPKlR/
BHlp61eq8QWGkdBKNb7AsVWlGl9g/MmoVONLnd0dzl6zVqr5hK+YX3StVPOJ
EDufcQyqVPOJsrd777g2tZKdqJjYZsS//HrVOTr+8CeVbMVKz/4PHnux61NT
ir/8rJKN+Hf24tceebMkv0V1P/mmklkdjc7d+Zv/3v1HNwUfrGTHNgXzf/Lf
O2vxwJRzlWzJwBT+T/57uw1p4bxWyYa2cPJ/8t/bquDSoD8qGf8//6fx/ji1
98epvT9O7f1xau+PUz1PmL/eqeaLMO9zOtV8EfO9OtV8EeaT/Z1qvjhLFBvu
VPNFaO9drb2ZWnuLtPZWa+1tpvagPzvgNPdnZ53m/uyK09yf3XOa+7N/nao/
WyQ2HryqlH4A+kLjKqUfXH1946baCVVKP9jR6ZfDZ8urWMKtD/+dd5uf/+tj
n2zoWMVeOtPyn5TvvVhR8NZXp/SrYh/t3P7o1F5vVvfNpZm93qxiB9ZWPRz8
BZ//TvRqkj+5iuXDho8nA5wt938mesl4wVXs2JKiGRFl3kyIA9ZVMRT7sFOf
Vn3W6esq1vnrN/68cVJe3/1V5ut7qsp8fS9Wma/v7Srz9f27Sl1f0Leed6F/
82ZPfI8auFhTeLG8cF+psYslgcBbvk8uGYecz9/Ea5biknqeD8bXKnUx/n/+
T/4+PhIbES42gf//0XgvJrYplvdwMTE7Gl7sjfGOBrjUfAj0lZEupa/g8+TS
nieX9jy5tOfJpT1PLloPm1hrRvlBl1r/FuFZ5p9zqfXv+XOe3Xzzmkutf49o
Uqc09U+XWv/G969ae/+qtfevWnv/qrX3r1p7/6q1969ae/+qtfevWnv/qrX3
T2tvptbeIq291Vp7m7X29mvtndLau6i1d1tr729qr9+ftzw3rfOUR1925sbZ
RgO6e8mjH8u9sDs+0s9bHv3Z2pMbci7s9pZHfxa8f0HF7GE+8thA6oVh8tiA
wTRkYiO2M0REtmog83uEy3zGfpIbK8bnspl8/gy/ShkvzMNf5qmLRHv8Y75S
T4iR6/ANZPymaKmH+Ek/dRm/oo8f6rFPxcp9DF88Ho+VerARBy1OnQ/ibX+e
gHnVjviz+xCfLUHmyfRlzaHDSGTQbRQ1YPcu7ZkalpnI9vL/j3rsi/5s9ZPR
fi7dV+arSJbfy581hwlQWzYv9ptPd5X5smTo6NqyH8eJCAP+LKT/+eWbeqSy
oZ8P/+Ti+364fnU8TeoJDeQxTa7b+7Gt88bMctxJxzjj2xuwp1svv3DFN535
gcAX4612zcB8nRP8MP7Vm+1kvnc/9LPvnyl/t5/cN2bSPsQX/eATszC+wnI/
GU83Sx792UDnqOx5H2axiRvu+Vxc5SvjRWdjXPJufmxhvRsL6rXIYc9ComU/
9G8cmoPHLxqgXel3OewBxHHyl/lSctmKDr/vaNzTl80N84960pLLTj9eWxg4
zF+Wz1XlMe5InoyH44d2LlH50m/WD/0Dj+TL3+8v88Lky/vkK9dHCuR8yFe+
TwXyeWmA+yHPFMrr7YvPSRfDP1M+P+GGf6afzJMg8zFO9Jf5iYvk9/TF/HkZ
xVI/8pPrX8Xq+UM7nhIZF9oP980Plcj9W3+Zf7xc7fPie2SR839f1h0SEliY
//Hq0l5xfmw42EVZ0e+wuR+rhoTtVjZZpG1/14/9I9aNRlgZpHXf14CJ8L6f
u63sc/iXL7uccf5SBp/ftuOH85f487bnza17tljZ3jfFvxpIf1BpL/g/f/wd
A2zq+hyIGpbydGu7fE790S5wkJH3sQFeH5UH1lfmu7NjfMxt/sw1YlfViLft
bAQkSPPFeeoDI89kAzlPlXmMyn1l/G4HewYWSHzl82bE2W6AnG+wL+qd7znY
ytpCEfXFeLPHHGhv0cgPy9WV9lTf+8o48YZ+7sfEKG1pUinfE39cP5tZqZ5/
HKcq5bzRlxWLAIGJTowTWGRcvyp1/TDuRhXG5Vstz3+wSp0fnodfXejfd91f
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
5fjK6kzmH+xPofNTVt59q1sWza3e8bfz+VTuV5KeRWMbmRNHrQtfvyzEZ1KZ
9/B2Fsn2bHW8KbT0zmu2VG82rZZ09DspzD9enk2KFv9FCk2X4bvFOcwbWZLC
8bzzOYjbpzJ/OiGX/dypGM+VuUD0JQ/rF7ySwjzuvbk4r6ncD9iTR7LN8Llb
KVhHEE/+v1Tuy3zLz31qz6Uy/2udH+tQCte/P5eP+vhUrpe356N+PoXzgpfz
SaUJv0jl4+Xh4xTmuz9TgDxnKq1aKW76Avpmh7zh/Ar78v87v8sKIudXzZNQ
IfYZMb6//j7pqjFAE6NkwiYF/aQD4B+m8vo7P8D2+PQU8DHC/JoU9D8vQXw0
FX5AEOsjzk/T0sj55D7wpfAnU9lPTS9DPj0VecYyzjs+jPG9qpzUcHs/ldIk
UTe2AvtqKuobKuh1VciRSmqaLKgALyuVP9/6SsaduL6tw/3YUljPZF416g/F
einn8flqktPaVJQK3lAN1cpwVC/xfg2n13nzSA29WSU3+pT71v/U+9b/1PvW
/9T71v+U+9b/FMRbm0L3Ig12cjM8ngY/KIrzrpnaiC4GP0+L89aS89YPammS
MW1dxdp2tLNNyy4pP2lp67xVX/75Sls6VXbslyGkpaut7F+NLmxDt8bP6LF1
XlqEJ8jrpzbCE2T+chr3TSmPBqZRinCvhqyOAWrBW44FpuG6xAG10DeJj+iI
sZ5WPDCsI6aJ6IZxvW4iUEt7fpCFTMlALUl6af9NScA0Wv6RtmrM0/dwtoRs
bQSVbuxXOrr8Xa/U0WO0/H136sHL1mJcG+C/aVl3f7CR9fZ/T+N5U9/E+epm
aWynjTZhP9JiXzTDftHyeHzDwnnqJloacLdgVGizlQ79O+WBNSO1pA7LrHRb
Horzz/6MDeM1jUoGXj3TssROs46f3qmdlUbzm/ZrOGq+nYpi9j36QJGWfl4/
6NzemS7aIMGpRbzEjXiJFvESN+IlaahbQX/aZuL9l7W09hjpBW81jedlXYp8
P4U+inw/7v/kw/zW0szHXvj28e0+UvTFFlpKmPLIryO7ZtIHFZ4Jt4do6b1d
bzy7OT2TAimddtzdkMZ+55lMUmHyd7QkvdLM9zPhl6axbmZhFnj1WhqbIxM7
WRQty4Q+T0NeJwtxCS3HEVtmg0eXxsdV4WPxef+QQtLZNGixsUwv/v+vrrax
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
X6gmhxL4dZBPEU5qqK76xcHxqvQaWv6n/MXBdtfpGt6nxmO/alcLnVoHj+sn
atkOWIJjI/gRu/H+CaHI+ytoA35EH7H/KJ52iEyYH5UpUwrmlTUj+XNRhZMW
VcgHokg9vMhJ/43cfOLyzeYkf96+66RT1b1i3cEW9I/q5+dE/LwVyezSm9ed
WJdag8fmhD/WBv6Yk1SYdV5bxF2dPH+fiEG9nhP19tGo53PSVjkt2idgfjgR
d0nE/HDSazLNPDYJPDMn8tHJ9KRKUDvZbvtEy/GQ/U7oEUJXtr8TvJsMxB+c
4KHrgE74wahb7+NE3F8PdEKf2wAE72AL6gS2gFedgrqLFCf6C5uATvY7HrUA
nayPOd8CdFKRSTL4rUBxPh5olLZiixXohB9hAzojfggj3r8AdmKBE7qSLqAT
cQk30EmrPLJhhQfoBL/FC3TS518vOjGo0AsU11u26+hKFJKyoRud1FMKiCYQ
fTVUNvBwIm5DsOedyG/7kN92Mo90t4/t9qlOzg/c9NEVGU+/7OQ+NtpMmmMO
ibuT+9h0z6SGM7Y0mCG+v4q7rsuEDrWT6yJjstCvC9fv7yyeHxecqJPJgV6l
k9rJQF9tLplVv0onqTRpg1z0s3TS3yNrL39wI5f+vLvql4w/xfnQSuXbXJrc
2bV++3tO6ODmkjzq7BLjW6ZxNHlUoBI64vwM3HZnWUs/dT7+2q2uWietWdfg
2saQn56Q5YhivKuw57t+2KtOUu79Dj/sWScd2SETWn7Yu05qKok39fNJLUtN
naTSlYF80m1evL1InD/mteVDN82JOtkC8FydrKt5pQD2pJPXyYQAr5tifKl4
0KoA9OTC478I64uT9Z63F7G9Os4Jfm4x8rhO9G8rhV3vZJ3slmXQ4cN4DKFf
4gAn8yVWl4Gf6eR43Khy8EAxnn9H/dBsJ/RGK7CfOHk/j6kEv8rJfe+b13A9
VQDHRhyLz68+ZrNavA5efxr0PPs5aXZqH/tfYj0duWzqb99+7yRv9e7nziSG
6E4X/XeTPnLSidGGJUfahej5RrtWhJ528vMeCdGt9T3fj/M6qeOP/3XcWCdE
w/rdfuGCWK+4zrQp6k5dOC/NqLtqdOSCPxTF9R8bXehH3Bz/56JxN+MW3Aq1
ICUnXeWinuqXljR1uPe5actdJF920+x2+D8X1VWBsU7o5+JiHsI+9CkWfw/3
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
7lPxvGyeP1kOdIhy2Z7o7tBvr2ademxwHj3gTj+Xn+nQ+fyP1s77MY8uzrzl
px3i/iTd6T9jCvjco0OXuk4B61TXdDjPJZWADudL9iegA95T5KM87rBd0FsD
OtAt0IBo35WIj4rnLxuZ135jqQ4UPz/6k/eOTdQZRf+/+s/fc5OW6Yw9HLqp
T+eZA3fpjBUOTdt5x6R5Z3TGYQ7ymA2gA14Eg7HYAS+CwdjYoRdbFw6/MMwE
ivErwzLdTKBDr0m5jN9NRvG8rJ9hMtZzYnWnjGiPZahn6YHnPYP8F/H3WV/V
D3TAX+pHfAh1hdmIE2Y7fM79OcAo2lP55T8LMOY7fC5+JcAonod53izGqx3O
ixfnLkaH/pXuh4dsoAOeMqxzXR3wlNngLXNwvgDeJ/rHVyz+uUAH67WLc260
f91Y/zJfvYtzr4O4QRCI8W0HY7ot7J8JAh3wwQYZ8xz4sz2gw3m713pAh3km
WhYx74RoPxX3vbUI+g9YT/4qRh2Rw/GdrcV8zojHerW0BHpteJ4DpbHnUXWn
gTL2V93owG9QDh0bh+32vhXgx3GQF1vJebJ9HOgUVnJeeEcH9d9V8Hs4fM76
twrnN4d5p/pUo64a7fUa9g8xH09nTu77ZFqEjt6b/M0lcb8KO0Ro3489Z14M
OXRo7rqM4c0jtMF77p4LYryp96+P0LIvVuSdb+FwvuJVEZ7/NRzac2RvwpC7
GtAt8ji/wKEl0v26Po4+lMf8PdH1tAn2L4eyFFHsTdDRduAvbwF/uQO+rFZc
P7FM3H/g5kd+nphAkp7ikZ+j+0k88vod6OC1Bz929PM6IN7toG6vI/jFHOiE
JPJ5eTfqovI7sf02Af33vy4Ylw7yH5Lhb0McqLQ7/H0O4sEpyAPC7/cDP664
f84zS8N9OSRVmwbemAH7ziFF1/JiBuw/sb9sbSb+ZVKFJNQfL8ZblwfEv0wa
1ThnVOOPHbpjzJZeY8T6v0Tvu0T/1UFdVBZ4WRz4B7PBl+AgDp2NuLiD/Khs
elE+jnjeBqqwJJee9eJfmT7ZoWcU5tLaji86WzY7V/Jr/S72r7dq3N7zYj5t
LR7RbdElsb4rQz2fpHmuifZX6Tyt80ml80Tbczn8O/sdGiDTmucUUnro2x4h
0V5q+00k8NU59H7r8++1Pk9Ah578c8PwPzcQ0KHgiknuikkEdGK6RYz4vKDO
+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
puR9jA4IbjElnoL1AY08fzWN89EA0JR8mVsBoCk8pd2Cgn+YkGtBT771q9s9
pBvv9xp5vzuUvJW+4/O3Rh6/GPUG7/ca+ftLp44bPapCniCvv3Jrzn70x5N5
grwePto5p9R7I8vQeyN/WbCzkkXxM1pUi7hbliLuro2b0cKC3aiKYHmLdj67
YuGe+9WlrmVpC3VEa8nr0RbpMPlrIXRC0TDXsArG9zS3kLfZEPuUhfjLxthn
LNpftBn/aw6eD4tU+TazSgvwfFi0/bhSzMNIlynjzws/SRgtedir5ICqyCMv
gXoFRdEejnZNtC+g3c6SvLGECJFLz1qoCxQpdoMIC/7JSHm9jEVJTRVDQ5TY
qSvyOtIGyiiaerL57V7tLdRjgT+W+yNEF9Zqi/wYi97KVDtXW+TPWJBH0chr
sqimrSqnRNMOXafeomhd0L0DlX743OX9PB5S56MDffkMv8D3K+ftGMQ14vlG
xQqGWKiTQaiXbAlfUiJJfGgdfD6A83konn90nOh3/2eRVve+iRM9pZYlfpg/
4ukJ7aCxaJxyV8yNl/X0tEW6nF1UAg0OqoImFuKvEqjOnArF6rcH79rPCcI7
0Ai8bA0S4W+ySLs/jiXK9fh+VBjAO9MSZT0/gftdhPN7WXw/OdmTa9qevSRZ
7Nl8PZEjyfCHW9D3UsGnbsGekyr7d0lL6tDmoJ54Q4tig0V5iqXRgtDRWff5
fU0ntT1N6uNx//XTH0ij9R/yB3i8r1bMj2xgZdCwp76tWo5/T59Xf8qQ82p9
1B2Yijqlj1tU8lrdDdMWZJIuF8Pj+aAEv7APdWQa4nnvgaezA9r70W6E9ido
8/Nuejj9u99KZ9Pv+al/XOX+unEnoeiLsdk0/H7t0V/y+NXTL2RTWfVCFL7/
B3iNeDy1OO4M3pnmyIP9DHmxLB+03+9sDnifLVk3IcjjCkH7/9Dm+SP6uCFY
D7+3wI37tuhWzPb6CS1NoEUfxY9/sgKftzXyetG87kkm+N0tqVu+yUT9cn7e
Wa8/s4zPkRp5fMReC7stn7N1nkWJR7jC/1mXzVUfoc73afYItR3nMyCvN21/
nwlk+afrBuwBlrJInYZjzgN5vHatDd21doAtyPNXeBxswUru/LQF+fN6nh60
vfkq9Y5sb75qM/lOR5CfL0sZek47gjzfp+f/vbDW67mCPD+GffbaictdcgVZ
3mk9Yzrik3h+aX68XbmC3D981xMPnckV5PFRWcMfD/EJsvy7MG/j7LF83tZY
Dettgg+8TZbEr3zvQxyLJXEsf/oEa1u0qNbDCylv+AVjLeSF+AVrw0/wvh/x
K5bwPJ/2C9aF/J0VEKyAOK/tQcHiaP+Jdm2ZX955OBLzzT0PN8X77nk4BO+7
5+GKeN89D3P/XFDTbVYZ0feDlscvqM8Bgy34uypDrkJPmlkF/POsd2leuqpS
D2GgBX9gdTlnkCV5ggk1hf+oF+5nEPy9A11eFNirE127UR2R06YFXu16wqdt
W2L3zagv+aJ9LfHD/t5Y8lFes8BX0Ej8h3HuftwU9cPQbt1EMBn72QvNgBby
E5ujPq1F/hnPbu96JoyO1Ev8q9IIvp8WgycUnxNGdyd/0H1Lb4te3H0wZXla
GFVXZZAsC3kUraiJ2jZ6WHKOywynNSoNi+8/TxNjh9Pshopp0RJ7xPVI4aXh
+5e6wpE0R5kpuH91nOQ3UbBbWOBhboP8Ekt498q2EX8N95/Y5dtK3kAfS/zD
xdrK+uDxkDz6dsg/cvUFnI9fxX67oQPqEFrIo+wgr6daqBMSK/FPPD76HLMi
FvXpLMnPKEHefJH5Q/CXWjRm6ZBe+74j4ffsZtH8usa6w93iSYX79htkgW88
HvlxFkWWHnx0X8UEev+Jry4/n2HRmlYj6z6ZmUDBKt+UKf4c9r9WicjHsahU
w6Fda/7G59sZG1tM4/HU9uLqyWIv5vHU9mQjWezJ3D+6zMbmZNg50B8uXxO/
r/2daanIr+LnUe7cC6mk3blDeH5owrFU0mpTd9bXivE7H6TSntGJTQfw70m9
jzTwa1nC9/5Dmqx/7g+dNz80HXmL+H1CPBT3j/DcpMu+lMTzdZYiKkyXfHJ+
PnG3ZCAOGvtZi0zZz/zYz3pnyn7G61mvw5mZ4MOyUPc9U+wxPL913SY7S87R
vL7efOnb5sseZAkPSr4FXo4s5Hta4EXJorBrR+vPynHHP7vQ+Gd746/14bvw
D49090vsz4ZF68yTvyx9MYd+XaoMVHh/OvzFqTjXHcxBXI8l9SwqGIK5+Hw3
w+u/hauWNr00yRDk5y3xoMgb331oCHa16IW0jgdmrzMEeTzFnga7Gv/+ieP8
V90U7GQJz84bJtCSfM+ACbTAf24iX81C3TQg3/9vtKTUkKrAPIua6QRJ4ACL
+itaxZVAHl/h0QT6LFJVtxvsB3J/SZ0FIPcHL5am216xgRapZdKgsw1E/31u
I96C9dU3jm/ctM0WTLCocdVT0zoetQV5/sStP9/r3iVbsJ+F+qMOEM870fGe
V+yaqCftjsfAXE/ea56hfbmCPF+0nfdSrmA/q6A9fDjrT8MmfL+psw9oCQ/E
Pp8gf1/zQFzwCfaBfjbKL0hoL0C7m6tf+r35pvXxygHBAN5fCb74F9Aeizb3
j7YX1woKdsXzzgp6z6vroRwJCvoK7ddDC+3X/Qvt190K7de+Qvs1yz+3nvXk
rw5XWTbX8upZS31rC/FMlYXv+S2LNN1BmaqI87dgj6wm+UMbLPDj1RL76yZL
+I/G1hZ+pNWwm3wa4sWhT/z39JGzNerJfBlrUdrPz/L/1ZP5Mofl96cdGh70
15f58qmF/KDGNI/h/ApL6lp81Uhe589LvHIo/MAW4mSbyfl0EeRFleaIG7VQ
zyiMvv1cCQqLzj6pMjTC5NwzxZK8rNrhNEEl2L3J8k4lbA0Jlzy8eRZ4fMOF
7477S+rHRtKJskvy9/G6k/ilSKrc98cnx71j0RIVZvJiG/A+YT61bIs4Yeh3
HVGflNepTve43U78v5stunx4OWvi7SU+gp83RAd+tqcd02rF5nN/C29LB+RH
WYhX6SD5I2Msqev0d4zwmvH1SmriilhS7pXQL7Gewwl2Buzv/jiJF15uUZ+b
vcc2OBkn9g7W+wXjxB4yB/2RHC/8Hvz7DwfwDrswnt74IlDlG37+EdO/zv/i
WDzquFhiB2+cIPfF5wYdP/ZaosSP8f1p92aHRMxDS8bx70TUjbUkT/3dRPDu
836o3JbvJdHplVdeTp1qCe5JAj+VRbp8V1wyqfJdYxZY4FtPBh+pJfXquqWS
SrMO5fna4L0+H7/VIJXKZUX8nDgD8+njVOSlspxcrArIpdE1S2XOWGTrBJo0
8B2znC5TN3nK3DT6/k31PxbxfyqHnUoj1arM80UPR4N08Qvw9SVOLV149VZD
H3k3Hf4/tG+i/RXr16o8eT7qkn9rIZ8sg4rqRDJeH00U81MGKXPKpYkWeFIz
ZT4vtbz6Tno9Lra8OlvCM2KBby0LfGuQJ7txfub+FB4K8FKPgf4cky3z/EPU
RR0Bnmqen9o+/ATsw2PdOqk5UjeVx1N4vnOE/2+cBR7wHOEBZ3mj1311Q/AD
156BvF6+vzi7RMT4UQaQ96/7vTd3nW0AeX9etC253QoDaElcUwfEOfF4Sf1v
+J+XWVK/voIpOAv2vXHwi/P9CV+oKTid9bNOddo3LgFkeXH3VpPJ4VWB71nU
dHL4rx1CgSvQn6sfoY6rnfsI9To+CJwB/e8KcIV7/rQF17nnT1vwfVx3I/J1
uH8bj5hd5vXvbEHuHx23edgW5OfTcZ18nta4DHaAPo7g0kL78SzYA3vmCi50
9YFcr47AyE0/vrbpx1xBnn+Kdjj5bK4gzzftv+D9WfwY3P9Tj/SZesQnyONV
tOGgog1v+ARXu+cZvyB/X3i5/IKfQ35WC+CcbIEXLyDI8kPz/i8KAnFe2xMU
ZHlRwF683ipoL+b9p4C9mOVFAXsx90cBe/EkC3pwGZyTXP24LGl6lesW+Pmr
SLwF62FjdVxAVVL0/AmX0N+5NdDvkCeVa1NYD5Yop93zbT3YYS36t+6Su3kd
6tMbKqDiPMvbJ6rzVtqYro9SjinuH+W+SmpMR8/WGLToAnhFlzaib9Mrv1/8
sLv/NAFPg7v/h6JOuSX7fKAZ7PcY71stRf/m67eKOLElf3kYPa0MLnz/X499
6KuWEEbXdNwN7HsbWyE/i/V9XcAtnFR68YvH+Hypys9s4/OtSlu6YSFvNcKr
ex+tE3oiad9nHc6sPcX6yA6VqBpJtbQBFfdjt5X7OWQhPqsd/O2QZ1M6yHw9
7co3tLe5+kkM/DsW+ERjcc5keacd2bH0Q9bck4f592f+W6V+fjKRpp/l66ky
IDNi4iTe/qQl+Tt34sCnB/vM9jjkY1qSvzMzDrwrWK9D4gXvuecZtLn/dPfv
jZf9+jzOZ/sS5Hx2HuvHl0jrkvuvS+bxaZ23MDKvbiLqxrv2S/Dvc/9uD1k9
uM87SdTj2UDbdTt4f1JlJzYlkS5D8btFo2clTB5wPom+07yUOA93TJbz8FUL
futk4cfg+ax5Slql0C+9FXGJRVdVuv6AFFLpkZ3vWKTSMKyfUiT+8qyFeL9U
xKFZEodWIxVxarD/7EkF76yr36WJff2oqy+nYR+zwDeZLnHf3L/aLnstXfIE
/rGQH5ZOYSoA9yDOr+UzoLfi++MzwB/J+6lWIDIRtwP/zB34X+9jvr2Muk93
0b+bsD9y/+nyIxXcujK8v6v0gWA2KXqgt69Ari9EXSEen3UdVaQYn1dV2bQz
sHeGG8gjYP0jkge0qiH4K3gVHeQNH8Lvu7wSP6D9MdrcHzMqK0ZRU5DHT5dB
qGQKHoU8zEKc6x6shwPwex5gfWjzg75PlQLy+88Prdy7SU0gP+/SZhHd0loA
r8O+uwJ4BfbdOUD+Pe3HO/gINV/yjUeo7WYDbUGWFy+ouGO/Lcjf1+EPa23B
mxZVUgELW2ygRXk6oMEGWjTf90reCd7fBC2Je+vpoK4M/A3zHOSjQ37/4gAt
8DLlCvJ4azqnLrmCv7v6d64gz99G8WUmGd/nAi1SMO5ULtCC3c0HnhdL+HZW
+QSvgUdttw9oSR1X3g8FWV8NVQd9vyDLmzFfDeu2ap5fkO9fLbf0i34gxrcZ
4pd5/DV/8vIAeJQt4fm9HwDCHnEhALQkD+xwAAh9dGsAiPlSB/wK/Hy356mE
xqAgz0dFi/18z6Ag97fErQURx2YJj/Y/QaBVMP/ob6tg/hHfT4H8I37eAvlH
vJ4K5B/x7988kMWirozEV1Sw6fTi978PWV1W4i6a2ojPqoA6xqgjOrmy+PdK
2KjbVE3ii8Pgd0iribxXG3VBalNJVVazvU1lIhQDU4jwZ5e2Mb71xE7Hvy/1
rOvLeLa0MX8aww5nI/65Efj7bOjnTbw63EPOFtnZzh9Kq9qHBM8/aWMehSJ/
y6bOI2jt3lnNKLR06pGvWtmIH2spdt3aNvbhMHnOaFvqzw8Jk/lfA59/Ihx5
z7bYfQeFS3xkdRt1AMOF/7G1jfzgCOHXrmrT3HxV2SdS+Lrb2RTpf1n9oz2H
O+05zN/Xdrb1UcgntsHX1kb42hrg+Se2lf7g+5X4qXZyXizv1p1qD55SG/wz
HeR7UTb4GWPEftHYlnoRxWPlXM/PI3xfsZJ3UtFGPmQsrVJhlk1s5OkSeKMw
PtfIu/71dguq3RoSR8Nr7J86Qj1fSfNBUnYcvT+u0X91Gtr02tEiJ+Y2jKNv
Lo8auJvnk9TJiEPdDBvnzjjUxbARDx+PfrclXrpLPPxrNvgb48HfiPs/loD6
tTa9/cnezzr0SqQU+/zRmjzeWq7x/q/cyZvKgGf3JuzbbdF+F+2StuRBjU+i
sWP4r6iNfLkk2C35nKH+riXBrmlLHk5v1CdohfuNQX5VLRu8oMmSt/OULXEc
c5KptnIjc1vL+f3JpJpNG9mkoq8OPJNCr6iwLH5+HZ6VkkLtfSFT1tXl8VH0
n7+mUMfjKrDQpmYDtz5YNTuFKim97Ck3TyXVm49Dn7i/svWEVNqo9NBivL6V
mX5jKh17cX1YBPef8OWk0p2OLzydxc+j48qS08CHb5MOy66QTr3rNw3u5PWl
vHL3zHR64++FtR7y/Wo/zMF00jR4PL/OpalKV+l0q16rUr+VskmXr6qeibpW
NunZ78+kjSotvinOZatQ/62STZ20ozaLVl1RBVVZnijD/Lgs0jTqPB5SVyeL
dNoI35+2f/H5Wp+HWd6IHzBb8uJ5vLWe+E+22FV4fWu5uSNb5CnLK21ueS8b
vGW22IOq54ie+QzOlREGEOfKagbQBl+ly9toS/22SYYg95eu37bQEOT7Fb+m
CbTh1zSBNvLpkWfQ2PbiWt31Xf3Gv9uKlLaAvB4qHxgxWflFNdpkxy1vUSHC
AvLv7blffg7rHxp5fej6unyu1MjrvWPg4rLxvI9p5OvfPrQ1PYf3RY3NwFM6
CNgSGACyPNbzfiuwKOb7EXfe8/WVfLwEZHnS4eaOutNGOoI8Xgvy711c0tUR
5PUi+WiOII9HwXxlu1C+Mr9fY2Gboy/lCvJ+8euCnXNK5eUKsvwVPTpXkMdT
9OxcwXYYjzd8Bceju88bD6kP4BNsY4uf9n8+wSq27Gv7fN7+pve9Bz5v/9N2
nwF+8DLbYqeZD/5U3p/GlP29z6UHfkH+vORz+QVZ3ki9vgDQRj2/ANCG3Sgg
yM/TStFx/RUQ5P6QfMuAIK+HWSr967Eg0KYMpRhVDQKxHluCX4/HO2xi293d
s4OC3H8ZLA5mDQgK8vPo/OQNQeQp2/T9MhU4HxTk+xc9Lejt73ei5jz/Rnge
kOXdi833/dcgD8j6yJLtrfOr5gF5PE92mv+wVB7QlnjxInlAm86/rg5MZej3
JRt6lfDZtPe+GtiytDnnpZ3PDrAlz6pCeeEbirNh565E7auxRvaqDT6QKqjT
YKMuag2qoAlB0R9/wL8+EvO+Xh3kg9rw/9UD36Qtdo3P6sMf7O6/DSWef4gt
cW7zGlN7zRNrgye2EV3n1vlsV99pCn8NeMrahIKHx5bzUs9mss8PcPWzluDV
wfx6Lgx5o/BLhbv1YW0Kzu7N/8JJA78vdb0jhD/lJZaP6sAYHkH7N24pf5c/
r+u2hETK/pRqS15VTGt6Vv1PDtb57Cjsg7bYSZPbip5mov0D2nx9LVcHtkOe
tC083VuiUffJFrv/kfayvw9FuyLaSVhPoR2Q12SLH6FajNiRkyGHrFjUabBJ
p738TnTObnHOftGmD18N+/DVNUTG5rk5m1mOSb3MOErd/VuVsjweHb+1Fhxp
EUcruzY2LvN80H5Y1kcq/3P53Z+4/6V+Rbz4abva5B97vkT5F+Jp+ZaXH5s0
zEadkHiJI85FXZmeicKnxs+vwoT7hCbS7Y/WxETwfJV6zYgf72MLn0jlJOET
4f5/grWjgxOSSFUT65tgU44KhN+bRLo86vO8P+qDVbLwS/D3y2jBlSz8E+m2
+OHmJkt8HF9Ph1NsSiY17EldbMTnJUt8Hve/jlM7lSL+L75f8YOl0CTlH+P+
UmXnfaxPqCiCpnw/3Q4sGzH961RqefFQ+x2dbTp++/PtP91IpWv3funRezjW
D6HeRDeb5oU9v7vKrXTaOzf83JQRLO9mr6v/ws506pvx67tf9LLhT06nx/4b
FftHDubLtQzZx19hfXpIv5pnmmdSZrvI0oN5fMqrF3pl0pP6BfBgXMyUuBpe
b+8rWozlmaTDbHg8tNiclYV6OLbYI37JEnsEr6eR/81dOOS1bIp5Y7e58XWb
Tt36sfrijtn0192ebx94waaUi3dmHY7OpkVDVIa3TSt/r1/68erZ5L/+7hPF
eP1204W+cyQemvvnt9F8EG2eQ1e/6xTd0u/q6znge4BfOcrw/Mzar1zD8PzM
Om77BQNoI+/UEOT3X6hxb88R1h80drfFDhoHHo44nG/ywXuQb1M5lXj5pynY
HfLFjQs1IF/qwi7TE/p+a5zreX4nFn0xtt5qS5Dny6fjZ83Pm2sJ8vzQdaBZ
n9DI/a3znFif0Mj3fzq/s3V30CN05ZSLErcN5PGXuG3gczbiCBygjTgCB1hI
X0gvpC/0KqQvvFRIX8izJT5lWS74N2zYNXMFe4KHpRfsEb0wntt9qDtjC2/B
bz5Blm86b/6mT5Dnp66LPNwPtIX/J88P5PO0JuLwC5rghT/tF+TfV9X4qE5A
kOX9zQmbar+YGgCyPDpUYWhS5wCQ76f2izuqDQ4AbTlH/ol6Fzz+ci4JCmbg
PFM/6MlztU3e4/1f0AYvaxDxRFjfV6Av8PqRerh5gixv5RyeJ9gF8+mZPMTv
2PT1k10HvlmkDK24cXZC5el83qnwzfFni5WlwJ+7SoUtYPkbUiPjf4+Vo2IH
1sxMW22jPlV5ib8ZYwsv89EKUkdjnmtPqIR6iyxPdCJ6balTxNeTeoR1aHbR
9fmLR9moR1iHVLnk3e/bqEdYl9R2cOsLG/kg9ShUCfYxrr2jvuAyG3wtDZD/
zPuTvkBj2U8+t6nfw/TRed82kv1kju3Vixf+XfR/Rgv422zwI7SU+oBf2dRS
v9BSeM5m2ojjCaPWl6J5SGx6UX1gQiupz/wR7BF5sEfMtiUOdjzv74pG/CPk
dW6KRNyqjTiFNuAztSmr08XfR7VqS+X8G6MWTLHp5KhWLy1+rS21WZDZ6eJ8
1ucWv1bsp+/bkv7YGlvqPAXbSXwG/54qG1zyVjTdU7Tvm1hfPtVg9/V+0fSF
Ore+Z0s+0sX29FCVi9xo05KO6pX2dOnIg9Wp/8N8+g713nm8NZ2mP4a6KjrN
WTa9+ZQi2oyhU/F70kJW2cIvWzxW9LvRtugJJ1DvaRXaK9Hm+5O686iPOA/6
sPI/KP13kvv7iG9fAHvO5TjYaaBfFokXvZPnz2Rlrm8Wj3MVr0+VTh+Mx7kL
1z+UINf/1Ba73EuJcg7l+anr0iQkyus8PlpPLJ9IG9W5lO/n6fsbVk97Kokm
vN7p2I/jWZ5fOb01pnkSVbrzUvdaPJ/ME88cvmok0dKBEy8NW2oLL+LLSYgL
wfl0TpLoSZNt8VMfSJL1y/NNeG6SkWfk2q9SvOcN0wF2KeA5c/WVFNFX+Pd0
ntjcFNqaqhLIbLGbbU6V/Ybni3ZX3EvF6zZ46dK8+azz9Pqkk8p6qLXORv2m
dHpRBXTy70l8ZjryY23hy5+TLvHakzFeVcFvPBXtgWh/iXZl+COmQB/uCH8F
X++O1sOykbdvS55WrWxKVIl203i+qwK3E7OpjQ6IYvk39sJfnTdk0zZVZu0D
W/JJLmZT9v2dZY/x/VfKj2xwoFgOqXD+izwfSygCpaY59JhKk+f5e1flwTs5
pMtf8ny4PrfqsegGhuAnttRlyTEEp0FezgcPK/en8HWAl4E/L/EDpiCPl8S5
mEDI89um4HrYp/aCh+Bt1p9Cn6xY/ClLkPsz7eVFbQ9UtwT5+fI3xnT+sLkl
yOtJh0d9bgFtyaN5zwLaVPSlj87V228Jsjyf8N4M6nTBEuT5InGfwEW2+KdW
PcIC+/+0Qvs/P2+0Ktf9siPIv7+6b2ywaEdHkOX3zh3qzxF80xZe9NOO4ELY
A3vmIt/fPf/kCvL60vkMJ3IFWT5oHsnbuYLrIe9L+QSnuvYfH/LBWT/RdRJ9
gtwfUufNB3T1I5/gLFc/8gmuhD7xkl9wjasvoj0Lvz/V7/2+9qfe9gvy/ek4
s5YBxJu5+19AcKJrfwsIsvzI/PbvjG+HBAR5/qqw8Fv/BQS/saWe0IGA4Lu2
7HO3goLc/71DP+0+rGWeIP/eTwFn25WQPEGWn83H/1evZ5k8wXdsmrFm6YRf
+PyucXSh/X9/of3/j0L7/w1b4p3KliddJmKLLXlvIZVIhT+VvGlLHGnXKqgD
7drP6ojc/9WG/7KB2LV/Z3l2pYZd7LXGNGZzz37drrM8eHvZ6M09G9HJsMjV
r+x29/tQ5JO77WZe3oX4TVsirgH7S79W3u/p/XZkhOy3JyGPBkUKHoc+mdka
cbg2aRpauy1l5DRb8fch7i+VXre2LZ3d9XjWN1dsitWJ3NGSv/HQpmObrw39
7LVoyd/4HfrlsfbUXRHP32F9Qx3zK8bIuX+7LX6u/jGk3V18fzoebEsM6bCw
G3Yh/mabZs5Qf0Q/7VR/tsR3d4hDnUrXXxMHu4VN25pu2tp0UxydqtDlzwr8
/sc1L31U81IcmaVvG6VvQ9/ZlSDy6Cz6r1+i5LHfdusgJQoPy8+svw5SAjiJ
uigBzPf/8+mv+ZUkuvhX5zZv8vXVcbXHwCRSx9Swf9C/+5HvdcH1bySjPh7G
5x74+h+iPQnt7bA3zE5F/Afad9C+j/27TBrsyK69Id3rL73PdUa+1jWbSl9a
8MylBRmkwhiH8vzW9TFbZYre9AvOG29lgocU/oszWeK/uAl5tTBL/BfcH7pc
9/5s8KHj/pugTh3P9zGJKnLeEDyD/W4seHy34fNPwp/9ky3zdrDpzV89T6eB
l4jlcLQ6yPL+IWjTFj7GHuX9QxD+huKII9sO/1hl5BEds8UOE4p8qCu2Fxcl
cTOsn6lwF94/NPJ8PNpn6pE+eyygTYNU4NN5C1ho/+Dnk/oej7DA/nCr0P7w
m02HVTmY/Q6Q9ZEffY+VOu8AC+0PpzGfpiPeej/W6+5coGvfzAXa9Ma+Zi9d
4v1AI8/HjfWzH87v6BPk39d6LMt/QVv02Gs+IOsPG74r3nyQX/CG62/xC/6M
9TzbL3jEFj7uiADqRNikyuJUrBwQ5P4/0W3SyCNZAUHuT61+8XlQI4+3rgf3
YUDwJOTn/wsAbfF7H4P/+xj219Qg9lnsrz2D2Gf5vDGmff0d4XmC3P9LHxuR
Pr1hniD37wMVB1QtT5D7Q4vv0nmCPN+0HbNonuBWPg/dXvDOK/9VJKd01RHn
Wzg06VJc3esPKtDSmhE399ZyaN/JU+ueu1+eHjbL7v9FaUfsWjHVYMd0xN41
siqpqJcdDR3USahCyry5opoj56y7lSVvlL8vfJqVhU+zmENVX7m8qWjVWjT4
y71NF4Q5FHHtyIjiETXpzMB5fqrrUHbvra1LZNeg3AYDxv5R3qE+x1feerJP
dfrxRLvPRj3uIA67tvjPWzrg86kt/vPajuA7IaInl3XgXw9BPzgS1zKzLvIn
HZx/68o5t76DfJs6yLd0ULe5DvJcXB6e+oIRaBPajdD+o55gdbRHof0s2iFo
P+ZQnZ6fdc5f1JB6XVm/axpfL/GHLl8/SG1IO471n1OrsUPPNX6mymtXG1Do
9to9P6vh0JtTNg+7+04Dmr7maPNYfj7Nk9K6gcRDcP+U0AlojYWfi/u3jEoX
L99YeLvqOKTLGXzYCHUnHNSjaERKPYkpzv355dp9tSObog6vI3GD/ZpI3HMp
B/lyzVDPzQGfWSjquTmSnzOjBeSyQ5ruokEL4buo5yBerznGxRH+sazmks9T
0gE/Rkvv+zP19Vp635f9oKX3fc1b1qCl930tRzaFiTzk+S1118LgH3LoeV1n
L0zqyfLz3DhX5tN961rRphHjLoU3c+iPPXWdD/u2ouG3Shx+vqpD+9dF/jew
ZiuKeGHqt+8/4YAfKxz1GB2pzzo7nHTaAs+fJbpeXLjENVZ2hGcoNFy+95RD
+hjzUwSt/iHx1QX8fX28mRVB3VQhAjX/FI9y1wh61tk78E9+Pn2uaRIh3+P5
J3aFSK/urPApRUo8aCXUUS8VKePE603qpLZGHVVH+KRTW6OOqoP8wyjE8Th0
XOcZRiHu1YF/Jgr+fB7fzu83+mV9G+p9tEH6MP68qi6+tn8b2rkqa+YV7q8N
2m/ahppPGPJ7jxIOlX2dhl5Z2ZYSaxk1XuP7lTpmbemtmAXt7lTk/nllS9ft
JdvSns43/C/x+tTz8mA7mbe8HjR93pJ2mKeO8By81o7C1YTl8dT0BzntKBHz
WbmpVtRtR45KyOTfX6Z5F6IRh8vruVrJYkWWRyMO16H7OtA2GnG4Di1qXfbx
or5oxOE6lPX97IljmkYjDteROlrftAe/vQO++/bgXXSkHkZ0e/DhO6KXLe6A
OHAH9qkOoudw/+v6Gh/HSL0NXk/rDv/RtmhSjNTbKMProcfBnT0OxtLaY0PW
HuP+mLn9kxnbP4ml3msu9lrD1+vS6NXOjV6NpUqTulSaxP3RaHJWw8lZsfI9
7o+/robwv1gaGZ06MroE5E9/4RMcFYm2D/yCTdGOw/shaIfi/YpoV8L7PJ9j
/bsHnzlPtKDpc21v8v6Qv2ru2R37SF7n/WFz8d6BlV8SnRzTasURnk8POoXt
eudDks/x/tB+3cMOwyYS1fz1v5pf83wVO2gc/FIO8i3jwHvkIH82DvV4HdrN
avyA/XH03NgGXVtz/80tpTJH4uR1lke6X/vEU8dS8+sa3H9S3ySevkB/1zNU
j8eTSu+8UR3jUSfe63/5vXjv9xY1L16j/aV4suaMeaYm919q5yfbDT8UL6/z
fLoyubR/3TfxdGf7xKZ5PB+mbyw/5MbSePkc72fhF6u8Ezojnt77e0rq7JLu
eCQUGo+EQuORUGg8EgqNR4I3HlreXUwQOcjPG6HPQQngF3flY4LIQVcefpIg
nyuH603H9Xm+iN8iEfFjDvymifBrONCXExFP4RSs7/WEOz6JhcYn0Rsfrf+b
SYjDc8R+VzcJ5wIH8U1JiG9yJK6JzyP6df682KWTpM4zj5/EPyUh/on3S/2X
hPqtjsjZ3sme/NVyNT3Zk7+1ln5wYmuLZE/+avlcIdmTv68uWXX2j3PJtNk+
OngQz/e/szvv2rInWV7n/VLyJpJJVQE3WR5K3kSyfI73G1V2uNeYZFrzcURM
qyIOGVurZc3rmkK6XBLLkwXjot5rF5sir/P8uZGsDi4pNHzhslv9S8MvczxF
4qaaO4inSkE8lQM7dQr8EKhL7k/19gu9bbdI9fYLvX8/nurtF7oO8olU6qIC
ofj6Uh85FfWReT6pMOP/pVJVRcv2NPrjubSC/ZGVVrA/ItIK9ke1tIL9UTTN
648WexN+vHEqjSqf/6jncJ5vXT6Y+Paf29PkddZfpvbblXtgaRqlrD/bpC+v
p01tStfYNjlNPlfcHd/0QuObXmh80wuNb7o3vnoeHU9HnUp3fqV780v0x3RP
H9TzPw/13Xg/9CmMzBB/ZFWsp2czvPX04KYinstAfWGH/lV1iLdlyOusv2pe
ukUZ9KpK8+f94fouRViXgXrFDvhvMkmXEeTf03neEZmkj6n8e3tVXvczmXRe
f8IR+8w5xJfz+Ohz++5MeZ3HR9MDrc0koRF05Hw/F/xfPL5SryuLUrXi4JAq
P1HKyvL0CYlvzSJ97K4BfaNelnyO71/XqyiFehWsn/ZPed66eiGL1i8MXzaM
r3f47b2Lfv05i/qp13k905HIf37cmEW1Lr93vydf79Ma89LW83ldf47lQYXe
j33w8ZQsmtSqaLb5OMarU3bB8WqTXXC8ymd746V5B45lix2J9xex02fL66yv
CU9otpyvWV6cVueSnjneeeUHdQ5JzvHOK8syjz2+pXGOd16Z+vXQLkVK5Xjn
FT3ul3MKyvcjOQXl+5acgvJ9RU5B+T4nx5PvfXQihQF06Oc6v93Nb2IAWV6v
2zHsm1oG0KGPk7649bC8AXTQD4bXH6ff/2j9/UGGIM/HH6MS+v/T3RDk+fjp
wTMhtyxDkMfz7RcnHLmWYAgWw/h/bnjzS8+rTwxvfunp8T/Dm196Xk0xvPml
8zZuG4L8PNqvo+p4KWyCPO6ThiA/j6bbPmQI8vNov8xOQ7Ak9qtwE4j9qiF4
nxtivVaFvaaqu1+ZQEf2uSIm0BG+pJfAK8bj7/K2a2R5JPlB4HXj/dPleXf3
G7Grm4J8P8OSm5zzLTEF+X7WaDu7Kcj60WVFe/u2Kcj300AZWpT/QRtcHMnn
/MsU5PuRvBTUJeD70WrTIVOQ+0frLdtNT38RPdPy9E3RcyxP3/khL2lI+lBL
kMdjyvpJF2b2swR5PKxn93c62dUS5PGo3L/Cz41zLUHe/3/frr5oCeK8PGq9
m2eO+bzczTPH+wvcPHO8P9vNM8f7k908c4d+Wdt71+yrliDLv88V/GYJcv9N
qRzW4/sdlmAJPE+kXfB5mtgFn6eWXfB5KtgFn+dJ23ueofrPFuTraf7yfrYg
X6+b/rMF+Xl0vdRcW7CC48UFuPuz3gdW295+oPeBj2xvP9D7wLu2tx/ofWCs
7e0Hmsf5hi3I3xd+Z1uQv695oA/Ygvx94YO2BYs5BcbFG5+mBdEdF298KhZE
NS4FcGih6/UvdL1uha7nK3S9jEfXE3+z451PJQ/T8c6nksfseOdTfW644njn
B+HldLzzg6wHx1sPcp+5hZ4/t9Dz5xZ6/txCz59b6PkLXa9/oet1K3Q9X6Hr
ZTy6nviBcuEXcuAHyoVfyIEfKBd+IQd+oFz4hRzE1+d6+qLoj7mevij+g1xv
Pur4ywgfkPtNK4w+oCPxDdV9QAd8rT6gI36H4j6gK098heSJr5A88RWSJ75C
8sTnrT9t1l/lA5+hI3rHPJ+nf8j+4vP2F51/cdmHOiGO1KE64kM9KtYHFXHl
Fp8g95ecs/3eeVvO2X7vvC3nbL933pZztt87b8s52++dt7Vdb4jfs+9pu15f
v2ff03a9zn7Pvqftepbfs+9JvpPfs+9pubfSX1D+ve8vKP/e9Hvy70rpsePr
3vIL8v7zS63Hn0o55xfk/Xl7i7em9/vFL8jrY23s0xXf3u0X5P4TO1fAs3eJ
nSvg2bvEzhXw7F1i5wp49i5tp34+ALu1I3bpnADs1NjP1gQK7mcfBwruZzMD
Bfez8QFv/V7cMX/00r8Dgty/KrvWvBgQ5P79Wp9nAoLcv4vrKibpgKDSZ1TY
4o8BQdaXxS4e9OzjYhcPevZxsYsHPfu41IcMIo/UtU8Gke8E+3RGEHZqdz8M
FpQPy4MF5cOCYEH5MDtYUD5MDnryQXi3we/C19PnjktBwSauPRrfD8HnDwe9
87r+3E/4PK+vAv6GcKegv4HHr4C/oZpT0N/A/VHA38D6yv8HA/9UkQ==
       "], {{
         {RGBColor[0.1, 0.1, 0.1], EdgeForm[None], 
          GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnHf8l9P7x++7vZeGdp/7/a6oaEk7JZJQtEt7p4UQokJEVvYmsvf62Vtm
lL1nhEQRyv7+Xs+u1/3IH9f77HOu+7zPuc51rnFKJs0bPLdUkiRlKiVJaYVz
BamAvIaNk+RMwTJBE8HZguWCuxslSR/Bvo2iDul7BH/XSpLzBSsEfwrOFZwn
+MshZU1V/xz31dj9nSVo4HHOEGSq9381k+ShmpGu7/IDD0ySnrOS5PTG0c/9
GvMBwb+qf4HgwlpRlzbUadQ48LpXUKgV/T1cM/LAvW+j6GN/QT9B1i1JLp+Y
JLupblJIkjmC2YIlByTJ+COSpL/q/C+LvFmChxQvKMwE/5dFWCL4N4vyIwox
NuPsJ3hQcECj6OcijdFC0NJzU1Irvvt8h+B7scvB5wHjSPsVLi/6m5u7L+bo
rkbxfyzznOX/YUPPx3LPO//n+7sIR8EswQcOZwveE8x02afdNcakyD99QJJ0
mp0kY5skyRuaqx8nBo4/q69xTSL/f8aJ79uq/PFNouwdtZ8umME4DTVHDVRX
cITi/zSI9FsqmyqYJtimtpPVbpLgF8UnNIm+3nY5ff3WOMonNon/kP/yvkYx
Bw28bu72GiXNHD2q//8xwX39tQa0lpo1jjkm7/GasTZZW+Qf4P+MuT/bc0YZ
8846eqRm/De0e6Jm1Gv2n/YPuP2dGuuVIwIf8Gvi/2Bl1yTpOjHasiYb+X/i
O5p6vIe1loqFWGdF9bP2iOizifvasQdUp5nKmwoeUbx5Ido8mMV6pKxSzyQZ
NlnrsHaSvKT8vZTXUXCz4rsorCV4WfFOhSjbpPhIhSME32cRDhe8ovjehaj3
g+KjClHvpiz6qCm4R2PsK+gruEPQS7CP4BbVqV2I8e51OfjcmEW7GoI7Xbe3
4G5BH/d1q+rUKUT77xQfpnCo4EfFRxcCj41Z4EjZH4pPUzhV8JfiMxROF/yZ
RUjZz4qPUzhW8HsWdacItmcRThb8rfjMQrT/KYu6YwRbsggPF2zOIgQPvvXN
XWItv6r8zoWYL76VfcWe45vf957j2971nrtd8Z6eL76ftc6+YT7oj3Rp9XWk
YJ5gVRZzVl1wveLVFFYVPK94O4VtBS8o3kFhe8HqLELKHld8N4UtBc9lUXdP
wbNZhHsIXsxijdD+mSzy2ggey6JdC/5HxRsrbCS4P4s12ERwh+K7KqwneDSL
uqzLuxVvqLAB6ySLdqTvy6Idfd2VRXl9wdNZjNla8ITiuxcC7ycVb1WI9G2K
1y3E+rhE8VIKU8GVipdXWE5wcRZ50PUrssgrK7hM8TKFmNdLswhpf7XiFRVW
EKzMYl6rCK7KIo9+n8oCL/C4Mwt8+ebbs/hucPoni3OANXSt4pXZi4Ibsvjf
+M+uy6Jvyq7Joryiv2FuIc6hUv7PSb8nmjmzYdDOLVW1Dqtp/Qn2KK9vFlwh
aHOU1tCh2mvgqPTlgssE36v+CNUdLvhoL9GIsdovim+sGnnEf1R8tMJRgpbq
p6f6qaV+zhOP8Jfgz0pxvk83LW6rOn1Vp7bq/FEr8qDjbTXe1YKrBHs6BL/z
1f5v97W5auDOeO/prGk/KdqeeaTqDxK+JaJRrTUfI/Tfqu0uqr9EsFjQSvn3
D9caUP6T5ZQuH/GnysU3k36uXODB+M8r3q58pOuq/WmCUwW13N8iwWMdRQvG
JMnJitd0HnH6vbR84LBJ6ZHVYh5beV4pqyicmwjnl4XzmWKgGgoaCTpofvpr
fupofhYpfrHiuyl+hsrqCxoIni0XOPIfwi/N8BnXQ/UPU/16qn+c/vveg/Wf
iUFrqrH20livl8Qc8018221V4tvqCG5XvF7VSN9UJb6Tb7pF8dpVYy5bee6Y
M9YI89bG39TK6WmmPW8Zp3ecvtL4gvdUl0P78v+7redld/dVEM57C+e1/KdV
Ynxw6qxvPETfWDeLsZ8WLs8IlmteGguaCKqqbaa2r6htb9Ufqvq7qv5S5V+h
/I3KX9FKfJjWw2r/z/zfq/3/sw5In+3+mgr2ay4aqvlspvg5ziMOPznL/M8/
tSKEH4K3mW0+qbHWyRVjYj5be82B9x36rl2rxrwv83/LOmA++I/BY1sWZ8sk
QU/twcPGxv6r4/V4iuCDhsEnzRZ8IpgnOLJh8G/bGwd/9LHSc10Gf/K7y3K8
+Y4j++nsnBltWVOsLfh0+MNfGwdvdZb7g5+6ZPckWTAsSTaUTZKDRC4fETyc
xDfTH3OwRy+tp8nCt07w2vQBrzfbc5Sw/7WX954UcdbMn74H/CF8/poZ3wQf
/LG/b/v+STJA+WX8naUbRpz2F5kX5ltTQSl/cynXY47gJZOG8f1TmgTv+L5p
JPP4kWCO5wve/92GQUdZ23/4vgK/Rz1wgtf+0O3g3emL/wRennakXy0tfkAw
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
QxVjTQ1wHumPKsQaZf2u30PfMDLW76cVoh7tPqwQ5eQ/qXHf1Lh/sIYV/0vx
0sjkdCnrrUvZPlXCPyOz38LHatvf+4DxCpViTbMPW9baaXffwr4K0I6C/Ryg
JUX7Mzyjsd7VWH+WBO7FStHXeuVvV34p4dC0m+jbxBh3rfDpLly6Cd6qHHj1
qhL2b+/bFqeM2jYYFHLeExVfofi3JWF3eadpM3Z/yBEfSMP+jxAbS2z37jLt
b662XQaFvDT3l2AM6sFfwhu+Xjlw6Sr4nkuU1mqZLOSbL1t/8WblwLGn4FHV
Was+fy+JdfCV7RzOtY0tMkLu0j2qxHemql9nUMicR1g/87xlqC9Z5wBtrSao
btpWU1DLNKiqy05yeQ3osP67gyvGOhpmnRi6sR9MF6HnR1eIep8JVguHj4TD
XyVBW/kvWQvU26Vs0Mx3VGej6vyvJOzUfi4V63qxcaEetmvksXexeyOErlzT
VeNMiD7na7wvPPZRHp81O0/wSYVYd8d6zqCX92jc1Rr3N407V/S/6oQ4W+bb
puNz77GvPdejPGcvWA/zvL//aNfN7WgId9iIeL+xZx7QWC9prG0aa06F2GPs
ocftE8K6f7+99sDhsR4eUv1XVX+76m9RvKzWRlmtjYXaj/NGRtu5/ib6ukB1
blb9H0tCb3/Mf/T8hODIPVNNEx0NO+5zg2LJ7aCVk7RuJlaOO8lAl3EXx+8C
/wzubQcKBiRxdznE9bgn9HdZJ+EwYFDI4blDDocXTuIOqqMm0TG94+54mGBw
EnfOEcZpxd5a6+NCpvWs6+pI3XEfHea+njS+tH/Q9wzG3tc44v/Bff1g48f3
sOfZZ9xjRAYSscRJB+HZb1DoDOCP8aNARrrO5ZOTOP8Hm9az1/dP457aWm17
DwodSS/7q9CeO9kEj8E5M6VyyLc4bwiZX+5OBxm/hz2XpG/R2ffe6MD3ac8N
88V9dIpgqmCuxj1F436tcdvo3NkyLHB7y+XTkji/h/rcQYZewTYcyFORLSIT
vdL2bayL35yHjBMeHzkaMjbktcgckUH+4pD221wX2Sd6CGgo9In77kzBEUnI
qoabh3jbeE1P4u49w/Va6lt6DAp90yTL//if3ncf8JTvuB1ttntM5IK/O0Qu
+IdDZE7ct5CpIUtD7n5KEvJd7ovI/pDzbXI58kj0D+9UjjPqB+ctSeIutMTt
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
vCBYtIfyRoYcbXZvjTs18jvtpjkYGnfL0W5Hm719t8v9OAmps8X+GIyzznaK
2O4NsBwZ2dhKrZMLimGzcKviVxTDluH6JM5qzuMDLI/OZcYfW5aHDPJzy/uQ
sX1muV8/y6Zp85Bl1YyJn8o4r5fOvrOCd+6zus58FbaErxu62f+zvdbqvUNi
/ZbRWlowNXifh90344+37eEa8zrMMfU32xeFOZvkcRhjg+Z5/1HxHfi1jPb/
gC/LeK9x7gTcDUh39d3xJvuS3uL0Ix6ffui3+398TW91vfv13705NPbuzb6r
17KcoJrlvPdp/q8vhs7zccXvLIaO9AXFHyqGHvUZxe8rhn71b/M98EEPKf+W
YuhR//SdOH/74TzX+1d1thZD/19Z/FTaPPTt7yj/hWLoJ2srv3Lz0Emyn+EH
Owk+VZ11xdC9f6j4q8XQtX6p+NvF0Oe/qvjjxdB/nttW/8HowG2d8p8phi60
Yl+tk2lh8/6H8n8ohv7/d9/d4TfhQ2+0f1kn+43BVzaxLg361NH+c/CY8Kf3
W5e3t9vRBr7wYeta4EfxAcBXoLS+cXsx7B2q+Q5I2Qbh834xdO8VVOfvYtgy
/Kr874phy/CT4l8Vwx7hB8U/L4adwkbFPy6GjUN13ynpd5vlPbnua7m/81j7
ADAPL2u+rx0cvCc6DvhU4n1FbydMibV5iv2ufjS92eL0Gfa72mpaSfiz6d2Z
gmV1gnZ08F3hNPtm0R7awTxStsx3X/q6xXIi1uhHvltDCxu4P8b83HfxXN4/
3/f8z3xfp6y1cP/ddP4T09YjTUfmOg0N26te4HG39dy5DqeB5yPX8aDz4W0J
eHr4d+qiz4R/x7b8bJcdZ3t/5vd+64qauN9lnl/yznGb3XhPonno29so3rx5
6PwLijdsHrp67NabePy9ld+uedgUoI9vZFy4ezxkHV531enUPOwLqiternnY
aLRXvFXzsB2or3jN5mFT0ETxus1D/48sFLsQbD3gz7BBg2/mLgpPjYwOnxvu
59yJ8SXiPswdGv8cZBbIIfBDIo87Pf455NEGHyPa0Sb3/0EegK8PMgva46vD
vZd7MLaV2Hlh74VNPTZUl1s2+tN/ZKVb/iP33fwfOS7hD5arIiNGztrafVxm
ue8P/5ENb3K9fawjRM6LPxJyDXDCxwhZCbjm7zpx1+c9KWQ0+ftShPk7T4TU
w+eJb6Uv3oWiHXz67v4+bNjwbUKewrzgp8QcIIPBT4m63Jl4PwsZEOPhz0Q5
OPGOFfOdv2tFmL/FRUgb/Me4v3Gf470B7pDcBfEtI480flGMQ71LOohGjgkZ
1kmeP2TqjdqL/z08ZOjYvmFTg20NNmXYlmE/jj0ctj2UYfeGnVJuB0eIvR42
dNguUcb/gc0f9n38P5STxkYNOz/6xd6OcWiDrTX26Ni/I7tea10Ccvat/5G7
/+y1kuszKEPvgf4D3Qh23f9zXyvcH3L9ZS6nDXrst60z4H/CHhGckJ+/bv0F
ttXYDWLLiG0tdn/Y/2F/i61abk/9qcvQLaBjQPcy13Vpv9BznOscvnW93PaR
sZFVvmkdBHa5XyZhT4bud53tqtGjYKODXgWb56+SnXbi690GO+qvXZbbbYPr
8caLsvnumzJ8F7mncf9DlneH5Zv4MSKn4J63i/debve92HuL96i4D3MP5l2q
1OkjnceduLb38JL4u3fMC/Na2nPHvPK+VeL2t1s33st4sG/5r7B9Zt2wHj/V
Wu09JvJ38z6jDFv8C/yf32w9fDfLanu5r1utF+lhvUg3p5t73dCe9x2RuYAT
b3ch70AeU8X/cW6ffnyy0259QbLTDv04/yflPNf8DzWSoFnsuQouz+2vj3E9
3oxkHMYu63astapeN4ydv2GXv2lHmL9RRwiupTyvzHUZ98FcV/f4ue38Qveb
26yDXwvP8YXx+TvmMvdpIET/hXz3Zs9f7uOKDCD3cSWN/yp5yHdr+f2pm/3u
1C3+H/BnRb5AG3xWqYvMNfdxpQx59G2W4fPmIHJVZGn1/L4V/y1+t6xT1jFv
7VHO2sWnlP6gv7xhh3wWGTDvGyIXpi/etyOPdP5GHvXwrUVOAR74ACO/II2/
L3sF+QpvCCL/4v/A54QzjLOrjkPWPX4nS12Gvwc0C3qGH8gyp0s8r+gXd3U5
bfBTQT8LbWvmcvSjDZ1He96Rgt4jY8t9mMEVf2VwJE0f6Hqhj/n7hsjz8MlA
97pD/1uIPL4n99OgrLHL6QMZDzIJeIhcd5vrcrd7DOSM+FjiH4l8rZ3T1zkP
v0zkffhe4i+40nmkn+moc25s6BmQm+DTiP8ispIeTt/hPHwTb3Af+BoiU+nu
euhDeIuO99ZOdcjbYqc55C01ZDb4Q+LviCyni9PImzo7vcp9k77FdRkD/QF2
GegZkSH1FxyYhSyJcEAWskLeOcCvFHko7yrxjhDyu12dXuY83g5CPso7SbxT
dJXb4be61PjS5kzX5Q0lZEYHeOyrXZe5RvaHjyX+lHd6nvCnfNh4HZSFjKmf
2yNz2t9pZFT7OX2P+8Dv8y73Qb/3Oo963/ttPGT86Dyw72Ne0HswN+he0V+h
+0UfusAh+tzjHaLzRQ6I7BZZLTJCbGqQ557gcuz90P9gK4G+8hF/B7Ja9EP4
KVJ2outiQ4jOCftB7AzRdcHnoms+xiE6aPRn2B7ytuHJrkt6sfN4O3Gh+6Ov
Jc5jbR3rPvg2dD7YS/L96KPAEV859FGE2JshB0U/jI4SuSn2gKSRjZKHbhc9
Eu8d0hdyWPKwZULPxPt2lKFDYF7Rj6NDIKQv5Mr4zOHLiW6Kd7BowzzhP4T/
FHJnypkvZNL4zNEGWS/jMO+sX/yE8FdibaFLIb1Dr1YS/TLv9Ed71hR1GWOT
10L+phfhEvvGn+a3zPBTvD4J/Qz+t/htwFdi94PtEXZA+M7CR+a+toTwmPg7
3pSET017t4NXxfTgardp5zzSHT0OY+S+kYyN3hqdN3psdN5rnEbv/ZrT2PRg
e4SND7ZQDxm/zh5/VbLTx5J+sYPBbga7mAlJ2A/RF/6ZNxtv/GtvTcI/BN9H
fDjwuZjhdtjIYC/zvvvinVb0nZxJ0H5sULCR6eV2t/vc+MtluQ0NdLmbx2Hs
nq6LP0mfJPw78CXZPwn/ptwXkHCH/04Svh+U9XA78D7A/w9lvd0H37BvEv4i
9NvXfZCemISdFnMxKQl7LNKTk7B9IY1eizfteI8OfVLRafRLBafRLfFmHm/l
neeQt+AucjveoONtWvQD6EXOdzntedcWPQnziH4G/3l81tHb7O70Fuu/T/Pb
Aac4jT4NWgtdRncFbeY9usvdB/735zgP/C42LrzteYlDxmD9oYfk7oTd2/PJ
Tjs4wmeTsKHAlgI7C2wpXnYaWzBswnLbsTc9d9hhve2yUW6HPeB0ryPKxniN
0xd2dtjbYSeIvd1TTg9yHnaCI90HdnzYqz2ThP3aCOeBNzzg315zQ4079bB9
wwaOfTLY7RgDuz3sC9lLAz0Oae7lyCTwrcFP4i3jzP0ev2tkFtiscH7lbxgQ
5u8cEHLW81YB5zJnN28WcD6TxhaQM4v2nCXomzhbsN+lHfXQGyBXQqaEbzxn
Wv7OASHnH+8ZwGPkb0UQwq/kbxxQlr9xQJo3DuAdSPM+AniRxoaS8xOc8NWn
b9LItOZYrsWZw9mTn0uEnEs57wIvAy+w1Ol8P+T741yvx8x7gLKcBzrF+2GF
y+AnTndfnLGctZzJnJ8nOp2f05zbtd0HZyBnIecrZ+MuzgNv7JKZG/i8Gsad
epztnPH8B9XcjjFOtc4DHUrOH8Av8NYGPCP8DG9s0B9pfMvhTfifPvXZk59X
hJxXn/nMo+wLn3P5eUVIGTYC8D7wPBt9vuZnJiFn3Zc+U2nPeQmfwfn5rc9C
znZoDzQIGsa+v9hp9HfcgbjXfO9znTGauy50Dn4FnoZ+N5hvIL3e5zRj5zwE
ZU3930KHfjV/AO/wm89v0j9Z57X0PzLcMyyfPdVlv1rueqZlvqe4rGi8WB9v
aD1OnRJ1fnEftOEtDOaM/+Bj8wfM42bzfPDFW83rwONsMz8HfvA08EnMxS/m
e6j3s/kheJkt5m/oK+dvSMNT0nfOYxLS13TPMffEJp4b+GhoNrQbfhnbOmzs
cj8twrvTnT5ayFRzHy3SfVxOGhthZL7Ia/FBRH6PnB/fOOSv6DvuEmE9vRC+
gNjuPeA2vdw3ct3KYko+Gh06FnyxkAEjm8UXC9kwsmJ8v25zuqfbkV6l/hcW
wlf4WsWPKoRPLTaCD3o8fNrQ8+Q+fITo3fBzO89l+JChS0Hvg98j+ofcD5IQ
vQN+k9e4LPc3o03ud4eeaA/XRTeBj+W1blNwOTomfO3wE8b3Dn/SM51uYrzw
Jc1cF/waOw+9YRfPDXLsRs6jPX6D+J3iR9jB/wNj1/c4lNVzOb59+MCt8v/U
2f2R3sv/G/9l/u4b78Bxr52Z7dS9z/D64k6CLQP0K7cjIT3J7Xh3E/sR7Eiw
T8n9RfEfxTYFWxZsVRKXk0b+Th7y+IZep/ldkDC/LxJCo5dZP9zQe7iudcdn
WD/cwHuePPTKE40X76tyV2ccvq2x9wd7o6JpLfeYDtrvZaeEbju3cc9t3rfb
9hG77t/sb4Wt9Z/WB3bz+mVNY3Nf1zSdN2MoZ81jX/2HfVqgH9ARaDB0nHMX
uo69DrY+2O/k9zTubWf6u8FtnN+O5T2qCsadeuVcF53GWJfznmxZ59Fvafed
2+bM83/WxmsZPd0005K3/N8gj0KGtalZvPvF+1+P+W2t/F29gX57ivf5KOdN
Md5CgjeER3zC5bxRBW1FPoecjnemuLNzzx8pRnzzjHgb6ym/fcUbWBubRX+8
Wdbd7wHzZueGZvFWGG+K8aYf75bxbhg2emtsn/GM3xjjrbF5YtZPnBr594lB
v2l65D/tcagHHUemgGwAuv5/TvMe8GV+t6uh7RVyO4h77E/SwPYKlHFeYoOD
7Q1r8Q7btR/sPO7uub0m9jY36nJy6+To5yCX57IKQmQqrBNkE8geSvvdYXDq
Z3yRYeTyF/Du5nnirVP4LeQXyELgt+52Gv7rHqf3dx+M0dfjUNbVfdzk939v
9BvLd4iRvWpezH8bv/P1jN86e9LvP+b2lB0ML9TdqSN90fYW0I8efmOZNxQf
9xuR+bt1j/ktsaf8X7XTJa3GjBjrOvdLf99YF52/S3ei9cXYLa6y/pv38B7z
mv3a9qTHW7d5nNPrbVtKeqX73sv670625xzs/w2bKGhMd78Lzb7s4nmizUu2
R6HNK3V32oS+alufTn5z+Xq/r7zK6W26GDecGnYSvPHIumat99GF/PI5Uf+e
g0RO50Qfr/j9aOKv2baCtlXxm5wXb6W9ZHuNw/0fjHL6db9D3dXvUnc2Li+7
LvYu/Me8b0Y/a2zHMf4/tkqkZ5pOwPMd5rnBbgw+Dluyx03j0cX9apqOPu5n
0/hfnF7m8l9M19BJfmF6vc3t4U+5zz5r2oauEJ0ivBTy7zWm8dvd5nzTG/QE
8O/oLtFlcifY4jR3iZ+c5g6BPDu36yTMbT9/d79LjTttznPftBnn8ZG9w9+9
bpzg4ZDJI2+H5qIzze2sCZHPQ48/cRlnLTQYeTs0+1OX5baDyLc5P5HtQ6Nn
uw/Sk12e2zASIgeHZ0TOj2z/cOOCzD+3xwW/ia4L3tx70Guj4z7Kcwwe8PHP
+z+Al13t9Gj3xxi5LThluX05fS1wf+jOObvW+z9GRoA8IpcZEHKXQDZxmcuQ
JSNTxg6Vc+Vyl+Xvj/O2KvdPZNa5XJwQWTtnzFVuz50KuTwy471cjgwepcJF
fqeVN9Uv8ZuN3E9Yy6zjGtp3t8yOPcc5f5t95bibXet+uatd53Rbj8PYHT0O
ZbktLOcEd3pk+sj7//W7s3wP90n04ei4uS+iB8f+gLvmjy7jbrnRZSe6nLnm
3vm9y47zfDPX8AjsJ/bMIvdNPd53bGd8uduxtzifkBGgV0D2j8zgNqd7Gl/S
yBfu9Dd0c110C9z50Svk+oQb/d/Us+0g52JX16Vea/Mg2D7l729CU5GjwKNQ
jgymvfl05C+8Vcf7ds8lwdPDyyP/42073plDXtPO/D7yoY7mnZErwQeTRnYD
T88YyH46mK9HTsf9BP4O/Tnv3PG+HXpu7h/4OyOL4p7DfQW9Pm/w8fYeskjw
Ag/039xVuBsht6Iudx104/RBGfIk+uZ7kAlSzthv+01B+E3kWPD03L2wF+Dt
D96VQc/Nmyy8uZIepv1UiHfp0EXxDh1v3aGb4m070sgvuRdxZ6qo+psKUedv
3a0+KcT7djWV/0sh2lRVfEsh2qLn5x7G95dV/jeFeN+Od0N4x4R3RJCl8V4I
73Igd+vkOwcyUOaS+19d31Fog9y5s+8r2FUs8Lchg+YuRBnyXP5P8KntcXgj
pK5w2F6IMmwUmGPurMiOufdy30U+zTsr+EtU8Jzxxkz+Hlb+PhZh/iYQIfc5
5IO8i8P3IPPmLRf6QsZHOXc45Nq8l0IZ8mbwy9/fIqQMmR/zwXslyEF5R4Z3
YpADkgceyApZ44yHHJq7IvfCyq7LvCBXJo97IbakJ7ovZM3kcddENs1/yz0Y
m9OFrgcevO3CmzT5O5K8K/lsEvuGPYD9B29BzvE3LHEb5KnIBfL3ogiRH5R1
H6x75PfMN/WQZVLO3kCWj28f/weycu6r3GWRnXNPJo1svY7/25rGkfd1yvu/
Alfk/bTL32qql+58I6qu1yDyd+aggf8n+sjf2jnJc9FSa6ZKMfbbDv1EGuts
u9b/e4V4k3KW6owsxrxhR8N7l7xhia0K+5t3NLGtIQ+60F/12xVjHvoq3roY
9Q5SvFMx5qir4iXFmF9sjrgf8/7TPOWPKQZuieee8bDxARfexURvzR5lr12t
+ucWQyZwvuKLinHnX6D4lGJ88+WKLyuGzOFCxU8phnxgvuITijEXFyu+tBiy
A+yH2PeM10v5zYvxjecovrAYexXdD+sd2jFQ+V2L8b/cp3lbXoj3n25U/iXF
kGWMV3xAMdbtO6Zh3IlvVf0lhXjvij2B3Su2suyxS51mD1zmdP7WD7KY/B1S
5OOj1f9+xaAVd7XT/B8e/WPfxDxBA4epzj7F2POl/L8x/9gDMT60DDsq5pj3
Pqer/tBi7KnJig8qxt7DFo9yxj5M+T2KsS7bK75rMf4v7Jv4P3nfK38blDn9
Iom5QT621m8SIEvA9og88FijObmpEO9vveU3caH7zyr/ykK8L/iI4hcWgs6v
Vfz2QozVSjjUKMY6fEL5lxbiPDhL+ccXg8a+Yd995BlfJvHeFjhhD8V7WPTf
TPVLFePcaqj4P4U4v4qKly/G2bQ+ifFpjx0V7Rhrq8Z9sxDzuEnxNQW/F6v4
2kLMHTZf4Ms3vqj8lYUY+33FHyzEfsjfHIT2vaX8ewoxp+s8Z3zDnsJnl2Ls
vYWKzygGvThN8SOLplmKzy4G7cLOjDEZ60H1eX4h8P9O8ZcLsZbOUP1jinGu
fKn8pwuhm+mk/EbF2JOfKP+xQsi2Nii+uhA6mv8HjwN+pA==
             "],
             VertexColors->None], PolygonBox[CompressedData["
1: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
vYE=
             "],
             VertexColors->None]}]}, 
         {RGBColor[
          0.2241733962264151, 0.24550325471698112`, 0.2671391981132075], 
          EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1Vn1M1WUUfigjSORDMzHAYbXRbsDwI7iiF4UbKCQU+Il8a17AC1grdTnt
j1pZf6TJpitn2rSs/OCqf6WWlkmZ1TBdJltrRbjhVv3XXDKt5/Gc/nh33997
z/u+533Oc55zpq5cW9dzF4DbHHdzrJ8BvMhRNw54fS7wTwnw8URgzzKgKxdI
TgBGubb1GVsPhICOVcCS+4FNjcAv04Fnk4DrDwDFpVyfBJyuAAY7gQ8ygLfL
gB0R7k8HZpYDFzuAdQ8C33I+jeMFzv/lPW8sB7bwrhu8q5NjDu/6KQCMLAX+
iAei9G2QPsTznsR5wJq5NteavjXfxXt2875HeNcu/r7LsY3zA6vNP/n2Kv36
rMJ8W9YOfB0GbtLmL9rspv+f0Cab+0ojds6xVqB8FjA2DWho4Z4i4pACLMgH
Ps0DxicCZ/ibUQ9M4Dw1CPxKu72pQIxvOuU2xzk/nWc264j3ELGrJeav0J8T
9Of9DIvD7CaLxUni/GjIcB6lb0fo2+f07d6Ztl97n15M7HKAe8bwziq+rQv4
cAqQ1MDvAqB3rGFwI2I49DUD1YXACvrfS19u5RrmoflAmGNiJpBG/0tbzf+p
tH2Yo4T2Jfz/506zifF9V4nDhFSLf75z4ApxSm0j1sQqjr696b4N0/9e+l9O
/6voS16ZveUs8W9+AuieDGTx/62rzWYi37GY75nNt2RyfYrvDTBWf0csXsnV
5FIPOZfNmPGchTxnFc85yPt/LwaKxhNH+rOUYzP9WU9MuqYZJivJwQLnnmJy
xuMSfQz4MWB8O0PeFfH7O85Da/h2x0d5oDxRLizm2ada7XxxQfFWrEfoVz/9
O5Ft8UycaTGd1WTxU+wm1RuHZH+ItrVryVPaZxHvlxmnUIpxqjrffOumTf9C
IIE2z9UAX/n5wizzf2y5frDazrnA3861ZjOabvknDogv2zwuTeTI3hXkGTGp
YzyXtlhM67neWmDrtVr3WA8R1yBH4XjDaYPn5lVi8w4x2kx8Xms23ogzyl1h
Kpti7pvjcREXstxncXyM64lyMeD5KN/1Tvl/hBjPI9aJaXaGYqxzNjIWna4D
0oONrg85IdMpnSl/57eZz/GVxC/K9SzqBs/b4FxdV2zc1Vy8W+7cW1JlXNRc
HE9oNJ5Lz3aUGaa5XJ/u/O9YQL0jDteJw0u8561KuyvK9fuitr4zYtqkWIhT
Jc6rIH+LuDct03BMzbS58lL8k81Ah+mmeHuJ6zPmm90tnvk4cYsj/7fnmC4o
vnlcW95u8S/mvKXdbJSX250D4kKc2x8ttfxUbgob4SJMdvYY/8Q96Wu2a+wl
xi3iWq3cGnLNSQ6ajkhD7nC2x/Yqn94LWE7tD1iOaS6+ZxYa51VDbq82rY5x
PstrykNlpu+69xzPPO+5sE88iphuiwtR58NwgeW8/BlH3ytcK1RnpH3SvUFq
xhyO88SkP2w6Ig0p4Vp6h62LmznOJeWockz5dTlg9UnclvZ8Gba9TZxf5LyL
8x/CpnHSt6Rq0yz5IP3rcz2XTlzwXP6i3fZrr/JbOqJ15fRAj90rLRx2nRSu
5xwHcVFxVu6IN6onqnExxmFeq9WvQzx/tr9XWh5y7qnO93it17sH3aaG8dnj
8erOtZ5ANot4zll/r/7f7zbKg02eI4pzjcdXtv1ur97hpOOp2B7wWKsuPeW1
qabQapXmqqXJziXpUMw1KsQ3HQqaJhwO2rfm0uM61/xrBaZx0jHpWWqDzZU3
Vzotd3RGn58jzNI8944VWr1XrVctHXZui+NJzivpxBbXB+XZN2GLgeLf0G5x
rGoz7ZNeSWvr3Z/p5dYPqRdKqDS9kFas6rD/tP4nMTjqWqp+4Xmv+6O51jOJ
w9KYeNcZcUq9gnilHIp57qjOp3h/NZlvGnGcVdt1h85X77PP+587euk6r7xJ
ct6q9+krNEzUu6mOSotukhe/OX+OB61nEt9Ue9PaLBbaN9Jse5UrizzXxMcS
55tyURzVvChsuia9Uv8lHutM6Vyxa516oqOeR6pFlz0f1WN+7xgqDgOej3Hd
7JGetB5Jta7W65q4f9O5rd7wtPeHQ1W2R/aqP4edJ9Kena5pqgm5rv/i1zWP
r3pY6aO0UdiPerzEtSPO1T2l1ncKc/VTde6PsOx2PIcbrUdX//BRm9VgxUUx
rPE4nqywPlL81fvUC8pn5ZPiLZv/AE9EBmQ=
             "],
             VertexColors->None], PolygonBox[CompressedData["
1:eJwtmnmgjtXaxh+VMrMVMst+UWxz5iFsZAh771DGjCGy3x1lLBo0l6E4UZRU
9NFAaVInzpcGnYhCJTpx6kTj1/ChQ+f8ft3vH9d+rv28z7TWutc9XGtdMKaw
YOoZSZIc489ZHFPpJGkzIElag2z4/U2TZOTQJBkB7oPX51w7fmsL6sHf75wk
Z4xLkmJgB7xkUZLUzkuSWqAEvO9VSdKzTZL0AH3gT01Ikubdk6QZeBKew3E1
x8dAI/g73Lc6m//B2/DfBiVJi4bcA36FZ6WS5ML8JGkAKsBvvjRJRl2TJFeB
+fA7uvLsq5OkKbgdXpZr6nFtCpSBD+idJK9PTpItoD/8/3skyfcTk+Q78Bv8
Odq1inatBM/C3+Ab/sK3LAOvw1u3px2j6aOKcPAq5x7gtyXgFfiZvKMG76oO
zoC/emGS1OS7a4BX4CuGc22LJFkMlsP/xj0Pc+8KsA1ecmSSHLg4ST4DJeCn
JkUbbdu/4Rv4pof5thVgPfz6gUnyXoMkeRdMh89tnCTpK5OkEMyB7+Z7f+B7
vwcfwrty30Duuxx0gbeekiT76Ie9oBV8BP14E++6EQyH16QNLWhLc1AD/sAY
7KBjktwLlsDP5vy/+PavQXH4C4P5nbG6F2yCt+Qdl/KunqAF/AyuOcy1X4Ji
PpdndueYC5rBd9KO2bRjFvgAvpj75nPfPLAIvnVYkhxqniQHwZvws7G73djd
h6A4/Cf6edlFSbIU/AjfRRs29UqSjWAnvA7PacVzLga14T8y7icY9+PgB/g+
2r0HVKhBH4D6fFN7vq0dqAf/hDHazLe/CPbDP6ffOtBv7cEB+Eece57fngN7
nAPccwH31gHnwBtjl7dil7eAHHitlmET2kJN+NUdsC36tTUYDx/CvLuLeXcn
uBJeiud8x7O/BSXhHbnvE/piP+gAX0y/v0S/bwaL4B9fliRPTE2SNeAj+DLa
vYB23waWwnP4pkt4TmfQCL5vfMwh585e+GnacJB3fQ5Owbvyzav47ZUqzKnz
GTOe053n5IKm8CP8XiE3ScqDw/CxOfTrFdgfGAP/vWfYtLZ8Ej6K9/blvX3A
VfCZPGcCz7kazICX49xPvPtHUBa+i29YD/8fsBP+E9edzbE4+BHeg+cM5rpB
oHvGtmyjbdPG2nO8zHc6phnf4Bg5NvqIQRzHcRwLBsLP8154Q3AuvEw3+o92
3QZKw//Oe5/iW54E7+sfuKY31/YCrTJjr0/QF2gDPjtPP5SKd0yhjcP47qFg
Mrw9xwEc+4N26fhWn+mz/Gbb1sUxS0Ube2fmkHPHd17bJUmqMm7ngyldom+H
cX5ofvSx77bP7Wu/4Vv8wk78wgfgGHwa7x3De0eD6+AVue5X2vYLyIJP5dwI
fhsOroWfgY+vRLvPA8XgBVzTied2BPnwL/BjZfFjZcChi+NbHCPHxm8aPJa+
64SNgkFjw3fbx/atPlxfrw/Xd+vz7+CdN/Du68Htxqn88FH6plbwxg3DBzj3
c+DzuaaQa6fqQwZE3/mNfpt92DQ/xtixbQJf2jpilrHqQfhB2rWFtr/mHID3
B51oZ0fQD16hP7GqMEkeBeXha3jHEt61GDwOf5k40we/0Bu8NDl8aVXedX4q
fGrVzDf4bs+VYt58QbsPgZLwXczbsv2wizrYGRiQsWFttz98Pz6hRDPsF+wb
Gr6qrnaXCp/lWHiP1zom9/JNc/i22eAe+EmO5WlHOXAC/gc4F14RnIbnTo6Y
aazsBq/Cc07QF8dBZfgy4tgq/M5KsLRFxL4/+O10dsTAo8z74cz7YeAbeKUC
xrIe4wvOg9/IN0zR9sHcAeGL9Ln6Wn3SWs4t01eBp+A30y8lsI1zwHz4LZwr
4rc0uHlAzFVzBHMD5+xvnC9lXAW/wmdiFxWIDeXBDHjPITy7CWMNesBL0MaJ
xIqj+P5BNcNXf8xc+mh8+Gx97RbizmvDwuduIcZuItaeW5I+A02IQ09p06Ax
vDPPe4bnbQCd4Pf04X9ixQZwN7w639Sc724GqsGf5r6W3NcCrHM+1CcGXI7v
B03rx7N2EMfeuyaeuZHzb3L+r+B5+CMXRc5krvQwvBzPzObZdUFZeAnm2TFi
y1FwTqfIRYwhf8aOFhFbu8K7DI8Yuw8//Rp++onqERMr84wc+xlUgr8yIua4
c/tl+En6cTH9uAicgDdpxHsZ9zKgMfwk7ToOOlairWB3TtiItvEhfAPXPABf
AtbDL+MdY3jXaNAXvoB+G0S/daiFbYAyzNFp+JbrQGn4yeERU42lJ+DtyCFS
5BLZoC38HXKE45eQ94G34Smu+4PrToNseEdytP1cuw90gBfnndUdG3CW+Quo
bNtBMe0SO1yGHS4kFt4PNtMHnemLTuBF+OgO4WP1raPgPchzNzGvN4Lu8D0j
ow1++274pfidxfBFoCd8FzlxGfKS0mAnPAe7W8dcXwsawbM4v4fzu0EF+NOT
IsYaW9fBD+ATnuXaZ8Bn8B58a91uEbuN4Uew3+3Y71vgcOPoe2O2sdoxuIK8
6EaeOxcMhhcbGmPs2Cbwd7nva+77CrwDn891Q7juSjAPXgkbvBFbnAvOuyhy
y9+N/ZMix3QuVcHOKjePOWXb7RP7wj7YPzJ8sr54H/xqxqw3Y9cLjIf3NHYy
FkNAD3jN5pEjmhvWgHfnutFcNwrkwtdiU6VoV0nwVKPom+Zc22xY9JG1Rjdy
p66Do+bQdy3k2vuvCB+2Dvu7HftbANbC32LevcS82wz+F778WuZhX/I/8BC8
FN9Um2+rBUrC5+BHzsGPnA1mwx8hbpQmbpQCDxdGrm4OaO5nzr6UefQf+voP
fRS8Is9owLPqgyzzV+ZxaeZxKfADPIt7Pm3HnMqif7OirY1oZ8NG0ebivHcm
750BzoIv4rndeW4uWNgkcmV9vr7enLk37xjBu4aDXunILZ3TzmVzzIqZMXJs
suAzRsY5+Q3wHO7patzVZ8ArEs+6kYd2BVnwzfTTKvppJXgRnss1V3DtYNBN
zhzqxlzqCgaPiFiqT9WXGlOdC8ZAY59z4m3qzNXMm8fAdnjvSVHjWdv1mhS1
SWe+u9PgqFH0dcYwY5c+73pseB62fBOYDq/XK2oIa4cUfGSrqNGszUbAa+Mn
WuBXmoNa8BPMu7W85ylwHD67W8QsY9Us+Hfct5G+ebo831A+bM2c3Vxdm2tN
m/vS9j6glbUT/VSFfqoMel4WvqWAfsgfET7GWGhNYS1hTJyCby0EU8HkztFW
cyJzIdtc1DN8hL4h3TNs3znjXHEO+Owt+MHXWsY7HromaiJrIWPihXxTJ76t
I2iQjrYW8pypPaPNq7HDy4lbBeCxTmG7ZzM2xYeGDVvbHMK2D3aIGqdMs/BR
+qbSzcKX28f2rT69M+8o4F35oBN8W8uwCW1hK7wGdpwmzy0E1eFrGPcdjPt7
4HF4ZWzqQmyrAajUN2JnHcaxdq+Ioc5tfYK+wDm+kXl4rnkveL5/aAvagGOv
xrCHMW5NXGgFdg+MWmAe/X5Tt6gJSjIm7Ryfsnx32XiXNbW1tO/U92kj2oY+
0L42Zhmr7HNrPX2svtWar+so5mRb+oa5/GgFfBRxowtx4xKwITfmhjHY2Osc
GYgfaoQfagguvzxqr334rb05UYNl0w9Z9EMFUBdeE58zm/xyFqgB/4Y+r9k6
bFMb1XdY01vL60Mca+eUc8kxN/czhho7zQGtpfvyW59JUVMb+43pxnJzgPOJ
Ay/Qd5tAlUGhLWkDjr0ak7HAGGdsMyaMaxU+RV8yFp7bJmKksbEb/M6OjJua
BLijY9Qa3uO11hz9sLkqQyI3M0f7hRjwN2LBNvAz/Dhj1ph+/Pf5EcNvpB/q
0A+1wdx+YbtqYGpff9rw8LBBbc+cQa3GmG+s/1OzaRY1u7W6OflpnrMBO1oP
ThVG3zgHnXv2UW1y4CrkwpVBrYLwldbU1tL6THN5axxrG3N6cxM1JbUkc5Rf
OPc7v50EP1tn8pySPKcEKAY/wbn/mJOD4/DT4Cx+OxOcSoX2pk1pS2pw5qbO
GeeKOep07K8Q+5sKpsGnc5zFcSaY1jZyGTU9tTxzGnN1NSq1KXP2T2ljW/xH
Fr7jSXLIc/imMry7NDgbXo1jRY5ZoCr8ee7Zzr1vgefgNbDF2/UDGX9pbWVN
YC1gjXUPWAVfCe5Oh3ZkDmfupoZ0XzpqMmuxe+Hf0+bfrGnVUVJRuznnnevW
cEc5939qDuCbVMx1NTa1Nee8tac1lLWTNWgF4u3AdhFrjbmrObeZ314Ej6Uj
dzKHM3czh3qRc+/y2zvghXTkdmqgap/meE/QBzvpiw/AmoKoVZwzzhVrlpe5
533u3QFeSkctp0amNmZNp9aqD9T3qbnewRge7hO5sjmztY45hbmENY+5ozmb
uZo5pL7BHMfcRh9hLHXOOdeMqWpxakhqR2py5j7m2ObW5kDGQmsSaxFj4l1c
84iaJbgzHbWaNby1uzXbP+nj7x0LcATeBbuq0DZ8nT5Prdgc19xWzfg9+uVR
+mUVeBf+Gs/YxbN2glfT8VsXzl9SL64xtzCGGjvNMbKo2xtQC9a3doffBspZ
G4Fb4R/gs3bxrunVGF+wizr2O679FuzMjtrBmGOssYbYozbFbz+A3fDt4DD8
S/AWfGt2aAhqB29mh21rA469Nq52pOat1q2GtG1AzAFtfyv8PbVVfvsKvJsd
2o4+TN+lxvN3zh3lt2/A+9lR2+kT9YXWeLVp08X81hLUglcGOfBGoFJRxAZz
HnMdY0Q259rxW1tQtyi0NjUutS01N3NFawZrBXNGc39raGtnawB9wxnMh2Lt
wkecbhs+RN9xCl6nPTkAc6Y1qA2vzjua8eymoFpRaLOuQbj2oEarlqrmp9an
pmrubw1n7WYNsIr3fMGzD4GV7SJ3syaxFjGHm80zF3HvQjALPg8shT8IboLv
V9uC/wz2ZUcs2U9usq9DxBS1ajVQtU81a7XQE/DjeaGJmnuY05vLm4NM4plz
+W0OmAgfD2b7bjAOPhrcAL8ejIJPBvPh88A1RZEbqbGrrZsjqT2pOas1q0EZ
u6xprGWMYSO55zp+KwIjikKbVoNWe1ajnsG5e+B3gxvg/6SfVtNPj4Ejo6IW
UDNUK7QmKOSaBVx7G5gKnw7uhN8BphVFregag2sL1ozmWlnO2VGRc1lrq+Gr
3Wdn1ibMkc2NXaMYzLhew7hOAoPgbZijzZmrzUBr4x/oAe8OusD/gU84po6k
lpiK2kcNQu3BGqgF1zTi2oagOXzXZVFjWFvshOdz3QSuuxrkwV/mGdt41lbw
Evx18DZ8O9iSilxbzVyt3Jx7O/cc4N7PjEnwZviHsRPDN+gj1Aas8aztqmW0
UTVUtVM1UrVwa35rfTVxtQM1BbUENQRrQzUatRlrRGtn1yRci7CGHpIOjVht
+Ep4R9rYmra2Ah0yvq4DaJ/xeWo91ojWhmo+m2yjbQMbU5HbqmGoXZjj/qnV
NInaT83Guemcci45R611XSNybciad/noWFNyLemh0bH2oaalluUaiGtrrom4
FuIa2+e882ve/RU44PoJOAz/Uu0yFdrzX3jOstGhQT/DuZcdG7AhFVqTGpna
mJrT862jhjIXMCd4n2v2cu3HYEcq1jZWcN3yAbHG8THnDvHbQfBRKmy/Pe9q
NzrmgFq3aw6uNah5j2Sc2jBOxaoyL8CH3PMZ934Kdmk7XLOPa/eCrfC3Ofeh
v2lD8Dbk+Z9k6iVznhRjVINxqe7YwP/KPXu4dzd4Ix3an2tSrkWpAe7g+A+O
X+j70xGbzCHNHY1R23jH+7ZVG05FLaBmrFZsTaAtaCPahjahrTjHnFvajLnF
D/DvCyLHUBtXQ1U7VSNXi1UzVytXk92QjphkLFqfjrVH10hdG3UNUi23As8q
XxCartqHNYa1hRqIc9s56tx0jn/InFrfL7RsNe0Z2THnnes3wF8lL14wKXJF
NcejBRHzjfXfFEQuWg5fU3ZU5KRP8A2v8C0vgzXp0FKsaaxl1FTUTtVo1GbU
UL1XjUBtwGdkZXJac1l9mL6kMe/JKQifUh9cBL8Q1KsXtdKjtGHV1KiZ1vLO
N3j368bydNSaahpqGdac1jrWjNaK1jzGRn2wvtcY6VqlmrRatGuWrtVZg1h7
uGbn2rEamtqZa8h+m9/kt/iN1hZqSGpH1hhqbWrAar9qbq4tuWbjWo1rTLbl
Au6tUy/adBU2szs3bF2b35Ubc8D/p1SNtXE1QLU/18iNfcZMY6UxUFtSo1ab
1qasPR0zx8oaVK1HTUwtTM3HtfVNfMvGAbHGrq835zXX1ef7bc4Z54rf+EUm
hzB3MMY7l6yZrJWcU9ZqrsG49mLN5tqhawquJbiGaG3hmoNrDdYYVTI1h7WG
NZfauTWztbIaumOpzWvrjqlr467huHbjGvmztPl22r4APGOcZB4WMQ/T4FbX
3zjO5TgHTIEv5biA423gQfj8zDX+Ni8/rp0En5iKe0b7LI6FYJTrc/pq3pOA
Y5nYaUwwFhhDp3DdEK67EkzOfIvv8Nl+0wMcb+F4M1gCXw7uhN8BHoIv8lr4
TWBhfqw9qrmotbgGaS7Uglyk+ZjIiaydrJGsjayhjJ3GVGOpMdRvHwEfnoo2
TMyPNVXXUifA7waz4DPBXZm2z+Q4Iz/6YDyYDp8GxvmdHK/3HLgdfp99Zl+5
lpUftZo1hLWDNdv0TB/adz7D2G/OYa5hDuCzHDPHymc+w3EVx5VgQ35oyWqe
ap1qykc4nuB4HByGr+aaJVy72NoRvhLcD78PPJIfWqlrFq5VqJk+zbkV/LYc
rLPGIcatGx17R9xDYi5ijDY2m5OodblHw70Zal6OjW22rY6RezfUSNVG3cNR
Crss0TvWqtTnXCsx5zHXcc3kXxxPcfw3+Bp+CPwK/wUcTEff2+f29YxM3zpG
jo19PCszBvb9zEwuYYw2NptTGKvXwdemImZvAo8bZ21Tfmi5avRq82q69sWT
nH8iP/pkF+eP2LfWcOmoBc35zPWsCfdy7hi/HQUfp2MviRqp2qh7SozN5gDG
fmO0exHcc+JeE/ckmGuYAxj7zTnMRcxBzD3MScw9rEmsRcxBfruaedEt1nJ+
Pz/G1jnjXLkvk0uYE5gLHMzYunPQuafNOxe1eW3dOXkWOXM15m5VcGZRaBVq
EmoRahbmKtbI1sbmLNYi1pTWktYkzj3XkFw7cg5mt48czNyrbvuoNa0xrS2t
Oa0VrUGtPa0ZrV2tEa0NrWGtVa1prWWtWa0drTGtLa0hrdXVVNRS/qzZMz5M
36XPWJDxKfoSfZrap3s+3OuhBqotaAOOvTbhXjL3jLlXzD1ly1Ixh5w7S1OR
O6gJqQWZQ6hdqVGpTalhqRWpaallqRmpPbum4FqCGvQejl9z/MqcKh1z2Tnn
XHNOq42p+aj1nMzYpnPeub46Y4t+k9+iTaqVqamppamZuddNzVut2z1v5nrm
YOZe5nzmYtYQ1g47Mr5Wn6ov1ed+yn0/ct8P4JN0aG9qcmpxanBq/e75cK+H
mr++RZ+iL9HHLCefnJxZjzandG+AawquJbhHwNrIHNvc2hrJXNic1FzUnFgt
yhzJ3EhNajNjvIixXugeJvgmcA/8brARXpgXNaW15NS80ErUDNQK1EyuAUPg
V4JJeaElWMNbu6spuDfMNSnXotwjptalZqVWpebl3okCrsvPiz0ULUFveC9t
vShyAzU0tTNzBNfC3ePl3i7XxMdz3UCuuxyMywvtQI1DbUMNoW5eaDxqOxfk
RW1szW2tbY1sLW6Nbm1uTe7eFeeoc9M9LNbm1uzW6tbortW5J8q9UK7ZOZfd
4+jeRue0tbs1s7WyNbx7H8vByxbFHshr+eYTnWOt2zVv12ZyaEujcbFGo1ag
BmDtr2bgXkr3ELh3wD2V7j1wzc61OvcgNOO67lyXC5rCH7WNjF0RWJUXtY0+
Qt9gjWNubI5qbmqOvCIvcm5z7eXwJ8Bc+BywBv40uBk+H6zLi70c7vlwr4d7
Otxb6Jq9a/XuMXQviHuE3BvknpAL+abO3NdJ24HnF8WYOVZ58P5gjGMC+jn2
4CptThuANwZd4V20raLY6+YeQ/cWuufNvUjuCXMvmHuS3Bvmnjj3wrlHrG1R
7NFxb04bnwUGaTM+syhsVxvXtrVh9y66J9G9iO5h1La0cW1bG5vWkvxieKzl
uKbTnXNDnQOOQVGMtTanrZXN2Lbv9F3auGOljWvbjplrY+7BcO+Fa2TuvXHP
jXtt3IPzHvn3FRMi9rgm4dque6TcG+Ua76+ZnMRcxBjuWDmGjp1j5l5V96S6
F9U9q+4tdQ+re1fdY2rtqqahlmENq9ajxqO2o+bjXhn3BLkXyD0zrp27x9e9
va6hu9fOPTXupXHPndqQGpPakhqRWpOam1qbmpPam5qbWpsanHs1XcN37d49
m46NfWpfOkbmuu7pcy9fkrFNbVzb1kZPZHIacxlzMm1fm9aWnQPmOubM5srm
PGp9arxqu2p+1t7W8Nbu1uAHMjW3tbYaj1qyNbq1uZqyWqg2rS2ribpXzT06
7s1xz5p7fVzzdK3TPT9qrWqoaqdqrtq2Nq+ta+PavnPCueAc0JacA9q+NrV/
bKzhuna7b2z4Rm1aW9ZHOjf0Ac5954hzzTnjXHHOGWvM8cztjDmuFaiRq427
ZqCvt4axdtHnu3fZmGAscA+z2oM5mbmYGoR7sd2j7N5k92QfycRcY605m3vF
3APo3j/3jBmLzdnM1YzJI7tz74SoJa0pzeWMicZCczprKX2OvsaaytpaDU/t
zhrbWGWMMjYZs/4LVA4G9Q==
             "],
             VertexColors->None], 
            PolygonBox[{{15974, 25559, 25558, 15981, 5436}, {25644, 16123, 
             5545, 16120, 25643}},
             VertexColors->None]}]}, 
         {RGBColor[0.33152332075471697`, 0.3656383584905661, 0.389215], 
          EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
340Vju+f5D2v/S7ePynF/P882hlXZNzcnXG+G6vPd80yvxavFg7vcOin5PfF
4b6wA/q5lZYNpL+WzKv4jkTfnXQ/GsOY72TMf402/u/nMHbCe14U2rmU78MV
7r/wi8JaCZOlfjerdP5c2YigeXkj90+YUZVtPMxzo/aNTrHNT/J0I+lL2aeN
4C39acM9tOEr2nAjNOLDvUxrVnpwrc8Huac+wn31ce6qXYYbLyusrHD9wsUK
77qE79GAoZVc1nCyZTPdR3UH1p30JPygfV/jaZ+F5k5ovgDN7cSfIP5Mc8tT
O4JMpTu5MM+6w0r2lCwr+fM37igXI2cUIGMcg2abvsbxZsZZdpfcvjrZ55n2
pnCAxwN2N3G4Mb7C7r47xFhk4ZB1bnfp7TUvDHVCwCdL77Iu2boXnc+9Z3ne
O7E27qDd99Hmt4YY9yzMcw/q/2eSZUvpRbQGJasIRy9bhWwTNw8zjl8YYskR
sbO8ZyXXJM1yfuHK7xpmXN/GIcaCC/u9cJgx/bJzCP9Sp8oyfLc4y7WqV2tN
sqnGcNUY5utsxuyMSKQpvGUEayePcPdQ44SEEZLe4kTAIz2WYv2ddHffQOPt
ocaePy5eO8vpuhM/HO6qyxiHjCLT/JEz8M1J5g3CN+0IOKimnImpfY0Lkj7y
wCzrIXXe6nzV2Xq0l+VL8efG1Pl8wC/dL10gvOveZpYTP5zkPNcnWo+gtZrL
Gn6INXww2vce3SV0j5g61Bhr8TrhrMX7FB9Am+vR5g60uSvx06y9ZsSzhrrP
6u9R1lWrvra5CIfybryxKPGkJRLOa+CxyQjjo/beHcZTZ87P4XzpwLoaE+d7
nu494+N898mg3ka04Szq/YO6ovvaBvQna/sS1nYha/s++pfG/vmBPr44xPhj
6YTn8Ps4ZOz82rZL5wXb9D2yi+Qyr20dn5lrO6D03PNzresWz7sw8JbtjNUz
wba1T3acqb5bLC1zedkRk7tzP6FNU2vRjz7G5WgcxJOWDDVfKkSe7DXSdtb3
4S0tg41Jd9lXA67sM/GJSttarqffS1iLm+n7fyf5Tqv7bGNkvNbIeP+l3p2E
DsS7tbX+UbZu2b8l663sb3nv9QLjM4TNkO/LgYATlg7pcNDzCCf72hDLFLL/
3BUwCdf3t01adlnJd4d7ed0KayxfGtGZKax9vjHzrWhb58HWv3Wif/uDTlv4
oIKZxgUJR5w/zVjiR/oa96x48wrvYe3fJbTtzP7G7R9IMEZf+PxCxjw+17aP
ObT9W36bTfrtlcYsCq8YVe5x0ZiId/ZsYf45gvY0CzZ0yQHNCFGEcmi8O50x
In458S+INxcfJl6W4PR5fPeR3rCR9XBVCdbF3UN7ltKex6hvA/HlxB+XTYq6
zhhpe/N+8j453XbVHNLrjrTdXLjyzgFbfhF322aM1WWM1eP9bYOR/UV9/rMh
+4zQi7I/B3tTMfF+I22v13mi80ZnyhlV5t3i27IJSKcvff5XCbbvqg2F1HWM
c20edb2r/pF+Dum9oflbnrEIv5LemfRS0lsznl2CT1Au6U/Tl99ozxjiL0x3
2+Q3cFu6z9546PyRZzzDtgrLYZI3ytgj17BHFrNHviBeRLi2lm1iq+faLiY7
5IuDbIsULkb2SK3DL/j96YDH69rfeAthLepztvxSYAzhjj6+V+hOIftqw1zb
WFvO8FrROqns4/NVZ6t4SWGwKcsmVhDsX5eynovzzVuEUT0eeL7wPg1SjfkR
Lv6FgLGXHWN3uAvs4NuV8U3tYHvjawE//+E02wNkC5D9/9Hgr1ebu+Zt3Pvu
rm6cTnrA6mT2N3ZH8d79jfkT3k+YKWFxhMMZwhjfTV1bqGtqme21stXKrtsp
17Zd2Y3H59p2LAxmYsBhCqORH+yVH0Hjxjyvh+rcoSp6mGfKXifspvIL0yTf
EuGa3qa9Z9Pu1Bq2eQrzITq1SFvDb3fRl4eYp3YjbfcfNd52Hdl0hJGJDTgZ
YWckx/+Lnym1XVP7Or4b48Z9uHNNePk44/CEwduVZPu6bOvv0cbs4JOSTdq9
weauM+fyaT53DvH7jB7mS9drTTF2H0fZZqhzQmeEcJfSF0tXnMY9sf8oYw07
0obrJsCHaMMaxqc/4/MfxieDPMmjjEV8nTYmTnA765D+U8Ay9SfeY5QxhEOp
Py7fvkjixbGNjXO5jnqr9fffa0JaN8Ilc2w/kK6yJr/vneF06fauDb4zLZij
hUGuk934yWC/PkDZdYGHLJYtIOgB4isse0nu6knb2o0yPnUrfezQzX0cJ/te
vn2XviI+tofjceSPGWUsq+zVwvrIDvws67xD0A8LFyxcp7CbDYNvq3xc5aey
psh6iWuILy8yRly+hvUDZnoU/Pm2IB+OI09lkX205hO/ssh5kvI8Bxp/zcOg
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
O97+gCGRbeqroPuV/fnLoIcU7lt4yv97w6K4yu9OtMm335r2ztvkWVDltzK6
0p7icFbqTTjhtoXZ1ntjel9M7yY9M9yYctFMo10v5Fou3tHD76bpzTT55z3c
w/vwRX7vVu48jUnf2sN780XoVFb5zY3ZsZYJ1HfxtofC2pNOWnou8RDJPjrX
daZr/9UMa09vXN0b3rm6Z6DfvVJc2BbZa7XOdc68FM4a2a5b9rS+WmuwY9i/
1Qb6HUbhNo/S5mHyJWtj3OLGgDWV71fPcHbLt+/r4N9XmG+7o/bjEubwjy7m
A7ItyFdQ9oWjA/2mp2QHvd34ZcD6yu9QZ6HapjPkjoE+R473sD+AfAF0Buos
1NrTu4DLAv8ZwvjdNdyYcPFp+S6KV7dkXirKvWbkcybeJ75300C/qyjeo7c8
arf1XtD5KtlLdeya7bHQOMgHQu+e6OwT7qNBonmgMJW3xRlXKR8+3X9092kw
zdgmrclj0s/rzlDb+JdDwZ4i2eGWID/8lY5sWcT8s2ePEW+HTFJA/F7uuXu4
566LMV/RftJ+rEO//oGftGhrvlJ3sHmLzljtJ6VLB7whw3pg6XiWBh2F+ET0
YPMK7ad6YXye4OxaN8dvq1yR5Hdn9OaMdAqypSldOmK9j6D2iDdUK3d79K5n
ZXjbczl0LoVOc/KvIr6EeNsOfi9WGBHhQx6gX/+b67dBvhpgXJowaXqP6oIg
b1yagwxD3w63Ns+ICjxk6Qjbv2X7lg9cp/72g9M7EI8EPVXCYGPcZdcWzj2l
reOb+P0t8t1Hnqtm+R1G+XkJt9I1YFeWJPn9IL0d1DrDunLpLbV3tc+1f/XG
7cLg41Mov9/2xmkLrz1+juN6n3hAuX1afye9OODPC/hOJ8/p9n6LN77c7978
PML6U+lOk0YZZyBdmt77KQ1v/kjOku+iZK3us4zLFCZT9546YR2fzrW+WHy5
BHqz57jezmnG5wmbdz7plaTXIb2GbIIjHJce7Ms068MXTiW9j99CEaZA73IK
VyCfkvl97Feid6GWh7ehVLf20vmEy6C3YI4xsefTx5HlTh9Kv0bN87tRerso
Y5TXUxdk3p+KbbvW3DQLb0tVUXZwud+Olr/OuOBH04v8v5N/ZEv7NMpvQ+uk
KXO1n310IfMVneH3f/X2r96WENZEutZ40vsGPbbe7hJmaLvwJ6m25cteoXuO
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
5f8BjDgSqA==
             "],
             VertexColors->None], PolygonBox[CompressedData["
1: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
cejEnRMHUFw6cejEnROnTnnRmNBYiAilpTZVWypNcR/F4RJ3SxxIcbnEmRJX
SpyuV6iPt1JdF+L41KGeylG/ZUFt5Kcneo7U3PjURN91UTTJd4Hpzgv5fpb0
R0/vbx+Q7sLSmQqdpdjZ0W35EvHvTHWbdpE/M9VzleasogPMWZQvSj4p3U2k
O4V0l9D4JJ/FuIe4Zo/1mQz5OrSH1d5VPg9x+eSDku9JnL5rjI+Tnc2tEsfq
Eb6rwnfDa/j+oIbiG3fxXWk606yzNDoj89/ZGOSN5LEl/aEFeA45h/9Od7Rv
ehsoyfeXO5vbJT6T+swg7Rdy3Zdk25GNUrZJ2Xi0dmmN0tqkNawIeVkM9hNX
b/nUqc92ST6LoT3rTzzXTrLtQnuAEsjFksy31xl72fLfCbWX+nAU+VzHf2tB
ZJr37rKRyzauPXzd8Z4DNffdhnwLOBuyP4sftS3Vc77m+q3Iv6DfFe5n3U46
Xk/i7JFm36V8sHWpj/upjxvV0afFcWkeBIsGmBsjjoy4Yt8Svn1V9ydxrX5J
M3dUPt5PkUvzXylwCPkTyns90Xtp7RnbpXlPpr3Ye6A46Y0mvTxQDDmyue+o
WxfyBwb8N7Sjuck9anjvFpfmbzUn5SrvYDLyN2Aiuu+4BNtKdOZqXKQ52bIt
ysb4IvF/NcDcXHFoK6ptU607SYeqNNIcfHHvdcbhbtK/3tFp7waTdKdCR3OB
xAla0MVrmNau+eLdUe4v0uy7fZc4ZxC+YCf3hX3g8xE+s6mzmtqzVu9vH4V8
E9WQKzf3HX/ia4pjHE58R4jvMCiXZy5F147mSogzId+GfBjyXcjHIdu4bHqy
5clGLl+xOLbi1spnPJay/pVqrl1NtQG600XWoQvgIPLk7v5P8iTk8BjfWSL/
rjhlH/L/gW7e++jOgu1t7dOSL2sb8iHi2cL7Z3nXDmzheR7P85GrgKash0+L
Y13WfDTZ0sVpEJdBNvW1E73GaG15ZqJ9/RdT7fuXv1Vzl8LoneYwcRtkc5et
XRwHcRtk85WtVxyHf6PNsZV/vFFZ+77FgRD3QT5wcREuyhfX1pyEZcR7o5vv
M9EatIbytxxq/pz86+JayAcv37s4F3UpzzLe/8W7a+C5GJ8JEhdc/JnCMeZ0
i08jnV++CXE2xNWQj0Jn8RvG2bYrG+/D5OPBkL9jGZjRzTqDdIXpyIco5yOq
rzL2IfShfFnR5pL8pyO185kz8QF/BdV5XjTUXPArYCPlq9ndd32Jk7KP/PUY
ai6vOL2ayzVHam7UnP4y4aO7+2yWOCJ7Y3ynkrjD+kZzk+YYzS2ao94kfGLo
vKXu2ArX3WCxvrtgTzhl5n1H3perY06LuCzibIirIU6LuLviKIibIA7vCcLP
Cp2X051rYya6j6pvjp5obkZeqvuyOBrb+C+Sdzco35g6vmtizlD78sUHnIW+
sa23bZOycfbj/V7eh5czv11320wN8ad0x00075/VOUneFQIxPD831LLOfMmX
JI6WuFnyKWmvpzVVa6n2fLmhNbFYiC8j7klfytlniDko2wm3r7vzqjw/Qv72
kL+J5C0fdEo1B0LchyLimBBfh1TLmvN20S9+72rbiTgsT8a6zlXXOtN/K33l
/hBfS/ZX3dWnO59015Pu7NvBHNGV9z/z7qcw77W1R9beWHtu7U21B9feW3vU
ncwzw/r7blLdUaq79nTmUmctdefeeuJLDum/0pkTqK8Xhlr3lQ6ss1K6w1V3
t+rMlO7+0pkqnaXSHWDPtbHN9mJI3+5KmNeH+izIDLCU+S+no7l406qbW/l5
O3P3xLFcwLsdY8xl0xomLlRic3NRxInS2RqdwdbZa52x0VkunXHV2Vad6dLZ
7BXIy7N8RltnX3UmR2dxdAb28abmJIiLoDtJyxB/P+JvUNJneHRXrc4s6qyi
7qzVXUa6w1Z31+pOo/Xkt2V7nzXUmcPBfPttc5/9URw666g7E3VXos48zqvr
O5F0F9K9dX333hnCn27uO/hky9AdCbobQTYN2erej7ftUTa7+sNtI5Nt7EZ5
+4LECRcXfHqIay0bvmz34lzPzvMarrV7FnKm9u4N3Rfl07nRwHt67eXVR7N4
H/D+Jv/16O21XzqLdBXpAI1IPzPetkzZNN+jvxbsZl+MOFa6S7hlyP8tf/YE
vtmVZi6POD2fEj4sZB/THSVaC3Uni+5i0Zr4P96X6Oa1RmtOkWz7WOW7kg/r
Ku9TQvZO2QiG8N0zaebqab+ks+O640Z32+gMufZOm9q4/2kPpbsndEed7qbT
HRQHGE//ZPvshfyzqcQ3Nc1cNNn87+X5c56b6WxNVXM3xFEXN10cjtZ51lmk
q8iGL27RgjRzlWSv193ApePNTZZ/XHf56o493a2nO33j6X9l+/tuK91xJduM
bEiyHclGo7uIdcZOZ+t0J/HJTr5zUHtJ3Vmnu4d0B4TuftAdROVIr3CsuZBa
f76ONIdvWuj813d9qOfGPuurM7+3M7bKdPRZTZ3ZlG1MNjzZ7mQj09k+3XGk
u410xu8V0n9irHVJcUxli5JNTbY02aRkK5SNSrYp2Qz/opxn2nvu1RzcLYo1
vZ/vWtSdi/d1oA+O9lkbnbnRXRa680l3PelOi1fI+8JI37UiH/ELPM+KtK4r
zrvuLtCdv7rrV3cYFGM/kdjZvm3dufcMc+IAxlZ/sAb5NHnZOMx3nSlPLchP
cj/f/6I7ONuJX9TP3NJNxXzXre6g1t3TuvO2Le/T+vmdvtHd1LqzVnfV6o5q
3V2rO6R1d7TusN0d4zNXWou0JuluOd0hqbsjdcec7rrRHc+621l33siWJRuU
bE+yaX1A/TQf47lRZ/qejvEZAOla0rnEvc1s57lUNsD/9nb0qcVNvccrwvvE
dp6rxbmV7rM2xt9LB9JdWxXG+Kyy+M+6K3gz32wa5juDK1KX3431Xkoc+cV8
23iodSPpSDG8v2WcdWHtkWRLlE1OtjjZFLU3k84rXVd7NNnaZNOSLUs2N9m2
ZIOU7VE2LtnSZKOUbVI2tXeamiMubrjuDJVtWTY32dpkY5atWDZq2aZlM44Z
5ju+dLdXNHJd8vpIjHUl8Q/zietgU8cnzrlsfbI5y9Ysm1+loT5zIN1CZ7R0
9mDuUN+FpDMIuttUZ4R1Nlh3nJ7q4DtZdD+D7oy6l29rDrWuJp1Nc12pbr57
XXOefKvi7IirIx9rRJ73UNr/tNKZ4LG+Q1d7X+2Bn0Ze1cl3T4jTX6qNbXiy
3YkTpbu9jjPnHhvuO756Mz/e19W+BfkYxE2bJ05Ktjlq4rKIcyOujTgtsqVK
J5UuKpvqD+Tn9nSfTdYZZd09qjvodPec7iAtwFidlm5bmTgiuktMe1btVXWn
mO6aezvOa5M4I/LVj+9qX7x88rHoSClDrAtL5/2A8O/H2fctH3gB8nSjjblB
0pmvk5870s01FWdqTrRt7rK1i6Nch/ed07x31R62hM7PpZsPqTPZ8uXoTjLd
RSafznbK8Ukn382nO/p0FmdEus+i6EzKaZ7TQ/xTne+pn+c9tfbSsgmGZZtj
Im5J6Wzb/nRnie4qkQ0wnDrM6+a7E7XnOMNcO6ePffny6YsLJc6CuAriRC1p
7DOx4iOKn6m7AeTjkW9HdwTorOfRrr77RGc+G5GfAWnmXstmKa6HOCTijojz
MSbBd77prrfRCb6L69YE+47kQzpIXMWJsxg40NV3Vb0RZ1+0fNK6izMzwXe/
iL+muwh7d3Z/FP9NttPktuZ+SR/cQDyfh/I3t7bvVtOdBbqrQHesPcfvn2le
G3UmWHcpRjBfVBznOxXFXRPHS9wucdh0tk0+QvkGdcat73D75P7zxQ23reAE
aF3VY0ZcIHFExA0RJ0i+MXEsxa2Uj2wi7VQp22fzxNmpRn5S03yWRWdaEqWb
8F9lkJBmro3OrOmsmjg3dSjrgmyfjZDOLS6JOLji3opTspnyf9nVe2HtiXV2
TZw0cdF0hm0S79eF/PXSWX4lnYHp1iV0p2JB8vfFYHMHxSHcS//8ppPXd52Z
yaA/re1m3Up7MHHsu7W1bi/u/VLy1qytdRdxzHQXRfsE+37lAz5HPed0Mf9G
HC35as60NndZPpvuxL8xtL/XHk57/c7dfVem/vs/lVIQLw==
             "],
             VertexColors->None], PolygonBox[CompressedData["
1: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
uwVc0Tv5Jj0Fr1A4hnLOEGQj9v/5JxRE
             "],
             VertexColors->None]}]}, 
         {RGBColor[
          0.5107687264150943, 0.5363716981132076, 0.5435308490566038], 
          EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
Qf8K+hzonxFPSvEZR3kbMH9v4DMMtWeg87uk++oYaX2EdBHSw+q8KJ0bNYW8
wsmrWBGfWXW4vs+tGjvY35762OGR1sVoTqezo16obx3v//Quge5FexhDiAcT
xsOzH5774dlAPCDFdhrv1fdZVzrnSnqdkYFuZzh57YzxmKaz05Iivc/xDm1h
IO9mLe9uOe/3T9pMYi3rsC8HeuyMmj576bb++8C7ep53dpXxMC/9cB++qeO8
062k6UboTniV+4/AN5r3dZ62+m62z2X6ItVntGlvZRk88/pYP3CVtpTa3ed0
9Y/02kBz2Bk80zc8y8Oyn6H8RynPx5RnOWlX1LWeIRP6IeiHtRauH5xfCf+/
xC+m+PzKWTzfw7S9WMp5CfqjKbbbKctc7j2eOZUyb4OeluKztHROVVaKz6Rq
Eek5uubnu1J9Dp3Wmzpzrkmk95w2g+tFeo2p8ynfSvH5kjpnrkGk15+VoFdp
4L0XrUWig/VIVKTXJ8KaL7wd4zlDN/Cr4I1F3YZ0BpnO05wO/Qfo3xV1WzhC
OFzY503+0s9nStaItE5H+pwK0r+m2lZHetHKkbbd0dl7pSN9/t5LtM8+gV9P
8UjrO6Tr+LC+z+HSGVw6p/OjFO8f6bxP6Qakr9C5lVdS7MusNYHWD1oX6Ewv
nfmlOhxI/BXXSUoD/inF+4a3iGdw/U9+n/F5PsX7jPMpT4vAv0bf9KagX2rV
wGd6qgw6s03nuOlb/p1+YkGq9wt0JuidFOtPQoIySgeib1U+4vIN7wXPZ/B0
LOD2ofvif6KBzzbV2aGNBnserDE/BjwFvBi8hrIND/SZu2L8Xembep129E+O
2//7tPnZ2T6jLCTV+gLpCjS/317U4+YA2n4abfgQ31FOrPertFdVHjmz1Xfz
LSyB/if0sdCPIHMJMgvV9F7l4WA/VP/tGdHM/+55Ef6XYs3fBxl5czzmDoq1
rkp6qlehJ0JfUdN6u6cpxxjiNXV9nUlIiPWemeY+RRg7jnBdq5j3Xb8J9lJz
cb9OjPvfdpR5GzIL8+zXY7zHpv21vyjbPfQPb1K2FPIZRh4Hed5/KcPI7j6v
T/Op0cgeRciBP4dnqQP/UGRsi/F8IhPe0jnm74mcfsjZncvfvMYMjTm9oaUE
c8u6pO0dY116X2jd+piuvkNjYDPCIOh9+ng+so98/yLfJ8n3b3BDyvw++NMY
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
HeF9ynvuHpdN+x5v9vHeR817vKei/ZSEe7w3o32ZZ+CZyvXvubzfUiU4T0b7
Htr/+IHwj+yG6vmcwAr3eJ9G888v69o2QnYR2pebHOwBnazrPRjtv9xLXII0
X8D/fh2v5bSOkz5Y6zDt6Whv570+xtqLkI5Y+mGt+d6uY37tIfQN1nrKT7L1
XFr/vR2s9bTWPJDL680v6ni9rbW2bDe+qBukA/fuaxuPD8Hr+/qssNXjqLMk
2nJ121bIxuKm7NUb2cZC9hWvN7K9gmwV6oBXB3bUFRrZrl3206GNbAsuO3DZ
pz87wDbqSvNsYF8tm4ZFgW34kMDm4GpBn72U3cg2+bIvlo147cAuW/bZ4YQ7
lHNWkv/NKvt9ndn0aWCvLBsN2WrcCmzlle8/yHg0sL1/tJFtiGU/PL2Rz+/Q
2R0bqYfaobaHeQX5/3X1fy1fAF/v6n//FQ+1nZBshLqF2i5HNjkpod6Xlu1S
bdkncJ2Yx3ZGJQJbI9kWFQ3si0qG2g5J9OWhtgf6KtCpR/S1Pv0l8v2nq/+j
uYb7a/v6zLRw5K8P9dloskGR3ee6wE5U9qJvBfaesvtcL5tMeN/qa/5Kgf2o
7t0Otb2XbL02hNsuVjax06Et7GubMNnxyU5CNhJZ9NV7hnmeUlN2fLSlB3J7
vfhjH68ZT+T1uSk6m+ULyvlIsr/LP8Crkv297g5Ddj/KSF7LwTUJc6DXCvN5
ajpLLS/4o2SfJ1MRvCywP1xCPCLZ/dZz4JRk91sZ4bbfle1udrhto2UXrT2g
8O7eF/iRteyeYL/p3nDbXsvuWvbUYwKbatk7xAU2D7LLnhTYZncItz2E6LKR
XU/8DiE53PbBsg3ej/wV3a1fKkSZX6B8hSjbMeLpyT5DZRz0K+BDeV228T28
lzyMdfCwHtYXDACn9rD+QXWks5F0plCM8iA+QOiMnB+Q8w64J/g8+H1wKvgS
eGte22ymJ7veHoJ+J9nvZ2xen2+qc011Tt5Hgb2W6l1nq8iGU+fYyQZU9p8L
KM/zPbw/LduuyYENYYMw2zXK5lC2hxMD+0a9y3KBLNmEjk22TH1Xai9av++m
rpZSV0uog/vDbR8v23jpPL4P9HL6NqSXE64cat2Q9EJzpUvr475Z97/rY92d
9OKyw5NuXN9YOiEjt23xpHOXvr1wqHX00s+Pyeu+XHXxV13vMXcN9qx6B/ta
+ga0V7M9t/dzZHuqPZ3v69pWdXmwP9MrSHOhrm1SV///9sa0Vya7gJ3B3rR0
Wp/0sV5rd3BfeDN18gx18ox0OHn9fnT26Xmu7+vuf2eonbUktCKcpf6Tqbc2
4Ga8o8ge1pNEgUN7eF+5NTi2h3Us08PtSyA/glbg5eDn89kXYUq4/RHkZ/Bg
uHmKk/Zmd9tyfEFeifDHQq/P/b1c1wBvAkcSFoIbKIbncXAt0hbv4X3hffBG
9DN/DDwv9DP/9TCfX6yzi9XvPJbPaeP1bXIvOp/PNv4rzDzp9D87h1nf2x38
OrgEeAB4I7h8Sc8XrtTznOHaQJ4j2OfS/pPsN6cV8Zlhd+v53LAjUbbDkw3e
jXo++0n91xes5/Iwp5pW3O9hXPDd6H2Mz+trtRvR1I5yhfkMLPVX26PsWyK/
kqHQSoR5PpWa7H5BfcJv3N8BX6Ei7sPyhbkfSwOXDvM8Tt+u+j59v+rzyoa5
37tI2s2B7bps1mV7m00YDE+xMNs5fxRlnyXZq3aD9ljQP6gfahnmvkh+Qq8F
vkLv8rzHGlvnIx3/yEDPv1X7p42tq0kg7eV6tkmWvdX/bOUL8z7Jpxv8m7SP
E+U9Fe2nlA/6FPUH6hvUX6h/OIzMP5E5VjooaE9yb0tejxWJYR4vuoa5X1OZ
cwXPN57wtnTypO1O2lVR9ndS+VPC3Pep39sI/dxA8yeE+Yw59aFJ+YIxgfAS
PJ8N9NluB+C5AM890NdID9fYOqj/+R9E2gdhJDyLk93/ahzLDvNY9m+q/QTk
I7AZ+twwt42t4Plhbivvg2eGuZ18AJ4T5nYzhXgt15+rzRA/GuY2WZ5yrUTm
8sLWB0svLF+k9jHU52Dju1nk1cn/9p1Jmac2tl4i1xjedSf/5/dQssfXOcGY
oW9XY8hu5E+Pso+PfHpWRNqvR/5hSwIfMY29C8PcnnfC82CU7e12QPuWe5Xy
efzZFeYxSPWrsUr0rfBPifL+3L2UbbR0f9L/QJ8WZZu9ydCHQ88LPROc0tj6
SvUrZ5PdV6yDvqOxdXqbSXtvlPf71ulMMvBHhf0+9EzqKzZCnxhl+z+NsSfC
PM6uhz4W+r7C7ld+Szb/BrUR6PuhvwfOibLd4JvgdPBe8FrwaPAecH7qdlEn
n12g+cKofp4zSAd/MtZ6+KbwH470tyCflQOR9lv5N2gjvxGah7v/Vd97Ffo1
wkX5d0TZb0rtXfaD38fahrAW+KdY66lDSVe/n/vKauDa4Ln57COSN8p+Iv+A
70Q6r17Spza2rri99L3ImVfMc4FzYZ4P5Iqyn4nS/qL6CfO30irK+5Hai/wV
Wp5+pqutqN8qWMR9c6GgD/8WfC3Z49OLpOseZX+WGsTZA80/aCjtoon1dzrf
991gHtsj2v5+smPS2cCa72quK3/BzoHPoM4z1lpF65S+8HaKdr/ds6/n7ppf
bA/12cfiCQv3mKQxZYj0rE2sSxwMPtrE+kP532yLtA9OpSj7BalfbUq65jzX
c/k8104K5s8a62KC8UtjmsZCtVXZ1FyItV2N1r5ng/Xp/nD/10o+O6PDPU/V
HPXPMI9/qrc40pZsbD35tHCP0xp/OyA/Mdztuw+4D7h1Po/5KeEe9zWWbgrG
3+3EL/bzf7L+GGxbENmB6P9ar/RzGbaG+39a4tH4vztoh4OJB/TzvLYbuDN4
JXhiuOfKmgNrLpwRzJnHhnuevSWYj2heIv++qeGez2kuJ/vWY7G2cdX8Iquf
5xiaR3QOd3+kucbYYE7SEv7Cjb2Hon9/Le1nv8LHgvnB9Xz265Jvlfyq5oAb
Rxlrzt4umJ+3D/d8XThR/i/I/ASZ9aNsj6K5QAfoZYO9mEZRtonRPKE99OLB
3k23gfaHVD8Z38/zEvUbHaCfinT/EA/+MtL9g/arXwz2oDtBPx3pvuUd0j3V
z+WXL9qJSPujJYK/jnS/dH2w7RFli9gR+leR7t8eJd1rpJ+nfPt6rah14g36
//s6+X8zB4raXky2f7KtkB+abCrkixYV2Fq0j7TvnPzmdN6ibLRlm33fWPLo
wjutZv8z2e/I/ygH+pwu/p/y4cDuRjYXsveRz1v3wP5CNNnnfB/pfl+0C4Gf
jOZaT4zxuS06j31ZlG3xZYcve/z+gU2+xgT5bWpc2BJlnyLNaXQ2qr5zfeM7
o+zHIh+WA1H2ydF8Tn2A5nDi0VmtGtcl92BgCy4/KdkQdR3ocup8zS+C+v84
0mdf/s/vLtLtSW1JbeqDoI19G+lxRfLWRPo/DfpHg8ai7yJdN39E2gZdcyGd
JaOzZnSezFBwThf/0/mjSJ93qbrPCy6oOZLSRtjnU/YbL8L/QRf/Y1c+oLLt
EF3nXB4MxpHwSPvuyn9B9iyVB9qmRWWSnYtwqUj76Mo/t06k/1Ehe5h+yB+B
/JeR/16UfbrkM1KlqH36ZXvfDrrOeFWf3zHKvm3yaxsQ5TNwNa/rT9ubnch4
VoX+MMrzbH07X4/x+T46b1/zR/m/aQ5ZKzhbR+fqbIHnWXB+aHWiPA/WWKL9
RY2fsjXV+eg6211npL/J3L5KM+vdqxO/qH138F5w22bel1hBXDiwq/9Revdh
ttHVue8/dvDZ799DnwZ9VwnruCVPcv6C/hj0oyVszyG7OvkclaCuilJXAyhn
OXDZLv6Pwy9R3m/WXrN8KOVrJz+7eTxXH57rNM/4KHgA+DvwFHBb8OGqtrXd
E/hvHI+2v6V8Nw4SF4kOfDeKOhaf/LA1V1P/MxU57ZBzpKrv9w18PjQvzhWs
AzTmfz7Q4/4zlOvPYF6xJ+DVvK5KlNcPGuN0Dm6uYM5wDfm/dPa/kwtRluei
nIfmFCeCuUE55p/j5Zcue7NI++jOCOYCmhNovloHOds7+UynquAN4HRwZfDb
4NE6Pwr5fZDTtajtCA5H+7nl6yl7a9lal4P/DfiHV7Vds+YFOq9Dc4Fzgzwf
kH2M7G6FJav3YPtKyG+v3mD77j3ZgnTNqbtSPCP9a2as/etvxdr2SHZHceR1
oZP/b75fdoKD3admx9i/Tr51sg/dHthYyr5mReDLPBD8VrS/Idkdtx1i2+N2
0bYzVl8YG2N/PPnivRxjvxTZvMqeVza+sn09wTcV0cn/uvoc3KCTz7zaEuPz
fZIDe3nZKY8I7NPTguv8MbYZUn0Ul//CYNdZAs/1cyf///1d6JsG2wZLdhxD
AluOo+RVr5PP1OoXbdt02aXnRNvOSd+E/GNk1ybfGNl3PD/YNh7DY2wXIjmX
kDOsk/+VJhvxx4vafuwuPCNjfK35b9+BbjOyGWk3xHYjY8ENh/i9nIX328G2
8ZNdlGTJTioWngJD7P8iO+JcQ2xL/JlskAa7bhZAD4l1Gtk6fRzYl86LtW2W
7LLkJ3MmsLORjYnsfmRn0jzW9l6y9UqMtZ26bNTlPy3fHvn1FIuyr7789J8h
Hhb47LeBv+QQ2283ibZfkHyCZDNVJLCbWhtr3xX5rWifWPZlOutgQ6z9beRr
U6yx7eD/57NPfd6ljz1TxTYr8hGRP43sTnRWgc4TkL2IzhKIC2xcdF/+GsNJ
uzDR/9NKjrUNtOpD9sVNAxuwlYHtmK5nw/9Bov+bJvtunb8mG++D0Gt08r/h
PoKeCn1+Mdt+aE73TDHbpkwo5nlLA8q/MtbXy4OyyIfkuOZEQ8x/T2Pb9mmO
JPsL2b9pjloV+pOxfueTsvzfF/3zRf4Z3YZY/soJzJ172v6rxijeXVvaZDme
k3nR1VD7sG+B53BP215pb0r7QNoD0j5bVpr30q73YFzIQTY8/4B/Br8F3p5E
PzSe+qxhnxL5lojnC/0foIbp+qddalX/425QW59ppfOs9pO2GWm7wrMLHAPu
CN4HTqphuvYAM4J9w9HU669Z/v/gH5The8rwci3/2zixhtOWp+96FP4hOluy
rc//0tlfOh9KZy/pDKYHkXMzy/+R0f5/t2a2AdhFPRyjHp6QXRz4APgx8CXq
rVx7+onyPteqQ1ufbXWOfHuSZw/CYcrcerzx+k7uu9Vvyy7gn8Bv6Dz8vWo4
jf7lqH86Jqufp8wL0nwmpv4ZqH8HjiDc4Rl/4xnXU4az4GPgheA2bX2+m859
Uv/9Woz78Pbkf5RyXKxu/bh8rhYG9nR6t3qW75HzSY6fcdYI+o/WfBtleNe9
eC91vAc2G3oS9Djo88BDwd3B8cg/hvxLyH+zk8cbjTUnoHXgXor8TZL8v3n9
a34OeT2QYx+rPdByuvFeoJ9r7v1gvVPZnhxoavuTAtTVMXB38Fc6M5J6X1jO
focf17Tvg3xftCeh/Qj9Z1J9qPrPKtD7ZNvfTb5r5bvbf03964igjx1IPJhQ
H3yLsjTOtt+Q7CCuBXakP5Bv2VE++2w631B2Y3/3B/pY3y1d9yHq5AB1sriM
fTLuZrtsOp/7dkuf0a1zmE439FlMsuuJamrbnm/6WJ8uXbr+jXk5y//HlF2A
7AN2lLCee3eg3x7MWiYt3P+Yax/4La2raZvocQ1sF30PZRiUbX9C+RLJ/0e+
P1rr6L+aWu+05z007eG9A/lnyE8jMfBhki+TrvV97BjpM8R0lmHl9j7PUHVR
fpTPgpOdTu7A9kY+mju7O/1E2vC9LXy+a8+JlLmX263sYrXPLzuECOjterl/
uI28iPY+x1v+QCey7ROkfae0bO89yadk9TD7lXzJeylKmqcow0lwYfAT4Fz9
bYctG+z39dzZrp/m4Kxs+/LIZv/VHNvta9+jWKj3PmYneU9U+6FVcrxnoP2C
du1op8j/Bfkv9PBejvZx4gKfbPlmR4+mbVL+CeXtX9Iq8KlrT9o4wq+kLUT9
b8ryt/44cubkmEdnSQ4c5fMkZ9KWOrb2+fE6V+zFhj7H6Ru+jx8IMdTbmZq2
E5e/xD3USVhgz/MrY2axGJ/PsBr5L+aYR/5Aj/bwN7OUeGGOfTRGNrYOUfrD
NT1sgy65LfkW2hCW17BN1uDGHm+ToK0c7+c9R131Ag8H/0W+ZWN8ttto2cdC
31vDZ6mOa+czHodBf2+8fY10DvHeFj6LuH9j6y6lt9S5YjoHTWeL1YP/Cfif
hv8U5TpAmedojw/an+QdAn1UO5+lrvMzB8C/jnuboJfq4b0T7Zvo37Bbsvwv
Vdmq6t+Zqn+tk7ReCtHeRKLnCponFIO/eCePUVqbKVbaB3kvLVv7X5zqs+U7
9WHQd38Y+E8tDMZ12XP2CGh63kE84/ghzusy7/BKMJc+3dZnX+ocRZ2dfKCF
z0/WmKTzAfV9dZVPRrjPehrBc58f52fvJn1huM9ikp6pa7h1TT9zfwx8L1a3
7q1xuPVv8tOVP7B8ddV25Sur77EJ48X0GK+rdAbYxw18Dli/JP8zTP/S+hWZ
Y7leAp6S5PMBdTbgE+B81HkFjdFN7ccr27v50B8llNE7auvzK3V2pewhoqBF
aoykbL3DfdbWQngLIacy9AJptnOSjZPO8V3Q1mf5LuSd5Bvj82+fBxca47Hy
W7XrHI9lL7X1uZY60zIXY/UV6O9Bv7+tz1jU+Yp1qONFaT6bXTr+JwI9/2ba
3iHaXnXa3grKU47yhMpOvq3PcNT5jdLtDQy3fk/2BPVqmOc7yjsqzd9mIfL9
m3y31PI/mfXfZf1zdWJbn8upcxoHImdouPe+pW9rH+jZ9K3KD0ppdQabzl/T
2Wst+1nfLR3jm5TtrSTX41riauNdn5/Qj64L7Fv0L8CuVf3vvJk59hXUeFQJ
3pVJtseQrbRssjX/1Rl+1RvZ/uSu9MpNbc/5HX3mP9n2GXy5e7A3D54Z5/Nn
dUar9IKVA92gzsQc0tbncmYNtU2V7Kmkly0V6Gb134myrXw2v/49qP+L6N8i
On93UHufwTuWuMJo/wtAtt7SM0rHKJuyPYE/yCh4yo72/xU+o65WNfRZkTqz
U+dr69xOxTrPWmdZy75sdAuPPfo3hvpX/Ssjkee6L9t+iLLDbdDUtrgVm/qc
F53xov/xvtnK/+RNb+//WOifDrJ5zN3Mdo8651tnhirfJcmUL8z7Rfr/h+ZT
yk//7djTyv/xiFGfF+uzFLRuuxasqWWPfKmJbZL1D4fH4nz29XHqrTRpB5a2
Xbx0rNKv6rz8G2k+M19ng8a19ZmqsqmUDaXsJ1vRP98T7b28mZQ9dLT/1SPf
mtCgPrW32TXYK9zfwufF6+z8rtTPtGzPuQa291nJekfaxxse5r2jp5O9d6h9
Q/lgZTawH9Y/lGtHC/+z4NE4/59A5wbPo+wPNbaeX/uWfcK8d5nF813lOXNT
P3/W8BkMyvdwO5/frbO7dS6+zsf/v3P0FevsfNlED2pqu+iY4Nx3nf/+TDv/
L0T/CnmFMeIi38DP+maJn+f63hq2Q70S2KXex5xkfi9/gy+08z9FdG5zCG1s
Ac81med6pJ3Pa9ZZzS8h4yyyLiDnjXb+r4nObX+6hc+a1znzMwJfDflsrG3l
/zprHJkue8g0l3PzIOuzpMvSudeaZ5Ug/Ed9Pt7A/9mMLeN/VOv/1PpP9ZpW
xjqf9nh7n1HbapjtaGVD+xxl+2a8/d91JugrDX0uqPZsZBcuW2L9M0H/TtDc
Xue+72jn7+Ua5drUwmf7X25qHx757/SiPczItj+2/teh/6DoO32pu+1RNJ98
j3LVGGGZ8vuUz016TftoPpJtP8134NnQyt9GMvSHs80j/+n8OfahXtrK/x3X
P8c1h6sU+Ckp789qep61sJv90uWTfoO6mt7A54VOKO759bfFfea9zovXWfHr
kfcG4/isMl5P3wnW4Pva+Xx88RxjrXe2p9dK+qeKztXWGcKNxR9r/cfb1M3v
af6nyFZ4esT5TH39y6FAGf/bQT7f2dn2+27Z1mdt6yxf/YNC/5/QvyfuI985
5FuUtPdDu8W94mXsK9+yu/3l7wvs7mV/34L3/N8ov2v9c0b/pNF/Z7T+PxHo
A0Ib26dF/izynX2su/1n1S71XwGd5/8ifUyLoZb5APlOJ/y/os49zqdqf+MO
DiWXzEwcc0vHzGAYwnznOzNmhtTcDDNj5BbDXAgzzIijlFApSVLoJk66qX46
upDL0RG/6iQq5UROdapBUqhERRd13k/P/r1+f6zXd8+atdf6rLX2XntdPs/z
tI20Bk7+ZdYxqKGtkrKsWdSL92JAqdfzC8nvWeXb0TgJ4SKEiehImZek2o4Q
dp4b77LEQfJNnecer4btDy3/52l8G08z78qI9RlsTFefw5ZRVnWp5yjCo8vH
S/N/+Z3pWms9+feL80W+/fJj+j7Rvkzasxza2/uWwvcLe6/235xjfmpxU+vs
N6Grz8S6D/MZp843n80xb7U4q6XPkNM/+I6M8T6m9jBfpU1+oT3uIQwMm8NF
/C2zab9fKt2G1+b7bEnrLOGcbkn1npP03qX7rvpKf6Ckv7nq/z7SXMDiAV7L
c3W8wno00vqQ5ofGwyXU40Xqs4S69BRWIMBoJJLH6fHWeOiRbvyh1ljydVpZ
5/VLd+J+TfM7nzzOWAK9+8sGB/5SHa09onFUWiU9SNOIul1Dmquo1xjCDxEe
Q6UjobLGjTAPrzh4hXe8NMA8lhPfhvjdxO+iLk1pk0/aWkOp+QTrKB2h3Mb1
fn/ziG86wXpJ0gmRXsjhtvYNl8+39gTE+9uyu7l/s7GtfdjYGnGuZAS8K+np
5mHR9WHas00P6zNm9rcWlLi75c8qPmVx8u4l75aVLmstdWtPvdsRTvJenAoZ
qzIfO9fWGY8pLMuykPEs4vU8kWJuT/me/KWL/U+i081/IV/3i8jrD1XOswN1
mc3/5hE/oL81rqRvJTxQ7VhjYy7r7/mKdEL2ct+HvHfPcW9H4r8eb20RaQtc
0t/6AsK/3l1nTKtwvdMGG9sbmW7uD/n8P0Ydj1RYo0eY4KfrjAsewPs1tNT7
dRrrHw7KFc/fZyHjleYHY5I46oUbGF3hNft7jI2flXgvqQnj7iS+LzMuNi5L
eC3htAZk0ja0bSbtOmQS72Iuz2gH7C3gGWZO3DiONsrmk8p4+AJzlTd5f39K
tH/gwiAPYZeEv/852Rhr8T2cTbQfYYs8Y+SEj5POi/TlpAElDIewH8Jx/I41
72astzBP6WnGPd2CDWux4WfewQewax35bItmjCDN9pB5xv5FnW6jbjVa11Pf
AdR3AvVdN9w4fGHwH+a+G3ONG/qRdv6Z8AfNK9PMOaj9m6cyrZMn+1LJJ7fE
XDWjeWYu6GI99HTyuJq8ZpFPGdfXc30313O478ZKa7ZNx970Au+Zhvmt5+/X
uC7hOc9NsR/yX7hvYK61kov5vZa/F3M9WLzRKfZXFo7uTNBPz2VaG0+6ePX8
Tqu07lu/ams4Sb/pvuHmRBAfwgrK3Uq5LeJ89vhAcP54b4HPI3Ut3a0uldbe
Ei9j2+CcXdp9Syut31fAs/0940nLSM+LIgZ5v+Veyvo+2bonqzOt8/e7Bl9b
97HyFAZG2BXhVuSHsjfwRWnc1vpOmrPOxZa8Ap+XSWtx81DrLW6gT8rSzJk5
h/8/RbozscbPFaUZQ/cSeRfynLcln0P0Z4dK64etJf1O0rejjrlcz+Z6L/cu
LjPuXXtH4t6+MMW++PfzfE5i/F/E81nP7yr+TuD6RcoaSlmnWhs7PirRuAVx
O01MNL/TJq4Pc/14Y+syHciwNlM8998Z4zzLy8y1JFzDlWONhxQWUliETQHn
5PixxrcI2yJ+lJOJ5kgRv1dDojm+1lCXV6lLRJyxmE+GjMdcmmvMpPCSa2mT
LNrkPOFoNN5y3UxzHuqfxH2JhBH0aYssj6Hn82w/2Nm62NnkP5P83yDtKHF8
hcxvKX3oh6Ktp9ycfm6RaX006aSlVPp6Nfe+zL2t44zHEv5K2Kuntac+yHv7
mrsIf6b94fXkX5pm7tPPM6ydJt20CuqygLqsjrZO9O2TrPX8coHP2nXO/iG/
O/h7h84K+d1X43qNy/U9urcl4fpov6dL9DxnWi/yxjLjXoR5ka6b4qTzdnWZ
8SrCqvyg8wXCcvIfy/v1DO9XYZTX55tifaY/KNP6l9K+fCPXWFbhWKWTJl00
re8K08w3JK4hYexOpBlnt4n/b8m05qYwrOtzjWN9Pte4Vl0f1N4v9ZpPWQ1c
H8r3tTDEE0P2TdX57dHgDLeatJ0LAt9I6nIvdTlJXZrSv0s6m+NxNHV5mrrk
U5dfefYWdja34VBsGYXdl2PPAfL7MN/aRskat7g+T/4N5D2hxs/RJuzcgZ3v
Rnt/OkZjdKzxrLlpxrSKM/6LbuaNL+J5O9vX8+QSfU8KvJ/fZJo5WbSvK32G
y1KM46jBnppK62Ceo/xGGr9irXc3Ktuad7eS5nZCFWkaeF9X8N6+zru2TbYR
9mPbFMrqXeBzmmWMV6eTzT1yRab1TaVtui3T2pnSyhxMuq2xruN47t8b7Tq+
TH6vTXKeA0l7JbblkP6R4eYGEteIfEBqaoJnkvRbc31/T2xapfPMGGtZnJdi
fE4tddmhb2qUuR82JtrPvyHX+G1ht1eS/6/J5l9ZxXUjymrc3Pi2UZ2NcfuA
9B+S/kvSP1hmLgNhUlZg58pMa6c+VGYeAWEQpJV6V6XH6ofI8xz5izfljkrr
GkrTUJj4Y7nGxf+zzLxO8v/fGjKeWd+k7FxjWedEG+/6crS/y9/RX4U11szS
OfxXwVn8HGHFyOdrnskvc429V/5ziV9O/DfEnyD+KPFniX8Y2xpT3ybYNoLn
akfIvKPH833GrzyFg/9jgIX/PN8+DXoXfiGfU+Rzfoy/B9q70j7MXuL3yT8m
2v4aLwc+G7sYn1rWeT62Ld/+HIrfrfeS8CnpY0Zad0S4KvH9XNTNnD8aE5vF
WL/+93FHcxxCUqzHD7XDU7RtA20bijD/inguhO+Qpu6tldbVbZpnbL/qcnsw
nxImfBFlHaOPzvDcfoNtudh2d6wx2S1C9n9eEKTVd+pS6nFqkPe4m5Hnz5rP
6Uy8zFyKwtldx7uyhv8lx5inZ2Q3c/XoTFf6XdrPaEH6JonGP+aSNo8wiPTb
xxoPLyz8jxXWbpRu42CNUeTbKdaaXdI9lW5X93z7dsivQ9wPowL+B2Gtfksy
1uQb1nCdxrvc5uQ3p8I6hhf0sy6pNEnVByq/iNCCNDdVWN9Q+qKvZ1pX8Xps
vivR+BPhVisqjF29gfglicacHM+xnpPmyYdzrGul847DZcbb/M7Bgm2/Jpkb
fHaZOVl0lidflUsDf5WReeazUF2que7HdSXX0fz/lck+B5aOWdF4a5lpHnAm
xvHdJlhfTdpq4kLokGY+hIWU9ViiMTzCvSV0tj/wIuKfSDSuRz4G4p0QJ0VD
mvkZ5ff1EOlbdDYPtsasbMrJijE2d0yG8bnSqpXumnTWXiF+FPFRbc3x2aXY
PJ/imxT2U+ek8sEQb4Z4RMSRuSjRmJ8FlHWa9omjrFnEL040DkhjnL4VzQln
+e580sW+uz9w/XEX43c65tvHQv4V+l6qPwcS9hHXM9/+GPKn/rCLfWyTqOMi
2mgAdQxh+wja87OLrFUlvSut/b8sIp55xtUXGz8mXwnx2dQRd94gn33son5b
6s1lJ767Muo9pO3/8+nonpbUa1iS51o544ylF46+XZCfzrNO0NerJ3tv4CjX
XxJ2c73nQuOV5Wuh52BPjNNMw4YW2HABNnxF2q/z/L8VfAu7MQfrzu+PPKvT
6I987v2Cuhwrcl2+4nck90/melqV70nR3gJ2nsPORNp/d6b1RKUZKp7a5+rN
VSv+GPHIiBdH8/YbyGcev+dnWB9U7474YktLzBl711BjI4WLvBwbu012v/Qg
v7hi7x2J8y8c8P4J+xib5G/Nl+nGb6v+8n1bH/i/vcp96+vNCyotyln9rUcp
jJbWVVqjtR5jXzH5ib1M+nX1tkdcPrJddYmn/eZj/4KLjb3fHpy1tyF+BvE3
EL+B9fHSTuZ8bd7PWsXSHGxJ/im9zZMfTfp5pJ+vM0DKeqbeNmgtKh1irVku
zvN3TGNjKu30eIXPPT8gfjltsk3fc8bgmgLPkbrSbjcmmavwauLur7Geo7jb
FiWby20/9x4gbOXevxOWTvZ1N82fCT0jrF0sDWNpqF8y1BhUzf830A5bB/us
P4m0OZWBzjp23ZduPgFxNnycZt4GaQv3zbRGq/ybtgQ+TsLX3pJkfN5laebT
V3pxZYlLSxhq8cfcGDKHzNAC+3fKtzORucpA5io/Rdrfc3jg8yltZn3TpNW8
Kc8+VSprLr/P8nfvGHPWXEe4NsYavysq/L2Qn4HW3/+nK6tfzT3kN/MOYU+s
uRA2Bpyoj+bZR0r+UVP5XcnfnbguxpZSwr9j/Q2errO7GOszJ1U6z8ogv7dj
zZUrzmJhEufn2a9X58abNU9P81pbetGXVlozWrxxxd3MHSfe37mDzf07kfcx
Osv7b/JR7R/4qZ6i3O8yvLaQrrB+pTM8L88cTDrTHkDaWbTtW7HmURKHkMb0
VdS1B3U+R313VZgDQns4t2DLPGw6yXVr5tVru5knP13r1Mke53vnmQtJPEji
YlydaB+VLvn2d5SvY2K9+ea0pxQifRohg/TxlHWLOCYuNEfIvjSv027TuQ7h
20ifc4lDV+OhdAnEgy8OfOFjjgXYGfnNdQp8554aaky48ODCYQu/LSyJOCBX
JhqXGkn55032Wlnaa/d1N9Zd2JpTAU5EPn761uk7FE361pPd7+3zzN0j3p4u
PJ+DeT4baW8q3fwUOjeskc9ChvthVIF9lOWfPLrAPvryz59IPpeRz3jyKSjz
+CFugZ3E7yKsJT6Gtk+lDy6OMLd0UaI5CJ6gnLQK72e8RdrFeu41F8SeROz5
ItLa55qjSHtaGtS9K30tDu/zB5vHu5O4o+QHxb0Lysx3KTxvDHFd88ydMo16
vFvhdyVOvrLEvxFtvfGbM712PkLcKv63S3sX9MPF1LGWOh4fwnoywT6B0sR+
qyLQxQ7WJyo3Nmxfc52rpcn3IdUc658WMtbW8gzH+VxHPlP3ax3Hs18W7HmO
4PcW3ocXuZ5POQsSzBc6iDZIoi1q6Zd/Mddqzph8x0X2yc3pY79c6Zx/VGU9
8Y6kHcA9ZyLd5+Kd0lmK9AlvSzF3wSjSjyZsJE1P0p5X7TVUKnaGCNfJl5sx
7INy740UkObPpJlAmtcjraMu3XPtadYT6uKsafx4jnWNbw6bO0+8eV3JL7nW
abpQZi123kse0sLKTrYelt7dWa3Nl9Wf9AMI80h/hvQ/E0JR5saeVOLv4ET6
qyrTe+wXk7Yj+U8k/Z300ZwEr4PyST+yxN8/6cbHZVo7fh/P7QFCVpw5CY6F
zUvQIihf7ZVLnn2FYyFNe+qVke13eBjxBcQvJX4SdtUQtkd632RZnOP7kbYD
91REma9LOg3ap/qedFXEVRJ6lduPXD7k0pD/tMrtKf/xkj72Ideeo/rhWkKY
clMp9waue3Pdq9bxl09hvTqQ8SPevEpvjjW3Um9saKV1fpT5yeaHzFF2FTbs
jHQfruS+XO6fHm9u41lpPhPeT/xs4leLs4Iwm3BDvPFb1wR4rq8inNeoSOuq
hZPNu6s9dHEc6ZxiDnW6PMv+Bi15LtrkWNt6d1/euyrfuyTKz4v0r6WDvaI6
0MLm3crJ8P6bsF8zuxr/JbzX9QHG7U3snDbFPj8D6evRJZ6rbSd+MvHLiA/T
DhHkOYY8v6u23rby30iactIsIM1oftfzd/t4c/b8I+DxPkQ776Cdz9HOPbm+
lDCD64/5PVjod1n7v4qbTkghrketrxMotzHlDY2yZuy4fvZ3Okt7HK7y87yd
dvgswn4Rf6P8K7FjLjZ0j7fPkeo1lfQLSf8Kaf5BmqtJcxfxnYjbzP0fcf9z
xI8QpwnxLxGXVGU/1Wu5d1ZW0N/Ev0EYrvOZdPN6i9N7fbl5A8UZ+Dnj3PsF
3uOVhtiYZOuIbaBe91Ov96nXBeSxi3fpfym3LXmPrPL3TZqNS1LMwyKNx9Pd
rPMonuMRAT+SuBGF0xNGT376U/rYV/8S8kzoa5+RpbTbcsJjUeasapNu3ipx
LDWtcD630q4fk6YuynpZ8SHv8Tcjj53Ytp18fgybr1PcUGPTzV8m7rJO1Ksy
2dzU4tA6v8KcUa9Sxyeo46E481W/nWzO6meJX0b8e8F7eDjOaWaGrYUgf+ad
pHmaNJ8TLx4scWwJJ5SLPUew58sIcyUeTTVforhapwd+tsJFRPcxTkL7mF9H
+N0Sr5v44H73L+X9fSTNfHTtafMK2vyOSPMub0k297J4Fr9LtW+feKnFHyfu
uMGMh30TzEE0mzabQ7ibdvs2bD0DaRmcTjWuXph6YUD/HmA8c2nn27P9Tcmm
Hpdk+kytmb7J2JBF/CXYMA4bbsaGUsrKSTAn0jZhxWiTT2iTJcTflOB91N08
Xwd5zlKJLxJHVrrXfOI8k46I/HakJSJ+tN+50QqNoRJ+aiH53JDgva8mjA03
VHjtKQzHsD7GcbTCtpPYlhdlTrXXx9onZOkQf1P1Pb2det8ZNv+qePhah8zF
JyzX4rDxXJrjZlJmBmEg7+7E8dZMbx+yBpv2ijRPDfP/NMIV06xxonWW9GYP
dbfmbKuQ9eGkDfenC82LpvnhIX37sbGYkM7/G9MHJa2MaxGWQziOYdSjeZbP
Uo8XGGcljNVd1OudsebUa8L/S6vs1zGathpMWz1Amtuo77UJ3p+XZtQt3a0b
tYh7F6eZc+8U+R0N1iAH6N8Ofb2HJu3Khq7Wr9yAPQew5yj2vET8YeI7NDMP
ovj8ZMNJ8jkcrB2kUfx9d3Ml/VPfIerai3Aw0nUdrD1zbD6Czelct8HmCwmj
sLlVobFzws3dGbImk3zSRpYbfy7s+Uzu68P9vSLNcTgpbF+IoZRbyPjzHOV2
Kjcnq3ibD6aah0L7/HGMkyfIPz7eewDNKP+PhDTif6v1uJtDP7fqZ79H6V3M
S/N8/Q3K3FXl9IOi7Gsmnfpz3Neb+7dhcyS/n/F3NPn8g+dwYrX1u+vC5j4W
73FRcJ907l/Kts630pwYZi1S8d+rjbYGZQh3ODvstfpzpB1X7XvF7dc03fx+
31FmwkDjbW8KWTNJXJqNisxFJb/HRN7TqmRzwv880PxQ8uUsot/DvNe7eY/2
kP/MavsxiserRZF9V6+i/HHj/Pwe5/938A09RJo/51g3XZrp4lN5K2xOlZ60
03uB78SZMcYpCaOk9t5d5XOHx2nPJ7k+Sj/M4t5ZYe9FSA+8ST/7rM6irHez
PWfSXEo657LtHuzvh/2TsW0x11lcT+T6MGVd08c6nuIq+G2Mn5kXKGtDlddf
m8lvfLW10r/medtN2zXj3mTK/S7H/rriSW021lypReTfmvxDpGlDW+3XuKMx
J9V8IuISEU+kdE20phOv3tlynz++R94/UcYjOmuj3I8I+9V3/M7Dhn1RxqXt
7GNsmjh6xVMrvtqZlHsdYSjl9qL8OVwfJ58vsKGsr89ZxLkivl3xrogHV3y4
KncVY9G6Eu+z/UKdUqjbWuqVxJjQOsFnc0dom7/0sZ7pbdjSgE31mq+S/rFq
9+k5bN9f6zmgtNbP5diP90viX6/1nHM5bfsgbfsxbbuHuNP8bxV2FofMRSue
2NbY/B7tdn1ba7BH9bMOu/h55e8pX9n19P/GgAdSGm7SMJN+2Vnye5d8W8R7
v6zmQvtIPxI2Z6XORpvRNh+RJiLefLSNxpqTdmakx1mNPeKybTzWfLYDW9su
pRE3annY/Kityaeh1vPAht7WDND8RLoWH/e2tsUK6ru6ynn+MND8buJ2+5zr
O7l+hus42qmj5rvUsV/IfLuq5z/pqzdSXf4b+p708zdF88uaeD/P0hJ/IMXc
eeIvETexOExu1TebcFLzxlTzmyhe3EUfh81fdAXt3CPTPlTik16R6rmWdHfX
pVg7rz3lNuQY23J/uXmrNS+TPvCmFGsEC/9yMMe++A+Xm5NaPrflY4wpFZ5U
3MyPBr7Nn1L3+dT9SfmGM2Z0JXzI9RmeqR+zbfdYxreqrtY1rtP3lr54G/s/
xfZN4/xNlP+cngnxK28k7y2p/nsNz/OmEu8vizdlcldzp+i9nRHv9csybLh3
oNtRGNZXexvHOkNrYvrsUvrreq7DWfYdHUZ9i6jv8zonHWbuCfFO3CfeQeLP
Ef8J78H0HL+n8re4JvAfvYc0K1PMbbga254v8b72Mep6Itt++69QzmuU91uk
n93rtMYiPImNpVO8nnqU66Ipjj/KfYv0HmpOwPtd2tdzQWmviWdWvtbtGcOv
TLZ2yRrua0U7j473muE44ZieW56B9L4+l8zi/zkBTk3zaT2PrQlVw8wnIi6R
wnLjJ4WdvAmbF2PzW5H2AxOnr7iAvyrlHexkHsj+5Pf2FJf1b+yfy/WjXDcv
Mv+jvhf38nuK/+XLJn7v5u9nZeMY42mFpf1hjHGtwrRu09gf9ru9XevpKu+R
vsmzepZ35Aw2zyX+5izb1o4+eZi2uoD4RMrdMsXYx738Xl7kdZB0kockWyu5
Dfkto002aG5DHlurvDeSxW9DX/sarqNPt6ZY3/Nb8r4vx89ty/48y9gxo505
rbWu1XxyI/lsrvKaPpYyN0wx1vOofHuJv0Z7L1qDRXoceoH/ty/ydyqbe/sT
niA+g7id/O9IvLmjxGMu/qhvyeeKKt8bgy2PVrvv9KwIPynMZR/ufW2Kr0/y
/+U5Hh8q6N/xXa0tfoy+e7uT+TzHkl8k5cZo7sN8bQjztoeZs/Xk3iuzPbc5
yLvYKt3ztjt5lu7L9J5yDf+fku1xSPtTl0TZV6op7bNvvM/gmhKuaWcsmLQK
Wwa8CtJeFte2eLPPI32L/k4nLTLxF4u7WFpb0vSSj+uf6YuoFHN79tK+VLbn
Du9g+x7qcCHXPbCtVaY5bqWf2T1k7vQviFtXaR/j6dy7M9tr/zsKzVcirpJB
eg4IW+RDdw3/KzX+ZH6huUs0j/qBfDaTz7NaS9In75Tbt/o0cTX0zYPy9SLN
Gv5+hOvLset4X/tATyi2loN0HKQ/9t5U4xAXkfcTlDGO/HuRNhSs3w9Rr31V
bs8c4g6S58EI89UdDZuz7i7y2T/VmMX/kL6BEEf66kJzc4iXo77YfsLCvC4c
ZE01lav1yeOExwgVpC+r9Tf6ea1NA/8N6QC8FPhON47yXEDr65d1vsZvcpTX
HhsJL8aZJ2Nu2GemT4esmSp/lcpi81EKa7uSsv6quYL2Q9KsEyyN4LnE1dQ6
n4ma+9fatizq3q+v634zffefbO95ZnHfipD3B49T7wNVtkd6RJ8nW5NoMO/C
Pt6Fb/V+YcMV9dZVGUR8SZHjU4vNaSg+wz9Qzo5Kjwkf0E4xddZq7EMbhFKt
lfAJY89LPNulPKvvk+ZPdT6zkEaI1kPaM2kgzSHCENKsJ83ZqdavWcv1t1ON
55Ae4eFgfqczV6VVnhEVPkMVrlN7jvLTlL/7fvpkVaX9oMfxfE4rNZ6rt/aS
y53P2cHmWPywo8+x9Dw+QDiBLduxeXg7c59vDvjSt/OelVT4nFq8jNLa1L2d
i835qLPEvcy7nmDelcp714D9HalvnOLpo/X00df00ZPEfzXVGiJHsPN/sPNx
yt2HXb+m+oy7DTZ3LDUmXc/oIr1/hGn0Z3a1rwsjjGOR/7X0lxKSrcFUT35T
M+0P/Udsa1dv3Ofyjj6L1Xnm+/RzcZH37sRNJZ4s8VMNYdzITzFvrbSVZnaz
vtJL2NyozrqZBUGZL0b4nFj7wRsIzRmTDtBu9e3M/y3Obvk8vDDIukTq0/uI
eyDDZxHSq+lQbB/pZNLfk+69lFMa0/j7ctJ8Svu3SPf6dzp1n5Httnhafnqk
eSU4q1wR9F8y+YXqrcOyiTJ/mmocyfw08+zre6w9iafUD3HW+igp93MoX1vh
rLSfuIByF4atKVNMn/5CO+ygHWZrjyfVvHDLqOuifl4XvFhpX3D5Yu2hr5+r
9VpD+m/SfpNW1Epsf5jwJPZXDbfGlfSt1pDPE+SzmXy68U51J7xPPgNZa4QT
7AMxfgJt29++1lPpo+voowP0UZr2yLM9ntdhQ22m/dJvpu57plprtXqCcT7y
Y59J/GtTfdazptyaKMLHzZMfS4axT69GeK7XM9J8KhekmlPlquHWeJO+2yeM
If+q8rMpjqUZheZZqsO261PM5/wMcffQDu/GWbtvbol9HsSvL31K+VpPKzRP
k+5dy/XfCp1emnLPJltXbgL2fxD4vc/G/t3Yvxf7GxG3l7ab3M5alysC3v5v
aIP1QX/MCVvjR2v81bTTEPkdRpmvSHrA+rYe4flvR1kDmpkL/6/p3vOcS9r9
2T6vOUf/7BlvnwH5aap/hH+SVvM7Xa3XXELartUe8ydxncH1fK7/Cyc6cYQ=

             "],
             VertexColors->None], PolygonBox[CompressedData["
1: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
+IVltDR90d9QymgI8IH+i3/9TpRvKsp2LmX8BP4TmpntwEewlXA10XcJ9L0b
fVdhTBJIHz3fOd/tQ/yCzu/HVurfCHQ0LMHWJjT+eh5vfbz69mfQ7rTX57TX
CbTV8aAA/c8X+oQw+oNQcCvW6rDq7k31ab7GU7z0PzM0wf5xRGuMd5D81SLf
+em/N5G/D8g/WzY6yP4F/I17VjOjP4PutMv2apegG3QIuplXgbyDYOiFfH/H
hNvamNbIAshfafJXLofZ5L/hG/oSXCLtANwtSP8R8WIzWpn7I/NNeN8ANaEL
k49FPBeCQtBjZdtG3RrNWOsdOEe44c72XxEcxa9zedonfolar0f2KMq0PmV5
C/nblzWbSNlCRqUzW4+PuJPTmc3HUtIpqfICS2LNVuQ7/j3Tmc3IBNwOvgU/
pLN3E3GnwN0rnb3bjDyxyDMOWdxBK+iy8CkDEqDfoo/21Jd24A30IcrjJeXz
AhyEjqE91qT9/elcz6uOfk60tLqsNvYX/8in42ysqzFvf8o/kO/PVOd6eVHa
6kTa7ARQBHoj8QdRtweCDdAbKc9o8nMVXVwB/Xn/M+/XgX7Q35C/BbI2B1+h
p8CnJHzGp7E1vr4qH/JxA/SBnoms85B5LpgBvQv+rZuZrm/Kxgv6BO8eQvcF
LUnnMfmJJy9x4BH624H+toOH0CHkZXJNs43zApd4n5UyPZXO9hukR8bp8JhB
3JKqM7gn4p4AoqFvoMfNCba2qjXWv+mXd9Ivn3Wu1/uXIgz/39dBTei+1JWu
Lcw2UzaaW8jzDrAd/KKn5req2tyweNQifBjh1xP2Z7AmxspcZb2JNtQJdyLu
VqAj9A+gI3QH0BN6C7w2gTh4nQZ14NcYfhvSG8/bsv1Frg2p7Z99I/HWEW+t
bGRUNuINnQCaQ0eAOOhYEA59mbbclOc7ZBkFfkJ3F5vb3gvtwdhPuLz4u4F9
0P+gnz3IcwFZksCKcqZz6VpxShPmJ3jGwesUWIr/+ebGS3NoXfBPhlcS6Axd
Aawj/FpQHvo4dTxNdbPtaARieHexksn2FlyDbsO71uB36D58p77xPSqfh28f
359pMTYm0FhgKnQhnkd4HgYFoVcSJyfP05lMxh7Q/fDrC7pD10e/EU77HdkU
1cPd1GlfJJ1fV3/Cu4/gGnQfvpG9QGnSnwNcaW9Bcbb2rDXosfAdoT4HjNGY
pbz1SeqL3oKnZc2mU7acO0Ab8pIr2fJyCIxAf1vxz09Yd3ARv0GkNz+P5Tkb
/gn4nyHuaVCW/B0DA8hbFtCRurGYOvIj6AD9woO+hOdJ6ksMyAG/VqS5n7Sa
gue0iUKVbKzeC2RF7jOe1lcewT0gxnQmXfWHdi1v/7T6l50pQC8qb7atk8FJ
yjO9cz9EBGhInKPw7wevR+AHT+MpXj01tiZuVAuznVIZJJO/t+TvDUiCzo5/
0RaW1gy1b9zuLSytSWACfMbAZzQYD/2AfIeS363ktRDtYy7hpzntnT+Chbhn
OO1x9U62wqvLm22o8jQZHuPhNQ5Mgk6F7h3gOzpLyfMZ/drYWBtbPQat0ecF
/M6DxGT7NqkNqe3oG3UE/v3KW99RhzTSEu46fWF3dN8NrK1s/yD691gDvUV0
ZRsLaEwwOMZ0Jl0NirFv3Sz8Z1a2b94T2ucK2ud+2mZTMK+yfaP0bZoLHUvf
WoQ+djh96zCQgLsY7hFp7d1KZPYlXz5gBXQVnt7gT2SLpL5t1V4f+snb9Jtb
NEajH/0MXtK3Ds1o/04bSGt9rP1DrUKWn0C4i+2vS0V+r5LfLvDrDNpS3+YQ
fzZIhl7IsyPPDmAB9Aj41EDuXpntn2AI7/5raWkNAdVob03izNZJNk/Pyf9a
zcmRVjOQSP5KkL+RaS2Pc+E3QTqBV2b9c8LPj7R2wmsHWIWft5f9W+of04+8
r0EPq5Mt/3nh1Rye/Z3j50hot2bm7gea4s7TzGh9v1R31CepL1IdWgifsvAM
hdd98n+c9H2jLe3t4Cnyr65qY59IcIq6sps6U5i6UgicxL2rhdEFwWPqd2Qp
s78vTv1ewzd1Dfr1gHdJUJC2517d7JPPg6/o/0ug9S3qP04h0wlwiLZYnvzO
po0do62VTm9zVPNpq5k9re1Hgef6BwQlwDOQQH7Owe8siId+rf6CvJ4Gr9RH
IM9o5MmW2/4PTvL+T94/UbrQY/EbSpjs+K1g/DIGejLvcjn/Lx7C9z5YA50r
j/3r6Z9R/4r65ztP2G/EaYf/F+LvQD8b0I8Lusmewfpe9QnqC9QHT0FXB9DZ
fjC5lPUVauNq2+ozavPcS55/IK/3wAb4/ST7Mnilk704ZbecfC4DnrXsW7vF
+e3XN1f/svpH1b+p/mn1rzpddcDT/lmXIety/UMhbxHws6fZtMqWVWOCK8hV
Bbn8wGXo46S/s4WVdQGQl7HOp9Y2dm8IGjOOzkt7cAONoJcwnh4XbmvbWuM+
TVqfSfMTOJVkc1NXaLuX/WyO6ni8zUFq7lF7/lpR96/Emu2VbLbicV+KNVr2
On7E2+9ntn1fCf8ffM9p7h58gf5A3blHHboL3msehD7iGuF/Bz9D55YdhexN
CsEXPETeneFmuyMbniO0v0OgJbo4Dlo05p+ru9midwZ/Ik9R2vtap33EAOUF
vpdAf2gH/wq/Q18Fc5HxCfqa1Mb2kmhPRy2+R6X4v/AAgdDLkXkx2JbLykNx
U8EjZRXjsZn0F3U32/yRRcw2zot0/stmNnK3CJNeNo/gJvRWjSfB+2y2prAY
HZejPZcFP0I/QJc9vexfXf/sIxgvL2O8vBQMh+4H//zEf0v8keCx+qI4y6ts
QsbxPzi0m9n2nAE7kG858o1CttHAQfhv6G8CvP8BS8i7m9NeVWNk/ctrzkDp
65/+Izr4gf4hA/+jP9I//E45pgm0/jkFeEfdvES9bQCvEHAZ/5T4d8DvKzx7
E7cnWEzcTPCIQZ763a2suoAAyrs75f2Msn4OLvqYTa1saVNns3+DAcjTP9b+
EdpoLruH7b3dBEIJ+8T5/6k1tvXoZh14Ax2Lfj/Fm827bN21ZpqC9jKR9jIB
ODT29rI5E82VVMxideWrys/P6sxQ4hV3lpf2R67j3UXcF8Ba/VdTT4LQUT1Q
uZr1BYXhuyi99Qle5L1idVurvgX2E+4T4f4F+6DX8X1aFWd7a6qB+9T3HeFW
12XzF4Y+i1P/zuey+d4D6OsB+qpP2QaDlcjQwM/2m8t+VrJf5N2FBMtD2ipW
B1X30lQxv++8/+ZnYe6Sf3enfYtsYGJxX4i1tqw9o48orwvdzZZ9Ogiinm5p
ZWvzfUE75I0Lt7UHrUFsJfyS7tYWVOfKkc8y1ex7KxvawzUoq9Zm7/Od+pAB
Xof8bO1ba+DVyF8n8veYuvAE5KHeD6XeDwG5oTMTdiloQtiHlEcWdHgFmR65
mEyyDdGauNbCZSMSiu4bgGGk/QpkpA49pb5GZ7Y+ZBF90A7G2NvBQugB5L+v
l43XNCf2Ej4F0Ft+8MLZ9q+rz0qwPqAHvLtVN9tgtZGayFIdpEWWH8Ba8lcV
dxWwRnP+1I/b9H19qR8PwZl4s6kq5uwvrtMfDWtj9hxXwC7K/xLlX4v2dJXy
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
mRSDR7F3FKNpN2W9Q5m7wS7kN9sznoc6Fs8f4CeOTezs2KF6ZlbS9tZc8xht
HwuWsN+0k5/NUeAUddkZH4wtWtW+wfKRlm+0fIQPMFZaMV8sz3ipAB4hbb3g
+0H+eaMYm/ntzIVbiuuv4tzt1K05bWsGunHvWtK+vyo5Bns057qQ5mfy9gyz
77s4CMQ9IB/4mpxfz/nWYebAHp1mjg5xc3wO1nGuRo7PtwpzLMOHeEbm3uOY
hrKdlU2sbGFlQ/sW9e1FnvNVHXPhCPt/yF8JHEYe1cScauJSK0C+yPGvOP40
aUtQ/rfyHyR/KeRnOXaF/bez/e7aDj5lf3Anx05XDHXd21McW1/V93gy+xPY
Hw8mIX9MexqPduw9cUx8T9442tMRHEP+Md5jUGNP/sIai8fjHd9JY1Lc0p/S
1k/uMce0fElm0s4ZufYpichxDDXFTkskfRTyDtAF+VBVx5L9FAwM8/1e28k+
0PJ9bsmx0p18D3Xv3uNYF+5dQgfHNhbnvPpenOW6N7oHutflOtl/Wvdcscd2
cmxHjmOQvar0bB8Oc/xhrU1rzVi6YumMuw00J5u42LoiX+B5jxjmZ12c4y9Q
dl3K6EDeO0B7nsHneRbXgHbINyh7SdD+uz2o3MljRGPjI+rUjboHKK8H6Ip8
ib4MobwS4CJyhTvtUy9f+vJ3mut4QjvHshTncTvytAaLKpmz85/u5nwR14s4
HGS7LRtt2WbLhlvcLO+Nsm+YfMTkayEbb9l2y+dCsUzuQr4TVNAzTT0yqe/v
4nunzvFcq2MHx5sWx6t805/v5L5VH5djfxH7C0HZHPsOyadIvkTyISrOsQu0
awtpq5MnlXYndvC9W06ZzZCbgCcq+ZkcyDs8U+91MAD5FeYlPzKfX1XCMWLz
OJ7by/7i9SMZu5xrSpomIAb5r7GM2568r8E15BVxHOPeXAPPIB9n+0CcY/O0
AUe5Zz90tLwaXEdeGWdf2TRwivMhcfYv3ANKIm8E71Wxv2FL5NWkWQVaxAXf
zRoTw/2O/i3dOk/pOmVz8vNwx/hWbO+fhnstTDpg6X61JnaV40/FOVarYrY2
5f4dGeV3nd55f3B+UZxjESgmQXiGddbSVY+WfRxlluX8QM59CM6xX5n9u5A/
ATWRXwafI99TxbporekkBHXS0kVLRy3dtHTSV+jHi/LhrG9/MsWe/439w/Ud
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
             "],
             VertexColors->None], PolygonBox[CompressedData["
1:eJwt3GUcVkXTB+AjpYCAlIBKI93d3SmhpCDdpaJIqUgLihgYICIloAKKSdv5
2IqBYAEWSghKvte+ez78fztznz2zszO7s3nu4oPGdxuXIUmSJRmTJLO0/Lgk
+b1jkpQsliS/Ssvh19dNkiY3JEljeAZ9Se4kqdw8SToOS5IO8FyzJHmtQJJk
n5gkf3VOkhXFk6TYNUmSDb9YvvvlWQL3oxcUTJLbaymnP9kwE/1lziT5tHKS
TOmdJLdlTZKm6E9govezdkmSl8mbQ94EfHb8IvRCmIx/xbNc9ZLkLrr1ptdl
6JxwlB6l5CkJuSZGncrKc7SOdy+jl3qUwefqI3+VJKmYLUkelubEXy/P4AFJ
Mgh21E6SZ3MlyYCqSbLWs/LZ/Y7uD93pe7pSkvwH6+j7Ot3LK+sfZa9VXhNl
l8NnIKc2ObXgf/AyeZO6J8kPpZNkKrsfkN7cPdqpIBsVZaMlzaPNGkl7S3tB
E3Rdz6ZcnyT7ayTJEzmSZHRNNsOPH5IkfZokyZn8SXKddBx+sHSy9FYYir7o
8iQpjv6zcZKslO8PaTH8TDLmkTEXfiV3I7mt+H0S/39YlA86JUlLfPMWSXLx
8CTJAm3QmQslyVVl6AErIHsPdlCffsq6kdyJcAP6nLJGsMEb6r5F3Yey73D8
sQ7sOJa9YRA6UVZH5UxV7ifoPMrtgF9MxkNkPQgPoAuqxyy6HqTrOrpOo/9d
+GRkklzaOkkKXEln6YURfNIvSa6Rr5p8naWv4S9upT6etYCs6J5XJEm30Uny
VtskeRMGtEuSZYWTpJn6jFavo+r0h7Qp/hXtpqN20wF2oHNrcxW04zna8Wy4
E0bnjD57Q7/4UL9o3Dz6b3/5JJlxHV2zJMkQ9PcwX/5q3q8K96K/8e7H7PEn
e4xkg7vY4iP8PnX8Gg6rx4vq+h26KB3m0WEuzIHZ2nWl8X5jt/n6b2HtsCJ+
kPzvqvs7cI33TpHxqrZeRXuuDLvQm7T/Bd4r7p1iUHl8lJG5bJL0UO/usIQN
Ls6UJMe985b2P0VfeEN6DF9EvhHy5PV8pXyF8Y/RqSodq8Dj6HP0e76neldQ
H5hdUfu5hD+Vd7XyZilvJh0K4I9pK8W1kRu0l57oo7CWHXaxSyt26cwua/Ab
2LUG+1aHLbBM/9jp9+/k6yffGPl24D+m5wV6nofP0LPovp38wdriVfQ6JN2G
L0rvUeoxElarR371yUZu5iCbLysrLyt6J7yA3gpN0fWVew//1eDH7/hwMXoR
TCPzAN1fU48ZypiK/5ctTsLXyh3PNqfQ5/nlM376FEaiLyZjlrxHvPuud+d6
9y58R2k3aVdY4dlqz6bVieUE2bejK5Gbt6F+NYgNYF6DJLkyr/iAnoOeDXk8
n+O3Rsq7VHk7tYls0ob4avrcSXb7B04E+7HjZ37Lxzd5YROs56tFYl5zMbCF
uPeDGLgQn4VPe/BxdxjLx70uxuuzXWChODBaH+6OziRfV3mu83yUfBnxtdju
ATbbp+73SWvin1PHv6RHoBS6ifpO55eT4uU5/fJO9DTIAY/5bYXfcqEvhc50
LkTXgp1iLAkxZZbfz8h3GuaiE/59mA+L8mFJPnxMuhR/Eft0Z69ukAV9B1tl
Ma7czl8z4BJ0D32/UiNxbzDbQVV0z3x01JYfU94jbFRbW26Mv0t8ySGu9BJX
HpDOxPfRLgeEGAhHYBT9RrHPNexziq06SUfiT/HXcchOhzb0OYke5d2J3pkA
mfjoZu/eJrb0F1PuEF8+l07G3yTfNHmmQk75pshXSh1bq2MZ9S0T6g2/eH6t
vD3gWvS/RcSNOjFuh1g9LO0nRfn4RC/6wGo+v6D/1vFOJe9UhDegvTIKy3dM
nnOer5LvKnwFNurORuPZ6BppeXwBdpgs5t4KBdhlAPtMJu9OcnKHMYDOt+K7
6bPL9d1l0AtdWv/NRa/vtYld2sR30pz478i82bjWhP0mSL/FvxnmEtrpBKiE
vlF7PUyn+9GvoNv4/RD+ZfE6M7tkgm3oN/X3kQPVv75+l8e4JR2BP0G3AWPj
eDUUfRwWemcuO86B2XA52+6Tf7X8q+B79ONk/E8f26KPdQ1zHvSHAfSexL5l
2Pe09AP8fvXJK80DP6fxYzq5c5UzB3Kgcysjb98k+Y09HmSPg9I8+Lye1ZGn
NuRDXynfBe2mJJtfw/bFpOfxl2uX47XTcZBJOz2gvdb3TgHvFPZOfmk9/K30
/cbY8agYMZy+t+B/4YeXlTdeuS9Kf8Z/D8+hR/rtaek+/D/qPkF7vVjbHSc9
gR9B1jAYCl8Zj9uQu0J/b6KPN4Y16IPsU1j5LZTfHIqn/bMQPcvQu3ToU/Se
E8YoNvo0nVeF+VUmfCFlFzCuVTeurZIWxBcieyLZ/yN7vLQg/hp5H/fOcujA
9rn44A3tZg/k1obOaz+vo28tpS/BjTC7q/H5Ij5ih1zk3EHepdLvw7xMvXPy
QQ74CX0fW1wUxol0jrxFmuB3Xis2lzO3NOn+RboDn0tZNfmmNx9Vk+bEP66O
74hjb8NK9OPq25rvTrDlLWx6TNoKv0hMWmgcuRuuFJtuEJsuMU/bzG6boG2Y
u5mvZR4FbdgI7oWuV4lbnp2h02lYGebrIS7IV9bzLJ7vkZbGL5SvOpn1yLkf
fTc8q94d2LE9bEX/yRZHzXu/KElvNvpY+jd+krwT4GWyS5JxM/pf8beTcbYj
/IceLhbXFe8uEfe2sH0WaR3813z+qnn/K7BmAvubW68PsUps6A7doLW+WJlt
Hx/Kl7C6KfubJw5TTjHlFaXzaPRQ6A35/JYX+qDze/YwuV8pZybZzyhnKf4m
z0rJU9rzyegboaE20lKbaQGLtJmHtLls9GxEz4aQE72V7pPod1kab0PcvRk/
mK/6w0Jx4A/9YBC6NdsegLvYuTEbt0J3Fwf3wRmxcKf42A19Ff/uV/Ys7XNm
8DG+hfo+p65bYKf6HlXfBvpnD+2wOzRJ54svKOuY+HMU/oYmym/NXxv56zf+
Widt1T/Gr3zq+BcfHR4WY9kG9a/bUixkg5rS9fjK9KxIz0vp/K60Ev4K7/3u
nd/g7hAHyehGx9fpml9b3C3tiq/LFjWhCrs8yCZ10O3F4fxicG6xeIc43A4/
kJ7D6D0UBqPb0bkkGcfZfQMbXI0uAXvx09M5Tyb8V/hrwjpDfTbDy+r2tzo+
x5/f8e98/n2Lf7fgr+CvX/TtZfz1o7QQ/qB22Fh7bAS/o/tqk+2sJb6AV60r
7rPGaItuxw6vhPYML8Lf6ptJn/1DX/wdsqIb6sc7q5vri3GDYQ/6jUuNbeyT
0zu/eudn9roDP4YtsqTjeBjPR+Ont9c3x7AV/E8b+F176C3vD3AAPvRuVzJW
03uNdleC/1dJV+Fbt4j9P/T5duhWkJtO/9CtHb3yoi+DHepzj/rMUrc8fLkd
P0jeIt4tDCPQhcm4u3ScY4V51aPmTtXMs55m301pn+/A5hvxWb3TyTsdoX2L
OB//gJ49m0ddv5O+j99Azw30XA+b0GXo/gi580tH2dmU8zB+pbbQTdvoCmvR
e7SRmtr9mtDHYaN2f8i7xZT1ZxiDlbEwrKHxx/H3pXsOV+OPhb0K+rXWjltB
cxhQKK5fL+0R5/qr07Vs4bAmUuazUBJd2zhynXH+W774BrbzzSJzpAPoXegl
6Os9349/A39Dup79Cf86/kq2zg/54F8+6MAH89Xja3XYC1nR9Y0PN9PvCF1n
0us36U34Z7XpHtp4d/gabtfWW5D/MdkfwSby71D+HfKe8c7pEFtbxJj3j3SG
36fDKfQ8v63h70n8fDMURZfn+0eko/GjoAC6mN8+pVdGemWA25vF9c8z4vlT
sA4+FNd3i/EL5B/gvf6QLV1/90ZnQedDz5L2wn+iTc/Vtud0jOvasL59vlkc
H8OY2BDds0Bct+RL1ydhnRLWMHd0jOvisBaehf7cu13FhX7iQ1/oiW4hRiSe
72ePtexxFxtdYJ+nlT9F+VXpUga9Ed41N95sjvy5uXJz64938J+oz/MlY52e
ln6MH+S9XPLnhPtgDhm7yHxMGTcqo4IyduLn6p/l/FbabyfF7Dn4f6Xzpdv0
24qencIX15a2aFN1taer0cWgr3bYE0byza4wJqELkLuJ3GdhoXeHk7tH+x/n
3bHwBvpbfaFWiI3q3xbqoWuxwQXl3KPcRVDLuxW9O4Scwugi6Felg0Nckf43
Ouq3QN7K+GvJXp/uZYU9rR74+uLCVzBDvK8r1tdDr6kc979CvqfQq2GIMadH
ur8Q9hkG47vpV5msqSfqW4m0K/5R/f1hWArL9P/CIW7x/Qnt7ThUQnfWDpaS
n4l9SrNVIn0IX0X+C2L1BjH7tLQy/qg6zKD/VvUoqg5/49cZa+qbB00w9tSR
rsWX8eyEZy/LN1v+0vipYsxgMSefmHNIOgW/O6yttLEJHeP+QdhHeEHZ5ehQ
jy6lpVtDbNAepmkfU6Esurq2sUf/HGYcGgrZlDlWX73B2vZBa90H4Bltbbk1
79/qWU49O6rnculf+NuNET8YI/YZI/ZLZ+B/pu8tdJ0Eeeh7RWjXdBxH16vo
fFQ6E/8rW/wM1djlSjY5jC7NJ+fDGgwqoCfw1a3mkCvNJZ8I+2zoyeaTnfi0
L5+W59/T0o74BvLnVMccveN+bNiXXa1dntQ+s17B5+hV8Ja4f07cPwtV0G3N
h66W53txdx9MFXPKadffNI/zqTCHCvO/MA8caQx+15h8izF5hjF5xIS4Jmun
zLbwSLo+6zBRGfI9K98N+mR7/AL6b+ObC3zTN+x34Rvy80Y23wBN0Dfx/b10
XAQL4bByT9KlI9nLyH4MHoVrlHG75wc83w9z0H8XivssndI1QVgbhD2XLuLU
S/z1Br9VU6fO+FP8/w//nwhxhv2asuOyEA/x18PPId6EmKg/tNYvWkELmBP2
Lumama7d6JpJOhX/ojG1S/84bwnzlxfCPE35u5W/K6zH0UXo9KC8pb0zxLsl
pA/gz4sbi9nlO3bZqx2fw3+gPjlH8CV8jC7FfzmNQ8fF1WOQB93GePSV/Gfl
PwP3kvEtGb/qoz/DIe1qZ2hX6IPy5fM8L6yAX+UbxAdL+OA+GIGeoF3doN6H
4D11X84eA8KeLD8O58Nh0I0fN/FpRr6/GX8TDPDbc34bQtfarcQvqNEqtrla
fJWJ7y7hr03miTXxH2vbf1eKPvxD+hF+X+24NxD2A5qhe2iTTcg9reyNZHdX
TuOJMZaWTfvF65VjXC1F/5/UqQj9fwznIPgcnl0CF8OP5N8g/ymyWpPTCqqR
tS7Ugy1nmtMXMG7dKc2AL++dpHfccwh7D+VgtjaS6GMX2OQCmxxgnyrqeyzM
S9TzqLQyfp70F+3xuLY4Hz0XvqTPlnT/LezDfYF/3PqxqrGst7HspHXkcvwZ
+vWk23XQfGKsd2/ryXV8vYWvV0l74euJL2vaagNiYiMxpi5+F5ud0P6as1sZ
9E7oS8ZFXaJvJpDZB3+Ptp9HHyikL8+TLsL/pX28oZ28DifQvcT2m7XXW8Ie
B9ya7nMskv8++RfD5el+Qxs6laJTSeiAHkrPCer4sDouhXf5I6t6F/G8peeD
PG8mLYzvx15ltZMyUBrOs1mXmnHvO4xHXdGd4W5y+pN5facYN0L8mOa3TugB
ZHeUTsUXhg7Ke8bzb6RX4V/Vvrbw/+ZecZ0S1isNxaydbD2SXa5hnwb4rGL/
vrAXBXeqb1X1zactLNMmymsbj0jz4mcoay25a+BLZVyu/HvZuql3mkAr7y/l
g/XqtkSdXtY2Fkufws+gwzw6/HKJ9iSdji9GzjXkdIH9UJi8X4w3dY07dcKe
LLqNsWcgGfND+4Ih6JXk7lGHAfTvD+3VYaz6tKXDO3Ab/VfTpQ26YBj7YTXk
04aPabt3BRlkPRFkop8jbzsZ35O5kJyPydyGf5yeD9Nzaa+4Jxj2BgOfB70E
/WSl+OyyPmKzMfbRKvFMLpzNfeD9H8hbTN4P5L2P/wl/GH0IPsPf59k+v32I
/yCcG/ptgd/2++3zkAd2TYg6rabrQrreHWwBbel8QVtcqy0+qC3WNk6dxw/X
r8qZGxbStw7qV8PwZfA/ogv6bTC+NP5eMhZBe3LWkn0P+n79u7P+3Qn2wg62
+k6/yGHNcpN+kV36bdgPp9PrdJxArxF07Ib/lMxXyf5GGV357RP8GT6txcev
aZPD0KfhNja7kc0mwnT0XnZ8Wfnrlf9O0EX6En5o2CfVpxPt6V3jyRD8ZvnX
em8NlEI/7t02xpHm0Aw2G09uNbYsDz4lY0vwMfo1cvd2jH0k9Itv0QW1tfza
SDtyeynjF2k+/Ffe+dI7X8BncJt3K3tngHdeVY8j0krj4r5rU+NqH+Pqq83i
HmwHOvWiW0+4Br2ZfvvJ+IHMA/Aj+u8gj722s99Q9mvOfpXwZcnsRfaLyjgo
LRN486kt5lXbzK82SXvid3ivnXfaQk3vDSPjBLlH4V6yf1fOcfRUfbogexSA
b9I12HB13MOmu+F9Ns2g3lco56u0L38hLYQvQffqvaJ9g52Lw4DecVwJY8lz
0v74BmQ/pZwsbL5WWh8/ShuowPfl4ZA2d6X2cLk10WDxYxAUQs8XU3p1inOi
MA/qhx6l/FXhXEw7rgZnh8V9vSekFfxeHtbBQ347Z/6YwZr3IfPJedKz+CvI
HUr+EHhAvCqujCOV4ngbxtg5aeypLa78rH3+BAeglfhSo3M8AwnnHnXQmdj0
LDmPk7m8Ydx/DvvQ2dh/SjXP+aMSf2TF/9VVPUuxQQZ+lh7BjyZnUjgjJOdG
6Sh8Tjp9bM3zEVyGft2656j+NlZcGgOj2sR5R+h/HcIcjC+rjox98SydfzEn
n0L/H6Vn8O3DPhEU5cOx/Nku7A9rv7/z8Zt+OygtgO+vLZwJ8xGyj2kb16OX
WdMcTveKhoZzz7DG0X8egYdhHz8+z6cPKv/bNA6EePAAvp66VFOni9StirQu
/ntxtY4x+Q3zyDek+/DT2akaG1WFS/tFm2XWbr7ni6PqcR9/ZMKPpnvrsJ8X
9mWgCN2P80s7dWwL/6F38NEjYk9Na44acGkaj16qGvf1w15+IXSm7NqEZ9Xl
meh5NvSDsAgqh3UaXIwe71kzejegf/1QB3hU+2tH1yvpegU8QP+cdH6FDX+q
E8+qf5C+jP+GD/6h2wk4gL5Vff6R5lC3S+E0evYlcV+9R3r280PVuMc+jr1X
svcT8Ccf9OeDH7Wb72Ef/N41tqVP6TmIvgOhHvohOr9ZNZ5lh/PrSuhc5Pbm
r938tStAH8zHb9X4qgRfFYea6Dr8t1LduqhXZ1iL3qpueeh6ET8kcJbOV9L5
MfJ+IOsArEBvJS/nyDhehDGiEHklydsufSmVPcvzbejz18d2GdpiS2htPbCD
nG3pvYPu5G3H55C/YLpnc7n00rDXUd9YA8v1i5X6SBV0Q/aqwA/loQyMU997
G8a1QJj/H9VH72kY1y19W8fYWn9kXMN8xEb/GYv/DeMyW/XMHveuFoS9ODF7
drO4j/WQ9ws1ivtbYZ/rwYZx3+skep8Y8kDDuAcW9kC2aq/PQ6kqcT/kCXpW
pGcVOu+VrsBfx5bvQlFx8mX2vRZdnk7N6NRcfRtLy+Ef9Hv2NJ6GOfoD+Nu1
jS3axWY4o22M0jbq8VVOPsvCX7PYoC7+Mu1uc7ou3yDNhf/VnPIQPQ+ox1xr
6cP4rfrhWXHlDNyjX2YwZ57g9zry9ZPv7XC2iR8FVdKz4N3SkfjP6HIktFEY
gX6HLmPU7xM+/IkvR6vvaHzzRnF+G+a0r7DVKTYrKS0KJdAj2LEE+k96NqVn
Bzr3R/8Buc3dJ9BrPOQyl+9Nv9fGaL/Wc1WhCtxUJN77qMfmLdl8Z5V4ByTs
a/ZMz317dIh7nKHfP6yvLIUHmsYYMDaMi2F+A79YjzTQRqaFGIh/DP72W0u/
ZTbXrqv9djH3vrGGWIL/Rvs7z+bn4DT8pA0doetJdt0n1vVB/wk3No7nuOHs
9mv2+Dxf3GN4Rwx+Xjx7s3bcb6hH3lZtcSw5pYIvw5mb9/8i7wh0Qe8l9yFj
aBvjZ2uoi+5nDH2U3AehLtmdlfMI+jDfvM837wX/wCt8dCW5NcitDpvSs82H
5e3inbXeXY5eChvp9Budfg174uin6LkkjZUhPlZly/vQW/j7WLiHBlvR7/H9
Ju03aRPXgee152fx+0fGs6FwHtQcNnh2s2ddwpwSzqZj0GQyS5JdAs5Zbw1X
VkWx4h14G/qEOxXixhDxeYi4XMQ4M0g6GH9Gm+msDe3Whs6hT8Ml7PaA8rqx
2xLpxfgFyqhI/liyM6Pnw0Z843S/toF0A/4j9v5Z/p+gOfoDMt4ns6wyysCn
6A3KyuX5CrJ7e75cmnNUXA/PQXfw26w2cW38oXL6kXu/cuugP4Cd8uUkOwc8
Djm18f/0nW0D4/5v2Af+F1p67+n0bGCDtAV+pj5xoz4ycXTc/wv7gFnQw8g5
rNwMfsuMH8fnk/rGs9twhjsW/6h4/o46vN0z2irYLIwJm/nhA+29Rus4PixT
Vh1l1YYn0QeU3w19NXoWeoe0K/4WMqcrYxocSs/vt3jW3rN2UAx9h/xf1Yn7
/2G+GeadX0Ijz9ek55urpA3xveAt9Jkwrkl74g9XjfcDwp2AcGcx3F2cx+/3
h/mZdrBYOhf/u3YzzDt7vJvfe7/hO1eIa5Cw7uiWzuuC3bNDLbbqMSr6oAQU
bhv3vPr7rTg609X8Z+w9D9m6yWf8zTc07iWF/aPBytqtrAri8EDxd55Y3E9a
Hv+B8topry20hi/CGsuzG2AAVJRngfyLhotD5rX3QF4xZ7X1fj6+6CIGdR4R
90vCvslN3qnunaXemYy+McR/OmW7OuqVMaT4aubWNa8VRzIbb/T9qvheyv+W
Pt9cF2NsiLUl2Ssvu/1pfpNTWmJ8PHurpk5Vg/2HxHO4F/xWN51nXPDbVvyg
dO0Y1ovh/l+4B7ikVrz3FO46nRMjb9RX29H/znQPMkdYm+LP0a1eGrvqSM/i
fyX3KmVcCYUgl7Imqd8EKKe+1dT7ZvS/8j2h/BVQSb6F8u2pG89nw5lsOEsN
Z6ofkjuJbjfDp+jflNVb2Uvpco4uJejSC/+b5xPSu11jpL/iR5E7HK4j+3K+
HonOWSvekQj3ImaoW/6c8XzqPvL+Dedbw+NZ1QvKb0WPlpAXvZIuu7WllWn/
Dv1816h4jjUkPY882SKeaa1ht5bpHl/TcB8u3EUQV18k6wXogp4ixk4NflSn
r+FLuFPdVpJ5UxhvYGLbeAa/xDtL6HBf3binGvZW1xtz1xlz18JqmG4cPqdO
u2rGOVmYm50N91HZeSob5wz9SP1/wfci9+4QQ0fF8S2Mc4XEmILpXadw56ng
6Hin9AplrlX37XXj/dK13pnqnSlwC8z1bjW/fSw+fgQfQg6/TeKD4+p3DG5D
D+SXU3XivaJwl+gMegm5FdVn2Q3xHma4j1kh2Im9+rBbb7gO/gn3N9hnCVmn
2egE+u9gr+HxDke4t3E++JAP/pXnduUNVd506Sl8HvOJ1eZ2q3rHc6FwPvRH
i3iuGc4y+6ILFIr3Qv9L9VpeN94Rvcy7T/aOZ7zhrDcX/jdlLyJ3IfyFPkWn
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
KMg=
             "],
             VertexColors->None]}]}, 
         {RGBColor[
          0.7446736603773585, 0.7496235849056604, 0.7307987735849056], 
          EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxEnXV4Vsfz9oO7u2s8JCEJJIEESNAAIRQiSJAmRCB4oXjR4m6lQKkgLdri
tKUUipXiWtwdiru+n/ne53e9f+y19zPP7OycPXv27Nmdma2U1KtVz8wuLi5f
F3JxyULeysfF5UaCi8urHC4uS6q7uLzwd3FZmcfFJbq1i8svbi4un8A0nd/9
2ru4TCPfCk820m/gLeSZSBvBTSiXHZ5y4MzQVrcXfdQnLi6fVXVxuZ/JxeX3
T11cXtdCbmEXl0U1XVxadnJx+aGAi0syeYdgF5fSBV1c+lM2a6KLy0crm9fF
pRipOKl6gIvLMKsbvJ88P2knPLWp92M7F5eS4N3QcpP+BC+g3unU+4x6uyI/
HfkVkF8T/jfwF4Pnup+LS3dSRm4Xl0/Jm0HvBB4I/xD4veEPph2m0Q41aYfL
8CSTPoWnJvSp0GtAP8zvJFIy6YiTdyGtRIfv0OEVOiRQrgny20IfRzuMpx26
0A7dqSuDuipRVwgypyMzGJlN4Q+DPwb+UfCPhL8D/CPBw8GJ4J/Bd8A/gseC
x4KTwaHImYGcEOQEgSeDA8EdaZvH3JfnXPtX6DYR3Z6i22LaxBN6IvQi8Czl
d0dwQfB3/qLvJG8GzwDwMrBXe/FkgWcyv5uD15PXhN4NnBf61/yOB08kd4Ue
ZXTqfVKFNqPePUF0wI7Q83PPwO87uLg0BP8OXwtSDCkncmZSvlUe9blo57//
9bk8kjkkibYK4zqK0DbgxuAV4KaUvU69d+H5jP6zi99e9J+J8AyGZx88laDt
guckPAHgY+AL4KPU2R48GhzHPYrhHhXmHhWw/g59F/TGtO2PtG0UbdsKnubw
FITnPPfBn1Sde3HQ2gD+EfB/AI8jNQL/SNmq7rQZZafyuxKpMmk5dHfom60P
wJuTshWgp4NLgauBY8H5wa7gVaS6pHqkrLTtHdr2IG07hP4wCB0S0KEGMqeg
ZxAyG9KvgulXTelXqwNpS9q8fz76B+3/M78HgGORE0nfuIKcp8jpXpvnjrZy
g2cBPN3heQ69F/Sc0J+Au4GzgsfRzkdoo0DauSv4N3AV8Frq/YJ6l1DvJVJf
0mek7NYm/DcW/I09j/B8bc8OeBD4e3AB2vYC48V2xoqS4LvgPeBf4RkDzwp4
doNng9eDH4D7kQaCy8B/H/698FdB/6/Qvxv6zyFvyrWngSeA64M7go/a/+Bp
4CnofxL9a6J/e+iVoYdB70B7/k17ptKeg2mrDNrqLm3VDfkX4PsWnnDqLUV/
eEC9l6AN7iB6TXg28HsQeBN5TAfhAPizwn8Z/lrwbOG/IdA/R34a8u8gvyL0
WYHSuQs6HEaHDHTYBa09csZBf2ztRhps4wwpoZ3aNhU5Cci5gZwK/F8eeg3o
JcClwNXBQWBvcF3weO7pdPpPN/rPAHQbiG5e9O0fkbMQOS+RkwZ/dDuNdUXB
RcC+4G/hmQ3Pc3jyQy8A3Rt6TnBusDt4MTzz4HlhfcyXZ6MtYzL0qdS7nHoH
2ZgG/xNf0SdB/wp6D+gvfHVtpUn3wM8omxvcA/4W7TSe23hk/ewyqQH6h6F/
ZvSvQH+7C0+OPHomi5CKkoaTCju/veB5DE9e8DVk7myncb0Scp7Qlw5yj26g
xwpHT2/4tvH/n6QWNegb3KdmjGO5kXOGss+gTwc/QtYN8Bdcey+u/V4mjWem
4xV7h0BvBf06dHfqekldJ6lrkunsp+uZBX4GvgVuTNmz5OdId6D18tNzVYT6
xweqPy+jn1RkPFlNP1kCLgP+CdyIMfApz+wAntkg6q1AvWeotxn0t9CHQH8f
yvWR5jFXaAr9FfTB0MOhZeN+9IV+Hlo6KRP0YqQcjKujyPPQNuPhWwZPFeTn
Rv4J5Ke2ok+7Mr4wCWnP/yXsfQZPILpNpD8HoFtj6Hmhfw69GmWLU/ZfylaH
/q4zfRL6a3A/0hxwb3I3+GeCn4B7kKaD24TwLuG+p3PfJ0P7j991oK8FlyR1
BJ/j/fN1Tc1DSkN70ln06WB/ZK4Ed+Dai3Bd47iuudADoP8MvTjXODtU+Hv0
L0HbLkP/HNBuIac19KXWVqHC08gfoUM98CjwFXBNax/wC/iTwZeh/QsOBM+B
/pzfDcDP0PNP9PwZPdcWEq0hKQ3dKqDbVHS7Cv8IdPsP+gNwGmkKuBkyNtIO
SbTDIGTcoY+WQk5P7sUI7kUU92IyPFOo9yk8pflvX0fx/A3PS3h+hWc0ZZ9Q
tiL0YTXFV8bkQPsC/gP0+fPg3eBC0PvDc53fxcGX+e8zUj/SBfp2LupbSF1N
0HEDOC96DqOuWdTVnro6U64/crbDXxI5l8DBJhOeCfDEwNMVniHQ98ETg4wt
XGMXZL6HPgPeqqSP1FWX/3ZDHwF9Ivwn4Y/gvxP5hd/A4wfPBniOw7MTnuz8
35V6j/I7G/hT8G7wR/jfkf6A561dC/p0RZeTpDm0nyvXk8K1zIN3fkdd91DK
FyAVJA0h5Xd+90DmqRr6/RIdvNFhHTr0QOZwrrEJMp/x/z8d1ebnoOfhGTkG
/Tw4H/gEuBNj0BPqfEraR/2p9IEL4M6FRXtG+h3Zf6BfQfDf9NVm9NUL9NUV
0FdCzwH9ekvek8wfdvOsraPOVujXwa4dmfvgKwfPXspGUfY8ZRdCW0DZd3Yf
weng/eAw+H8KkUz7bxppOukB98cNnongO+Aq4HE274W3M3gbeAhlz/Lbv5Ce
Z1eSG+kr+vkM+vl5+vkS/l8CfyboF+27ATyKsmvRuSU6J6LzcHhGQ78PPS8y
h/H7HvgxeQfSKXBb51k8Ds7JOPOAaz/EtQ+GPpyyt6Ev5XrLc72ruN6R6BCN
DmvQoSU83eA5DM966m1NvR2p9yb0pqSD0DdDbw89GfoDaAkhqusOeYsQlW1O
3rWz+Lci/3fkv0L+19DT0O0N9E3IaYOcJORsAMeCO4H/BKeAe5h8+EYWVDuk
UnYH7dITvIxrr0N/2Ias+eAg8DrwanAj8B7wSK7xEX1pHNeYiX54EJmbkVkU
fRYwtnujTw37brN+AP868qhPhcdR9jllJ1H2T+htoJ+EPhH+R/x+A/4a/Bac
mf7Yl5SNlJ30DfSPofr9jnzyp+IZgcwHyBxrcxsbp6GfRk5H+Pfy+zx4OPml
EI2TF+x+0obVwXnBdTtrbJmKnA/ImYmc17SHP/QZ0Atyr19wr49wr7dDzwW9
u/UN+v8J6PugT6Hse8rOsO8mZG6DLwOeHbR5Gu3Tk/bpBL17Z/WlTOAQ8Fzw
CXANe97AM5GThf7zVRbpt6ugxqIQdKjKe+0sdXnA25aya6CXt/dTQY0D++05
cMYlX/L2nUWfhsyP6DbL7hfjQ2hHjauf8M4vwzwwiPd+EPcxBzpfRc+VTXjm
u/F+Ksd3Xjz6e9G22bkW6H+WdXHxgb4cvAeeYuBezXiHdKd8BZ4F8CtwPvBX
5ZmjkmchLYP/J1IR+H1J5ynrR/4jtN3dRD8AvgquAd5NPQHk1UlLoP8FvRB4
LngeKQd4OPlI0it49/eg7ub0b+paAG0r/HngGQFe3k08taJ4f2YwZkBPa8H9
IVWqxH2l7AjKplN2KrQZpDrQp5GP7SU8jv+PwncKng7QO0IvA70P9O3Q90F/
Es28Bfqpilw77VAAennofoncd74NZvBd8C+0yZTpCX0ccr6AvyZyksGppArg
xun0y4bcv9JgaNHwFIT+M3LLVlK9g6H3hV4NPBDcC+wJ9qWuVOqaTF1DofeD
7gc9FpllkJmMzFDaoXaU2sGb+9uN+zuO+5uXtmpNW31PWzXm/zDaajQ8JaGX
tnaE3o/resL9zYX+AxszPyDVgd6GvD3JE9yF/G5X7h04Et65Tflupy9EgGeB
PyKzAfIGU9cReDzASeDN4EBwBngHuCa4J3gnOBTcp5v6RW1wP/BecE5wbtK3
pjP5MOjHwE3BI8CnwGFcSzDXMox649DtBrq5Q98ErgRPd/Bh+I+SQuAZRD6U
9Az6MfKTpNrQ95MfbKL+eZ78Aqke+CH5C+Q0teeF9m9D+39J+x+HfqObyvYH
LwY/Md24/9/RD1bShtvRwRV6H+jXwfXAY8G54G/VTdeVBdwCPB/8Gp5m4Dng
L8HjSc3BneCZBv2atSc6JKDDGHR4TJ98Fq0++R/5I9IJsCd9I5C+8RacgT5b
0Wcv+nQGbwBvA/cD7wQfAHuDp4FnVlCfnkSaSKoDbT994jr31w2eSfyeCr0j
eC34V3ACeCV4I7gueC74W/Agyg1tprHCD3p1+w/8nH7SH/oiZAZAmwX/POj+
4Jk9xPMb//uA64G9oPs0l26zyM9CvwjezLX+Gq3nJoB+3pd+Pot+Pp+yheGp
DM/b8nru00hzKXse+mVwJnAauC94CzIu9JSc7uBZ4M/AY3imEnmmvuGZ6gx9
CvSe0LtRLnNzjYf5yPvye5Dpjw490WEqOjxGh0ToGdBXgyuCA8HtyO/z+z16
HSSvy+9W0KsiZ0IPtfnX0Bc0k/7VkdkbmdOQGQjuB54Nzk8fCKUPfEYf+BPd
rqDbBnQ7An4M3gb+jj6wmNSU8eEO+Wn6wwKwN2U7U3YCZZ9Cvwr9B+gbwUvA
7StprJlLmkO6Bf0U9K/B34BnghuDk5CxqTr9BTnp6P8b+u9C5+Po8BQddqDD
e3Ah+M+Dc1K2NPhaRaUy4Ovko0mPSA8raqxcXEn6RNP+hWj/jrR/Wcp6w/8M
nlDaYQztsJZ2eA39NvQV8GeJ4fkDrwfXRJcdtOE52vkwPNugD3XG1vE23pPO
Qf+nl3Bh2qQu1/M513IB+gHok6C72LsDOUuRcxL6LugjoJfieWzXTWOmPWPp
0NIq6RoSK6kNrY02VJI+Nyh7opfa8xr4GHgm+BL4EHgK+A/wql6S8xI5Xey9
UUlt06GS5G6GZxk8ncFjeL9H8n5vw/vdH33S0ecP9GnHeNic8XAu49IjrimO
NJLrmsA1tOZanpMXoeyX0L+BnmDtxDP5Gvpr7mc8bREN/RG4GbgheCn3Ygr3
YhP34jxj/Ej4F8O/Dfpa6AftHiFzOjKXwP+eND2v3olP2jN3hJ5s/Q1cAtwF
nAv+PuA54ILgEeAF4FPUG5qodbbZ0BYmSuZo8NxE8dxDTgF+dwDnNXk2LoOX
oM9E9NmIPquQWYyUm/bZSF6alB/8veWkrGAPchfasBQ4NFDrfJVJ1cCZoZcB
1wYXAFcFzwZnI72jrga02xHa4X55rSHaNX8ghaHPqEQ9m97gweCe4HLg3uAU
8BrwOvAW8GZbFwVvA2cjdw8Qf33qKUq9HshuSJ+fRZ/fS5+fBj0L6TU8mWz9
z5kPnAe3JAXAH8x8Lw/zvevM96YHoS/0LdC7M1c8w1yxH3PFvsw5k5lz3mbO
eZQ5dWHm9nuYb5ewfs1753kZ5o3MJ3+ifAjzyWPwFIVnLzzf8TuQFETyg2dJ
kH73RGYnZN5CZj9oV6h3ia0no0929LmCPt3gaQ/PTXhu8v8YrnEZPKvgfwUO
Rc456qpCXceo65HdF+hr4HnAfS/E9XbmemtR73rK1IH/V/I38ESAd4P9SBfh
jyPfBf0VuBv/vSf/QFpCH8lDakc/CbC1bniu5NOarLVfIOkQ9Bqk6+C/yH1I
58Fb6GM/UXYfZX/g/n/keWhFH/gG/AbcAlwX3bYESZ950J9Dbwq9PbR/qOsj
cn4Du5L+BUfCvxXcAP4C9pyla374nOstFaA+M5F2+Ah+AR4IfgC+BV4F7xzK
bIX/E/rk6e56xruCb3fX/LwROIr0AHoi+cXuegetQK/W4KHgXNDzkHaB25K3
a6b3Z03yPd01B+gJf2/nGk+h28vqGiu6QnPrrmtMB2c419uL3Ku7+KuDXzMu
eYBrITOcdAucmTwraTu4Nvn+7qI3Bh/vLp0XMaZ9T/qbMe0G9eYM0POeBZ7F
3VX2BPIHd9e8oqnl/M4J/pU8qbvGv3/Avbrr2+UScjIjpzVyOiL7E3Sbj/w9
8PxNmgPPRfJR3TX+d3FklCOth96O36PBn5Jv4ncZ8HLylU3VniPIA/mvHfgu
deWjrkTq+gz6506fibFxFJwXPNzqair+fuTVuotnMbqNR7d/0O04cp7ZuGxz
P2jl4VsP/TbPc1xWvgNIJSj3CfRD0Atb24P3g+/AE59VfNeR+RflP5hM8Abw
Q2tbvk1rxaIDPA3pl6ep5wzpOrpfYmy6BO5N37vB76vgVuD94H/A+8j3wPO3
zUnAO8A7wYfAexPFUx+Zp+w7ibSFen8jnbXvhXyiWX234L+cKPn7+X8Vut2B
5yzX/o5rbwn9JvRbUfru+JF8coau1749F5TTfewGPYO0FPyK/z1ph9/APaAl
8nu58/25iPQNaR70haTd4GHkXTPUttWd7+JtZfX9YPKWkBLhiYFnnrW/lQNn
Rp+34GMZuqddqLMy96AROBLckBQALk1+L0N9qSv87TIk81fTIUNtsg+8AnwL
XJPxfyDj/w+M/7kYKyL5xh/CWPHaxl1wL/CRaoydbbnOXDwHvujA7xrgMyn0
2wjG2BL0V+hnodeC3hV8AFwJfJo8g3QwJ3qRN0NOC+hZKHeM8n6UjWLcKk99
R7lX/Sl7uJrqOopOXUgppJnwTIanPPpk9uH+JdAPcjAPgD4Jejno+aEfg/53
Dun3N3XuI00HVyFVJS2iTl/qjqHeWZSdStkqlD1KncnVVKYP+Z9t0AOcG306
oHPHXNqvOkZ+3PSH3hZ6e/Bf4H3gs+Bcfoz1/N4GLkOeCj0NHEJd2ahrK9e4
l9/tcqnsQOr6i7pOUdcE8AnwTfB5cD/SMXB1yr513rOfQ9sBz3HoVaHfhb4K
uiv4v0C9y8LBeajrT/Bb+CeT7sNfKY4x35N7lY32RLdZ6PYLOjTk/ifEq51n
U3YOZd1pk+72fR+vb/yfSLVJYaSh0At66Xcc7bmjHuN1cd4vOdSPFpOG8P/S
eOE83nzHOH3sB+Qvdt7peaHVgCcIejn7vkG3M+iWDzwKfAD8lDHjjAf9D9yd
su2C9I5rQplz0M6TnsDzLzwh4ELUNcxL+hYln4icE9mk6yHywyQP6s7u3Ivh
8KxAhxX835RrWcu13OdaxlLXCHiKw9sMnk7wdIfHD1wP3BKcBP8x+DPTl6bD
PwH+svDXgaclPJ3guYtuB9HNi3qrWJtBbwp9udOW4aSN2XU9UaSlyFkepLlK
R/gHwT/cngPqOkNduamrJfQU6H2gXyD1zi68mLJLgzR32uTIs7omwe/tJZ3N
zuMq9/wa6V97ZukDt8AXwNfBD8GreI58SRe4n1eRWZRx4UtkloF2hufrMPRm
9KeL5JdIc7nGTlzjLsb2nb1p7xh9d8TCc4v/b5N+pWw46T54G3lj0hNwH/IP
yCwAbzfSe2gfSBnQX0HPC+3nLoyXdWlD7ssY6IXo/6Wh/0i9n1HvEeptze+b
OVTfJXTOj84j0XkZPH3gOQzPfsomkN7Z+EB+CfnXwD/D8wU8J+F5CX0c8scg
LxvPzRTwePB6dNiKDgHokAv6TOiToHuCV4C/Ba9GzhDknEDOVtrhYIy+9R4i
cww8I+GZCP8tfg8D/0AeAL06eCa4ArgK+BuwN9gHXAP+teCl4HXI3Bmj78w7
8IyC/gX0GNLVHLqW/8AjcqquE7SDSw2t2f4F/zP+f04qxDjwDj3b0CfnQq+K
HHcbf+gDU+kDy3NpL/ynXMKZ4L8JfyP4c4AfgVuAl9IngxhLW9Mn71B2AOkb
+DPDcxuepvBkBz8AR4Nzgh+DY8DrKduYsp0omxf6S+itoecBvwC3AqfbPjYy
3yLzpenmq/EqHzyv4Im1ZxlaT3TuBX0dMusjswMy88PzGp44eCrB0xWebvA0
B48ED8ulvXzTdxFpC2VbUDaFsgUp+5ayCZTdTfvE+MhurSj0rIwnqdB/hb8l
/KnwF4GeGXon6NHwXk9QO/8N/oeUStuWY1waxTP4M89gMfizw5+WTe+5rfz/
B+mx2Rv4qt0HkU9sK922UVc8dfWlrjHQp0BfCn0EeBJ4MbgAMt+gczwyO9Bn
traRzPvwDPMVT0Xoi6EvgP6OvnoV/rrw7+O9kURfmch4OLOp5nA2f1vA+z+k
JtfPt9VVaHWZb7yD/iJK82CbA9tcydZqbb50jG/AWOZ5N5gPftVUcxebt/xD
7ttd84324D3OGsKgppqH2RxsNnX5U1cUda2wddMM7RHYevNKZ+29CXijs7b8
LkpzXJsL9W+qOY3JP0Ee1F1zzpFNNQc1vBOZLTO0B2FzwyrdNRdqS727nP3W
tsn08aL0I9KEKM3tbF7XGZ5jNbRX+0WU5sc2f8tJG87jegvwvP9ci/5EKsR3
ZQfkrAxHV+R0ouwRZ283F/zz4S8If0/kXHLmih3A+5z5Xqztv9fQ3m8y9KMZ
mkduQ54PKR6ZreD5A57X8CyP0rzc5qhLozQvtzm5zU/PZWhO2aMPerfknVBJ
c1iby/o581Obp9p+ic0fh3TXHLJcU32T2Bzyd76DfnDWS0s21TeJfY+coT07
ID+8nNa522dovfoufaAX1/jc7BUpu9FZh0xqzrXwOxa8hvwrZ91ykrMuXIHU
A3pqD+399Hb2fwzPgz6xh3h+4TqmVOH54xu/Lte4xlmfPwPP7/C0gedH8Gyw
D7hBlPacrC91j9Lauul509a1KNsAHBSlvR/b9zmSBE8Y7Ug7L4QWmCH6j7R5
Q/pnPPdxKfTQDO0r2d5UrQztQ9n+kn+G9pjqRWmPyuhLKVufsnGUPY78S8gv
j/wntk+RofX/1+C+4Obg8pSdAe4C/gB9ADimnPYQ2mZoH8H2ED7N0D7CUdpk
HW2ygzb5B3o89EDoPemHu+kze6mrMOPDB573R/S9MdAvQz8H/Rbj0hbGq3U5
9F6cRppO6obO92rI7qI1Y9h38E2Ffpj7+wn395qt80BrQ9m20EeBu4NTwY/A
28FbwF2Rc9uxA3kOfRf0rTn0nrd6ZpB2QP8e+mJwNp6RWcjPiZ7JlD1TQzYe
e+BZDM9S0413cQzv4lfFeIah/wx9FfR/wMvAP4KTwA3A0eAK9v7ldzq4Pnge
eAz4FGNwOeZRBRiTr4LdwSXAR8ElwXnBnzNm5yYF2hyMMbJ1kNZ8foYnMzzP
GD//A/uBy9kcDPzG3nnQN4JzQX8DTmUMP8f8LS9j+EzqH45uA3JoPjScNIJU
G91m898X4MrkY6l3AzJ7UvYeZStQdig69ESH/PZOR34B5GfKLlu0D4zxH+3b
AjlLKT8bOWvJv6auReDl4BkJoi8CVyCVA6cxPgxsqTVl06UwqQhpAP3kCP3k
EP1kMPg4+AjYG9wK3Luo7mEVUlVSPuRlSdB3wARwDlI2cDLy+7XUevVoyl6g
7FnKjgdfA18Ez4I3r7dTFvoN6JegF6E//EJ/KEt/SKI/nK4h+5Zu1oe47g+k
wvD8DE+ZrOq/lR2dQpCTgpwRyKlk+qBbeehB0DtA/7yo+sdlZFwh/Ul7/xuv
OXUNeDrCMwCexZT1JLnDu9rWSuP1bdoSWg1kNoAeAa4KDgO/QZ/LPGt1uO/z
4P8tXuurdZE5AJlTkPkO+vt46X8B/AD8ILvuxy/ZtQfhgcwJVh480Uv1Gz4M
vgH/HfAj2qOprVfm13Xbt4TN/Ru24l3qik6Z+f7neVnC81KFuWsqc4Dt9I9O
zAGO0mbD0bUO7Xb5E56Hqtw/+LtAD4V+j2e8HO+zr0JlC9aGazrHfy3gv0g+
E54Y8BnwZHAU+AR4DDgSfB6Zx5CZ2WyWOqFDMP2mIO3wKdfGu7Iasq/Dcxae
rPDEUNaPshepNwyeSvB4Fta6kq1D2TpTIjpcdtd6VAvwv+Am4Gvkc2K1DjUR
nPX/bCHg2Q72gu4F3gSuDO7Qmb4cIrufRPAhcGWz/QAfC5EtUBX418BfGv6p
tOdPrrLBWoVe2UkF0O02c6vHbfXcpVD2omMrshX+O/CvgP938C3wcrOzQt4A
0it060feOFbvygxwBPiR2fUhJ9GxHdpC2euUXUrZGehRleRKGg5/NPxv4R9o
bRArmbt4z6TT1r+YTR3t3YSUDzlVaM/7ZueHbnO5rvykAcjxZTzfjmwfyvqB
v3QjBz9B5lL7roNnPdjVsSFvQ14jVnO82+CFzpqeP2XHUtYf+vZsmsvb/PzP
bJrL2+8IdPCi3Xxpt9+y6ZvAviOmoe9s9KyLntv4/YlTZmc2zWdtHr6cuio4
9lH1kePr2L1Pp+wcytajbGXo90Jlh+aJPl+gjyf8Y+GZBE8wPO7wuNSSXdAC
5BW364SnEPyd4S8CzgztPb/ngLODs9g8D1yJsndDZetWEXw7VPZwZs90u7Xs
iG7Tny/Sn7PRpoWzSrbZalqf20i+ifSH9UfSVnBn5LRFn0bo44GMoejgkUXP
ktm+me3cl+g/Hv1rms0k5XLHSuZ3Ni66y852ls2d4ZvHfc9M/2kUIhu5epSb
VlP0vnxP3fXVd88e5gqd6FeBmWVv9MFsGM1WkbHEv4b2Ya7Q94qjzzl4fkRm
KNfbx+z6+N+HNAeedvCkIicYnmvgsvBfAQ8Fz4TeDlwJHb5Gt8fIb4KczSGy
D1wAzw54hsLjD8838LyG5w+7V8HSKRme3vDUhacptKWd1J97gvd0kj9LSWQO
cezuXkDzDJFt02/oWJ40yfQkP817szV4DbiAsz5wAVoes3UD7wNn6iib6p+R
GRkq2+Cn0L06ap/nHrgMODm/bEZNnpU9Z/tQZqdo9ni0tyupnmOD+T3//0C6
RJ0htu8FXoh8n1DZGOc0W8IakpcV3Ba8zeb28NQOlf1zCWifdNQ6zFNwc9JG
8He0Q15nP2652Sg6vgDryD1Iz8F/0YYPaMN1tOEX4NngRHBV/h9OfePh6UDu
1kk2hGWhD+T3GNPf7Ptqyp70DXmqYwcYR16xk+wD3cBPO8rWNRs6xzv2h3uo
6zl1baauc/B8Dv/vZjMJfQ70DtAvQx8KfQf0UdR1z/G5eGD1Q/8bHAh9PL+n
F1CfMJvbmaRvkLMHOaOQU5961zr2vc/hndRJ9vONrS9QvjP61AYvA8eDh5Gf
hsfHbOeQsxo53ZEzC7wG3APcEJkbKZMPmaXAX4TIznMGPCvhyYDnHuNoapzW
Osyu9JOCesfNt7ZHfiR4ATib43Oxkt91Cmqs+wk5x5AzDTneyJ8TIjvMqfDe
7qTxKgDat/yOAQfC8x2/XdBnlSPDxr3SvNMX8V0/l3f6VMrNClYdlRhP+vE8
VmJ8SCYf0lrj2wrmkJudPUQb42y8sXHyc7OvbC1+d/AudBuBblXAfznPaTfw
cHiKw9MC3AucC9wAnA7OZP5E5i8Czg5eD17VWv59Fxm3/qS9ymTTWNgki3ya
fJjfTmR+e5b5SQB4Lvgi+O8O2lftip5e0EdB/xd6LDL7IjMvZY/Y/BCZOexd
kVn+K+Yjk5BZufk+XGP+k5dyA0nrkXkmSM9sFuQlMS9ygf4r30+ftNI3VAj0
jc5642/8btJK35vf2TcHsipAP46cD0GyNU/OLP8S81Xpklm5+eJdhLcAsvrD
H5dZ++Gm3w7K3grSGNIms3Q0v8XOmeUnZ76E++F5Bk8PeA6BXwZpL+YXV82n
bJ6WiTbxR/ZC0jq7z6Sb0PPxTpjk+Dgk0jc2Md9rRd/41NaFwO3A7cAbfLR2
uIW8C/0nztaFkO9LuR3IeQ12by2b/GpZNE8w+k/wh8EfDH9b5Kzx0XrwWptX
thG+05u+HCNbnxfoH1BDY+BzcDXwXPAf8Ke0kT62Ju/tvFMW0G7zaOuyXNcN
5LyIkX3LRh+tlZnOE7i+r1trvjELnIt0BN0WUfaburpH++kbi+kbj7Oqv9r8
y+Zjd/i/KG3XGp77XGMp5KyCfti+I+DPTl8qj7ym0K9CPwR9BXQX6Ofgf09/
+Ap6Kvf2HrLikPMP9b4CJ4OXU7YM6TI835MXI50FP6ZsRXsmbE4IbTXy4/i9
F/qtVhrH/uV6b8fIhqchPGdcVdc92q0i7TOV9vmWvtoM/q30k4DMsqO39/k7
6EmtZG98lHHgPePAHLMtR3cP0kSbUyDzUGvZaRwye2THh2U+/5clDYfHk/xA
rPg/B7+O1Rr7HvNZgX+0+YxAz8a4dwn6DrBnnJ7rvHyTrrH/wH2zKbf2/MzJ
7Tldy//F44T3oeeLYNlLL4Pu66F5bi3kHHL2TQ6Th8UJ2xrGD846xiryr8jn
kbabv16wbP4fMge7yRwsB20zBfpM6OHQyyHzyzjtfw0HZyJ1BO9y5pi2Hh7N
fKw287EQ5mOTKTudsmGUzQ/v53G6jr3QnwXL32AW9HyeutabtM/iUNnA17Nv
JdptubW5rXnHaQ9riq0JkLpn016X5T1IyfDcj9Ueyjj+z+asM1+3deg4rdMe
R/5nji/SSOuPcdqz8Oaee9BPinK9Jbm/G8B9bSyBfxP8B+F/1Vl2/sdJj8A/
Ozb2+SmbC/788H8AN3LTuP0OXN9N47k9VzbG2diWBdp8V41VWcy/w03j/zr6
57/O/OoOz0Jpno2hPAsPwZXAI8EV4N1K2UH2HcTztziC8bUE47vNEVppDmlz
gpOtND/5A3puR7ei6PsAvdubTxb5H6Gy/0/i//WtNI/NbH4Gjt3+U/rAPfpA
Tug5acvltNdH2ionPAfMJ6qQ2t5o9ly/gqe3p75L3iIvAl3NcX0Z9/oA93qI
+cvw/0NnL+M9OmwPlb/AMXs/tpaP5LeZ9UyaPm3Q7Wdk+YAngQ+0kj9RSXS4
GCr/qYHQd7SSn9p68z8Nlm+FD2P4FjeND7HQ1nSSX3DdaHQjxVfk3dmDccWx
vZnXnGeR31cr6DvvP+db7yH5Y8c/Ykeo9Dad34TKF8L8IDxr6ZvcvseL2ncV
uBS4CLhYLWHrOyec/mN+R8dIR0mDvbTXa/u85veW0Vm+b/fBDx0/uEuhuma7
XrMz7e/YmtqesNkf2L5wIerxg6dEYfle2L20+xjm7JXafq75saV2li9bAfgL
korC/zGb9mYzsmu+HO7MmauFap5tc2ybyzd25vPm69ajs3zbzJ/F+lQ7UiH+
H9NZ2J6z/s6z1ilUY99ox0/I/IVmkAqjfxEv7eH+Bs/LzmoT+77M5Hxj5iLP
6+wL2JqBz6daNyhNubKk+pSNtv30eO3j2vja2RljN4fqGbbn1/a5o5x94j+D
5U9iviT2zWa5fcOZ71S7zvKfsnWIy85axFrH38PoXiH6RjLaGmTMA3coqDny
/E6aJ9uccnVBzTG3hOibzb7XzF64j2MzPBF6JcePb0SIfIKsLW3t5LizfmL+
Vcmd5WNl/ijml2I4j5f2/m3f/xfqXe/Mz20N5rCzDnM0RGs01t7mY/RtJ/kZ
/Qj+iZQAvltAuc3nnwdrXLYx+WCwntshzhzZrsPm3X9B30XqZd+G5Fsdn83P
vGTnbTbe5rtr//d0fMns/WTvpvbwlHf24s3Xc1EnlbU1raXOuta8YM37bc6/
iPx7Z97ey0s23Ga/bd8fcztJ5w3gTY6/pNklhDk2FuZfuKCTfAwH0gcGO76x
X5KPJS0ppPfMMudd8zxI80WbK+4N0ndsM8cm0b5Zbf68M0hxECwGwnYPzcXt
fW3vWLNRsHerzaPXOnPpx0Gaf1tZs9Nc0kG2mmZfsMyxMTDbTLPnMFuOaUGy
pzFbmpFBsp8w24mJQbKNMLuIKx5aG7V1UbNxWOXYOdgcbYkzTzMbnymOnY/Z
5sxw7HPse+VX55vltIdsPszew3yXXzv+y+WCtdZg6wxPa8qP2r4B3aF5Ot/C
fpT1J82kLncPzXVsnuNna0jO+sMsD81vbG7zFfnXpOvgVzXlL211HYF2Dx38
s2mP4ryzT2G2HoedeYvZyeZzvs0LkxcNVp9dx3VsCJJ9qX0Xmk++fRuaH38Z
5/vdbHBsTmx2OHODZJdjeKZhs+/Mr7U0H2c9rYk9U/EaA6eEyq/YfIrDoH+M
ky2KrT287qD1hzBbX8gvbHPzQGd+bn7G5zvL13gceILjW13ZS/YrZk+yEtr9
zvLps3nEOmcusSRUcyDrk1+Hyg/QfADNf9hyW0MOpZ7aNVS3+W2f6Sz5s0Ll
82z1Wt+yNRNbg6pPndnjZQc2Jr/sUWwNxNZIcnTUOknhGvpvtH1Pgds76yc2
Z1/pzNvt2go46zE2hzaf2jekV0H6vrJvK7OVyOTYS9i3/nDne9/WI21d8g9S
PfTJgj5JtlYPbwVnfalSDc3RTbZ93/g63zhh5HVIK8FNyJs5a/W2n3zc2VO2
/ec9zh60ret87KC1nRnBmoOGOesKtr5gvn7mZ1zP8TXu6iVfO/OzM/uynI5d
kzd5tSDZFT8IlH2Y2YatD1Q8CIsFkZxGX67PuF6K8QFapg6K7WA2zs07yM7Z
F+wfJGx2ys06SOZ8+Bc6MTpiSTtI20m/t6Dde8m/wGz6KgTJrq+q2ZQFySZ5
DeXWOTFAPGxtjXTGxir0uYA+A9CnHLQm1HUE+opAxRCx+CF7zEbdsVXIFSCb
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
oNjFS7wVv9hiF9fvoLPnbb4XZ7ZRjWR3ZWtUn/lpncpi/X7r+KdEwJ8/SPO6
X22vk3f3H9yXCY20R2L7I9kTFBPZfFiGQW8NfQj0BjUVv9tid9uZlp8117mW
fahrt60r5dIZmN2aax3Jzrp/WVvn3T8jb5QkbOeWl6ips8ttT3tII+1re3Pt
W/x0tkwweJ+t0YDfULYpZQdT9vNG2iO3/fEytHfOavKJe9pW64a2ZmjvA9sr
sDEtopNiJpqt8iSu93GA/CSvc301ExTrew3lKlHfktw642hZlGLI52A+GVlf
671HeD5uRmruUJJn6j9/rQfZmZDbonUupMU83uetuMcWC/m8t+Ihh6JDgWDZ
bZeinh/8ZAMZ0kkxJc2WuwQy7/trfakU+AG4mj2zIYqHaLEQ7X1mez62N/QF
z6xXqsbPKeAaqaLPAAenai+pSKT2lgy3Dlesahu7eqFv8V46f9P2o9xS9d6f
wLUviVLM/K9ozyzo6Y6ek+AJgufHEvqubVRf37b23l7h7FmZXWcx57oWM/7s
db4RbM77XaLmvbMbyQ7AbAD+t/8fLRsAOzv901o6P93OM3ntI78S20+e3kh7
yrlpt+mOPh9sDdJP53LYOQA5knUWQAF4ZkP3hp6J9p/k2Oll9dP1WNnJ6PIk
QL7EReBf6DzLC8gL8vtr8HfosIp+lZ3+XBXZjanjNX0vJFDrFLZG8T3jw1L6
5M0i8jMrXk2+ZnYerEcLnVe5i/t4nrH3ZB7FX3/orRjbtq4Q5KwtBMUrrrrF
VH/UXPs3tnfzoaTWIIynBWXfesuPZir1P3N8ovMG6XwjO9vI7Hn/TpFN7y3w
nhTNLxbXlz2K2XXsJS+apjWcL2nzUbUUF8tsF8869h8u8IelCbcB90nT3moX
m0c4+6qPua4iAfJ33orMfGmyRXhv/M4a2m7kZ+W5jS7MGIL+QT46l2VUgnyZ
zI/J5io2r7L5yg70TYyQHbXNvSx2oL0fk+rJLt9s8u2dHx6h9/5n1HOWun8t
Kfud0DTZ8PwJTxt4ciHnMPRSaVo/sWuw9aof7bujlL4TTOcsPFsxIYovtAiZ
byjzb0mdX7evqc6wMxucQs7+cmt4eqRJxslP5UNqfqN122ofwvYg1vHsXqQv
dcujuUayM9/oEqn3t727s1NvmxDFTUqM1PhiY4uNSVe9NS7Z3MTmFjavsLmP
a4TmP/9FyhbKbJ9sTrfUmcuZf2RNH/nAXeceZTNfd9sThDdPmtZsT6Fzydry
d23JtfwWqe+nSPSf4qszZX6qL7sfs+cZicwQH/mlWZ/tkKY+aXblBVNkW262
P3XSxF8W3Az8uKTyzfWFD9VXn7ay4xLkD2m+kFfidMaVnW9VkWuZjsxGthYB
vbyXYhAUC9N3l31zWf9tW199+F2YfKrNn9r8niOT5fv8BNw4WT7L5pd8MUn+
yObf+msR+Sx3h767tvwm5nCvmvsrtsetOJ2/ZXEPZjk+sSbT9hzOOXsN5m8x
PkllzXcz3Uf+myOQeSNJ+pREz0T0XIWe1+N0/padvZWdseSTZPmtt6UP/B2i
M+gvcV+CkduX+1IVnhR4WsHjB+7mjG8X4fGtLZ/ieeHy2TZ/bevjneqrnw8K
l++3+X2bD3fzZPlx25z693qaV8+A563j3101Tc+SPUd2Ft/QKJ3nMtp8tKkr
iWvJm6a+Yv1kP+0wy1/7yCfhaUJaAc8t8k5hat8j6Jm/tnxhzE/lUJJ8Vezb
tLbzfZqXfC30UeAqYfpetW/VhhE6u8j23O1MyAtNdS5kIXjWwzMGniEJ8rE0
/8oz0Fs4fsT23W66mN/xJ+20H297Gtb3W9RX/zc/lV5J8lWJDZOfofkYJoXJ
x9v8uzuEyRfR/BBTwuQnaT41j8m/pWw/cEyYfHLMH8d8dGzebHNms6O3Mw7N
lt7mPoudOU809edKk42Jfa+YX419s5j946FU2UCei5TtiK0ZJJAfSHXWDxy7
FLPfMzu+g2nCVx1bFfsv1hkL/2fXkaz+YX1jTQPazrGBuZGq/RLbK+kNLTxd
drPRvLMa8c4qWIm+ZXat6aqzCmPIB3/tQ5kd3Nho2cIVgOeVYz/zL/L2OfYw
VeH/6K99wDB06IkOZczfq7RsdW+T+pntbbrwbd53Gxz7NLMh3Z4uO9I5lJsf
rtgLCxrIhszsc1Y2kO3Ot44d8DDHPjKX2SOkKYbNM/S54dhGmh3ivTTtRdp4
MCFcY8JG9DzgxPtIoWxgumx3G4DLpitWidlQmf+KvUPtvWQ+SPZuSouQf4v9
Z35F21PkW2RrIXYeXR5nLcm+v802yvZvq/lpD3eg87/xz0KfJ+Hyz69Rh2tL
lo+nN9jffDuL6T12up7eZdfId6XIb2gqvHfCdWbHTPDjcPn4m63T6zTd630N
ZPdsNs/mW3PGV/41Zo9vdvl2jWbjnytddv7NwJXTZTttds0l0mXbfIZ+1TpS
/Wo2dT11Ygh4wJM7XfLjGcd2hyiu4Cfw/uPYFJ2KlI2RYVsPMpswm5+EwL8Y
/rkFZUc5IVq2lOOS9LzZs2bzD7NJ7UUaFam1DFvHqEvZ5ZRdaLEWGWe+qKVY
mp/Bcz5V/OO43uu+OittdbjOoLLzpyze7fee8ufKUV92vWbTO9TW8VKF7cyr
FeE69+oY/eQx/eSC7Y9Spyt1vygoG8ynqVpXj2grWwSzQ/iCeeC4ajqz8kak
7JjN9vgKedtIPeNX0SG/l9bw1yN/txPHxi9C53HaGktPZw5idrb2/bHKsTl5
HSkbYqPb+2FTuN4Rtv5ndqK2BrgsUmuChgdxjxqky25+Q4jiwltM+LINZLtm
dmt7eQbnOLap4TyDZx1fhp/grw1/jkKyKx/p+FSYL8WFdGGz/fkiWvY/5ifx
T7ps/deDS5OSwGOTNLbauGo+ATvT5RdQL1nvKntP7WoovwvzETBbkt7Rsiex
956d9WXvvpz8v86xvf8xXOeT2T16z7WsdPxKZjeUn4lhsyX8xrEbNHv/r9Jl
82+2hxPStF8wH/6sDTU+bYWnl+NL9U1D2fpbXXugf+74VUU3lJ+V4XoN5VtV
1Gkby83vZHSCzi4yf/+xCTpjyfz9zXajp5/sN7bx/ftpTcW4Ow3PCngO2dyY
78HRfA/uLaB4/18GK+a/nTO50kdnTebrxnPTWP5Tnsz9HwcqJtjzRJ25brG8
zibo3Eo7s3Kvr77P7dvc2v73hmp/D8o+DFT8sSfc57WhzFG51yM66ewBO3fg
on0f+8hn/+d4ndtncUUqU/ZWoOKm/cW1dK2pM90sXtpDf8VM+yVe5zZZnIE3
1Fu4jHwVJgbrDA87v2M215Gzm+xRLX5Su+r6psgEbVxj+d/l5fvPpavWT7yo
90mg4p414v9LXWU7/QO4P2Xal9X5hzt8ZavjC+7sqzhddtbuPF+dt3sFfS41
lB9QBuUCHJvSnjy/A6opZkUfs1+Gvrus5sUznbnx2w46R9zOELfz0scHKZZg
FPJnwRNtdjVtdGatxdaw82kvOLE17AzhqTUUX7FrN515bOcdm02utYW1w5wO
inVpcQtdoP3cVe2wL13PiT0j/Zxr3UsaX03jjo05ZWy8ov0X0Yb12uocYjuD
eGQbnbVpcTzsGd3dUM/pfOpaEKTvRzs/c1I1xfv4M13PsD2/dp7Shw6K01iG
/GKg4unZORVDg3VWxV3udS9vnX1m58cW9VacHf9aOp/GzqZZDr2It2LvtKO/
bKItkgrouezfUM/mhHTZ/f/PXwz+0d46p8z8Pl0by/fzp3ida2sxkGd10nkS
Fi/UfES6NZGfSHfmfqX99S3/gL69KlRxjX8JVbxvi8/Z21t6m86/ce0HufbK
tFUn5CUjtzT905/rfcX1Ns2nsecbZ0zwg/7SsScci14u1N28rGKHWLwSix9y
JUHnvFpsk9+51o41dUah+WWOSZdv5lbonWoq9uZgnt+zAYrl9Rv0ROivoPdE
dg2ua2dZ2W1l85XtVjz8qwMUH28wOg9AZy90foz8Zw3l12lnbfl567ytU+jz
o49ijPwLXu6jmCOVuJYbgYp/aGeS9AvWuSR2dvQSH50f7Q3P00DF+utCvdsC
FGcygXbO7i+bqyT0dHfssf9A/841FVfUzh6ZFqzYs5l4ll+myyd0OTpuAe9D
z5PtZAdmNmAWd+Qzb8UeuZWgc2otXo19m13wV+xFi91i8V8sfsvTdPm7WnvO
pq6F1HWlgOz1qjrjwCDke/rLXtGem0Xcswfo8Ak6rrW2hv8Zct4jZxFyblvs
nDZ6li3eT6C3Yv4soB0WBim2p71XczTUu7V9R50DZOc1JIL/qaF4p2YbaGdL
2BkN/9jYFaTzmu18ic7VFP/Fznywsyjs3Ic7QToPw87CsDNat/rK7tHO57Fz
fO2Mng+08xvauQXfF63g+d5Xdn2t0adEQ9nlms3X3/6y+6pTS3H8LT5T7yby
kzQfyf9X05nH6Vyuf1zklEMHpZJlUMeMeczKDGbxPGOajVkaM/Yymg3PYEab
VIpOe3FE0Ur9ytK+aE8RdVIpJEshOiFpL5JK+r0/fb7nj+/rueee+3vd1718
7/W6Ph/x57ySbvzYcsIvpRs3tgtjyE+8+0Brc30/E/S3WvQcl2hsmpnocmma
bTkOkdd/SH8V6f9MMxeIeEB+4Tct3TjJp6FXKfpVUbetCRdMtH+zxr03isxD
2pG+cUrUfqk7RpmrWxhBw9F9cKYx1s9DzxfTjW37I/Jj0439u5Y6ebjIHJTi
E388yZzixVXmN1K9VY8y/4dwgR4nrkCcjv8wB+yTwX2i9kPH87wnOkYfeR65
C7rYH1trI62LviPfs9ONwyzOc+Un7vLrib8yzTYq4o1fkm7ueO0tDud5fxEX
nN3r3D46yvxzwmU6zLvx6cY0lh3fhhTb8ombRZxM4mfRnuxYnvdlQ6mTQdTJ
BmH+I6cq0XhB8l1e1WD/ZXGPiI9E/CODSZ+e6XGvEp2XUj8j0Hk3fbu6t30w
tWe6Oc/7prfQ56s0czseQd53RfYBFK/Oo8E5p3ieXwjuuMUBNTXd/bYf8icn
eSzNGG0Oe9nHiiP6vuB+cw2/z+vMlPh00kRJ04NwJnW+M2q/7I/47c3fD9If
xiO7bZXvSvZTPy9RP1Nbmwv61eAeXL5ue4vs7yZ+qpnpxvvuifyRSc7rfsq1
KM34vOKW/ylYqz9L/IYAZ0x3V2sTnV7+Z50mej5qSR2+k2Es/TGZ5ioTT5nu
ZJ7u7XsZ2d6emWT726eR+V6a8aOS0aE6yXiedbxXlWk8/y/ReVeRfXKvQd/Y
KuPTNCN9KMm2ENmErySc3spc3P9ONB/3BuonrtA+4AfJq1O6ccVnE74hzbi7
x5jrVmUY8/9K4huIf+AU29i+nmI726+I78y7XXl3apo5NcWnqfPLZ1N8htmO
fF6NesyUHfGhRI85+9F/c5H9gkdSrtJM8yJ8Tvz6InOzjiK+PNP8FLJLfSPF
tqmLyGcx+a1Fn53IbJ7k7+gVwu8i/7mT7UO2sch+ZOIevyPR92tf0S69gvV8
FfJHZJrHYRtpfk503+5DvdUhM6aV+SEn9rZ/vfYK2idoj1CGPvuSzRe6jXmt
pq8xKk9jHtnTz/y2P8k3IbCxbEDnEeg8F52njDSXqtYn36sPJ9tme1Jf28LK
DraJND0SjC8mPrEj/cwp9t1o83lrf9pImu4Jxh+TLfbqJNtj9xpnjjHxi+XV
sbeIMP6dztqX8JkRY+acRziW8ETCa8iztK9tlY+ODvxJZH+uO4os47RkEN5F
+ATC5ZQlM83Yy9VV5roTxngBMjtGjMsjPtuTE7xGKiT+rIixe+LR7fd+xiZ6
nXzzyfcN8n2JMfw1nofpJ+V9bYMr+1thgNUH9xe7ea8t77/Bu5+zh7sqbFsI
cXps72/MpcYq87oJ9/sm3t3Pfvkm2m4G5dpK/RxoZU74zonmhT+bvplKvutp
0x0h+7HLh/190ucGd6lXEPdhYDMvLOdLy4zn3JX57hB98sHW5m0Q74g4RzLQ
fU4f+zTJn/L3EvtUDiKfUNSYDOL4jUkwz6944zskGgv0SZ25hr0/PTzaXIPi
GexJXz2UYb6MH4hvSLat/yeknxg2duiN6LkvZAzzbshsm2gs0M+Jn0AdDiOv
mfweHeF8b0TPLwMf2A5R+znLR/ti2uuCiDGg1pGmgvZ4jzTTyPeDJPso3Es9
p9Een1HPJfSNY1nG9vl2tH0V5Kegte0NhV7fHqe8+yhvW/T5EZl39jVG9Dek
r0+2/8d00oQSvDbbR5kO8ixCh67oc4BwH8IfTkFmif229hPXqc5pvtY3i5wa
+S3Jd6Ovcad/qjKPoO7rjxXTT3i/kXdvR8bxYvNjP07cCP5+gfBXyKlBTjVy
0qmny0PG+hYv38p+xv86ip57gnP7VtnGOtJZ9Kfoc1qd8bJ2IXMBMj9D5gFk
jkXmOGS21F6kwbgl4ujrOM775ctJs5G63Uvd7iGv+/sZu6wb//+ecFVb8wT+
0M9YW3soY2Nf46jLJ+aVJPvFTCf/2ohxu9bTBw4met+6j/lmdXBGPb7KHIri
LBBf/XlptiGMQf63yB+L/J7iZurnfZa43S5Drvjd9pHXqGSfB86njMmUcSFl
/F4+CH2Nvz0szRzPWgNM4b2KiPHKplJnD450HxCX8oQEz33ioB4WMQ/1efSl
4+h5KnpeS14fU66ryWsW4W2EZ7QyZ1pSojFp1/JNvV1g7J3v0OHWvsYMnzPS
fNvCdSyPmOta8mWnf1lwz6iz/FC2z/Of4zvKpv1e7GDu60sTzH8t/5jzAtuS
TwlXBDYt1zD+J6X43l88sTX9zRW7izRDA/uTI/z+mmxfuW7ZvqvQPYW4ZEvH
mX+z2Vjbd+qOuwn9N/E91qH/hgxzLIlf6Xt0mx82Dt5BwjeGzel8gPANYeMJ
f0d4NuF9hM8vsO+x/I7/7G8OM/GXbeO3mWwC2pnre0aC+b630c+H9TZ+4w70
L0v2OCm7lg3B994H3S7pY0wS+aOvLfG53zjefTFk3iD5S10W+Ex9VuhzFp2x
dKUcezPMxSOO9JsSfEdZQ/iM4PyqFD0r0K8dut1AXl8EfvQ9M81hLP7iD0n/
cILxJEuo/8+C77Sc9wb3N1beC8zRS/K9R5jFdza4yFgE4oW+qLfH9quJLyB+
M/FJ1P+Rvp5z5TP9SKH9pueSpoq/9xI+wFpoKfpXau+PbpvRrb6N+atzepvD
ek6+8XqE1bNylP3B5AvWhG5T0O1FdGvFfLGbPnM788Uh3bOEjWe4ATmFyNmG
nNnIWDLRWDvi0B7Z29iaz44wnqxwNDV+X9PbY3gY/S5D5w9p6xd5b2m+cZ/6
oMPZicZP3klfWBA15tIntG9psv2z5Iv/Z4n9QOVnFkm2r9nb6FYZNu60eOYX
JBiTcyhxa2o9Dos/VrzI6sNtqcNNfY3hfyZt9Sl1NZO6uk9nACM9z/al7J0D
e4Z87cXH2GZyGb/jUuxXJfzarxKM+XonZTwUMtfPN/3NSydOuvPJKy/N/BoF
6PNSrXEKr0dOOnIek4/b+cZeF+56Me21mPbKp71a0ffbBOf/0/n2+2Ubt+4+
8vojZC6ty4lPzzaWnXgPasvMfbCAND+HzNmURb7PkG8P8r2X+N9D5jyS33NS
1L7Pb1DueQm2Wy4nzb0h+2CezDi0McDk3F7ofYv2LB3Ic2xwT12Nvr0vMO76
XePMRysumw6UfQv13Iuyr0f+/chfc5L5ew/1Nw5qDnndFjI2+xryeStsbMx1
wt2sM+5ocYF9vOXfvYC0+SN8ziO/vc1J7hsHkNlhgM9aTx5gXl5x8iZqrdvH
uEnvMI9cxhxxhuYj3h0W2NSJD7bFAHPCar27sa/tXmop3xmUsytlnEnd3kzd
9qdu3+Xdgcleu8pfs2twdrGb+MrA3k+4+GenGhtfnK5nDjCvqzC/w7XG/V4w
nL1h4Guwm/iBxHchvqPGt5D9iRZrvoga/0v+fBuT3fd6lBmbQ3dJ8jvsH9gS
a036cdTrUtXl2DrX5+wc863KvjQn4vpV3d5Vam6JhchZVGrc//sI90P/7qne
E/1Qal6TLd2N3z+tyRj+z5DXpqh97YXRpX2a9mhh9PkQPVeh5+ZJrO0HU5YY
2vOiZs3alyOfOlxO+veixqippyyrA7uyvQXG2NJc8Olk2oc1z++8u5vw+YT/
ILyN7+2DBOM/Zxcaz07z6b9LzakgLBT5Ssku6RhPHPIfb7LtpTAshJmm+gwR
/2ST0xQVGttOuHbyEfqlu9N3Js3SJttYimfm5DJzzXRL9Rih8UH+Ej90d5pu
/P8R0h8mvBV9LiG8pruxcjtFjJe7rMzcGP/t7rXA7qj1v6/UnByyE5tPOL3J
ODCHS80Ts43w4Drj/wr7t6TQmIDC1pM/zVO59qnpkmMuRvEwiutgQZP5DjaQ
9r9RYwbW0Pfq4o2zejNpEpt83/0h4YsIr+puPuSne5oTWTyWQ+PNZSks5FmB
3Zr4zB+rNO7W9Tnm65Udsva1I4K9rTBuT40Y5/ai4ea5FH7vxbKRz/a3IB+U
zF72Q9H5R026z0DikN+L5yXkz2FeOyvD3HPiLhYGmPDBNsVSlkpjjj0Ta+5h
8Q6XkVd5vPnC3iVuLGnGE7+UdluWat4L8VLeU2FuStk15wU20lNZ0/1cbezQ
u3PMTyx7pJ30wxH0w19jjC2neU9zaFO+73507/MtaRpJcxLrzHHovGWA+Zu6
U44ePE+2sJ/ue8n21X0SfV5GnxdaG4NQWIQjOpv3fmmlcdJG0Xb3RI2JJzzF
z6Nu90HUbQfq9hXq9mnkvJZqTpCGYeaTkB9oLPEtUu2fO2W4OVDFf9pA+DLC
wwm/hv5xyNzcyTZfe8613Zd4msVdL97ms8n3/nxjZz2T772o9qHC0Donahyt
oiCtcNI6o3/XOONjrEJmZZ79QysKjKslTK10wivy/a6wwdKjxu+6g7p/NdO8
kBNYtzdj3r+Y+ryb8t5BeZ+kvMP4hv5DX+3Qw3duwgZT/Y+gvMWp9vutJs16
0nQhzTnyk+1jPKhrWSt1Y2w6ylw2hD6QTx/4J30glXxObPQeYR1tV51h/sRf
S4xtIVwL8UssTfB6/rj8xRu9X/6F8KpGc3ksKzWW0ADCrfnd0Oiw8MJ/7O31
yQfIn5hh3kP5+Yk7VByiug9sFtwJnlhq/AuteVaWGCtBOAnyVW3Ry/6qnxD/
SKN9sc+n7OWpPlM9zHzyMOP8BOrqmnL7zcpn9iLKW0t5I/K5I/3EVPtE30bd
/itiXOW3qJsvGLeb0c/XEt5L+HhXc1wsTvA67UT6eBfa5o0Y81G/FIxvWivl
BT4mIdL0I81O0hypNWa38Lr/x5ktftlqytiONmqUXTFtVN7HOF1/2agm+26r
LXJ6IGcdclpSjgnMJc9TltbEdyP+LeIvpYwt+N9zxLdlDh0Sst/012WeezTv
7BlCeIrtrGbw7iWET6E+36EtajLMl/kb6SOkf4z0j5Hm78WWn42ePzXa56Kx
yBiOuoObqTE4sBtfSh0soR7PkU8E7ZLfaLvxFsicXGo7ZPHGR+ONRXxJqXmP
ZAMg2wfhbsj+4U7evZB3d/PutwXGDBV25cXE5zbarv4CdP8B3SYR3t7NGDE6
Z2gsMcaB7NK/726bheu6G//ywajlXMR7DVM8RnVhnbM8y/wg8lfUO5rPhOc6
J5gvz6rx2nPdqV4j35vgdbIwp2YH6Q4VGMNU+KX3RMznLdxgcU8tbrIv0gu5
9gWVH+hd+T7H0RlOLe89EDUmZz36p6H/mm5ee6YH68/ZpFkZ2O3Ljn5F1Lb0
C8nndvJ7gjSPEH6E8KuExyEnqdG+BoPR4Y0m233Fl5ofaAjPavn9NxofbEWJ
MXSEn3Md8l+OGn81WmJsCOFCVGv/QXgV4bv4dualBuv2EmN8CN9jIt9mTC9z
S1VRxz9R15O7GQf0jCHGAh1F+l6NPsNp0Dli1Biw4ti5I8FnawuIXxPYkPek
HpcFc+gU4pdGg3pGzsRG8/8K1/DMqMfnj5iDCorNEbycue+RWI/lwquYFdiJ
vTjK/Fs6qy+MNQ+0fMlLYs3xLF/y0UXG3RPmXsMo83OIm6MnZdwYZ99S8VSP
jjdXdQu+3559jGNWzbsnTPKe9E2+5VkpxkwpLTLunva5Exjjo9W2nU7im50U
Mj7AQNL8t8H3/l1jzcsun3rZ39Xl2Qbv3THGjBBexErC01OMcdGOtLsr7G97
BuEzeXY2N17VWXnGqt2i+xOeTV3Mb/Zmom0nStB3NGPdQsa6EZRrVLx5S+Wv
nlxpP3Rxsz9RYWyKjwg/UmFciC2Et/a0L3MnZK9D/0e7eF5R3O08k0aZy0Q8
JotI06bId1jvjTHWhnA2ViJjVU+vScTtLewfYQe93dOc8cLn6c97uxt8Vz50
kvHChL3ZkjFsxoXe+/9LNlD8/XU7+9j3qDR2wZrmLo/896+mbnpVej0VKjLW
mO6132ju/yfw5FBnT06wLd3v7GX6DDC/rbCa1iYbr+kfyNlVYV/vmeT7twxz
sIlLPC/WfOLd+T071lgHubHm2xaOQVqR9ZddytvIvD7ws1taaExq4VHLFntD
4Eewu9bY5cIt/4xv4euoMZyT6T9TQsYN6MBerDA4i9tNmoNRr6107zQj3XdP
xylL1gBz8s4oMqan8C2/Rv5tYd9B6N72kwbbrryIbpek2C76CHoN54kjvn2h
79p1Z/T+ucbC0DpHGOq3hI2jPpI0Qxqc/nzCpYTjCVcVGm9aWNNNhcb7Ftb3
N/weijp8aaHxwYUNvob2f5NnhvqYzquQ83Nnc2WIV0CcAqFCYwgKP/A3+nB6
yBhQ/0H/69A/h7rtJd0bbGcSU2iMv7/w/RhP/sZ4crewIgm3I/wA4X/SXrE8
B8l3LXJmphj7SLhxKUXGjstkTNgXZyyUlsTVITeV+KPDjXEjX84+hcYQFH7g
IdkBFRofspjfXOI7E16O/PrAJ0j4kYMbnEZzcnm552XdaT+W7nttnankhX2u
Inzl7+KMwSLc64wGn1cIezLS4PO9M+knQ0PG7tjKfNEix2fFb1Gv91f4W9tN
eEWFMbW2Iy9xmP3rd7Wwb73Ci2rNTSJeko+0TxlmXAj5wMmWS3ZcP9HHegww
l6vmUd35a9+wKc5jqMZP+Ur+X479JSVjc5zlfMZvv2HGMxHObl7UGLkpxO2I
M55JjtZKjLnTWC/dS9z9ccYzGVPoczSdoQ3IM3ejbFx30j+jE2xLfWKB/ejk
Q7czznIlU2fAG8f4HHg4ae6Kej8yvch4vsLyld1NYdS2N78l+q5dd5HrCoyd
LdzsCmRuZGzZS509R/mGBH6s4oK7PMF8cAcY+4uyzHF2jP41u9JYzVnIuDVq
OQfJKxI1JvD3pJlVaXzsrrJpChnnZBPz3bnMd98w3+0gzeRK407v5t0BUdt1
TkOf6XHGpRFe+OyoccLlw/pUjv1YZYv9UK3tsZ8l7QrtYaiTiej4Q7XvE1cS
91qcOVh+IO0CnbOcbvzyfwf3ZRHqb3OysZQ6MhbeeqFtDteNMRaS/IKHIGNd
pftUx2GWK5nCmz8QnH9eSNzOSmPsvFlo3F5h9i5h7bEk1XyL9cQPbfC3JlsD
3evrTv9t2quC9kruaj692xLsP/g9fXtthTHQElifvEK95fCNLyg0bqZs826n
XN8NNG/Jl6RfSfpHmxurb0WyMa5aU89tYo1Zp7W8MOGEZae544MKzzN/ym45
y7xp2iMMyrGf9WOFxv3U2fWr6DYH3Xqg2xUaSxt8TjwXHb6Vjwc67EeHl5G5
FJk3k6Y+sEObQHnr6H/v8u4RvrOjA8w7rX3UA839/U4gz4Ycc1CUUScv8v7k
Lt7/CB9OeHETR5lLTDxisk9PDdacc0j/a6FtY77gdyn53kj4Htrl5GHGhBHe
1bUpxry6Ms74EcKOGE54c6WxjyYS3ltpvKNi2i471bYB8jP7+Vz7ms2rNc+K
OFbuIP3COGMfnVDjO7tHqcOX0eH6Buv/C2NXKMe8G3/XGEz8A8TPo03m8wzQ
+QgyWg6znOvog20zzG19lHcTeLcb77alDyykD8TQB5rxLQzIMW+LeJDah82F
dIhx7BzqdiDvTkL/canGyDqp1BzA6doXs5a7j/ZecKq5OsQBJe6OpMCHU/6b
Y2jr1oGt3Y6IuamUbvgZ5qQ6yJONLo+xTp7Bt9y2xBh2wq8TltLs8cYWSM3x
Xkv7rOX8Hgv2XK0YE/IYE35jrjkQMd+V5OZR7qcp/zT6xjziDsm2gPQPoe+u
TNttpmjfUGeeLd3vfRDcwUUIr66zbqpv8Z2ozn+ZSr0yH93DfPQ4srMzbEMu
bvYHq83PLg6T1vXmKLmSsidT9t2UvWWusT+E+/Eoaf6o8xr/auq444Veswmr
b1qS8fp+1XdMnfSiTq7K8h227q81doonUuOneBpDNeYufDvLXIYKD84xl494
fMTtc1K9w+KoaVVvnppthE8hnH+GcTiEWyHMCmEVCQdUeKEdhnlM1Hg4DJkf
885g0t8qrBHeXSZ/D90h017TupnvcW+1OR/LcsyFI+6bJbpz4X99iL9TPib1
9tOPGW/cDWFu1EU8N2teHkl8Zq5xWYvoG89RD9fF+HyofXBGJPyM4lxjaBwY
6HtH3Tn2zzVmjTBTtg+0/YFsD5rTTwaGjLG2apAxj4R3lID+zejP89G/U9h8
qOJC/YuztNYcnfJBqQ38UMQzKV8R+Yn8xjjwfoqx/4TT9hdGJ/nGlRhjTvhy
z9O2g+knp9BP2lCWWZRlDGU5PWweUMn/hd/JA813uY3yxfMkUsZ3B/quS/dc
zw8yZpNwDGr5HZJrLCnZYiwPfDrk2/Fk4DvQN9P1rjrPJP/l6HEROrx3uueu
KtktsL5Koj8/pP6MXu9P9jd4FzKH1DlNt7D5YjU/HmcM2KHzpjbGJhmYa3/0
L8jriWrzYz5HPkUZ9sV4eqDvrXVnfT596RT2yJfTl5aQpi9pTmgfcNLWus6F
2/FEgOMhGyDNA5qP5GurfaP2jNPpJ/vQrQ39pLzYmOnCS1e/FFeevuUBo41x
KezJlfpezzEe0eJq16/qdhtr1OPx5ntOodxXU/6ROmuK+MxR542y77g2sN/4
mLF8LN/CwRY+MxMnmc7NNo63P4x8YRYhfwvyQ6f629beXee0mgd1TqYzfPFK
yW5JNkviqsqr8ZnzuxFz+4lT72ni/5llXtctEfP8ieMvjj5cEzKmk3zW2+ba
b30C/ey3GN+biA82psbvpuQGOFbo9hHl/Z3yvkZ5v8n0PK05Wmc84sfSOU9r
3j29xtysGs+2Z3pMW5Rl3lbFn8DvP0izQnNTim0WZa+4C/knhswz/n2m5zDN
X2OyzPMqTtURA40zIj/9FnwjO6f4jFccjK2Ce/MtyDmGnq+3NF5v1xRj9n5L
W28i/UTSF4w3xofwPbYi+8dgDqpDTsfAl0Q8rgerne9WZP4Rb17vI2Gfe6rt
VlOv3SL+JvaEbZsiu5QdYdsYyb6o7Xhjx/yFGxO2vYhsRbJGG3dVmKuyHxHv
neLFnTguuMcUp+KYOvMqXs44f9qF5igfmWV+X3H4ZkTMxag0bchr9SD7h76Z
Zf5dce9qPTguzmtCYX6cPdC4H2/x7onyo6Z/baKMRynjq5Qxl7H39Yj53cTz
1rze4e0R803qO6ksNq+AOAXm5hpPTT5fmg/U18RDmah7hjqHxeU4ss58js1U
VwPNyRtGx1h0+gw90yLmoVQaYSBljvecsh3d/ow3v/uf5PvJFNs1RbNst6c1
tuyzrghstIT3nBpgemoNNSHO66j4Iea7EteVcCCEASH8B+knPkZxnAnP6f1B
xnQS71lFneOFOxUeb+wp2Y6JR1Dtu4E8h2eZO+wr8n016G+dxhs/S/6OpxFe
P8gY+0fQf8sUn+9t5r3RWeaAEy9leZ3PunvK9jhkTLPXafOhjHXtGOvuRf/X
GWuaYuzvWD3IPo+ryoz5qDvMD8uMrSZcNX1nc7P8rW3l3Z95dzHvjmXtOiy4
a5Mf6s5s+6KuqPNYo3FmPuP0ban2l+nJt/YrOt+Gzh3YR09ONz7JB+cxXpLf
beS1i2+lZ5a5m2/m7849fIcyjf9/1GR7QnHz1iSan3cX8SumOu3DhH8hzRDC
w8l3cKrxV7dS9qsoewplX51tvAlhTQiP5Ilk2ybdR5p40hxrZ3zK18uMUflK
mbHwhIO3A926Z5m3ug3fzVz+bq9w2PzZ4pWWf5J8G+TXMDPLdlqy0SrIt0+U
/KEuzLcvhPwgupLmJmTVImdF2DygWvd+Uu3/KV62V/dn2f5qHO0+Zorvo2+n
jLek2hcsmf54F2vxk7qa23xugm0aham5ssy4mlo3iANcnNWvlRmbUnfOU2nT
RbRpGTInUEdxGcZC+VHnbPTDNsi/ZaS5nMXjvFBn2TwhnhMvoE36mEuiNf3o
mnrjdN2i++om2y38prGtzngTVaPMbSxe44cpV/Na43vMI/1B0od7+H6lkKeI
555s45oJ00w49wvOMV7fHdnGFxO22G7efW2q+08+9VM0xfvxLZR9D/+bQ/zB
E4xJP5wngzRh0uwjzXrdExU7/PUJXm8Kr74Ha5I+5Pcw7351guP0/rPZxiQS
HtGXyN+L/PmkiSDvfeRU0LefzjaWk3CNvmb9fBb12zXGsvr1cJ2UFpsrRTwp
ss3cF9hwTkLeRuqhB2kupX0bUu2P8wDxh5tcJ1p3TD/Da4+3U+wfIt+QTxnf
WvK9v8X4tjrXGLLC45hPX3qePtbhVPNIi0Na/NGt6fPjmQ8aaeubad9i2vcw
7XsFeW1tcvsKp63NIOOFXEX8duITiR+M/oOn+Jy/A+P83kCng8SvJ76eejhM
udsTfo4043n3gybbCO0gTWFwR3AN8TuIT+5hnI+qAOtjXpbtYGQDI25ffRM6
78qmjJmM4SHdrRP+Md6491dnGhNBeAj76G8HI8YzGTHG+PvC3hcnwP5k42oL
4+HuTOM8iFtmf7H5ZQbSDm3qbLM0PGybWtlxvUNZDvCNLEDnSYTvJjwkxlz0
n1abj14cwrJb0v5dOBOLM401MYjwMsKXE24ZNu+7ON+1xlkUrGfE0yv7b9l+
y4Z3aGDHK57MtDqfOQuXXTjvwmaPzfQ6T2u8GMq6MDgLEobcskH2cf4f/6v2
9T+icx1PQYxtJMUZLDtJ8cG2q/P5bUOmMWW0vpX9+9yw17/rKWsm9XOAd+eE
bSuvM2phmx2u9/rn+rCxtISjJb7fs/qZ87c35ZuX6fqRz/2Jdfa7j6ftutN2
nWm7p4hvGzYP8uP8tg6bl/kZ3tuPPjN493TCdxI+i/CV6H5Pred94d8/lWQM
/Dv5Xuak2q/qdfX3TKd/B3kJYecrrErhP2r+1b3j2KDPteL//0LuQmRewbeQ
GPj2aj7/H9+yuJp/qbWef/E515rTuWG8cSqFUdmSeppBPY+IMX6jMCaEL7EQ
3eam2gZ+OXL+FrbcWfTJvinGC9ff6hfCRHmH+vkh3jwOmg9nZ3pO1DzQocZz
QfkY81sIG/5WdC5D56MnmbP6aK2/l2no8hDtV6E1OeP6Ar75+va2qRRXtOwq
/x9a/gFx
             "],
             VertexColors->None], PolygonBox[CompressedData["
1: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
mtt/n/P3gmyOf1P1CVG3OAOx6HvkRSNfe3b1DKssac6F3jUqU/rX9j4fezfp
HbWKMJJqj4kEjv//A0trdbVGQWsTtGb3io/NwdD7Pn4Gm7tx0MeeNT1zi3Gn
f7Jqfwrtj6JndRdudjazZ1bvRj3Denb1jtS/BfRPEv2LRP8Y6ML1J/K0f7fr
H+5lnWNgGvsqA5W9bUxUY6G+3vbv93Ketpet/gEfxrmOXHcHaIjejH1FT/tX
if5h3I3zd7xsf16Hq/V9qY9LfVvqA9NalVDnWgqtWVHf1Hvcv/OyPqoFkBx3
yWC+xj4JP5tzvYv2/xvpXEOitSNa0/HWy/q41Lf1xsvWbmgNhtZeaA3HX8rQ
W43rwB/03yj7B7j+7ax/POfE335vK8saw9baYa3R1NpMrSEupbFkb9sL+QH2
W5ramLTGojer75TjKW8be9cYvNaKb8TfhiBbM65/p+uf5/rXuf6h/h3WeVhe
ao/gE9ynN876o/a41VoYrSnRWhKtiVmK2xKetlewR0rr61Ofpfoq1eenf7/o
Hyj694n+AaO2vvpk1Re70NnXN5/jvGbW56d3h55pPct6h2it3gj8DY+yNXta
q6k1nVrLqTWbF3zsnaN3zXl0VY5ZfaxvX338eldrTMTT+c7Wu0LvcL279c7Q
v0z0j0z9G1P/NHnFdcW42dpzrUH38LFvur7lpdB/KacTPWytqdacqm9ZY+wa
W1cfs9YOaU281sJrDZH+val/VOvf1PoHp9Zaa0221mJrzbX+7dWCeJtH2T++
hhFGXx+rS6pO+f+6v7NvTW0AX47XfOzbom9MuHMNvdbOaw1QWg9bk6S1SGm0
dsfV+lTVl5rex/6lon+46N8t+qeK1uZrTZbWYmmNvtYyaU291tJrTVOgvuf4
G+5q7wit3dKaLq3l0houzZ1K5mtjyRpT1r+vBpSy/Sa1v6fWyuufo/rXqNbM
699OpXBTMsr+8fQI/1nwnxkeouN52D+m9W/puOinnMvpbN9qzFH/ntY/ovRv
KP2DWv921pp5rZXXP55V99lBerf7WB1ohpv9Y1pr3bXm/VgzayOpbaQ6uPqO
5jnH2tSHpLFTtbnU1nrhrMtozFVjrarT3OWYzlnf1/j0bK7BzcP+Hav5zRew
/0NY7go7g/3bTXN8NbdX+41qLPID9u99bExyo9Z+eNi/bPU/OM2dzuth/6bV
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
gJT2pg2lmK2K1SqNKNnePnSMF+l/qF8ns1FVWxrjkW3tB8fctWxsoxvanLrm
0ttpzI5zOIJzORxMaWKxq+vpmVXHYlgrtrRiWiuWtWJMJ5J6O8arFY9Otmsv
uIaee5kNmy/rHgFn1jUk9eWYP2Bd2fxmQyGtnqvsy5VaptnzzmFTJlsy3WPS
IpOmj7R8pEk2kT4NoW+DwU/wDOA1356vQPompv0iH1z53koDpjn9K0G7E3NZ
fLx9dUzzR1o/e+Ee9LEgbRUA7vCipJtp9w/gAncGPuR7gyIJpo34VPd2c9NI
HEw9XetYPMB67OMmtitMuUJgIzwOPPQyW79tPCMWxlgMOMV+WxBj2loX6Pf5
JqaxdZ5nShvKtwbn4s0XWD7x8oWXT/C4UuYjLN/gsfCPesaUMy1GaTI2op+u
tF0c+MG/UMd86poHPsPvNjcNHWnn3IFnpVxVylUBWfTco5yz9hVMg4+jj0Pp
67lcFnPvSnPTJJQW4WX4HMq46ptZz1F4DupYQ7oaZIdfijebMtmSXYQXpNx7
PUNBAT33YkxDVtqxo2JMe3Q46bAY0yAtBXbWsVicOofz9S1Tl/sSzIsxW7Ir
1HU53mzKbsSbjZps0/6NN23QaZSbGmMaof+Q14N1+zgX1Tgnp5ubpqC0BE/B
J7Mut54bYBL8frzZGMq2UM+YwfBPXmZbJRsraUdJo0jaRNKQkraBNBCkfSCN
A2kZSPNAWgfSNJCtnN4henfIZk7agLtZt6uJaQRKC3Iidf0UY5qQ0jY6R7/O
NjeNo1AdRy97V6zOZ1p2Kym7AqyuY9pt0myTVps03E7Hmw2abM8UP7eJjpeX
xdP9XfakDg0laSdFlTMtQmnsSVtPmoSyDZPNp2w9ZSN2DaTCU8DVeNPik8ah
tA2lySctvrn0ZU6MafL9TDpB801gMrwY7fTkWPcAReEfqecO9dwGH7wsVrZi
cisWt2Jm/xnIvQjqulA/yMY3YTa+DbMKyaZNIJ9c+eJKo0DaCNJskFaDNBI+
R9o3hL4d/oMfYLsKbFce7A8y31/5wMv3XT7A7rRVJolvO1AfHki5SMpFgAB4
U9Jg0iDQBF6qKtezbL5ASfgLd76N3W3s7hPYSB3rQS2H/sL31LuW5d/BUPgv
4HKg6U00Aavpg08l01aQf7i+ffQNpm8vfQNdpOx5EOnQp+jP9stYXgq+S7Jv
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
ke9CvjNYC/8feXhhpQ==
             "],
             VertexColors->None], PolygonBox[CompressedData["
1:eJw13Xccz9X3B/BPRghlRZEG2XvvLXvvvfcWJRXSQopUhKTSVFrKzFZfo8xQ
qWyJiOzR+D3v435+f7we95zP+/2+99xzzt3jc1+v4a2GpUgkErfdnEikFp6o
lEjc2zOROJ85kTiJ/g0qlU0kysPYjIlE866JREV046HQOJE4d3ci8bOwEf79
MolEcc8OeK+J997Db66fSBQZlEgUhkLodHclEqUHJBK96/ruzkTiorAUflvf
ROJyzUTiEoyulUjMzJFIXJX2ZXiJLPnJdAVdsEMikbNYIjErbSKRXVgAf79n
lzy7COfhRe9/0z2RGFIhkbgvUyJxQfg1vnD5RGI9fHabeLuRB513YCJRoZ78
QTnYllO+yP422RdAEfn5RX7+LJ5InIa30yUSUzsmEmfQl8n8PllXkvVt4SX8
8SqJRLVeiURVGIxOlTWR2OHdsb55BHaij4qjUeFE4tZ2iURGWF8okbiJ/neT
fQc8TP4M8rQL/V8T8Q0TH6RqSnf3JhLz6TETfd4GmdB/5kokrpO1JLkbkXU4
+hoU7ueb2olESkgBc8l51u8FvJcf+qDreP9L+X6SHibCUvRb4vulB71VpE94
mRyfkmkU+TeT/wD5vxE+iJ8r/YzkOOWbDOg5kJ7sO31z2DffCW/Blxkifw3l
CSY0SiQ68Zut4nhYHEfEtx29BTrR9zCyDYXO6P/IdynYAV8PPQB9EWZJJ4N0
0wfUj+mnFb4MrflYWr+nQV/2bjHfFoXB6Abi+F+pRGJMaWlD6S70lIEeOiUS
LUokEm1vSST2CWvjfyLP0+R7Cn5FnyVnRTbOxEcfyk5Pwgr4te35aFG+xCen
C9fgN7Bbeja7BTah07BbFzr4Ut6fkvfFws74XWSZQo7JUIEsZcjyS/AJ/nGI
T3Qtopzgv+GvD/LXkTAcMvPhZ0smEjfgOuTpTOb0iUQ75el3qMmPCypXbdEv
k2ljkAlmoQuQczvdlKajUlASfSudVZbWBng3TSJxt3croe8lXzlxl4XF0hkk
jffFsdfzPZAV/Z335wu347fBAnQpabRUJ7RUN1yS38PCFvj7PK8m3qqwCd73
7VPKScaqdK2stFdunsQ/lJ8+W8sXXMzHL1VS2+kgIe//laMz4Ut0cE2cX9Lv
F/A5TL0nkcinLL7KLrNgNhsdYKtjdPgdnZ6k0wHSPYq/RRzTYLZ4doo7Hbqc
+qSQeuUN8ucTlsVX8d1N3k9AdXR3cZyXxlmYpkzdp5z9hV4hrS9hovSaSns5
+ifyvUSuGfAijCBfHu9f9P4FOAfTxVHLezvoqJXn3wlr4i/4fqTnL3v+nfjO
40son/cqp/dA6VBv8fvjoU6BIzCJr97gp/d7lgfW84Mc3s2L3kn3t7DNJjp/
W7gDf7MylhJSQEVlZJXy8Yk8l5T3d+lgpfBjfAPPpik/L8Bd3t3pvbvEW0y8
ZchQSJgL/wfZO5K9A5xBD5CfA+hX5f0QeqbwV3wPuOz5EL+dF3bH3yWt4tIq
BveiX5P+Sbb+DY7DQDa6k636sN8BtjjCDl+zR2/8OGl/RobXybJI+Di+q3pn
vfrnR/VQu8rKH34C/fxATyfoaK9wPP4N74/y/oPwFvplcUyUVi7+UFl6dwqf
wF+ks/PwF6Qj49Pke1j52tdfXDAW/Yc2rb94ZopnknheFvbDFyDHbHXqqwHq
1OvapezysE3dn14+WsrH7fi55Emr/imgHkopnIPPJq3U9DFZev9KOyv+ZnxO
4Z2QDj3Vs2HSmS+96dJ9TTgUfxvZ08K6W5UpebgV3VxaWaSVWrr/k34zfA/v
Ph/aAd9OEnbHlyXnDe1mc7K+pQ0tg9/IHzfAesjIj7/lm23of6/49sAacf0i
3iojlc1micSH9yn3LegRX5jsY/jcwzDJN8P54ZNkPwZN2WOrvExEX/BeevQt
cKVo1HMj/peH390H90J//reDDHeQIQfsRv9AlgVttSPytBm+gbk6NcXofE5S
5zOFRfHHlaU+vnnSN98oW8fwK/h2VXFXgRbSe0wa3QerfxskEjVyk1fb1Q3/
vHhzyGd2OC69vdLY2op91FPN1FNXhVvwY6D1/eK+KZF4zm8P4+d7f0OyvV8n
fB2fCl4pmEgcTKUdE6bEbyTTYTJlI1/PoHP8PGkXJkMhWA77yfQ3H74Cn9Hf
y6HsozeQ92f1+n4og16vbh82XPrskZ89RguH4jdK/y1pvdk2+kHwh6F12A2e
58dP8Okh6OnKzmRlZ1AW9Rh6Guwi0530/hP59qB3wgvatOratGpwmHx/k68u
XXaiy46wkX4n0WkJNq7JtjWgXLKeeegB9bX2aiacSrZfmcS/Vbxb4H/QW1p3
hDoXPkUfopMc6L/herLPmN83N9Bf88WF7LMj+CJf24hvClWT9fdcYZPQBihj
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
8OvUAUvUa1/C1+gK2eO8/1Fl5QjMSK4B3KbeOOydQ5AluS6/ha3WsN0ifvIt
ejN8ENYt2Gosu32Ifh+Wkr0H2btDDnSuu+McSCM+e0p9UL9Ucj5Eme8mv3Pl
90zIN35W/zj/H+b8cwtn4osrY2WUtdJQAj1deTsV/Mv7m6ALenbuuA5YMNQR
dJWvUlwTTK0PtgDegj3KxTll4YFScSwaxp9hDFsXXUHcZZL98VLC8vhB7LyW
vdeEfih6E5vX8KymZzWgFvo1798rrZel9RLkRfeWfg+66QZn6HIwnXVH38xW
KWEUu2Vns9TN4nzb33AD1vaMc2+1xP2AuOuGtKCkNGZoR9Mk1yNfE76IP6J8
rtSnWQHd0Tn5/VTp3yaubOIpLr7n8GvgBtmuQ7GkL42Sn2/k62t4CP2dvM0P
vsxmDeASnaZltyzen+S7ZyEburNvP5ZeC+llkd4PwkX4KqXiekeYhw3zsZXR
y6Cv8tMHiilDdytPn5PpdPAT8p0M5R2fPcw3G+Oe13/NJt3b8Xv5al+27wM/
oEfwhzvVy2XVy+XVyyuEd4T9IWTKKp47xVdKXDPwo9h6CVt/Cb+o/zaz+T1+
Xx7aOPJfDH0RdC/+tVn8m6Bvct/UXHnJL0/54DPoIY85vPu8b6ZCTnQ3cTwq
ja/E/624D0pjLL6Z93fDLvhQPJl8e1h9d5ydZ6r/Lqv/DuFf86yYd4rCMujj
vZ/UW49Uin2F0Gf4Ed9U3zq1vnUqOKBMz1emP/L+q77/U/81V0gHLkl/lvRn
wrdkOkGmHtrQYtrPovA1f8mlDa0lj5/L62dQF71Vft9m82bs3RRu0H0GNn9I
PEs7Rb39Ku7R+IT3/2GH+30z0ff/oR/x+0rvrYADJaIuzvn90bBmDxeT/crX
+MEbfGJ+ADoLP9hO7g/k431oWiHqarZn8zrH+Y8wD/IqzPe8nOdlg6/DgExx
L1fYCxX2P9VN7uvK493Kvq0E+dE/8sPioZzja0Jp9K9+G87fM/D3h/l7WuEw
/JPCcdDfb9vxE9Fven+B724ny4IgP2zw7EHPtnhveGgD8L3puQQd30W/m+i5
F/442z1DrnfI9SNbHsO/EvZM8NN1oW1L+uuzHeLeh7AOP823z+B/9+5vsE0+
B/r2BHqAOqCvOqFPqJPQS9QHNf3+C/wMfbz3Taa4r+wv2Ice0iPuMRvQI8oT
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
Ce+FvgJfXyaOJdBbPOvEuRT9f/HllA4=
             "],
             VertexColors->None]}]}, 
         {RGBColor[0.917794, 0.920966, 0.881936], EdgeForm[None], 
          GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
WdO3XgTZ6FGue1Xf3QumFrNd94FpYCj5POx2382QP/AkF4m//PhfR1gFi/ne
BPn5RHuDCbd8bs/llKavPkRzX/He+yZae80ngPG6WynOazNax4gn3/aMcl/9
ozivW2ttZFOc32uO/03oMrilwcY488qD3aPch1f/771WtIngJd7vivNajtZP
BkMfBAfAUPBZnNcBhgRX78a1xrbWtmlnnP1pHWYbdNWwFiS9Ws/IC8ZDfxXn
NYpu+MuTAbTeAN0GRGpdEbccuIbMDNq0+tQD09TOxnlNQmsUt7D3z1Z+1l7g
05W9HzindLR2GHfg9gD5tV6He2akw9W9O79U9t07b+Gu1hob9H3qw4X+2wOE
W5twJ6sPHOf03Q36gD3huX+c1+32gi5gK9gCusY5/nruBraH554hfZVOY+l3
TACrSvuuo5uVfd/ROMKfABqS/72Q+yD4aR/nfFUeDojzmo3C1h1gc3t6fe1x
3D95ngd9BbtbYP9M3FvUNSORHQFm6ow1/PvgPwhdF3pKtPePbBrluO8iXTeT
Vq8j/3dJp3um1pfAO+BtrS/FuSzKptnoaYaeGehJCzZKbiJ6po10nkeAbJAF
ThNWI+qd6TrXQ77MAXXIo+/5Pn5s53HjjZIuZyqDj6G/A/ofjfZ9Wtrzrf3e
w9E/bqRlfinpvFFe9Yc/aqTpOfjthN/H8PtdSeeH8udqSaej8lB3aLWs4nu0
5iLfFfm5yJ8taVnl7fV23kOj8e2Zko6/8uSg9njj91v8fgG/Obxm4FRJp4XS
7HBJ824PZad2KX+rn5c0ryk4X9L5rTKiO6LaVfE9UScq+x493aF3hfCXk0ef
YcPpkg5fYejuiWr63uJ8T17XKr4rT/fJ9a7iO+V0P8dvJZ2ux+H3hX8+l++N
ULoorgtBjpBXuu/hz5IuO5dpr8qTnjeh+2o9FkTE+O6Gf0q6jFxE5hL4Hfpb
9I9E/yX0f4fNz4/yPMDcoE96dN/HryWdD7qD5Pdg30h0P6c16Rjf/zesiu8A
1Luhoe7R/ZTKg9Phngml3Y8lfcfJT+H5acI8Ttjdyvj+i+9DPCeFuH5b0vfJ
6b453Sl3VXvJeP4D+kvicQJ8VdJ3gE2s4nvAlmFXJvYtj/ZdcQpf+ZwBjoIj
JX2nxrHwrH0M88E80FxnBeO9j+hu+uqX7iIt0VNO+27a+93AO8i7Stiaw+tG
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
5Kjlu3E6Bt67ed3n0NyMxvX61+N3MZ4PUf1yXHM54H5wAfwU4+9WruZAhtAv
Sq/l81DdoFvW8lm526Gr1fI5t8yg4yho3s/lVWW1C3Qz6B+hL6jdTPGZ2oHw
e9Xyd5Ckdrw14wbGOHfC7wT/IvzK/Zx2SreK0P+l+t4fnQPe2cft7OEYn+fV
eeDPY+yK/16M57C1BlKpn9NFabIVfhV4lcE89Mzq4/nJbTFeG9E71TWavxR/
S4xlpasXejqg55e8PsP9WbLPcdfB/nmtvT9N9ZraGbUXs3R2Koz99+Jvfy2f
6VsKPzrFZyP1zev8n84Bqo6pF86lHUH2WC0/q77QWb0GICe8xH7O05XoKYqe
lDweL+ksWs58zg+dY9OZvjU6g4tMXZ0rwu/aWv4mlI4606dzhdUpsy9luO1W
X01jO/Xl1Gf9O5SbX9AzNMVnl9sSfl30fJvXfUT1T1UP/6y5vhSfY1adrjSQ
Lp2x0rlinQNWHugsm8JOQ0+DWj6DqTyuHM44/e/ssfz8714nnXWqW9t3Ceke
oYcI6wRpeyHW9evxZNexL1FGlqe6ztY9N7rvRvcmXUVmTIrPF0cT30czfD+D
7rjR3Teqm3WPju7TGZPX59mlQ3V5SeSfyvA9HHmh52R4LeYkOruisyeyc+Hl
a+P9Y7p3Kqaf7546CH2LseIMtR0pznvl+xXc0Sk+azwDt0dfn+Xv3df3DMiu
6iluhxqHM7TPhTO1IwjrWNijeJz3nZG7I4/P/9VM8RlA1eM617sOXIY/KsVn
m6VL54Nfy+OzdMVTfJ6uRZBdK9vQPZkwHi5lWxWm7h84gXwX2ZrHdwvpjqGl
4Eni+HSq20+dc5arc8851TfP8P0bT+gurlTXVTr/3CnUTy+l+5yYzojpvLLa
FZ11/gcbItr47g+lx+/JPusWS/o8meI7Ef53tll+dP4sf4rPoBVL8beh76II
8i8o3fP4bgTlp9rbP3n/QIrT/HA4e6z2UOdL1RfXeVPdW6Z5NeXjH8k+26xz
zboP6YUQ/2nE72pr72utSFjrFTYyHYnrwr7W0T3V93NpHL0xj+fsxE9L9Z1o
ug/tfvRcb+09sqpzdZZR5xYnoOM2ZPLk9Tk+ndvXef2j2N+BsLrn+f93JOnO
pAah76BnnU0/GdJJ35PSXefPL+Dv5xQ/jw88zWPoTOgXIT3UVm9PdnutcqOz
8TpDr37HbSnue+hbUp7pXLrOLirt/neWUa7OLKaRh+8QtwOl/N2rPdP5WJ3R
nJjuc5r9dP9WbbfTOses88xZarN5/32yz6vq7OqRYJ/qS50P1pnfB9UXqO01
1VG1fZ5WZ2k3E2b7Nr4HROdmF4SwVf9qzVXnh8chO6G27dY9CFNC+o4KcVKc
16f7zKf6HmPIi9Kprld0Dl7n4XXfxWjCOtPa+4f/dzZe747CG5rh+1hUdnVH
gMqyzorODnKT0Fk51XepfU84Xfo6/avAW5Xiuz50Nl53a+isvPpkus/jf/d6
6B6Qn8L7y6GMnyPc8629Dq7wboT6pEyK2wO1Bfp+IkKdp3jrjgLdP6A7O86F
54yQ50p32Vg12CnbdT+Y7jVpjL0HUnxvQHXo9xSGbMG9mmJddeF/lOKy30Rz
htDb8ri/oPPNOuesfoNcnec/Qbt8CjSKdZ/ogdAv+kZr/Sm+b0NjaZ0nVvl5
kbgub+07YrR+rzZZfUKthaiPpvtGlvG+UYbvk/kx3eeWdWZZcwo636z7OTTv
eCHVbWkJ6IupvjNQexB0Dln7EMYEWZ2n1hhSd3z8HOu9BRfDs/ojOr+rc7wa
Y6s+Vn9Se1PWhneKq87t6uzw19jTI8V+owj3JOHOIdwz8LuluI3T/oZLIQyt
MagPpbtSdEfJ5fBO6/1qn9X+zg7vFcdHA09+1Nd+NPS3tfdBd6xoPTdTcwnJ
vodkEXnUNcylq+8QH/oP2ougM+O6m2RJX9drqtPqpnj8ozZE9YXOnLcCe1Nc
1ynfFWeVe30fi8mL+hm+e0lpJJ6+p/fhd8vwvT2xKb6bQ/dy1Ij1mWKdR9Y5
9btSHOekwNNZ5bPwe6U4HXQHis4r69xySqzPPevMstYEjqV6XWAFYTXJ8D1F
2j/xe0i7OsGfzn7XjPU5ZoVdPYSjs+LJQZ/eqc+oc+Q6T652/kCq2/oqgad7
Wg6n+1z6N6F8rwvlQGfc/+8sO2jakPQAuxmH9ivktcNPtLYNry3YB30nY+po
xrYfRbvP/k1Nfz894EfB3x3t/QJaR9SaZDb88vCPwe/A2P/uTJ89rZvu/FZe
6z6wHDV8J1jfEObHsoEwBzT0PoXO+J2c6fvr0uB1bOg9SmPwWw6/X+D30z7e
R6UxhfYLvAs2gbrI1mvodVGttW8O7x7Bb1v8/qp9aNBloQ9DV0X2t0HeQ9Qb
fkwN/9+wOTZkZfp+PN1fVbqG77DqFeK6K+wDWF/IfpUub4Vv7Di2Xa/psc3D
+G2K31+0D78BdQF4BPlfa3qvifaZ6LzFgiSfuWhCuKMyfZZ6Kn5r8O4M/FPR
XrfRms1eytHQNr57S222+iD/d+Yd+eo1vM7zBOk9P9k2raHsNcNPZ+S/Ii/u
SHEdcojwL9T02GwyfqvVcDgNsW8leBXMg38X/L/gr8H2dQ1cXrRXQPmnfQZb
4C0jDUdCn0Tnb2FuTXsOMgqZfw16EO5A0IA4jsj0WfOx6K+A/uPofws9SwZZ
Zhz8ivC/1N456Co1vGY1AToR+kS091O8F/JY5btUaOs0v1k99GFf5Rt8jT5/
HG3uqn4ek2g8onW2b3p7rW0l/Ndr+a4T7WXYWMP7GTbU8D4G7WF4C5kdtdzv
+Jmwe8O7CwwkbUtm+L604TEeH2pcqDzrEOP1Nu2JeLOG90Wc0zp6jMOtgL+M
1j5X8ofm5lN8D0Tfml4L1BhxOu+rZfhsUdfA05hSe0e0Rv1kjPeOaD+d9s4p
nzQ2zojxnOiYMC96Cf0jUlyXyvaPwG5wUfvEUlwf9eF5T3in/RYfh+e7guyH
GqfW8ByZxqwJ2DUM+zbEeT/QlDDWl1xKqLekS3sbU1UvYcsXNV1ffq449nE9
V4+0LU/aHs/rcFJDPfp+jOtcySgOap+1H+88NvdPcXujddMaoW7WeqrqUD1r
/TU51KmfxDhM1bWKj+7mkk2Kn3h6jlc7QFzWx/lbVVoonX6HHhbjfR03CXdK
iu+o+CPa+a13mjc9GOZOtVdlew2n39Vo/8tX//ydSHwn1XT50J4X8bTvJY64
X6YOX0Lc38ffLjAwxvWUXPnXN6xxgPp017FhbIrvvVB50l5L7dXcSVvwYKrn
53ZA35/q+Tm1HxoP6z4VtSca6+pZ7Zju49DzVuSnprovvw16WqrnBVVf3wpt
sO7e0B0cupdJ7YzuNNH9XGqLpFvPH+B3eqrn/9Teqx8pP79SD11L9rP0jQx9
/2z1idI9bpAu3WslWuPmrDB2frqvxy0as3RM8ThEYxD1038IffX/3REm/3pW
P1JhPIzfevgtgd8HoJOhC0FfV92Y7j6A7ptpmuI+2cdaV0pxf6tL+M40H7OV
ctExw3N9H6LnoVTPa6o91h0lyosL6Pw52f36d5C5O6zr/QLvcfTmhb8B/viw
Vqg0GxfsLkkZuAR/cV7XNQpT80nqR0ifxmH3ITOplscrD0LfU8v3L3UI+a99
vJvQPxE9dfO6vyB/su8t+GPD2usa6NGpHlOqz6K7ZlSe34U/OdV34D4e+lyq
E96Df0+qx3zqlyiuKjfqs8if6ivdtZOW4v6x+jHiKb5v4Dcj1WP3ddBZqb7X
V/d7zUt3WVI/W2MM2dFkIGlajzqygO+FfAu8mct3Sq4Pz/e0Iv4jiWec/1Na
oKr/Vfp1FdK1F2UDOgHM1f95Iv3P26pV/d9b/Y95Xnin/0DPD8/67+8jYHak
z4z1xO0R6bNk+gdFp0j/tza+qv9dGxdk9T+Fk1X8r2L9p3g8tt0z0mf9zg7w
2ozWZZKiyFuwKMr/FdA/WNbqHHo1/IAt0DWi/D8Qyenef/0XRf8iKYeeRvlp
o/L7frL+qb6jTOey9A+ioZE+g9cl0raeGOC1H6376PyY/uOh/3fofJf+syQ/
Y7Bz0kifbfwL+dbIbyjg/2O/W8Vp8wf8evBXFvA/q3dV8X+rt6GnKm4V8AF0
Mm5NsCuXXf2PeBXp9Ab4N9L/iU2u6n/FLkHn83W9jrc1l3VU1j8p4C+FX72A
eQsj/Q8p/ZNY/zTQvwx2I5+KmwI+gq4V6ec90LUj/ax/OL9Zxfk5lDhmj/Q5
x4HQg0E69Nu5XD7KgfbE74O63iu7hfcbRvrM7m7s+Rn+cPgfI18n0mHonKT+
W9ICfAJdN9LvTkGn4baL9H+b9V7/GdE5RvH074l8A7zWq3Verfc2gq6IW3iA
15K1jjyc/D4MPtc/C7BlGzbVj/NdBTOr+b6C+FTPC2hOYALPX4OvwA7k97Ty
ectCyAzu67H2r/29Bqz13xHIfRHCuNzf69Zas9Z9CTfDnQmbqvlfAvqPwGPQ
j4Mj0NvQ/0Ern9scju4iqZ6n0/+G9c+TmmBXpF2V5XTS70gdx2s7/GpR/i/M
zki/1zcxCZwF34Jn4efEzQHyEWb+ao7fPNz54AR0ZJR546N8J2iJVM9Rjub5
S3AcjImyrJ71z+kLoQxN5vm7EN6N/t5boH0FBdBd4k7bkkxe/FHH+7JToG9C
v5vf/72YF+V/VMVEWZfkayLzex3v6a4D/S/0lvy+x7Rsqu8yTR3gffzaw18p
1fNrmlvTvaqac9F8i/7DoX/+6D8gqaluq9ROJeH3tzreP14d+jr029D9kNsL
PgF54H9ax2dT+vO8L7wbAPaH53vAOfA9mBJcpUVseFZ8qqLnV/SsR0816GvQ
G7QPAfoK9FvQeZGbGvTlCa78659qM6P8DxT9b/vnkO6qK38Jzzq7sLiuzy/s
ze07luqCVOK6LcVj+HjypWNt6q58nr/ZG+ZwDub2PlbtUf8it/eu6j6iqoyZ
qoHK0b5LUnNDmheKjfbZbo2nevb3+p/W/rbktmwi6Aj/xdrec1Ge53nRPvuc
ENwnQDlkOtf23f23QXer7TW0VwhzJXgm2vtl50T7nHWBaJ8v15n9fOBeMBW8
k9thSLf2Fusc7f/dVxPt/9Lr/+/l0d+1ttf3ZKN0Pw1KwU+r7fv8tY9Z+83f
BBtSPP+rud/8IUyFp726lZK8Xzd/f69haP1CY3Xd/aB7bzT2lpsM/kn3nZtq
iw9oj1Ytr4VOoB/6MmOfQjGet54R5q53I3MGmZYaK/XzOpPmOIvQP+rd2mfn
NZZrHeN/u29E5kAt3w+peQHxWsZ4/73uekmM8Z5X/XN+a7T3ICckOV2v5vad
3Lq7+1pu34ete/Lr9vc8rOZgte+4S5L3Hv+a2+/lJx5bLo70XQoVoS+P9D3N
+t+t9One7x9y++433bWuc2azknzWTP+xFk/3uu9J8XyiyuHQJO/T/T97I12f
VQGFeH4A3A+2pHheUnOS87X/hTJfmjK/nDZwBbiCv8fAb+BG6Hdcj/R/9OYi
/yjypQq4T6P/6enfeU/Anw0/Dv6kSP9b79tI92l+D7pK8v5V1QV8p48G3dI7
OeiQnzm8fxi5kgXc9/kr0v/yU9v8D/gbLEXmhbreO/MS9Iq63jvzHLYvrmqb
poU2Wf8Lex6ZZXW9d0Zt4XLwElgGf3ld76+5N8jqX2MLQjgK+wVkXqzrvTbz
gi23Qr/tpvogoa92KzxXIh+rgt/i3B4rnBdDW7sWrAHPkR+5cof/6EW6TVKb
0yO470e6HxaZ23La06+7InSHg/b6Pxyeq5KHb5OXTcnHipS37rW9Hn5H0LFD
fZf+3h+gvQFlQh2guxoqwe9R22vm3YOs2sDMVPeJ1R9+mrRcWNX/cFR/6tnQ
71Ef67nwrL7OC0rj0L9RXJeFfs+y8E59i7fBBsmgb1Hwr76Y/oGp/3IOifR/
qPSvq+SgT+90lmh9ODek/utm8G6k/2kkWf33amuky7jaqA8j/b81tff6l5X+
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
/9MV0TfhDEkWTrhDCcxjbfoaCy+2E3NzR8tMPhC+C9MgNsj33F/P+Abyy4eu
KmUvnGP8WdlsKoiwDSfJ1q0abfm6kwjzMt67Si6OeFr1NQ7fq0FOUPKCa8I4
qn6sfvlLkA36lfqJYax5Osk20STDI7kg2VH7Lsj0qI7/CXI5ifDeTb12Y1ya
QvkfG2d/1bnwKySDdC1ldl2WsSqW474+y9gVUyjn6dBvpG0H/57d3eFKzljy
x2cFuWGlV3LErwfZ24n/nzzud0H+8WiQX9R3yUDrW0/KYNxoyzvqf30/HuR5
vwtykCqPb4Lc47Pwd+zod8kySt5Rso2Sd9wX5B+z+V462nK0y6iLeOriR+ri
ZfyfGu2wNwVZSMlESn56VMjPayEfSuMbIQ/il+y2ZLhPj7AMd3F4fzTU7Qm7
XHpKvnhzCFt8WZTZ5+MsjyU5aMlDnxrxf7LIkpPsSHu4r6Pzof4ku5WSj5Kd
S9mh1LtsJX4Z5Lok7yUbG5L/0l5/31Tv908jrvXdbHthJc+F42z/Re3i8iDz
dSjIh8lGyq+0iwqobrLrVXZWJM+1kX/Xj7N9lldw3zHO2Mdqg7LxIjm1d7Ms
4yL5ljzivambbUeU0t7+O9z6QbrP172+7FXqXl86t3qXzq3630dBRuyDIGMm
WTHJkOldMmTvBZmyhoT/Hml4DXdPws4mjn20//H439HN6S6Ybb1r6VzfSLru
yDKm5w6+P8C/98OzUHp1XT2m/xryIfs2Bym/vv2MQakxTjYchfcqG6NKu+pg
FnH9QjiNNO4T/g1ZxnCZo7mLPrme9GyEp29314/GHj1P2MjUUzJ4K/h3VZZx
YiYT59fE/SvxXo//jVnGhvmGObGacOuRl9sIL3W81w4LcEfgbtnA86hsX8pu
TCZ53wr/EPhn4643wnpey+BPhD8Znhtwnzrea5M9pPc34tiQ5HlRdjNlA2eO
+vc427qpJZxGI6xXdhn+Tfk3Af8/q71+isZ/eZZlMiSPIRlIyW5KhvSE7Kbe
JaPaPsi/PU7Zbx9r+VrZLpKMrdyxxHNktnXW3pximQyN4bJJI9s0kvsd0c0y
u5LXfY7nTsLZgzsu27p50ss7D//VYy0vKznIh4Nc2l99fQat+fQfeOZ1tdyp
bNvIxo3i2EYY32d5DlrP9xfHWp5Y9pmktyq54h3w/JZlzF3ZYZKup2SMt8K/
d6zlkmVTSXKqkjnu0M2ysJJZfYt/f8kyVq9kk18d639lC+mJIGeTAv/iruGd
9B4Pd7i/4nduV8v61vJcNdayhhnwJ4xzGmX7J32c7f9oTSabSsLKvB3/Tt2c
rqGU8ybaSX6y+4z8ZGPpM83bpG8RabuN7yuoiw7JXpvKxo8wOicSRj7hD6vv
cUH2m2S3SnaYZI9J8UrW5scgb/O27ASMtQz3T+TjGfLzEHl5lud/eR8YY/nc
u4LckeR2Jb8r2WTJ70rGV+9nkuZ2NdZFkmyu5IglqyvZW8ngLoVeJsw6/Sxz
IhlctT+1R8nprgvtUfK58lO4G4vIH/vTdxPZB7C3qmZf+ZD2VoTzPGm7IsZn
G1PCucdnkyy7qT217jg3wrtJZ0o6tyn3/a/m8Buneh7vM5T2UEm62Cvv4t+p
6cYTuh/+O8t9/7aEsBeGMx/deXwZ7uVug2dNOOv+lTVOHHv1YezTf8N/KvSi
zpbi/XwJ+prw/5NubBqla1g40/qUsJsSzoiQVvnJrfPXonCW97jOH8P7Tp3D
pRs36E3S3xd6jfSPJc5awnmaf5fn+z5ed/E67zl7us98dAemMy+dgc2lnUwd
ZxtVq/j3hnLL6owYTJujzE+XrANhf17p8CXn8kCc76KlYz10qPWsD6Taxpbs
a+le7ro4n9tJDmh0kAW6h/jvyfdZnmRlFIbqUTIguhfXnbjuqB6N8z3t2nzv
7bWvP0J+L0o3fpDkLT5s4ztW3U+uDueUujfV/bHy3p49e/0K3z+sJPxr8n0+
qTtw3e+Kr4h0zSz3uaNkXHSmKbfu/u+O8znobsph2GCXw0L4rwp3BJKL0fmp
/snJ9/5fe3/J6+i/e6ENabbXJlttMyjn4nEeI2XnrME42zrT3Ca7hpL9f4t+
c0exZddkW+jKLrYvdKyv72t1V6u9jXilo6AxRXLM7aBx/JvEvwP59zhjQ0K2
sbyl+14Q9N/78ywea3ni7+FJyjbmd2FX68mLZytx3UBcV8bY/seyLrYBIt0G
2eeTrkMs8XxIfP1TbBdnYRfbxpE+g75Lv6Eua7lB2baJXQ/36Gzb054M70tj
bEtUOhWyd/hx0IfQf9KHeIjwmxc7/CdIzwqdr8V47pEMtWSkxxP/R8nWv9W4
L/lo5Uv6CtJbkN6D9BOkt3BCX6Fr+CbdCOlISJdC9ofadHVa1ga/EzoQvcK8
eH2YDyUXrjH91DBHak7qHOI4oWuhcDUfSGdE8piaYyS3fl6YM+QnWXSl/dRi
6w5PIy9di63jLFn1vmPNo3lJ8t0ndGL0lGz36fDHF1tveTT8lWMt+16Me/pY
y5RLD3tM0MV+hPI7EmRpTujnnNDX0VNy8rLNc30X2+dRnLLPKRlzybYnh3am
darm6dZhPapxv0lYnzYK70vCd9nBk0072baTDby1tPk23fz/CXuFsi2oNWjL
+v9nz0zPE/bM9IzXnJ9l+U7JdmqcUng/RdlenmztKQ7ZxpONPL3vIL9NmF/G
kt9vsyxXqjnu2hCn+t3b8DTs5zPed5g/LxlhHVjZXtS8dcIWo56ao7bDX7+f
z0svDPmWTs7XlNvPYz2/XUv+Gnbz/28S5vRk688+TPwfZPkM6gXch8JZRzS8
keM8r0pfQXoL0m/4rIttTGjPKnn/pFAHqlfpDMj+28LAGwO92sW2KmSnQvoP
0os4oQ+hp3Qe3pG90LF2qx2pbqUrIN2J+uGf5+FpBM9fQUdBugp/Bb0E6Sfo
PVt6hCNsN0Hy8ruyvKe4kbzEdHNdTqRM5o91Gh/pYltFslP0ZBfbpJA9in8o
h1za53j+Xd3Ftopkp0h7JOn6qExW0MaPjbCtBvVt6UL8GPQblHbZRNU9qO45
pc/VvY1lXCSrIpyTW2Ya66Ql4/cs5rK2kmNjfp5fRjvSfYHO6XFPxD2wyBix
wod9nGdlheU4HmROezTV+H0JSbaN9LDk4pgHcsO9wLmnkZYq5kX8t/dnTQ2t
a0Hb0L0ydAn0LXRZS5/hf8X3AuLt0NLrkYYFXpPkJNm+2jvQf9TWWE+0JJwr
4UuAEqEboc4tfee7Emrf0uGsbuk75x6Kk3wdJo5TcV/X0k/x5RH++4T9geQ1
ZEut2nEdIL/XVhin+6/wj8KOyaBcJLcneVqlGbqb9HSgL/zCPv3v5ozX8JW0
dHm+RF7OJi/zKZOjpGEKtAD/rfhPxv9i/H8h33fl0ZbwX5To8pbc3CWk57sq
y4PIlsaoAtvTGEL8sRnGor2KMplImSTobJywLyGs6cpfkm2qbdSdBGn7ibT9
RdoeJ55fyyyX/BV8F4X60P16B6gj9DPvV7X0/dE7ukclj9Fav0HXQMvUTpjD
l6YZb24jZTW7wmn+BfcdFcYjvorv16QZb+mnlq4zhfsb6Zyd6/elxNemtduh
9ABaBV2AKr5/3N91vI40/8P7r4qXMrm/yncX1+H/fa7zMZZ0NoJ/UQvfa37T
0vdQktH5NaT9UFvbg9G/6YRzd5Xv9w60tV0Zufe1tW0h3cF+SXiToGd0hwX/
hir7n0PeIqBIqJz1z7xyr2P3tLUtHN1ttoZ/RZXvS79Pt+1d2d2V7LXS8ntL
y/qoPyitkmc9HvpEN/rdrYMcx5hQT+KTrKvypLu2/oT/UJXvfyT/Kj/9L9lx
lbXqMI5630e9H6XeLyWsmETLK7WhzErLvCa/KtHy0JKV7pVkm4ivQNMGOG/K
V7ck21aULOqdxNuMPvIm7gL8P+S5C7qiyFjUqvdrqZfjZb6LfRT+1tXuX9I9
iimwLGXPeNsTkS2R6QWWT5VsagRpO4N/+0quI9E4usIOlszyO+WWLz2Ftj+M
8vyQ8ryZ8OtXO83r+ad3S8sMrCOcurkOZ9gw1o+nOc1XJxrjV/JuT+GXXO30
n1tguWHJsAqv+MIKx9tHMpBpvr+bSHjXlFk2ZjVj4KpU46ZN4r9m0gnS/T97
z1zmuQOUzWJ4Lk41HoRs1rYrtN3amdTH6mBj5IcZtoUqO6jqe5uJ81loMWuT
49TdL/B2JMx0wvw4yWfxv8mGB3Qba8je8FTh3s/zUur7WHPb3ZBtPp0v1aEu
6ua5vX0Az2x4DsIzayDtdYZlrnRmVB9qAN1HvPWgxtqzD7R9ecl1yTaH7BIq
X/MC78nQCnj/G8YW2ehtXWg7vbPwfy/HccleoOwGKv3z6aeZ9Klb6VMPUIfP
ZLgeI0nj2jKPgbV8f5NxbVwL7+0+ojw+lpwd5bBqts+BHyHcAmggtJAwB/PP
/S08/u3M9Riou9udkkWALoZnEDz3tfA+XPYLla41/N8D6gk9SfjrZtv+4cO8
DwhxyL5M12THK3s0PaCeUD/m4Yf4JxV3p9aut+c0NlAuN+k/6Fz6xZ+0pXvx
r6PyoM6G4h9JOeUyF+9rZTs1CiMNWgfP/7LN8wH5uID8vEteKgnnd8K5K9Fy
9jsSvfd/mPhvmu1/p/NfTaltBy2h7V2aaoxF2cVrEuzkNYU/Bf7XkiwH8wlh
fAqt4t9V/PtrM4/Fj2nOh86n3PpQbrdRbosI84JUY1vUI+0FhZb5UTtYR3rX
q10Rfvlsn8cqzg343a46Il9dpponDv/7eT4AnQn/mfD/rPtT3EW4v9bdKGnp
xD8z4FlJGXxLWVyoeRj3cZUL7hVlnlM1n15JOqeTzhdaWNc2p9ByUbJTIzuY
Cn8lYbYlzGmEOZy4hhPXd0luy2ubOw9XUs4nz3LeE2PcDtTWIggzv9ByVk+w
duoBZYQziD2JLkeNDYeC7NxpjAnDB3jPq7nrljLPQxcRfiThPwz/OTFuK5HQ
VtI1WWfgxNWStHUkbW+Qtra4e+L+MMl1vC3JdbeB/nVSX/fbO8hXGv9X82+9
QuNqCFOjIWkeGeS+JK+h9ZnWZmoHqpM7oFKVGX1tJOX2N2FcCK1u7juHpdm+
d5hEGs4mDX8S71HcE4bb3Zjwzyy0bNUV8Hef6jAXUBfZhLuhhdOnPqbyXQ5P
r6mu95NJ+5W83407VuNOc7eJ2eon0EmJXoeVQlPbWufqZKihZGgIdzR0ltLM
GH4mY3gT0rM+wXJ1krNLppy30l/KCedp0vME6fkJ/rXw9UzyXLeLOinLc//a
DH9SkflzmS/mV5tHtgynB3uGswjj5X6Oe0qedS2kZ/EH/hdD2/G/nT6yPtV4
2ZqHXtX9HpRBW/hzus+A1HYbQ03UHvjvS9L3RgvPVdIL2dHCbV3fm2rNBc9x
eN7DfzHuI9PMU09rqP72v57nz9Msx6U11DVBRrqM9vkLefpVY1ML1/Pp0EZo
GDQcWsA4PIM8rmYcfoA85yZ5XTyacrii2mvwHZILzfPaVu29OtF1NRmeZdXm
1zpYMho50GHKMo92/pPWA5TZ1HBn3Yv5tDLNmLxTSNuPiebJ6285D/2v9dZp
IX2FhH8h4acS/k1QF6hrksupFJrawnZHpGcoHcMrCGcX4ZThfynu9/uZ7z2e
15CGkhaup8kt7D4fnne0hsY9D/fn01xfqg/5TYKySMO51V4HqT41L41vYdm7
PgN8pncn9X57qvHQz4Tvy7Zeb2p/0xKKhdbDszrVGOst6Qcf0/6/oc3HMG++
RfrfJ/2/055HENfJhPEC6UmCrm3hPZLCiINawP82/B/AX6R5ta3XnvvgHQ09
Dv9mwjml2v6N4X8Z/u3wnwb/3rDOvY30rE017vvX/De1v9tIXIHl7NV+pK/8
UoF1lr+TjUTCrKe9BbxtaBM/w38u75FJ9i+GPg9r6otC+9Xe4X+MUS+S393N
vU97voXH6pmE8/E0u7WHU/z6dk9oR32hZqThDdLwntaKtPkP+aeF9o2MwTG0
oRaSXacN96cNX9zE+tn3FFhHW+vNK4P+zkP811hzBmE2ovzfDeuTOrTVRxgr
zqAdfsn3/+RZLvRs8nJMMn2Sw6SsNlBW90neXvHD9x3hDMmwDVbZX70F/z+m
WU8kmXSu62+dBe0z1d82tfBeVOPXVmgh8Rwos96a9qPPhH6ZLDk5nk+qnak9
T7O7Bvfeaf53EuG/zfvJ8NanHCbMcjnsoY5yqKPv23pebBTGmsPEs4j49uE+
V7LJqcYnnkfap2VYTlJxFkGDoS9z/Y/406dankCyBCclWc9NOmSb4Hkenhfg
eSPPunPSm9PYExfaz83Siyqw/sNJ0pEL+/WLKOumiT5PiIr1Xn1NS4/x61p6
Ld9UOpW5/qbzgLlBT62YPD5bZbm8d3M9Nmlc+jDXY7rGc43rWj/JfT5xNIQa
SQeFtf1U6joK92t8fxX+19SnyN/1OZ7v5/CtXqJ5xhLX1irL96ldHMx12/gn
3Tgxwoh5iPJ8kvJ8XLKXYV+o/5v0t5yHZDy0x5AdU8l7ricNJRWe49pSd+fN
8vpRerc6a/i7pdcOleVeP0gGc1CQw5S8dXeoh+S2CWdChfUoNR7/k+C580N4
cwf4PkM4h1tSjXUoOe9u4f8U8rWqyjKq0odW3dSNtf3p3VW2QV2C+y3cqyVj
SPlck+N5Wrp6f5b5biIJ9w2UyZ2k+WHSM7PC5VxfbSHX9X0/7gZ5jmMCYW6r
cvvRnrC8rdMg26tPVtn+qvqb7OnK/S1hrqmwTPFuyrNvmcfAprifmOb9/o/0
3yLK8A/tl2nLM6mX36mXhmpHLbzXUD/R+ZPeWzKel1T77KqMdtVmhnWLHyKc
OGhKos8dHoL3Ye0pkiwD2DzJ91ctyn13dTnvsUmW/VM/UzxaJy/mvVWSw9cc
rnXQ7S08Lg8KfUxztuao6dBY8rKZdjIU911JlunLTnL8+dCAFt7/VIV590yd
SfRzWOrbilNxfIT/sP7+7zXymDHM8+VUyv69Mq9VPuG/ldMc7wi+X0o5ZMBT
S/53UxZ7paOG/5hq57cV4W2Cfwn8K3g/JclnS9eFZ3soBZ4t0zxPReJ+GPel
Gu9oL8lhvT0Dv9ZhLvurwLZrZbc2kbimEVcbwllHP7ol1Rjk8zRWlVm/9XvS
fOs067hNybCdaNmI/gr/1fif08LzgeaMe1t4vtVTe71E6vYj4tpHXFP5bxj/
L6VtVE82rpV0XWXTtNsMn0WsDHnqkOR5Qjr3yovmXoWnPeZx2sjAWV5T1RDO
BMJZRTjdyEtltf9dG/aUvZp7Pd097DO1L+zS3DYz7833/Z/u/qQj9TPx/zfe
+T4vz3n/V29KZ4RQnOow12eLX5PmGtL8Q7z1o76Pt/sIY/VwyuUYY/Xgfr4r
0j2R5pmL8jzXPJBmLCXhKP3A+v3Lmdb56DGE9FZab6b/QOOWCbPsAPVSN812
cZMJp5A0lLU0TvjumcYKF75ZzkDzS7+3YRuHIz0h2VwcovMNwu9Qab2Ts/r5
Xk13ameQrldzPQ4fIMz3ZlrnQ3p30mMRv+S/60AniYjnYtIWiTsK96W467ey
/ujGoAd6Bvm7gzQPJY8Hgu7lPOhgeOo8dkKBbWLKLb3KLCgb6kJa7qOtftPC
5Sq7BrJn8Attc9dE68dJ779XG8uSf8W3i+J9lissuMcm2d6C5hztSaTP/Slx
TYQuiLeO3J88/4KO43fODNev+uiUsKfQuczv+P0B/QjPnBl2S0/ut3h/m0He
vy3wu/QM+6neoEcl951vfYgj8bZZoPTJ/kIbqC10ON5p0bcHp1tmXfLqj+B+
RHoOuOcz9h4qdP3qPG9Zns/0pEf4ebzLVfrMraAEaB9pqZjh8vgW/uV51sWQ
/m0LqGUb66cpTeKRvprSoXfpIx4I9TOefO0t8LdhtJkBlQ7/J8Jck2dbHKe1
8lilfv0xvDNm2P0hffDnassybcF9oNp9+nXch6stJ3xhX9+H6S5sO/5fVXtv
IczATQMDbmBbYymMg06mThtDJzWxzqTSqHYzCt5PClwWTZm/rqgy/3ek84Y8
68nKloTuYHq0sS7L+nzrs1xPG4kizOsb2xbC8qAzp37yCeF9CjXjewxUv4nn
eH2/LsF3BZHhvmBHge3GymbsQeK9NC/YQKDt/xJs4EinfN9064BkpRlLTDhi
zeBPp61PaOm1VXKQA5nGmuTWWd6f1aENfDvT8WptsSrBengnpdm+m/TRhrZy
elUfshemfclOnaPyf0lrhxOvM8gy79/3U/Y59P/9McYg1Lpee59bp1u+QbIN
wj6Un8KSXNudfX1O2YZw/iizXYs3GYe7k859ia6D80I/PxpvmwWa08+m/Qyn
/XRu4/FCc45sp+8iDa0I9+0Yr/OkhyadtLHk/RbCHE+aP4anTT/rkbXTOj2c
K8puSAE0MJB0X3cH3UKVhdqmdEvGtXY46h8PtrbdiGvzLXshuQvZce8yw+nR
GC+d5KWhby+Lt32Cv0n/ZKibwqDeetEenqTMe6Tb5prsrcnuiOzCyPaIbJl0
C23uY+rn12DDZzd5SSQv75CXb4h3FnRVvHW2lgQdtBUDbJtGsi6VhL09zTqt
Gi8eC7I2WZTDtFzf30mXZm8rn2E+gl+rXN8pJLUxr+R0yuB/Mtd7BOkFvhN0
gqXDKR0R2YWT7p/0V7e2sl2cVcE2jvQCXwq6rY+GstbdpexZFs60Tcsnqa8P
ZlnHUzqHClv2G6VrvKS175d+oZ9mzbSesew7Zsw0j8ake1rbfons0smWouzM
3EyYr8zyv0nEVTzTZ9rCKxs102f151B+7WfYjsVN+F8/0/FPI4znCWtcY+tg
67xf/E8PsK6a9NQ+pC5ig66H5gDZnlgZ5m/NM4vjLcszE6oIMj16Sqd5aJpx
BKUL/Cjt4mLa9vQ2tkEyL6wZZGvk7zzLOKlf1sR7fbcO/nPgH6e5gnXTAdJQ
q/OffOv5SydRev/ST5NumrBMZS9PtvJkP1p3jxXQFJ0PzPB8J927zUH/TvaK
pob56zN4SgvcDzcQX3ob6zdLXmBu0LHaw/dxBe63u0LYsnmg8W92SHcu6TzU
z2s82fs4HToDmgjNJS8TNJdp/C/wPP1UWGsMDeupq0K/yh5o+2s6x9AaRU+d
h9wxyTZApRv1AN9Pm2E9/qvDPKm2vI08dc2zfrT2djcH3VbJvi0O8m93M042
gtYleO93S9BtHUmZDyadpxDOK4Q/dobj/Yw20LufdZ/bE/Zf9JNmkvUiLe2g
Zk1sZ0X6xtI/vr3A9o5lS0B2ZZYHGbZrw3fpIi8PT8W1l/A7E/6HMcbdeT7e
+aognOQZbmPC7PnXjl289RGjB4R6H2g7d/qmO+3fwr32e8yV31f7DFVynUOD
bOfffa3vIdlU2RDaXGZ7O7tKaSM5PvP/KcZrvativJ/ZGeO0fQ8tirG84r2E
v53wL9BdAGP7XvZ9/6EstxPODMJZpjumRN9lyv87/rk8/H86ed3c1+9LCedB
wplEOH9qrzHD68b4ftazUr9bCc9T8FQk+cxR+mWaC6SDFRf6ZleeKdOczgXE
vyfb63idS4lXY6n2YJJb/xjqXODzDp116NxK3zV36N5L+l7SC7uDeLcR77xw
lyY9tnnhru6cJJ+l6WxS5fJDjM8ntD7W2ljnmCrHn2N8LvldKD/dawr/TTrE
L/D/GUk+g6wlrnXVPpPbDI0I53NzdR9abZ5i8th9mvcLOtM8GmP3u5IV6uf4
dOcwPsnnYUco9wsTfX7zq+4f+PfhGOv6SEZZbUCyCJKTlf9q4nqeuGr491u+
15lmmb3r2Tddk2FcWp1t1C33+Yb2xirLPVB/2sCeCsd1FFoY6n4dYW6pdlmt
JJylGca67U35byi3DY4u9OtxjJWtGtve/POTbXNe2AOtoIRk36Ne09zt6lfo
6vCuO9el4b0d9f7fUu9hdW7yEvFvgVYOp83Odjg6E5I+uc6FhGUSC8VBF5LX
nP7e+18L/39m2389vM3zbLvgF9L2Dmmraer7xrNpYx82YxzSOW4/7/8ls1ZV
arm1WtKzk/dO6o/892u4m/gZv2nZvvt7lrhun20Zad2p9Idymxv3fiNz1WTG
pcvhuQCeZvC8Q/rnkqbtLX0fk602Hu7tMqBMucnLmnCeeRP1EjPLd51L+e+L
XOsUP0faOoc7O91x/1Zqt/AVOkNdoKMZxuQWHrcwGNonW057Cv+1Ycy6HP5D
uEuhK3B3ph7HUo/xmpdJ81LS3DbZ8r46E9FdhOzLdpzptcTDpC2FtG2XPAPz
+INFdvfg+1WFti0wjzXRRayN6hBmPP6TCm3v4A/inJfjPbrk+KUfoPK5kHjn
EG9j3LW4Z+GOSjYWRZtkp0f4GSlQO7UvwpxSaPsJmYRXZ6rv5tbw7zWzzbOk
0PZzZYdiEGncX2HZn1m07ZurfU7/MDQgyXIWKqNNoR+fDv9X8F+TaJt8G8ps
6+0+yvURyvfdJh4Hda+mu9Y/CTNutv+dSz1m9Pc5mPpZVYztRM3Bv1d/n5EV
9rV8pGQjVWfPJ3lcSaM9ruNbbYzz8FSSdbjeZXw9TF5e1rxLX44qt6xwU3iv
I5yYGNt80j3z3kSf012baPmOjfA06+u06k59K+G9DO0izGMDbRNDcpoD+jo9
dSW3VuR78Ng87yu0p2hA2SbN9r+v0O4mU+6XNfdZ3C7K8wqeW/GfgP9/dBdJ
/V9FO1jH2rgnbaycNpZMezirr+X7Jdtf2tdy+ZLJ133ninDuJTn9yX3tr/Yh
XRKd231GOf9dbbfGPtknkL2C4X2tC6G5UnddVyZa7mYz/B/DvwT+vTEuV90J
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
KKqJ5RZeJLyu0Ce4Bzb1mnW3zi6a2u9T6CvKYepgywrsnGY5ZsnKzeFbvRCW
xvWbSjy2qx/rDEh9eXWIvwe0Jjx7QoMIb8Usn22o78eH/ZfsuUam26ZrBTy3
z7KM/Nrwn+rmJeqk8yzrDclu8SfTrEeqtXV0E9/NrQ12rWRHUHK+Oh/X2fi6
4CcbhLIB/36a7cCvyPAaReuT97M9x6jfFDNWHKSdPBHpceEpnk9DL6QZS0B2
bu9K892/7v0HUw73Uw7jKIdtpHFZa9vQHkQ4+wjnIf5NIpzHIx2m9rRbeG6F
2uJ+LNLfNpK21unOz7WkKQVqp7aR4XFBY0JX4lpOXIOIqy1lfi3fklVvlNuZ
g203X3eVf05ymVyd4XFTY6bkpx6YZhmqMs2x/H9XU8veSWahbRNjKSRMdjvX
+uWGDK9hbsrwmkZujU8rM5ye19OMB6M7+klNjOMk+ZapuH9ubMymZU2dRuVn
gO7xi6w/toa4GkB14L1b+U5323qqqdviUGgK6Xw30+36z/62iSx7yKMJ45sK
n1e/rfsW+EbA8yrufyb7X/Wh9NCPGka7r6pfSiZCNlA0LzxHGA8U+T6ifrTb
q9rdy/g/V2RdtZOjPUbo/0bRDuM26Fu+n1nkc/NPeOYX+T7sO5UN6Zmh+iP+
0SWuz5cI8+ki64i1IZxH8XsMqoLn4hLjRLeNtp/25j/gPzzT5fEFz37QA7h/
oQwOTrO96A6Et63C+C3SNZHtYOmbaF0lbOH3oJGE/WSm1xX1aT8Tcb+E+x2e
PTM9zklGXpgKkpM/2tS4wsIUlo1/yc2rH5WU+B/xN4h2OalcpAcjvRfJzyqv
L2Q6vx+Qtl6zfO77OmXSG9rfxPvsqLDXVp3J73ONh3x/ZLLdz/E9OdNtp0Gm
9+fib5vhOxXtuYfQlt4r8jm49tJqR5IHk/6i9FGlw/gbz7QS3+Vp/N2O31vQ
AsJcXOLy0blm63C2qXH6zSbmuzrTd4H698+mxn4W7rPmQJ0Lax4s5vkS6fkZ
/vkZniPlL4xn6R/IX+1Ass9/QKWKM9NjpOpf428h1CLT9aQ6eog+9XiQBX2T
ut1W5HuaUSUuF5WJ6rN5qFPpQuneUXeO7+POgg6pT1P23YNO3HidT092GpLw
7znY+EG9CHtHheXrhZEiW94a37TPfDDSY9cp9Tz+PRPpM+4J0ESoQR+vlbVO
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
             "],
             VertexColors->None], PolygonBox[CompressedData["
1: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
d031JtB/pH+km8+KlWch/W1uUL5fy6cO+n8191w4FCwifl4Px30DFhN+oYd/
6w0C+T5+1dtvTcgHsiny/4/4dGSfAULkG9DNvgHbQQ3a+89WvhumPZ7umt0A
90v4ztkB5H+8pfd+in+ov+8M6a6Q6tyS/j2Z9lxCW1aWjZT6rqW+XanrQRCF
/O6m2xdDb/5oLP0o1msxjak74OedbvYf2Abqwc/frezrK59f2bovtfJdcNm8
B9bwnlJ7Sfm0ZcLP4eZ+q0o+KEuhtwJ6r0Dr1bzeey9Evx4Jnp98T9lnY/22
gGwCJYh/nvgI4p4H8zK8ZtJaSXdiMtGPnbpfU9BvRL1N/W61te+GfFC/GOA3
uDQWqL/MU31B2Ty+g78KftbojE9rKdAderug17+gaeouxoEYv12gOxkNWTvU
1xpUYzd4mrqfHeD1xXUQSt1/hl4ade8CthL3UUu/TaQ7ofJ9eZ3xIVtuz8ny
nXm+lucHrQ++jPcbQ7Kfyt4xnbabCmLCbQN/nvo/Bf9rcts/4FvqG9vOfV93
stdSn5e7uS6vgyTafz7514b7jlIP6reb+g0o6Dq+SPpVpF+f1zLII/sO9J8U
fe0J+vtNJb2lpDdsqtL+14PnG3oDYCrlb0few8p6TJ1IeCvhAfw+Bo7IP44y
51HWQxqTRDsjODbm9l5yFfKtlst7yjqxHkPHBvuzfA+Hd3de+SDqLYLpGfY1
1JsEy+H/xW7WpXV57Wv+KuE38vp8vgJ9bSfzVZLmK9bTzZHHRNk0wr3nSqQ/
JoCmRf1Gld7C+6i739LSm3gvQ++VbpalaMZRfkhwvNGbdSuIf6mby5YMJ5H/
2Tp+22wW6MnvD7vbPieZL2f8fLGZ37LSm1a6q3ofZCvpNfUF5pbSvbx20Ht2
19CnWcy/44P7kxzM5YsSfBcrNsJntS3g/7WiPrO9SvqZpH8qn/M0ZPzuUpX5
A919D4yj/Q618lsEc0u7b++s7vlPfXw88anML/NK+02Q9ujvw+jvnZLW4TH9
bPOUrXMPddiALq9K91sr0uljlD+S8gfKtxDsJtwz031BfeIt0u4gT8Hctn/L
Nnac9jgaXI/9St0+GeK3BRaDCt3sAy/fd/En39Pu8FOylP036xO+x3rnREn7
jOktnRT4n13ab+rorZyt8bZ1yZ/qAONtF+a7ksHz94OE0wiXKuz/fUo4nXDp
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
oAL0qkKvLLTKgeykj022bGXzOg//YYTHyL6i9mNtXa6N71rqjnjyCOaOFO8d
85e3LaBhZ9dda/gfyJ8v2XsT2Sx+J1yO8NRI20xKMTZVCc5PsoEXr2odk25p
TKgKP5lBe8QjlHGB+s3oY1u1bNbTB9vHTb4V8rHISf5XdAZH3hWqH/k7J3us
iyR/LtmzuzhOOnYdfZlHeDa/54ACxG8gvJ7fG7SHpS4FqNNo1SXUb3vXaWdf
KPlEFRjuOUtzVZ4of1vsbgPPJTojKwS917qYlmxMy8g/gPwXg/7p5al70Wpe
++i9j1vws6CLeZmr8Y78qwgv4fdSEAMv8fBUPtQ6cJ/0y4hfQNxCEEL6NV2c
dhno2tPf9NK3vGSTCSX+5S6Ok4zukX8p4fk5TeMK4dldbKuTTKKrWmf+ryv0
rxrUtxf13RPpN7/zwXtEuu8G6czmYhXbKGYF7X13Gc8OMZ4lM5algHTSp4F2
ubzGOAh/Perbl0N3/lMZT3Ol0j9J+zKY38tvAuktIN3J/pbyS6NvTSj7TbAJ
ec5Cnv+U9Rs2PclfONVvq72W3d8qnAjmlPU3C/PC3w/I71Nkd0h7HOS5Lbie
1Rr3LPTLp/g9+XfAFcbWS619lvMnyE3d3tf+I9Q2pVcpfwz0b0J7Wlm/DXu2
l98y0RuxG4mfQvx94uaBx8mfDg/jc7rPXqvvMxHZpnWHv3o9nyHo7EBv7qyE
n8+TrVtjwT/JthHINhAf5bdO64LUQn7zNALe04f7LXzVoST8nOzlufSI7msi
n/rI5/Pg+4HzCdcjfDi7/5cMb4XgMQTecmgMpK7bg+v/jeAC4Z2d/fstkFHP
PtgDgu+n5KL8DWAdZdcFP0BvchfbirQGki9ESj2/jS2fCNmewlJsO5ENaiT8
lIOfTXrbHQwjXCbVb2Hpfw9B7zfKPxfqMfIX5r9faZ/bpf0myS7kvRJ55y7n
N4+KkP4n0n9F2q9BQXj5mDpkD9qPPqH8f5Mty5ei/K2xpe38Vo++OfYR8XeT
revLQCj5N5P/LrT6kL83/BVNta69Dn4mbndny0ZrzNfh51no/am5UPfH0eVt
oBhtMRmUhr9ftYcn7beh9o3+vr7vTshHOpzyPoNmWE7bcHrq/J7/hfO7GFjS
y29+6a0vnZHo7can2vktF73hqG99yIdVvqt6I19v+33fy75eeuMvC3pR0Cua
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
x0GcD17paa4gYdwPTzfmg+4irkRa0pZBpBmhbxdyX5Y54PRt0jeqO3ntQH4n
rwc0vsylqf1Yg5sb81JYDfeHnZf07UnkVzjReV2FbKPsyDj7n8neul+6fYzl
Wywf/caMx0f0wYO0vUOCfWt2B3321fdWWALCrBgY1WcKO2prL3OXCUPqcdI3
ok/eIG1X+uNIhTGqhE0lfMX6A0g3xViQwu/Q3fIbYc8l3THfwPyeOt14tQXI
1V14F0Ybr0SYvy3I/yD1W55gzN0/fQkvs22mfArL041RIX3sn/eB6b5j0N2C
xngffbcXWUbfxTUzloz2PNrrCFPmJG25O9f2I+IU0Vi0og+3JXpMhN1Smz65
O972Mx90NSaNsGjE0ffyIGO4yP4yNdlY1/t5zkg25nUn2rKF9e35usYPFffD
P7K8t9EeR1iDU3leXN+Yg7L9PBk9H8kG9FPqU53v902c4MfT7bMrXZh0YjuC
xgjTeElnkZzvOaCx157mbc0H2r+KtLlIe+qzlvqsqmv+3tcov4ryl9Q3JvF7
xA8RfzVx8/WOs77t4r+8puaweCxoTBfZm6hPGhP+JeElTc2x9EPQnJk6r4vT
VNg5wtSRLZBsgoZPM4a01i5x7L5IXdJGmxtXHD3/ZKwfRmokmONnRoYxReRb
IB+D79Ptg6e7mS+Q2+iv4/TX+/RXb/prGvPn36M9dzK1J0m3zl66+m1IGnN1
E9KfufoR+U8m/nOjHVecUX8lv6/I713y60l+BfRNUhRvUhiS1em+A9d6ozVr
4SRzfgnrXfjFY9J956C7hv/E2rdoTND7Udnv/sJ8e5D5Nr2R+cyEBfZ7gbnG
hAkmLqdtOcYmEqfTKfKrI3vZWNtoXMl8uJT+3p1om4YzhNeL+O7oGHKS5/iI
+0ZpVjO+Y2jDHfXNYXVWuuCI42qNmxg0R6F8sbSnPUPc2+n/Uso+Wd93eQ+E
3Rbd6Q2ZZowrYVuJI7ZUuuKw+/a/Ok9QvzHU7zx1m9LUdy0Phh2mO5enaVsO
6+eTwg5D/kXfrqDMNfXNCT+d8e4c9SeRjfiXrCXX9PHeqQ1ykOeZ8glqYo6+
9ArrCKUbFEftvgqnUVxhkq/jPDsq6r8qn7w89odfRMO1x1w93HdeuuvSne89
0oW2N5e8dAxpfMsyq2w7rTvK+lcwFycbz0yYlqlTWQNY43a35P1qxXwh/x/J
v0sT8zWuJK/UDr5r1R1mbkfbyOl9kM3RPvYHE6L7Oe1pZIvXo6NtjWSTVzmU
can2XrkKGUd9xlVZ9yuddD/K+x/lpTcxRuJAwosIX9nWPhmjeR5VZd8Z6ZxP
9jaHgPAOO6k/GYvKMnNNN2po38KSgewdWtnHsF2FbQZlKziI/mzHWMVE8TiF
wfmtsEYnGUvuHSSH+VYwxtyoOsMfJfw9wrc1N5/oadp73WRj04mjT9x4P3c3
lrXwPgfTnjO9/e0QRu8x0r8/yficyqNlD3PgiPtGnG0nyW8++bVo4Txl2z83
aF9D2fi3rrCNoGwDhWmbzXh9TBuP0bYS2rh4qjn0xJ0nm6MPmb81+3ruag4/
z3xdVWruJ3GGfUp50yivbgvzLZ7NMUaksCFrIf8k70sH2tbiNco40c8Y9MKe
Vx/F9TAHpLgfD1P/Y7T1q97GPhPGeBrv1k7qtKyVbTY0tt/0NveyxvgU6+3j
7GE3NLMNyjXMj3HV1h3MRXqIC6GrsV2F8Xop41UjipcqDNpDjPcB5KkGHu9H
yn1HrrtxcSpcT36V1c5rHvIhcccxP5YT/2HkWb7l564w3vVGZCHvyzTmeLOo
vjuT8ltS/ruUPQ55lbYk0qYfaMstSAfm9jzm+CeMz4F412VCmdcD1SmN8Dkj
HbY/3tzc6VnGchPn5X7iV5SZq0Jp2hL2+xi3TRhewlLYw3za2NCYCguYTwP6
GEtXmLrn6L9n6b8tzcyxGOpvDk2NpcZ0Oul3dDfWhTAvrqF9Y9tbt6Y7nVf4
3bGDde3SMUvX/fpl5t6VzruK+CHi1K3lO5X3GbvxwpCn7IbIc/TfhSvMtSt/
yjLKW9/dvvVao/7kCqc+CS3MGS5s8SXMqU0t3efx9G1tZFg9Y763JGxtdP0R
f8RYys9ub122dNrv01/l9NeyBh7DxYzvAsZ3AWN7HbKE579U+/f1yAz6q1sf
8/mJI3hRf2NGau5qDrcZY85nYUnnIReEz430r2eM+kzya1Hts2o5EqZ9K7v7
Ll136nPJv3cfc40Jc05YrNmTnbcwWQOM/7UjfZbUHPm5izEqhU0pjPT3aE9Z
mblL1SZh9wYne23QGpFK+lkjPXd0Bt5C/JIyc+2Iw2cC/ZNH/1ygf6bSP2NJ
3zy6fghDWdjcWT1s+yuM7inDfSemu7CZSHl/Y2xqrVGaud3NISnuyIXI3bR/
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
vt3CXEwir9SI96bC8JjI+F1baHsIrQnCYumQ4W+XMFnGE7804rmsNexG4i8u
tK+01rzfeJcujnit0/3pANqXx/y4KMU+Nf1CxmgTNptsrm4l/dJC+2ZrTQ7Q
/gdp/1nafg/yF+LeQZpuKbbZju0U5RisY4xSYWPPSjMWudarnbS3tNJt1TtS
k7of0PtRO6rzIG1yJ2OXyqZPdxEF5N8wxXcSC3g+xHi8we+u/Neetalde78b
soG9k/quLPTeQd+AIPGTQl4r7kBO0z87I17/pIOIJ+0n1PE9jYX2I8TvFvJY
a8zjCN9f4rBdyCzCP6D8rYQFibOd530h2/7JBrAW7TkYse5JbZqj8CLvjbRH
EtbwJRH3ve6wH40YE1/+xsKYepX474WsS1Wbb6Hv5pYYC02YaPsJ/4bwh1Oc
30c8f83zshTvWWPIq3HEvmKnY40l0zvD32phkOwl/lHiL0nxnvIDno/wvDjF
Z5o03rdeA4198R7v25t8P452te2kbCgL6d8RheZO0Z31O6Q/GLItiPaT11Hf
6SXeu16h/R7h+0O2LZSNobBS4jt5fvxpv0nc7aRZSNzGSBLvytvR86kwhTaS
/p2Q7xI0RyfyfSvg+3Yi0Xwhy7Q3JY9y7f1jjK06I7rfF+bATNLvov//Q/93
IH1NwhYi78h2G+lIW1vT5m60Nwe5kvaNLrTtte7fv6a85n191pWNzFry2x7y
XZrmSDHxywrtq9YJmcl5cQLnxVLOi6f0Tlcz3kNZ01OM8SRs7rFpPhtq//UG
Z+N3OCMfoq8PItt53jHFvz9B9lDeNSHX/UG9k9m2mZGtjHQ6J/p6DdLa05by
9hF/QchzcynyJc93hXwX/SQSl21ObtkOyYaogvNzky7Uk7Fdwvl5ScAYhsIu
PIws4Ow8H/mQvslnPX+Z8L9H7EsgTLtf6LsbChy2R3OmymdinQ/vQzZS1gak
IeXdgHxB+G2E5xC2AvkP7X19ir890uFkj6TcoH0BZDN6NWvFMdrXvJltCh5h
7B9lTF5KtE3wNMK/ILxxM9sotA3YB157Ka3BH1Pe9dHzid6ZUYUeY42tbCzO
j+Wdy3bdpBP7I8sc9OKe/1n9w3idT/XeXHj0sfKPpX43xvsbNo/59kzY/uby
Lz9b5T2JvrcbNN/Ja022bUdlQyqutPNR/bw4015hvmxjvjzd3HyuabQvFZmY
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
9ir9Y5n2gZLvUxfk/8n/1RE=
             "],
             VertexColors->None]}]}}, {{}, 
         {GrayLevel[0], Opacity[0.4], 
          TagBox[
           
           TooltipBox[
            LineBox[{2849, 2850, 12509, 23305, 12510, 23307, 12369, 12368, 
             23193, 12366, 23191, 2850}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[CompressedData["
1:eJwl1mdsVlUcB+DTltK3LaOlAgFBtmChpbRsCRqNH8QYDbMUkKHGVaagiWGI
QFGgTNl7BBl+MFGMhoJEZVlKK8sFAQVSiQKiIKtQnxs//PKcc+/73nPO/5z3
ti1Gje07Ji6E0C4+hNkpIVyXnTkhDC0IYV7HEGqwKjuEmzJf5srZrBBOxUIo
6xDCEakcFEIpB8lAKdbvxw3tQ4hpt2Yr+WRgCC1ZlBlCT+3mbCa/DwjhIVay
Kec/4hmSLDHZ3i6Ej6SsfwhbmS1ZMkG/A8cxk5+3DWGXNND/jPX5KdtIK9n8
sDnJU/1CWMcnuYZPcDUf50o+xhXszeXsxaV8lB+yJ5cwWWLyc98QkvgjE3mK
CVzVxvNkpv4KTucwdT7JePdPMI7HGXiM1T73Pe+zgvdYzrs8yipmJ4TQ0Rxm
+U4Oi5jL95nHOezMeezCYnblfHbjAnbnQvbgIi6W+mq0Ub9hVCs24hY+yKbR
NakT7QHTuI07pVC7pfpvlFLtzdwiwd5l2NN4Jsh0GaM/g2M5k+M4i0WSbu/P
69djhkyVabLDWXnAudnODG5jOqe4N1nSpK785rt1+Ctr8z3PfFdG609jnFSb
Vz39+9wkG+SwOa/jQa7hAa7mfq5iE2ksr+g34stsyJfYgC+yPkcyg8OZxmFM
53JZKdcl1dj/shZvsjZvsQ5vsy7vMI13mc4q3pN3zL9QfzKnRr8Pazynn8pa
0kVd3mZnvsUUiclZn0niGSbyNGvwFybwJ8bxB1Z77qmoPjzJezwRzYHHoznx
WDRHVkRzj/YwqrFcNcearl1hEv9ijNeYwhVcFq01Wr8UqE8K8xnjINbkACZx
iSyVRN+9zMLo3Eh5VDuW8QZL+Q8PR2PxUDQ2D/Iq9/NPfhM9hx3VZ7T1ZvMN
ZrGQs3mRRbzAWTwfnSOei84iT3MKz/AKxzuHlzmB+d51seg9yCQOYCL7Mo7P
M56lXMPvuJbt8/3GvFMz2Yjt2JjruJ1ruZWruY232Sp6J7M5b7AFXxscQglf
5V5+za7e4fuYx73szPbe6V8wk19yJrt4589gV97hEd5mGQcOCeGZTtbDp9mf
fXiBiblqxCQOHxrCbvbJM6b2Hu0RLOEoJvOiz8ZYyVRe4nOelc9nWcByY941
9lHeY3fOYjfOZk/OYW8Wc481ZHE3c6L7/NZau/MAe/EQ96nJ6/yKhWzDO2rX
mlVsy2ruVOP13MEN/Jib2JQd2ITZbMZOXB/9HbSX63iUG1nBFA5mMguYyqGs
zReYxhGsx5Gc6AxddZbe5LXoN8zrvOSsfcBKzuUf0d9IXuEi/s0lHMscjmEn
juN4uSnL9G9xOe9wZTQOc6OzyzxO5CSplrX6ccZfzwRuZCI3sSY3M8YtTGaK
FMsCybWeKdbTmVO5yLV4LuRimabdxb2z3MUS/0uMUMdy9ZxkD3rYmwrtEteG
cUjW//f/AyBYjRw=
             "]],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{20637, 9082, 21060, 9544, 21159, 9681, 21233, 9779, 
             21340, 9927, 10039, 21433, 9929, 21341, 9928, 21344, 9784, 21236,
              9683, 21160, 9682, 21161, 9546, 21061, 9545, 21063, 9102, 9097, 
             20652, 9092, 20647, 9087, 20642, 9077, 20637}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[CompressedData["
1:eJwl1WtMV2UYAPDXGvaty9pKuiwdI0DBG5ohyE1TAbmLMDJNYQhaMj/lrKGm
6zLtopYJTllba7mMRrUILyiiWVmIUSgQybzkHGm1tmpdrN9/fXj+v+ec87zv
+5x355z/uOX1JatHhRAa/RwtCqE5JoS8khCKYkPIZT5zWMh3eZZ/MvPBEP5g
Kn9nOqtKQ+jmEWbFhXCIvTeHELcwhDOO1zMjPoQGZnKQbRzgIY4tC2FMQghN
YoO8mZt4D8cxmjG8j7HsMGbI2DncyGxuYq+14vk1x0eus1MvPXqr5mnWMJt/
6T2Lf3M254ha177lp5xr7HHOZ6K5+vgC51nrOeZwmJ1M0NNYvcUzhlu5ny/y
bT7PfbzBmePt76IQ3uB87uIBTpoQQjun8s7yEFrZyBWJariMO1nDX9jPtRUh
PJsUwiVxSn6V3dzMdRxS86vaQf7GOjaxlnvYZo27+BGjOY0H9ZDMDu7RWz7T
+K/eUznKcYt7ecnxe3yFcZzAWCYxgVuiQtgmb5VHGZNl7DtikXw2RzObt/BD
NdvVfsAdTOJkJnIKJzKZJ+31D/a8jC+zlK+ynJXiqvxLzlCbbMwB0Sg/zN2c
wRROZypTmCb2yo/xNr3k6ulW5nEpP+YStnGBfemRF7KXB51bxnZW8TCrmc/b
uYB38Li5m63RxTeZzlmcxXRmMJM9eh9xD49zJ5dyF5eziZc9gzN5iWm8wgzW
8qJndQUvcyWv8CfP8gZe50b+zM2s5718kvdzDR+I1HvHj3kfrrOLDXxGPCF/
mqu4jnV8irVcy05e41GO8Ah/ZLQ5V5l7DOt4d6Q3rucIG3iNF1ij52FWcYjV
THFvF/gwL/J1LrEXr/Ex7uDiyHvo2kORnJWiz/hyfsMKTnftPKdxiFP5Pbfz
UeO3sSLyXXJusnyAU1jC0+Yo5hme1+uayDELxWh5PqNYwHoOcjW/YzeLjP0q
cp2nWMhJ5j7HieznVhZbfwsLeNa5JHkuTxqTw8+Yx895ztwrOY837PVchkgd
b+KQvW91fjFLWckynvCt7/KdH/a97+AgP2Ef21msplxtESv4PgfYwkH+w0es
0S/fL1/IfJawgC3m2Ce+MN9bPMG9Mf//v/wH+BAxxw==
             "]],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{20726, 9179, 9572, 21082, 9574, 21084, 9576, 21086, 9194,
              9189, 20736, 9184, 20731, 9178, 20726}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{20757, 9212, 21090, 9583, 21089, 9582, 21088, 9579, 
             21087, 9581, 21178, 9702, 9822, 21265, 9824, 21267, 9826, 21270, 
             9704, 21179, 9703, 21180, 9705, 21181, 9585, 21091, 9584, 21093, 
             9227, 9222, 20767, 9217, 20762, 9211, 20757}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{20797, 9258, 9597, 21101, 9599, 21102, 9600, 21104, 9272,
              9268, 20807, 9263, 20802, 9257, 20797}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{20825, 9289, 9607, 21109, 9609, 21111, 9299, 9294, 20830,
              9288, 20825}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{20912, 9382, 9632, 21129, 9635, 21131, 9637, 21133, 9639,
              21134, 9640, 21136, 9642, 21137, 9643, 21138, 9645, 21139, 9646,
              9647, 9748, 21217, 9750, 9751, 9893, 21319, 9895, 9896, 10022, 
             21417, 10023, 10024, 10169, 21528, 10171, 10172, 10287, 10288, 
             10408, 21710, 10410, 10411, 10506, 10507, 10639, 21875, 10640, 
             21876, 10641, 10642, 10785, 21993, 10786, 10787, 22075, 10887, 
             11045, 22193, 11046, 11047, 11169, 11170, 11352, 11353, 11470, 
             11471, 11642, 22643, 11476, 22508, 11359, 11354, 11173, 11171, 
             11049, 11048, 10889, 22076, 10791, 21995, 10789, 21997, 10793, 
             21998, 10794, 22003, 10649, 21883, 10515, 21787, 10422, 21717, 
             10297, 21624, 10188, 21538, 10037, 21428, 9922, 21335, 9774, 
             21228, 9676, 21154, 9539, 9534, 21055, 9529, 21050, 9524, 21045, 
             9518, 21040, 9519, 9669, 21149, 9670, 9671, 21223, 9769, 21222, 
             9768, 21221, 9767, 9668, 21148, 9513, 9508, 21031, 9503, 21026, 
             9498, 21021, 9493, 21016, 9487, 21011, 9488, 9664, 21147, 9665, 
             9667, 9764, 9766, 9914, 9917, 21423, 10032, 21533, 10183, 10030, 
             10028, 9912, 9911, 21328, 9909, 21326, 9906, 9761, 9759, 9660, 
             21145, 9477, 9472, 20999, 9467, 20994, 9462, 20989, 9456, 20984, 
             9457, 9656, 9658, 9757, 9758, 21322, 9899, 21321, 9898, 21320, 
             9897, 9755, 9753, 21218, 9752, 9652, 9650, 21141, 9649, 21140, 
             9648, 514, 9422, 20952, 9417, 20947, 9412, 20942, 9407, 20937, 
             9402, 20932, 9397, 20927, 9392, 20922, 9387, 20917, 9381, 
             20912}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21079, 9570, 21171, 9695, 9808, 21256, 9811, 21259, 9698,
              21173, 9573, 9571, 21081, 9569, 21079}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21106, 9605, 9718, 21192, 9719, 21194, 9608, 9606, 21108,
              9603, 21106}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21262, 9820, 21366, 9954, 10075, 21464, 10077, 21466, 
             9957, 21368, 9823, 9821, 21264, 9817, 21262}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21283, 9846, 21387, 9978, 21386, 9976, 21385, 9977, 
             10102, 10104, 21576, 10228, 10103, 10101, 21488, 10099, 21485, 
             10100, 21575, 10227, 21574, 10225, 21572, 10226, 21669, 10352, 
             21668, 10351, 21666, 10347, 21663, 10349, 21745, 10452, 21743, 
             10454, 21831, 10569, 21829, 10567, 21827, 10563, 21825, 10565, 
             21925, 10699, 21923, 10695, 21922, 10697, 22036, 10831, 22034, 
             10832, 22117, 10943, 22231, 11095, 22230, 11092, 22229, 11094, 
             22331, 11238, 22329, 11239, 22456, 11399, 22455, 11402, 22551, 
             11524, 22548, 11525, 22669, 11667, 22668, 11670, 11788, 22756, 
             11792, 22758, 11674, 22671, 11672, 22673, 11527, 22552, 11526, 
             22554, 11404, 22457, 11403, 22458, 11405, 22460, 11243, 22333, 
             11241, 22335, 11099, 22233, 11097, 22236, 10945, 22118, 10944, 
             22119, 10946, 22120, 10947, 22122, 10835, 22038, 10701, 21926, 
             10700, 21927, 10702, 21929, 10704, 21931, 10573, 21833, 10571, 
             21835, 10575, 21837, 10456, 21746, 10455, 21747, 10457, 21749, 
             10459, 21751, 10354, 21670, 10353, 21671, 10355, 21673, 10357, 
             21676, 10231, 21578, 10106, 21489, 10105, 21490, 10107, 21493, 
             9980, 21388, 9850, 9847, 21284, 9845, 21283}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21291, 9857, 9985, 21394, 9987, 21395, 9860, 9859, 21293,
              9856, 21291}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{9903, 21324, 9901, 21325, 9904, 9907, 21420, 10027, 
             10175, 21531, 10178, 10181, 10291, 10292, 10413, 21711, 10415, 
             21712, 10416, 10417, 21782, 10510, 21878, 10644, 21877, 10643, 
             10509, 10508, 10414, 10412, 1175, 10289, 10176, 10174, 21529, 
             10173, 10026, 21418, 9903}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21413, 10015, 10153, 21521, 10156, 10158, 10275, 21613, 
             10276, 21614, 10277, 21615, 10278, 10280, 10405, 21708, 10281, 
             10279, 10162, 10161, 21524, 10160, 21523, 10159, 21522, 10157, 
             10017, 10016, 21414, 10014, 21413}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{10317, 21642, 10315, 10320, 21732, 10437, 21807, 1419, 
             10435, 21730, 10317}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21682, 10369, 21760, 10469, 21759, 10467, 21758, 10468, 
             21847, 10585, 21846, 10584, 21845, 10583, 21843, 10579, 21841, 
             10581, 21942, 10716, 21940, 10714, 21938, 10712, 21936, 10709, 
             21934, 10710, 22045, 10841, 22044, 10838, 22042, 10840, 22128, 
             10954, 22126, 10950, 22124, 10952, 22240, 11108, 22238, 11105, 
             22237, 11106, 22340, 11247, 22339, 11248, 22464, 11409, 22463, 
             11410, 22559, 11535, 22558, 11532, 22556, 11534, 22676, 11677, 
             22764, 11798, 22762, 11794, 22760, 11796, 22883, 11960, 22970, 
             12076, 22968, 12072, 22966, 12074, 23077, 12208, 23075, 12209, 
             23166, 12334, 23165, 12336, 23285, 12487, 12611, 23378, 12489, 
             23286, 12488, 23288, 12338, 23167, 12337, 23168, 12339, 23169, 
             12211, 23078, 12210, 23080, 12078, 22971, 12077, 22973, 11962, 
             22884, 11961, 22885, 11800, 22765, 11799, 22767, 11802, 22769, 
             11681, 22678, 11679, 22681, 11539, 22561, 11537, 22563, 11412, 
             22465, 11411, 22467, 11250, 22341, 11249, 22343, 11252, 22346, 
             11256, 22349, 11110, 22241, 11109, 22242, 11111, 22244, 10956, 
             22129, 10955, 22131, 10958, 22134, 10843, 22046, 10842, 22048, 
             10845, 22050, 10848, 22052, 10718, 21943, 10717, 21944, 10719, 
             21946, 10721, 21948, 10724, 21951, 10589, 21849, 10587, 21851, 
             10591, 21853, 10593, 21855, 10595, 21857, 10471, 21761, 10470, 
             1351, 10598, 21859, 10600, 21861, 10473, 21762, 10472, 21764, 
             10388, 10386, 21700, 10385, 21698, 10383, 21695, 10380, 21692, 
             10377, 21690, 10375, 21688, 10373, 21686, 10371, 21684, 10368, 
             21682}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21738, 10446, 10554, 21820, 10447, 10445, 21738}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21780, 10501, 10631, 21873, 10632, 10634, 10772, 21988, 
             10773, 10777, 10881, 10882, 11037, 22191, 11038, 11039, 11166, 
             22278, 11167, 22279, 11041, 11040, 10885, 10884, 22073, 10883, 
             10780, 10778, 21990, 10775, 10636, 10635, 21874, 10633, 10503, 
             10502, 21781, 10500, 21780}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21908, 10677, 22025, 10820, 22024, 10821, 22103, 10925, 
             22215, 11072, 22214, 11073, 22308, 11209, 22307, 11210, 22438, 
             11380, 22437, 11382, 22529, 11497, 22658, 11659, 22657, 11658, 
             11495, 22527, 11378, 22434, 11203, 11200, 22300, 11201, 22433, 
             11377, 22526, 11492, 22525, 11494, 22656, 11657, 22740, 11762, 
             22739, 11759, 22737, 11761, 22861, 11933, 22941, 12039, 22938, 
             12040, 23050, 12176, 23049, 12178, 23136, 12304, 23265, 12467, 
             23350, 12576, 23349, 12577, 23492, 12764, 23491, 12769, 23620, 
             12953, 13090, 23714, 12955, 23621, 12954, 23623, 12773, 23494, 
             12771, 23497, 12579, 23351, 12578, 23354, 12469, 23267, 12308, 
             23138, 12306, 23140, 12310, 23143, 12183, 23053, 12043, 12041, 
             11935, 22862, 11934, 11936, 12042, 22943, 12045, 22945, 11939, 
             22864, 11764, 22741, 11763, 22742, 11765, 22745, 11768, 11774, 
             22870, 11946, 22951, 12051, 22949, 12052, 23059, 12188, 23058, 
             12189, 23148, 12314, 23147, 12316, 23271, 12473, 12590, 23361, 
             12593, 23363, 12476, 23273, 12318, 23149, 12317, 23151, 12193, 
             23061, 12191, 23063, 12054, 22952, 12053, 22954, 11949, 22872, 
             11777, 11775, 22746, 11771, 11660, 22659, 11499, 22530, 11498, 
             22531, 11384, 22439, 11383, 22442, 11214, 22310, 11212, 22313, 
             11217, 22314, 11077, 22218, 10929, 22105, 10927, 22107, 10931, 
             22108, 10823, 22027, 10684, 10680, 21911, 10679, 21909, 10676, 
             21908}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22070, 10873, 11019, 11020, 11155, 22275, 11021, 22181, 
             10875, 10874, 22071, 10872, 22070}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22098, 10918, 22210, 11066, 11202, 22304, 11205, 22305, 
             11069, 22212, 10921, 10919, 22100, 10914, 22098}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22182, 11023, 22276, 11156, 11323, 22403, 11324, 11325, 
             11449, 22497, 11450, 11452, 11617, 22629, 11453, 22499, 2031, 
             11328, 22405, 11326, 11158, 11157, 11026, 11024, 22183, 11022, 
             22182}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{11032, 22188, 11030, 22190, 11034, 11036, 11163, 11165, 
             11337, 22408, 11339, 22409, 11340, 11341, 22500, 11460, 11629, 
             22635, 11631, 11633, 22719, 11739, 11910, 22849, 11912, 11913, 
             22926, 12019, 23038, 12166, 12018, 12017, 11911, 11909, 22848, 
             11907, 11738, 11736, 11627, 11625, 22633, 11622, 11456, 11454, 
             11335, 11333, 22406, 11331, 11160, 22277, 11032}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22221, 11082, 22320, 11225, 22317, 11226, 22447, 11388, 
             22446, 11391, 11507, 22539, 11510, 22542, 11393, 22448, 11392, 
             22450, 11395, 22452, 11231, 22323, 11085, 11083, 22222, 11079, 
             22221}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[CompressedData["
1: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
+1iEHbnCfFmUQd3NozfNn7EswHEcL1OUkzlntTxUXsvPpavPlnGNwzzAWu5T
R47JHPerxyI85L2jzinHaH7ps+vlFZnqesk5nVPc60MppDyRV8zxQ/a8Dmwn
PZWjeMEayKzcmTutjwvWSk/W5TvyR1hP1lVO1uMya3GR3LMuF/KZNb1AeQD7
SUXlvjxtjzgpDaSebLSnZbeHvMl8csZel4fTfU9Mldu+R25KtHSTv3wfdeEf
7MTf2ZF/+v5srfwmH/j+zc+HLMDHLMQnLMJiskfaOn8f90sv19jnuDf386DX
oniA7XiIh6Wf9w85HsjDHMQh8kSeyXT1X6LexbWhtOTWti1srq0TlFuHPVL+
kUvhO0CfjJbF+ie+flslD5RXc4001LcF9PFBOSzJjEEj/d+Hl7mLPYxRrFyT
fsasi/E7xus8ymvsLH2VrzonG7szWi65Rm/XaMgGst89NrtnPkanMW/VIa5E
ZJh6vid/h+8zbWnJpvK99uUM3wssKuf0QWEu1A8Lwjg6nstH+ueB5HF8j7n5
L2d6b7LyLM6Ts8qFfH6TfCeN3KOJnJXD7nOeF6SyfhqsPgv5kkvUcbnkUvc8
slv2ShLtq69tvXiRXbS7W2i7XJE++qOT/jnCWE62LqbKa9ZMKnlsrfyHPayr
CtbXCR5nCeuukfV3Ss7IZcdR9oQXEsd+sdk+MYeF7B8F7SPL+CPz2F+i7TPz
eT/s+/afhfahqcxjX3rMTRxnv2pi30pgH7vCiZxhX7vMR6xlzyttz6vHCnzs
tSvem8lJjPWZRGzGCa612TWfunZeTuMi90zFh+rwkbr0YF5uU8fl6lqYRThf
G7ZoSzw2YEftaydntXmBNjdlYzmhT07qm4rsya/12RN9l4YxnKVPi3EGS3AO
58ts5XTOecaN7O2zVVzjlJyRUu7RzPU/4jleZWf3b6gu8dVpgSyUoupaTJ1X
cgfza0sfbVrEx+H7S1uXanMM8+uDF9zCSfqmhT66Ibdlqj6bow+ncB6v8Rlb
6uda+jmK9fjCaze89xGn867PJmVrTnbNra790j0KcCY/ce+0fKYuS9SpH9/k
r+q6Wp1LsDgXacsP2paICaSLtsZq83ltX8jmLM2zoX/0VdXws4ds0nfP9WF6
zuECfVuSt83pG9JV+pvjN8z569JTfrcmYq2JK9JYkjs+as0ckYLSyF7wmTW1
VhJKAhljrVW15q5Yg5elvUTJVms1j/VZgeXkvHVchsus6aXy0lp/LsNlqBy3
nx6V9vbRIywlJeWpfbo4P/G71FKZ53gJ53IxE0hx5fgswYQsyUQszSQsw2R8
RVbIfMeruDq859rlpZP7nuSw8LuUvJA31DmirnFkuayU8trwP69X4lvhe0ob
f2IHbe4oVyVWqumTsfomkT5KLOvkc2msDwvpyy08xlf0cRN9fVX6Kl/j9fCd
qtzLmGQ3RjfDHmW8ouWu3JfSxnKhMZ3HTMb4Jb9jNWNfXc6aC+dY1txobY4s
5v94g9HmUGJzKan8ZG4tYQlzrbQ5t5a7WNBcHGhOfsIXTG+ufmrOzmZhcziu
Of0Tp7O9Of6Kuf6AM/mxNXCLET9/drc+WlgffdiWcb12x3uLnTObj30mBTtw
hmttc814LMo57lWExSS+135mDDs69zWfecolrjNX+blySnbhLOf84twELM65
rrNG3VdLRuWVjCOfattgbSvEP7R5nbaXZSku1ydLJbk00Uc99NktfXdJH/4t
baWc4wv6+Ly+rsE+3GwMIszKzPKxMSpjbB4Ys5PGsgcH8q4xvSW95U9jfcOY
9wu/e7CpnDA3jkthaWKufGnurJdkkkTGmVvVzbHr4fdjczA6/N4nk5Q7cZs5
mT/8TsmqssbcXS3xJL/5O9r8HiVHzfuRPGXud1auzIrywhqpwDXWyALl15lS
yimnYFm+yr6ltVuOlXIt6djO+mVRKSKrSlpzUfqcK7maa6SY9x44Ls4Sclw6
+ewJduZJnpHflAe6fir3Si1r5TOppG4v1aEK35Iz0lX9z/G/clz5A+0qoK0J
tPkziVFex/Xyt3J1/fKL7JAe4RmDnNJnN8PPZ/p3kryqr1+Th/r6azYzFkWN
yVaeZDNj1UL6G7ub4Wcx49lXchrj+xzMXsb8oTyScubCUnNiAbOZH1vlZxlo
zrxjDv3Di6xkbnU0x65IrNx13NccbGEupjQnt3MFy5mvFWS9OfsXC5vLw8zp
uOZ3fMlsvq/lPJawFhJaE9sZbZ30kjTWTFxraLmslIeOE1uj463XgdZrUuXH
XlvtvY+ZkPGkt8/Oda2drpWIO5iM5VhK1rlnVvdMzAQySp2Gy251/EJdK7IM
V2nDDm1ZyV+Zhq/LAG3tJ9e0fZm2d2LlsP70zUV9VJeDuF3fxWcOLtSny/Xt
Mnmirx9LHxliDB4Yi9zsz93G6o6xuiUt5VXHp43lKSkmzcMzAmP9jaSSJcY+
JZfydaaWR8qbWNz5JeSMnJXXwnMi1xzEexzgfoMkj3s/5tBQB3V6Ji+kgjqv
UN9FzKUNCcPzAw5hPW28Iteki/Z3k+X64Bb/5SD900qfpdNfa8Lv3FJen1bX
t1/zQPgZwnwYrd+TGINkks2YfMEKxqiyvGrMdnMRBxnTDMb4QnbXMsZPlZMb
/xhz4X1zYS7HcSE/ZErvRfr7/di5n8si569jYsmo/F7Yn113j+unYBUucP8v
3T87X2VyGat+JdTzkPpuVO+arBH2Y+3ZpX0Z2JpDtXew3NH+T7W/e3jGwhuh
n/TXu6wvv+q/RI5zc7F+XaV/V8pL/X1a/w/kMD4zHk9kiOw1Xg+M1/3wrFBS
hueGxvNHc6E0S4bfcY33Y+Oejmlkmv2htuP79ov/2jeGcJDstp8UdFyfdeWy
vaY2N9p3Zim/ymTh9xz700n71JXw/Do8lw7Pr+Xr8OzY3paXuaSKcnaOsg8O
l6v2xUvS3d54mUO9NkKyOCeHfOz8r1jDteK6fs3w7Fu6K1/kRPedJEnUIbnM
VKdvWDM8d5U31f1P9tOWAXLO8V3W0tYp2lyTk8OzOq+d8V5f9pbffGan1JB/
XHODa34hCaWg4wnuOU4uqEM3dXmb1SWOcjV+qc7r5SP1X8eMkl4qhmf7HKyN
v2vzBW0+J12VT7OMlJKHvk9K8jPfL6uU0/FtpmEtZmAmWS9rHW/gZ8zC2owp
4ecZudnWz/18WdzPFTLL8TO2kzbyRTHzXda28fnwdyqu4Squ4oOi1pnyOP7a
2vcQf+N47uIE/s6JnCRP5Xn4m6XPrve5jfyCm7hZurpnYXXoxu7hb43qFl9m
y22vz+F8qaMNObXlO/lceTO3yBPlqvolVnrqs2u8LqP159jwdwt9m182yXdS
31g0lJ7G5RpPc5pxS2EcX5PNskXeDb+PS+HwvJhDzYHh8j/HD8Lze/MkxjxZ
zgzWy/fyg7SypspaTxfkb3ndWutozT2SJ+G5g+Nh1uRzeSkjrNVB1uwZRqzj
itb0auaxvvNKEmv9Dw5jI+v/ptyWGvaGnvaIlbzLYeG5q7Sxl2S2p6TLYtzt
M9/ac46wpD1ogr1oDVPYl3LYozbwI75l73rNHraXw+xrK5QPKacJzyS5xDkb
nZuXqbneNaa4VjmedO2t7lGfVfkf996rDrmYNTwHVqdH6vhAHe9JL3k71Fkb
YrWpCUdwtzb+KW/IkvBcUB9UYnzGlSH6aJQ+isP8HKnvhsszfTpEn3ZlJ7mo
z38yBhVYLpSNyRNjlJkZZZYxq+v4cXg2ZSxHcipHhGdU8kSeh2d2zpnn3Kw+
kyM853P8Cyu6ZlvX36H83Gu5mU0WOLd+eD7js8/kfZnmugfC36SkmTSRn82t
H2WuPWMrU0oR5ZjwTC38PSk8ozMnm7GRxFN+l9+bu4vD8z0WCH8zTOG70jzv
bc7XYnV5ai1U44/WxVbJI7nC31GtnwVyx3qaxwRhfSn3st56yFbrcIM1uYU/
SE+vFfF+b/aRhM6f4zgRE8siWSL5XPtN2Sbbwz7j3nXljtyXv9RtojVYWH2L
ht9x1X8Lm2hPAu1qHv52GH7GTen62v66vkgTno3pj+1sGp4nyn45KGP06TiJ
6Ou44TmYNNTn8XhZX0/03vjwdyLnHpJW0iLs2641P/yNiWnD9d3rjPvfc+87
4fmntJGEXmvJH9RxmbqWCr9/y4fasEdbHoWf66Wv8j3Wk5f6/Fdt3yEFpW74
fUDfLJf7+mwZk0sSGRD+N0J+0cc/yVf6/EcmCP9zIXkdx+N0++U0iQ3/fyL9
5G4r9+U99ueA8L8o0sheez38H4rM8Jm/HMdwpiR0rUSyQ75x7Z3cJUPVYYS8
ok4pZLWslcLqX1R+lz8ljnY21MbH8lxmm3P7vBbRH88cN5Z4jvc4d4N2F2N9
rnetdZJKXpOx7jVaSuqPUfxLHf6Qjer0G5NKYpmjzrPkdvhfKBks/2rvID7k
e3zEYRwR+iK8Lwt8Zq92L+Q+PvRa4/DdxPflic+MCtcsrK/kfRklFb0+gocK
mV/SWbq1tI8wml3YnV3DsRyV4zLGZ6r47Afh/4dkhvLt8H9R7vFceTwnylN5
IYfUZam65dPeFNr5LfdwE/eF/1XRJ6X1zQROktT6LK1skG+kpH4tIwflmLTU
720kkXFIKjFy1DikYGJp673WcsK5R6SclJZNrvW1pJeF7jfNvT6UA+rwnbrs
50GZ4rWy3p/OmPD/IM7PJJtli1R0rWbGeZvyM+flYGaZ5dzyjmeyCk+71jbX
zcgiXK8P/g/ApSLK
             "]],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{11140, 11137, 22266}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{22381, 11295, 11140}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{22382, 11296, 22381}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{22383, 11297, 22382}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{22385, 11299, 22383}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{22387, 11301, 22385}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{22389, 11303, 22387}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{22391, 11305, 22389}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{22392, 11306, 22391}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{11310, 11308, 22392}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22400, 11319, 22496, 11446, 11612, 22625, 11614, 22626, 
             11615, 22627, 11616, 22628, 11448, 11447, 11322, 11321, 22402, 
             11320, 22401, 11318, 22400}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22410, 11343, 11461, 11463, 11635, 11636, 11740, 22720, 
             11741, 22721, 11638, 11637, 11466, 11464, 11349, 11345, 22412, 
             11342, 22410}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{22490, 11436, 11310}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{11438, 11437, 22490}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{22491, 11441, 22623, 11609, 11438}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{22493, 11440, 22491}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{22494, 11442, 22493}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{11444, 11443, 22494}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22532, 11503, 22660, 11661, 11776, 22747, 11778, 22749, 
             11664, 22662, 11508, 11506, 22535, 11502, 22532}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{2236, 11610, 11444}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22753, 11786, 22877, 11952, 22876, 11953, 12062, 22960, 
             12066, 22962, 11957, 22880, 11790, 11785, 22753}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22842, 11895, 12009, 12010, 12146, 23028, 12011, 22922, 
             11897, 11896, 22843, 11894, 22842}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22927, 12021, 23039, 12167, 12294, 23127, 2695, 12022, 
             12020, 22927}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22955, 12059, 23067, 12199, 12327, 23159, 12200, 23068, 
             12060, 12057, 22955}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23092, 12229, 23188, 12362, 23304, 12507, 12642, 23406, 
             12646, 23409, 12508, 2849, 12232, 12228, 23092}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23119, 12262, 23240, 12423, 12542, 23331, 12543, 23332, 
             12544, 12545, 12728, 23469, 12546, 23333, 12426, 12425, 23241, 
             12424, 12264, 12263, 23120, 12261, 23119}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{12290, 23125, 12288, 23126, 12291, 12293, 12450, 23253, 
             12452, 12454, 23338, 12565, 23481, 12758, 23609, 12941, 12757, 
             12755, 12562, 12560, 12448, 12447, 12290}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23153, 12324, 23277, 12479, 12601, 23370, 12481, 23278, 
             12480, 23280, 12328, 12326, 23156, 12322, 23153}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23186, 12360, 23302, 12505, 23301, 12501, 23299, 12504, 
             23396, 12633, 23393, 12628, 23390, 12630, 23533, 12816, 13002, 
             23658, 13005, 23660, 12818, 23534, 12817, 23536, 12635, 23397, 
             12634, 23399, 12637, 23401, 12506, 23303, 12361, 12359, 23186}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23357, 12588, 23503, 12783, 23500, 12784, 23627, 12958, 
             23626, 12960, 23718, 13100, 23716, 13101, 23810, 13252, 23899, 
             13380, 23898, 13383, 23996, 13539, 13674, 24084, 13676, 24086, 
             13542, 23999, 13389, 23902, 13386, 23905, 13254, 23811, 13253, 
             23814, 13105, 23720, 13103, 23723, 12964, 23629, 12962, 23632, 
             12787, 23505, 12591, 12589, 23359, 12585, 23357}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23365, 12598, 23509, 12790, 12971, 23637, 12792, 23510, 
             12791, 23512, 12603, 12599, 23367, 12596, 23365}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23373, 12608, 23518, 12800, 23516, 12801, 12979, 23642, 
             12981, 23644, 12803, 23519, 12802, 23521, 12613, 12609, 23375, 
             12606, 23373}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23565, 12855, 23680, 13026, 13165, 23774, 13027, 23681, 
             12858, 12852, 23565}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23635, 12970, 23728, 13113, 3471, 23913, 13263, 23820, 
             13259, 23818, 13262, 23911, 13397, 24004, 13546, 24003, 13547, 
             24091, 13680, 24090, 13682, 24193, 13851, 13991, 24295, 13996, 
             24299, 13856, 24197, 13688, 24094, 13685, 24097, 13691, 24100, 
             13551, 24007, 13400, 23913}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{12972, 12967, 23635}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23641, 12978, 13120, 23736, 12980, 12976, 23641}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23654, 12998, 3379, 23749, 12999, 12996, 23654}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{23729, 13114, 23822, 3471}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23733, 3366, 23825, 13267, 13401, 23916, 13402, 23918, 
             13270, 23827, 13121, 13119, 23733}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23740, 13127, 23831, 13273, 13410, 23925, 13414, 23928, 
             13275, 23833, 13132, 13128, 23741, 13125, 23740}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23754, 3385, 13283, 23840, 13143, 13142, 23754}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23838, 13282, 13432, 23938, 13284, 3385, 23838}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23847, 13296, 23951, 13448, 23950, 13447, 23948, 13445, 
             23947, 13443, 23945, 13444, 13586, 3716, 24034, 13588, 24036, 
             13590, 24038, 13593, 24040, 13450, 23952, 13449, 23953, 13451, 
             23954, 13452, 13453, 13597, 13599, 13755, 24146, 13757, 24147, 
             13601, 24043, 13600, 24045, 13455, 23955, 13454, 13457, 13605, 
             24048, 13459, 13456, 13308, 13306, 23856, 13304, 23855, 13303, 
             23854, 13302, 23853, 13301, 23851, 13299, 23850, 13298, 23849, 
             13297, 23848, 13295, 23847}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23859, 13311, 13458, 13460, 13608, 24051, 13462, 23956, 
             13461, 3624, 13318, 13315, 23863, 13313, 23861, 13310, 23859}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23920, 13407, 24013, 13558, 13706, 24114, 13560, 24014, 
             13559, 24016, 13412, 13408, 23922, 13405, 23920}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23934, 13427, 13575, 24026, 13430, 13426, 23934}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23977, 13489, 13625, 13627, 13795, 24167, 13629, 13626, 
             13491, 13488, 23977}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24024, 13574, 13728, 24128, 13576, 13572, 24024}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24033, 13585, 13747, 24142, 13587, 13584, 24033}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24082, 13673, 24187, 13840, 24186, 13845, 24282, 13976, 
             14148, 24399, 13978, 24283, 13977, 24286, 13846, 24188, 13675, 
             13672, 24082}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24108, 13703, 24206, 13866, 14017, 24312, 14019, 24314, 
             13870, 24209, 13708, 13704, 24110, 13700, 24108}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24118, 13717, 24214, 13874, 14027, 24321, 14029, 24323, 
             13879, 24217, 13719, 13718, 24120, 13715, 24118}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24123, 13724, 24221, 13882, 14041, 24333, 13886, 24223, 
             13884, 24225, 13730, 13726, 24125, 13722, 24123}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24137, 3819, 13896, 24237, 13744, 13741, 24137}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24233, 13894, 14051, 24342, 13898, 3819, 24233}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24289, 13987, 24404, 14158, 14290, 24493, 14160, 24405, 
             14159, 24409, 13994, 13988, 24291, 13985, 24289}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24304, 14006, 24414, 14169, 24501, 14302, 24602, 14465, 
             14610, 24711, 14469, 24605, 14304, 24503, 14171, 24416, 14009, 
             14003, 24304}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24318, 14025, 24427, 14186, 14320, 24517, 14188, 24428, 
             14187, 24430, 14028, 14026, 24320, 14023, 24318}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24326, 14035, 24434, 14193, 24432, 14195, 4240, 24521, 
             14326, 24523, 14328, 24526, 14198, 24436, 14038, 14037, 24328, 
             14033, 24326}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24421, 14177, 14309, 24509, 14180, 14176, 24421}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24488, 14287, 14456, 24598, 14293, 14286, 24488}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24506, 14308, 24608, 14473, 14615, 24716, 14474, 24609, 
             14310, 14306, 24506}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24514, 14318, 24614, 14479, 14624, 24723, 14483, 24617, 
             14322, 14317, 24514}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24584, 14434, 14580, 24686, 14436, 14432, 24584}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24588, 14445, 24690, 14587, 14748, 24802, 14592, 24695, 
             14450, 14443, 24588}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24621, 14489, 4455, 24824, 14631, 24728, 14632, 14779, 
             24824}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{14490, 14488, 24621}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24721, 14623, 14776, 24821, 14625, 14621, 24721}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{4455, 24730, 14490}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24735, 14641, 24828, 14782, 24827, 14783, 24920, 14928, 
             24919, 14925, 24918, 14927, 25014, 15091, 25092, 15235, 15373, 
             25177, 15376, 25179, 15239, 25095, 15095, 25016, 15093, 25018, 
             14932, 24922, 14930, 24925, 14785, 24829, 14784, 24832, 14645, 
             14642, 24738, 14640, 24735}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24843, 14800, 14953, 24941, 14802, 14799, 24843}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24883, 14874, 15045, 15049, 25065, 15197, 25136, 15317, 
             15492, 15494, 15621, 25325, 15499, 25233, 15322, 25141, 15204, 
             15199, 15052, 15048, 14876, 14873, 24883}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24911, 14912, 15079, 25006, 14915, 14911, 24911}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24915, 14920, 15085, 25011, 14923, 14919, 24915}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24931, 14941, 15104, 25026, 14944, 14940, 24931}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25009, 15084, 25087, 15230, 25086, 15231, 25167, 15358, 
             25166, 15360, 25258, 15528, 15657, 25353, 15662, 25356, 15532, 
             25261, 15364, 25169, 15362, 25172, 15232, 25088, 15086, 15083, 
             25009}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25022, 15101, 15244, 25100, 15102, 15100, 25022}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25044, 15126, 15269, 25115, 15127, 15125, 25044}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25097, 15243, 25183, 15381, 25270, 15538, 25269, 15540, 
             25368, 15674, 25366, 15676, 25460, 15821, 25545, 15960, 25634, 
             16110, 16250, 25734, 16112, 25636, 15964, 25547, 15962, 25550, 
             15823, 25462, 15680, 25370, 15678, 25372, 15542, 25272, 15384, 
             25185, 15245, 15241, 25097}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25147, 15332, 25238, 15504, 15631, 25332, 15506, 25239, 
             15505, 25241, 15336, 15333, 25149, 15329, 25147}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25154, 15343, 25245, 15511, 15642, 25338, 15512, 25246, 
             15344, 15340, 25154}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25174, 15372, 25265, 15535, 25361, 15667, 25360, 15669, 
             25453, 15812, 15952, 25540, 15814, 25454, 15813, 25457, 15672, 
             25363, 15536, 25266, 15374, 15371, 25174}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25190, 15390, 15549, 25280, 15392, 15387, 25190}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25249, 15516, 15647, 25341, 15519, 15514, 25249}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25335, 15640, 15790, 25440, 15644, 15638, 25335}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25375, 15685, 25465, 15826, 15971, 25557, 15828, 25466, 
             15827, 25469, 15689, 15686, 25377, 15683, 25375}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25390, 15702, 25479, 15841, 25478, 15842, 16000, 25572, 
             16003, 25574, 15844, 25480, 15843, 25481, 15845, 25483, 15707, 
             15706, 25394, 15704, 25392, 15701, 25390}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25443, 15797, 25529, 15943, 16094, 25621, 15947, 25532, 
             15800, 15795, 25443}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25508, 15914, 16069, 16073, 25695, 16194, 16368, 25797, 
             16199, 25700, 16078, 16072, 15916, 15911, 25508}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25552, 15969, 16114, 25641, 15973, 15967, 25552}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25565, 15989, 16129, 25650, 15991, 15987, 25565}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25569, 15998, 25657, 16137, 16283, 25758, 16285, 25761, 
             16140, 25659, 16001, 15999, 25570, 15995, 25569}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25648, 16128, 16270, 25748, 16130, 16126, 25648}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25672, 16155, 25777, 16313, 16447, 16448, 16598, 16600, 
             16728, 26047, 16729, 16730, 6115, 16981, 17115, 17119, 26406, 
             17277, 26501, 17412, 17563, 17565, 26718, 17706, 17860, 26825, 
             17861, 26826, 17708, 17707, 17566, 26610, 17415, 26503, 17279, 
             26409, 17124, 26318, 16986, 16984, 16860, 16859, 16731, 26048, 
             16604, 16603, 25958, 16602, 16452, 25858, 16318, 16316, 25779, 
             16315, 16157, 16156, 25673, 16154, 25672}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25712, 16219, 25808, 16383, 16509, 25895, 16385, 25810, 
             16222, 16217, 25712}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25725, 16240, 25821, 16398, 16541, 25912, 16400, 25822, 
             16399, 25825, 16244, 16241, 25727, 16237, 25725}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25732, 16248, 25828, 5752, 25918, 16550, 26016, 16688, 
             26103, 16806, 26102, 16807, 16934, 16937, 17058, 26271, 17061, 
             26273, 16940, 26185, 16810, 26106, 16691, 26019, 16553, 25921, 
             16408, 25831, 16252, 16247, 25732}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25736, 16256, 16413, 25837, 16261, 16254, 25736}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25745, 16269, 25841, 16419, 16567, 25936, 16420, 25842, 
             16271, 16267, 25745}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25766, 16295, 25852, 16436, 25945, 16583, 26045, 16722, 
             26043, 16723, 26132, 16844, 26131, 16843, 26130, 16840, 26128, 
             16842, 26204, 16963, 26295, 17088, 17239, 26386, 17090, 26296, 
             17089, 26299, 17093, 26301, 17097, 26302, 16967, 26206, 16965, 
             26208, 16969, 26210, 16846, 26133, 16845, 26134, 16847, 26136, 
             16849, 26137, 16851, 16853, 26213, 16974, 26313, 17109, 26311, 
             17107, 26309, 17105, 26307, 17102, 26305, 17103, 26393, 17247, 
             26392, 17244, 26391, 17246, 26487, 17389, 26485, 17391, 26588, 
             17531, 26586, 17534, 6746, 26695, 17676, 26698, 17538, 26590, 
             17536, 26593, 17541, 26596, 17393, 26488, 17392, 26490, 17395, 
             26492, 17249, 26394, 17248, 26396, 17251, 26399, 17255, 26401, 
             17258, 17261, 17401, 17404, 26603, 17555, 26710, 17694, 17849, 
             26817, 17695, 26711, 17557, 26604, 17556, 17558, 17696, 17697, 
             26819, 17851, 26818, 17852, 26919, 17979, 27018, 18122, 18244, 
             18247, 27199, 18403, 27298, 18548, 27412, 18707, 18846, 18849, 
             19018, 27664, 18851, 27528, 18710, 27414, 18549, 27299, 18404, 
             27200, 18250, 18248, 18123, 27019, 17981, 26920, 17855, 26821, 
             17701, 26714, 17560, 26606, 17408, 17405, 17265, 17263, 17112, 
             17110, 16975, 26214, 16856, 16855, 26138, 16854, 5999, 16724, 
             16595, 16593, 25952, 16590, 25949, 16587, 25947, 16585, 16438, 
             5669, 16294, 25766}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25887, 16500, 16650, 25984, 16501, 16497, 25887}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25892, 16508, 25990, 16658, 6059, 26078, 16659, 25991, 
             16510, 16505, 25892}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25903, 16527, 26001, 16673, 16790, 26090, 16676, 26004, 
             16531, 16526, 25903}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25909, 16539, 26008, 16677, 26007, 16680, 26093, 16795, 
             16922, 26176, 16926, 26180, 16801, 26097, 16682, 26010, 16543, 
             16538, 25909}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25932, 16565, 26029, 16701, 26028, 16703, 16822, 26115, 
             16825, 26118, 16705, 26031, 16569, 16564, 25932}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25995, 16664, 16782, 26083, 16667, 16662, 25995}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{5934, 16766, 26154, 16900, 26238, 17015, 17157, 17160, 
             26430, 17323, 26527, 17450, 17613, 26639, 17455, 26532, 17328, 
             26435, 17165, 17159, 17016, 26239, 16902, 26155, 16769, 16765, 
             5934}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26123, 16832, 16952, 16953, 17083, 26291, 16956, 26198, 
             16835, 16834, 26124, 16831, 26123}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26289, 17081, 26379, 17230, 26378, 17231, 17372, 26474, 
             17373, 17374, 26573, 17517, 26682, 17660, 26681, 17661, 26795, 
             17812, 17659, 26680, 17516, 17512, 26572, 17515, 26679, 17658, 
             26794, 17811, 26897, 17948, 26992, 18077, 26990, 18078, 27078, 
             18206, 27166, 18353, 27165, 18355, 27263, 18504, 18650, 27368, 
             18652, 18653, 27489, 18802, 27488, 18804, 27619, 18961, 27740, 
             19124, 19274, 27861, 7813, 27742, 18964, 27621, 18807, 27492, 
             18658, 27371, 18506, 27264, 18505, 27267, 18357, 27168, 18209, 
             27080, 18080, 26993, 18079, 26995, 17949, 26898, 17814, 26796, 
             17813, 26798, 17664, 26684, 17519, 26574, 17518, 26576, 17377, 
             26476, 17234, 17233, 26380, 17232, 17082, 17080, 26289}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26348, 17180, 26443, 17335, 26442, 17338, 17469, 26542, 
             17473, 26545, 17340, 26445, 17182, 17179, 26348}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26350, 17187, 26447, 17342, 26547, 17479, 26655, 17632, 
             26764, 17769, 17922, 26873, 17770, 26765, 17633, 26656, 17481, 
             26548, 17480, 26551, 17345, 26450, 17192, 17188, 26353, 17185, 
             26350}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26369, 17213, 26466, 17364, 26565, 17505, 26672, 17651, 
             17796, 26786, 17654, 26674, 17507, 26566, 17506, 26568, 17366, 
             26467, 17365, 26469, 17220, 17217, 26373, 17215, 26371, 17209, 
             26369}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26480, 17381, 17526, 26582, 17383, 17380, 26480}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26557, 17494, 17640, 17643, 26775, 17781, 26774, 17784, 
             17931, 26881, 17933, 26884, 17787, 26778, 17646, 26667, 17500, 
             17496, 26558, 17491, 26557}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26687, 17667, 26800, 17817, 26902, 17953, 27000, 18086, 
             26998, 18087, 27082, 18212, 18361, 27172, 18364, 18367, 18519, 
             27273, 18368, 27173, 18214, 27083, 18213, 27085, 18089, 27001, 
             17956, 17954, 17820, 17818, 17668, 17665, 26687}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26704, 17686, 17836, 26813, 17839, 26814, 17841, 17844, 
             26915, 17975, 27015, 18113, 18231, 18235, 27193, 18395, 27293, 
             18542, 27406, 18695, 27405, 18699, 27521, 18835, 27652, 19002, 
             27763, 19149, 27884, 19308, 27882, 19309, 28006, 19455, 28121, 
             19602, 28254, 19751, 28387, 19904, 20071, 20075, 28623, 20192, 
             20441, 28872, 20446, 28877, 20194, 28625, 20080, 20076, 28518, 
             20074, 19907, 28389, 19752, 28255, 19603, 28122, 19457, 28007, 
             19456, 28009, 19311, 27885, 19310, 27888, 19152, 27766, 19005, 
             27655, 18839, 27524, 18702, 27408, 7404, 27296, 18399, 27196, 
             18241, 18236, 18115, 27016, 17977, 26917, 17847, 17845, 26815, 
             17843, 17690, 17688, 26707, 17687, 26706, 17685, 26704}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26768, 17775, 26874, 6930, 18050, 26970, 17927, 26876, 
             17777, 17774, 26768}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26781, 17792, 26887, 17938, 26983, 18069, 27073, 18201, 
             18342, 27158, 7157, 27075, 18071, 26985, 17940, 26889, 17798, 
             17794, 26783, 17789, 26781}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26811, 17835, 17967, 26912, 17837, 17834, 26811}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26908, 17965, 18098, 27008, 18100, 27010, 17968, 17966, 
             26910, 17964, 26908}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26976, 18060, 27067, 18193, 7259, 27252, 18334, 27152, 
             18336, 27251, 18490, 18633, 27360, 18491, 27252}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{18063, 18059, 26976}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27005, 18096, 27088, 18218, 27180, 18376, 27179, 18373, 
             27177, 18375, 27278, 18525, 18675, 27389, 18679, 27390, 18682, 
             27391, 18527, 27279, 18526, 27282, 18380, 27183, 18221, 27090, 
             18099, 18097, 27007, 18095, 27005}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27061, 18184, 18323, 27146, 18186, 7035, 27061}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{18197, 27070, 18063}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27077, 18204, 27161, 18348, 18499, 27260, 18351, 27163, 
             18205, 7052, 27077}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27093, 18226, 27187, 18382, 27186, 18385, 27285, 18532, 
             27396, 18689, 27514, 18828, 27646, 18995, 27644, 18996, 19142, 
             19144, 27879, 19304, 19447, 28005, 19305, 27880, 19146, 27759, 
             19145, 27761, 18999, 27648, 18831, 27517, 18693, 27399, 18535, 
             27287, 18389, 27190, 18230, 18225, 27093}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27108, 18257, 27208, 18418, 27309, 18565, 27427, 18722, 
             27541, 18865, 27677, 19039, 27790, 19177, 27912, 19343, 28034, 
             19485, 28144, 19625, 28280, 19785, 28413, 19936, 28541, 20101, 
             28641, 20210, 20517, 28948, 20522, 28953, 20211, 28642, 20103, 
             28542, 19938, 28415, 19787, 28282, 19627, 28146, 19487, 28036, 
             19345, 27914, 19179, 27792, 19041, 27679, 18868, 27543, 18725, 
             27430, 18569, 27312, 18421, 18419, 18259, 18255, 27108}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27110, 18263, 27210, 18424, 27315, 18572, 27433, 18728, 
             27547, 18871, 27681, 19043, 27795, 19184, 27918, 19349, 28040, 
             19491, 28150, 19631, 28285, 19790, 28417, 19940, 28545, 20105, 
             28643, 20212, 20535, 28966, 20540, 28971, 20214, 28645, 20107, 
             28547, 19942, 28419, 19793, 28287, 19632, 28151, 19492, 28041, 
             19351, 27919, 19350, 27920, 19187, 19185, 19044, 27682, 18873, 
             27548, 18730, 27435, 18576, 18573, 18425, 27211, 18265, 18262, 
             27110}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27138, 18317, 27239, 18478, 27351, 18619, 27467, 18776, 
             18917, 27588, 18918, 18919, 27714, 19094, 27713, 19091, 27712, 
             19093, 27831, 19234, 27953, 19390, 28068, 19533, 28191, 19678, 
             28332, 19845, 28458, 19994, 28456, 19995, 28581, 20150, 20266, 
             28697, 20271, 28702, 20151, 28582, 19996, 28459, 19847, 28333, 
             19846, 28335, 19681, 28193, 19537, 28071, 19392, 27955, 19238, 
             27833, 19236, 27835, 19240, 27836, 19097, 19095, 18920, 27589, 
             18778, 27468, 18777, 27470, 18623, 18621, 27352, 18620, 18480, 
             27240, 18321, 18318, 27140, 18315, 27138}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27148, 18328, 27245, 18484, 7470, 27473, 18626, 27355, 
             18627, 27472, 18781, 27593, 18922, 27592, 18924, 27716, 19098, 
             27837, 19242, 27958, 19393, 27957, 19395, 28074, 19541, 28197, 
             19684, 28338, 19851, 20002, 28463, 20005, 28465, 19852, 28339, 
             19685, 28198, 19543, 28075, 19542, 28077, 19398, 27960, 19246, 
             27840, 19100, 27718, 18927, 27595, 18782, 27473}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{27149, 18326, 27148}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{18332, 18330, 27149}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{7259, 27155, 18197}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27170, 18360, 27268, 18513, 27377, 18662, 27496, 18808, 
             27495, 18811, 27626, 18968, 27745, 19126, 27744, 19128, 27863, 
             19280, 27983, 19422, 27982, 19424, 28098, 19570, 28226, 19719, 
             28364, 19874, 28363, 19877, 28492, 20034, 28489, 20037, 28605, 
             20174, 20357, 28788, 20362, 28793, 20367, 28798, 20372, 28803, 
             20175, 28606, 20039, 28493, 20038, 28496, 19881, 19878, 19720, 
             28227, 19572, 28099, 19571, 28101, 19427, 27985, 19281, 27864, 
             19129, 27746, 18970, 27627, 18969, 27629, 18972, 27631, 18813, 
             27497, 18812, 27499, 18668, 18665, 27379, 18664, 18516, 27270, 
             18362, 18359, 27170}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27236, 18474, 27347, 18612, 27346, 18615, 27463, 18772, 
             18910, 27583, 18912, 27585, 18774, 27465, 18617, 27349, 18476, 
             18473, 27236}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{27246, 18486, 27356, 7470}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{18485, 27248, 18332}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27367, 18649, 27485, 18798, 27615, 18955, 27614, 18957, 
             27737, 19121, 27858, 19269, 27976, 19417, 28091, 19561, 28217, 
             19709, 28216, 19710, 28356, 19869, 28483, 20025, 28482, 20028, 
             28599, 20168, 20337, 28768, 20342, 28773, 20347, 28778, 20170, 
             28601, 20030, 28485, 19872, 28358, 19712, 28218, 19711, 28221, 
             19563, 28092, 19562, 28095, 19421, 27979, 19275, 19272, 19123, 
             27738, 18959, 27617, 18801, 27487, 18651, 18648, 27367}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27385, 18674, 27502, 18815, 27501, 18817, 27635, 18979, 
             27752, 19134, 19288, 27869, 19289, 19290, 19435, 27993, 19292, 
             27870, 19291, 27873, 19136, 27754, 18987, 18984, 27637, 18981, 
             18820, 27504, 18676, 18673, 27385}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27480, 18790, 27604, 18940, 27727, 19107, 27726, 19109, 
             19253, 27848, 19256, 27850, 19111, 27729, 18942, 27606, 18792, 
             18788, 27480}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27599, 18934, 27722, 19102, 27721, 19104, 27843, 19250, 
             27963, 19400, 28080, 19548, 28203, 19692, 19855, 28344, 19693, 
             28204, 19550, 28081, 19549, 28083, 19402, 27965, 19252, 27845, 
             19106, 27724, 18937, 7581, 27599}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27609, 18948, 19113, 19115, 27852, 19263, 27971, 19410, 
             19555, 28087, 19412, 27973, 19265, 27854, 19117, 27733, 18951, 
             18949, 27610, 18945, 27609}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27658, 19009, 27769, 19155, 19314, 27892, 19156, 27770, 
             19011, 19006, 27658}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27661, 19016, 27773, 19159, 27895, 19320, 28017, 19467, 
             28015, 19468, 28128, 19609, 28264, 19767, 28398, 19917, 28526, 
             20086, 28627, 20196, 20461, 28892, 20466, 28897, 20197, 28628, 
             20088, 28527, 19919, 28400, 19769, 28266, 19612, 28130, 19469, 
             28018, 19322, 27896, 19161, 27775, 19020, 19014, 27661}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27710, 19087, 27826, 19224, 27824, 19227, 27947, 19384, 
             19528, 28065, 19386, 27948, 19385, 27950, 19229, 27828, 19089, 
             19085, 27710}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27758, 19141, 19297, 27878, 19143, 19138, 27758}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27859, 19271, 19418, 27977, 19273, 19270, 27859}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27969, 19407, 28085, 19553, 28210, 19703, 28350, 19863, 
             28475, 20016, 28474, 20018, 28593, 20162, 20320, 28751, 20325, 
             28756, 20164, 28595, 20021, 28477, 19865, 28351, 19864, 28353, 
             19704, 28211, 19556, 19554, 19409, 19406, 27969}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28000, 19446, 28116, 19595, 28250, 19747, 8151, 28248, 
             19742, 28247, 19745, 28380, 19894, 28509, 20060, 28617, 20186, 
             20411, 28842, 20187, 28618, 20061, 28510, 19896, 28381, 19895, 
             19897, 20062, 28512, 20064, 28514, 19901, 28384, 19749, 28252, 
             19598, 28118, 19448, 19445, 28000}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28013, 19463, 28126, 19607, 19759, 28263, 19608, 28127, 
             19465, 19461, 28013}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28105, 19577, 28234, 19729, 19884, 28372, 19733, 28237, 
             19580, 8036, 28105}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28109, 19583, 28241, 19735, 28239, 19738, 28375, 19890, 
             20054, 28505, 20058, 28507, 19892, 28377, 19740, 28243, 19586, 
             19581, 28109}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28258, 19756, 28391, 19908, 20078, 28520, 19913, 28395, 
             19762, 19754, 28258}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28405, 19925, 28531, 20091, 28631, 20200, 20493, 28924, 
             20201, 28632, 20092, 28532, 19927, 19924, 28405}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28452, 19988, 28579, 20148, 20249, 28680, 20149, 28580, 
             19989, 19986, 28452}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28500, 20048, 28611, 20180, 20385, 28816, 20181, 28612, 
             20049, 20045, 28500}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28503, 20052, 28613, 20182, 20394, 28825, 20184, 28615, 
             20056, 20051, 28503}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{12972, 23729}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{18485, 27246}],
            "210"],
           Annotation[#, 210, "Tooltip"]& ]}, 
         {GrayLevel[0], Opacity[0.4], 
          TagBox[
           
           TooltipBox[
            LineBox[{4836, 4837, 15297, 15461, 25223, 15464, 15466, 25305, 
             15597, 25412, 15749, 15884, 15887, 16046, 16048, 25684, 16175, 
             16047, 16044, 15885, 15882, 15747, 15745, 15595, 25303, 15462, 
             15459, 15295, 4836, 4727, 15012, 14850, 24872, 14717, 24790, 
             14557, 24676, 14555, 14559, 14719, 14720, 24874, 14852, 15015, 
             15018, 4837}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[CompressedData["
1:eJwl2ne8T/X/APAjI9fMyspeFyErIpFxkc21IoQQWVmRvffeKzJCIiN7ZBRC
cSNf+2avknGRkd/zPH5/vB7P9+ec93i93+d9zud8XDlad63fJV4QBNsjgmB+
3SDomysIKtUPgqp5gmA5j/EfFssbBM0aBMHPfDtfEGxRLsv3RN7oIPiNeXiM
A1gmMgj68z2e5nZmaxgE6fMHwSAu5FsFguCJckk+5RLHhnIxRzALczIzc3On
Ps7pqxIH830OZRUO5wlj5w/P80f5VeRexsj5Ex5ne/7OE+In5Srq7GNVFtT2
JEcxSp8jWI0XuZsX+CPzySWnnMbxW47mMo7kCr7gO+ZUvVEQzGRVTmMVzuAW
Fi0YBKkbB8FavsbvOYut3lSHn/Af/o99mgTBkEJB8AtvcFphfTcNgtmswduO
HXVuGPvynDb3tT3DOF7kE3bifG4yVjpuYAZu5U6xSLmbOs95lYP0NUqfAzma
Mfybx/gPaxp7vhzmM1GRIJjD+JzFBEz8YRBMYUumfCsIYrmOF7ieJZq5tkWD
oDizcS9jWam5uRWTD/MWt/Yi+CgIIrnYsXwsIOI5to9NGVXCHuMlpmnhOpcM
glRszZRsx75M+7b9yFms1dL1LRUEB8Uy5Q9Ym9VZlwvVOa/ufF5kBg5geg5k
F32m41Vj7jJ2TX7E6mzFOmzNQ3JMyLf4jfwLcxWXmGNNLmYd3jf3Y9bgHmNY
jBX4FityuzW7Ye228RazsQsXWeO0XMjX+TUzMj1XuharXaPG/JYH3OcZHF/t
81qfP+QaNguvIS+4tgkZy8RMLlo6t5HrmEPbtczC75iNWY31Lfsyv5x6swDv
cS/vch9rmMO75lKdpVmNZXiK/7KRNfjOWkRzDdezrLVKae2OMTmPsyMbWdsO
bMyf+TdzuRb9XJPs7Mks7MPhzOaa3eK3vMblvMqVbOJaR7vma3iKq3mcq3iC
6Vrpt7T7gYnesQf4Kq9zGROK/sp91EnDo9os1/YIv2Et1mdNNuDXxow19iJe
YiYOYkYOZnc5Z+RNc9pjbte5l9FsywZsx6PWIoK/MClL8ztrVoprudIa1mec
tf3dGj/kCZZkZRZnFHe5Nrddo528w1zsxhzswTzsxeWucSZmKvL/+6hpeL/b
F+fslUmeByM4kaP42PMjCeOYnP8yFYdznefLUG7gBc+dYjzHkqzL3zwfazOG
2zwvW3ELW3MHd4kTyg3VKRM+q1ial/g2r3ATxxjjdWPGl1Ma/udzasbzeRxn
MKn8Lyun5FXOcWwiZ3Ey53EqI5gxvCeYmUmYPHwWK8/nbabTx02m4nWmYWtr
tJlbWdC6bWY+/sD8zG091zInVzMH17A/i1j3h/yJD/gza7te5Vy3mizP83zJ
s3zOM/yPTVz3da7/Jr5nP2zku9zAcnzNfolhJ75I7hnIe/ZVPvuuv/2XlwM5
hnnsy83ivvJ2PmBejuVgdSI5iAX4QB+H9HWfv7AZO/OksVLzBNOyEjfLpSK3
sjK3cbOcm3ETt4rtylHOva7NKabj/9idzfXdlS14hA95mHEsJJdhcirIkZzA
/HJ+xN18yB/Z1v34kfuyDVtyKy8zm/t4tPt5LDO4v9eJ+8qZOI4ZOYHj1cnF
m9rs0LYN27E1O3C/MR4bay//ZSFO5jg5FeEYFuVEFue/cv/NHNqwBz9mT37C
Pjxj7hlYg7usTfXw+5G1uIe7rdnH3MW2TMZr9kQS3mBte6Mxa7Ip67IZj9tb
z+2xY3zJshzJdziG5TieO+zNN8PvIBYJz3OfvVyKP7Fs+GxgOR7iXnu/E/ew
CyP5zL2Rl/+xAAPH3+Rb4nPln9idB/grK+rrCMvzF1Zg8fC7hcXC7xZOY5Qc
p7AyJ7EKE5jbCb7CU2zDJubcig34ERvyDlNao9tMzltMwfbWcB8/4U/czzrW
eh/r8pw4H34nuT79XJeLypl4gZlZjz+re0jbDjzIw+Fz2fEDPv+q/CmPsBNb
JfN9aew0Pt9jC7m1Y3N2YEt24sfszE/YjR3Ygx3Zk5OTuua8aM4pGM151qQ+
F7ARF7MZl7Ill/PjcI1EOm1uMA1vcRB763sAe7Afu/MLdmEvdmU8c8gl95c+
5+CL8N2OT8N3PT5mRsYxPR8wLe8zHTtr/1u4RmxojQ6xAQ8ymlmsaSzf4J/s
ad0HKffhEPbjcF5zLhuvMkf4Hcqc4fOIR/TVlL+yOY+xBWPC9ecJtuYfbMO2
Iq+2fzFP+K7BCRxprDvKt0Run29zLIc6PpqDOZJDGMsU7vGLTMk1oob7fT1r
cRPrcDPrcivrhe+avKxNOl5lBl5nJt5kZt7iG8wqtokdYou2zcLnNptwEz9k
Ls+k+8zBBxzD8Z5VoziOIzmaIziWV5nOMy7KM+4HVuE6VuJGVvMc3KBcnRv5
ATexFreyHndyu7rVuZU1w+cob+o7A+8wC+8yB+8zFx8wN/OKaG32sD73cT+b
63svm/JHDkol14/d5z6n4Vn2ZZ8y9ie783P24EEmLuteEOlaew/gIccieJjJ
eJQpeIwDtOnPLzmQAzmYl4yRkbHMzMvMwivMymu8KYYpD9FmKAdxCAfzd6Y1
RgxT8zjTMIOclrAXi78rZxZmdxblER5m8TbmX84xNmYRRrMQ67MgG3AEYzmc
5zmMFxnLAe95f2prPcpbD85ngQruVeU3+YSLHFvEpCzDJCzH4dpe1sdQXuUI
XudI3uR1Y4zlNY7nDU7gTU7kLd4JQ3mcNrc5hrc4lhWNkdZY7zM1yzMNl3Ep
l3IZi8qzuGjyiectd7De++4H1uVW1uYW1mGqdp6/rCU2O7ZPmz2iofJebmIN
535UjlYuyPxirrFmi3nGncNHjHS8gTq7uZFVtdvAakxunD2MEpXEeserMInj
O5mYuxjNkhX1w1L8npu5hhu5mj8wor2cK/nO4FkeZsfK3ns7eHfgSk6t4v3u
U/sxyjOZ89mZ85hJpFCepM4EsUz9sVzK8UzuXAZ1PuMcduJc7g/7q+pcR7+h
2I+Vq3lWilOieSdjVLe3mOwD1+Ezc+BxVqrhHmJlVu3s/Y3b2KGmuXbxPsCS
fM59nF/L9e7qXaK268AD7FbHd1Q39wPbsh8/5SHntqhTjpX5lbY/6WMhDzIB
3+UrLM8uxthl7HNy+IBnWZO1eEKONVlH1HLsIvewqzY/sjvf10ciff3Cpaxh
zPeNXY2VuYNHOVx+PeQ3hl9wIgdwGodyNkfxuLo/alOddbhCn7/qOymrsJcx
9xv7klzq8k82YAOOyWot5JzFOt+x7pn5N7PyHge6Hh152/V56HrdYhybcjSb
cBz3uZ75GMkjrnM+/spVrvsKkUuk93mh/TFPJBQV7Jee9tvv9l8P9hLvO5bI
uQVivXJiVuSrrMy+6pxU/5p9251N+BobMRWbMi0P2Ofb7Pf93MGDPCxed+4j
dXrzDnvyb55lP32f5gBGGStpuKfFD8rLuIkpWZ1D1Dmv7iDGcjgvczSv8qE+
+/I+v2QcB7ItM7M1s7Ids/NTfiYGKz/jFP1MFQ2NlcWYW8Q2kdcalrGWB8Qh
cdHnKGsdKy6Jxa5BD9ckjWuW2rUbxUVM5hpXdU378w8+Yh/Xv5t9kMT+6MLE
7O3YA+d6MY4n1f2SVVhRzNfXbDFCv3MZ4VwFx79gDO+zp7af6S+R/s5zBs9x
Jj+2Hwval9e4Obv73Z5tb88edOyWY0XZloXZjiX4tvhL+Qg7q9tTm07sxRhe
5g33win3wh2e5T3G8hGv8ilv8j/+xfh15crEfMxkfMZUDLrb7/o8o++B7M3T
xv4jfKaEzwDRTT4V+JAxLCe6KC8yx2vmmpZfcIi1eGFNBjMInwfWaJjP9ZmG
9ZieK63lRGuaiW9wgGv4jWt52zWtxJv8S6xUHuxcVnWyqLtKrBYZ9PGhvsbw
CuMba6wxBzCDXG5zKXvIsbJcn/AsvzC3weZ4jn8xvfknMv83mJR3Hbvg3FD2
43ltnmobxV5crs+/9J2JgzjemAl5TQ7j5NKcmbhGjlPlnI3ZOdQcVpnLXXOq
wlrh/rWXj9vTv4lKoqDPB+35w+6Bn3mUhdmKi90bD90rERzNxEwilopHPi8P
v8dEW3Xf1iaGv7GwPqvr+6Q4Ja763NDYj8RjsV4u4+QWKcd8cp3LTWHO5tDa
XKbyLpOb43RzHcWc5h7HNexvTWpZmyDclxzM0dZuEEfyT8f+U+cD9uUqbe5p
m5XDOFmfEbxljEnGasWs3CCHmXLJzTwcLce1cn0o5+qMZn1xwpxixGTz+p2X
Wdfxqurc42oO1zanPnLoazq/D/ecMVoYawJv8FU5TJTLEL4ht7tcwT5yrib3
57zI/uY13LxieY+57Zs09k1+ZmBhZmEx5uDbzMOyLMA4ba5oO5ZDeVWfr7Au
BxqjTriGXG/sJ3JYxw1iiGP1nUug7nUO53h9XONjRum/pP5rsAzrsjyfOndT
nSmcGJa1TeRzNIfpc5O+nxrnBz5nPo7nPGsxRzyyNjOtURxnsxM7iJ3W8Ctr
WYiFOd0ab7HW0zhLFHH8LfG1c3sYqe1n2s3hk/BZYIz5+p/ASGO+4BaOkFMj
uUXI8S5Hc5q8b/EZG5tXlHk1Zw2+cOyOczM5jjM4gQ+1vSeailH6bMKx3G6M
gG+ygFgoh3TGfianeXJ7ygXsxi5in9yXmkMxFuUcc9tmnolYj5/YY7ftuVh7
bw6bsBQbs6mYq/wn77BduGe1idB2B+exhH5LiuX6/okFjd3duAv5InxWym2R
HCezkHzjyX0Hx7GFOSUz1zhO5Gxz/5svw+8Y69PI+nzGZozne+Af5+Y6N5lP
tEkR7p3w+SamKi9w7j7jq9tTuzbafcH2TOjYw/BdUZ0Z4RjhPSHaiElyaR32
wXbsKNKqE0/dWfyaj/iqPgbqr7P+hrI7Ixx74txSdWYzIV9nV33M0N8Bc03C
0iwhVliLLNbiVS61RomYRKwS34oy6pQTybX5hXPYTV+z+TkzhHkYY7n4Rjz1
OakcJsinv3ymcghncSRfc+6lOmvUXcjkjBCZw+ed7/Ne+pyn755cwD5czOPG
Tht+93CefNfLLQ/ThLnKe7RrW5r/c823uvY1WYFr7Ykj9kZOZhFfhs9peyfO
HlrGzqzKh57t90R90dez/pfw+4CRXOD7YKV3quUivogXvvd5F/zSe2HASPbz
++mY31Uv/P56JtqKtD7f9PvsSvh7VXzod9ouvyd3iMxisd+XU/3unCSe+B19
2e/px3wmpjg2TWRRL7t4pu5uNtNHOX1dF7dFO+N0EL2N9R+Ps79cXpFXfDFA
br15nonkvUKsEgvNKb+5HREpwu9FLnFsrXMVmYx/atNf22FMwoRisL5jjBGf
gehozPbijlx2y608P+J+ue4RucTXcp9rLjPEf+Z21TwHczwHcoi4phzP+dmi
jvrzuFAsUc6vj0CfB1gh/B0u7or9jkWxDY86l4BvsaD4Stt62ibiDX0nCH/f
c6yxJvN0Wfufbdgi/PeWMvoXmUWJj+X7jr0unpR2r4k2IqKV30mlzFOUEaXF
uPDfr8TLkq5R+O9l4pUW+isRBN+FfxfjWhZjbX4X/t1VPGruWjCVmKk8rJjv
eFFSeQCL80seKiovkVREiOnhvy+L+0WsgegjHjV134R/+xT3xMPw36LVOfyh
NecRzuIckUwfKcRhcVQMMcYIkSb8u4ZYHf7dThSXb0nxq1gX/u2TJ8Wr5tbU
HBOYc3flRIwQx5QnsYI1qd7S+MonHEvBXmylTVKe18dpsSH8WwrX83eWFnWU
N4V/HxKPzf97phezlMfKsRRHc3Ey74SO/yC2iDLa1tW2LKO507Fn6mbnfE7X
5j2eMd+d4b/9sjBXWY/T1iYJm3GcdYvPZ4Xlb02ncoKoqDw2/Lt0oSDY28Qz
nJ3Zh13Yl5/z9zfdk43tJ07hyoKeqSLfq9oXkLvIK2419J7DO4xkQTFOVGjk
e573HZ+d3zOFqZmJP0Raz2jrxD48nM/7EEtwQwP3Wl7fTyzE2/Wdz2OdWJHl
xHvKpfkOi7MEC7EII1mQuZiXWZmDGfkG0zI9UzA1I5iCSbhTzFXezb0il/Hz
iHpy2cQ63MicIrvYpc52kUC8zG3/aPuU8RjH5/Xsaz7mbT7gNd7ldc5Ub4O2
l5QviBuOn+EV/sFYxvAcj/IUDzKG+3iUu3iQW7mPG7mLa7mVq7iRS7mWi/gt
5/MbzuYSTudXnMx5HMtZHM9h8pwlz8GcwUGczoGcxgGcyv6cwj7a9BBDte/K
gezEfmzP3mzDz9mSXdiMHdmY7VifrVmLH7Eqm7Aio1kpHMN4Q43XncN5IFx3
/swHHCK6Kl+IZ5+oH6VdYb7PSL7L3CzNbCzB7GEe2vTVNrPy66KQ4+nZ3vHe
jrdjT6Z0LInI5XxCZmXAjHyay17jI77G+0zGv5mYN5mAV/jS+8RFPuVpxvEE
7/EkmxivlfEasWU4P/M54PgV5/fyInfyDDfzJNfzODewjnYNtftOeYU45PgS
7ucC7uYcbucMbuY2Y1TTboLP3/s8mt9yGJdzIBezZ67//39u/wdM6Mb8
             "]],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21062, 9548, 9684, 9685, 9791, 21241, 9686, 21162, 9550, 
             442}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{21064, 9547, 21062}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{21068, 9555, 9688, 21165, 9558, 9553, 21068}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21074, 9563, 21168, 9692, 21249, 9800, 21247, 9802, 
             21355, 9942, 21353, 9943, 10060, 21450, 10061, 21452, 9946, 
             21356, 9945, 21357, 9804, 21251, 9803, 21252, 9694, 21170, 9566, 
             9565, 21076, 9561, 21074}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21083, 9577, 21175, 9699, 21174, 9696, 21172, 9697, 
             21258, 9810, 21255, 9812, 21362, 9949, 21360, 9950, 21456, 10067,
              10204, 21555, 10069, 21458, 10068, 21459, 10070, 21461, 10073, 
             21463, 9953, 21365, 9819, 21261, 9816, 21263, 9701, 21176, 9700, 
             21177, 9580, 9578, 21085, 9575, 21083}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{21092, 9587, 9706, 21182, 9589, 9586, 21092}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21110, 9611, 21196, 9722, 21195, 9720, 21193, 9721, 
             21287, 9851, 21286, 9848, 21285, 9849, 9979, 21389, 9981, 21390, 
             9982, 21391, 9983, 21392, 9853, 21288, 9852, 21289, 9854, 21290, 
             9855, 21292, 9858, 21294, 704, 21197, 9616, 9615, 21115, 9614, 
             21114, 9613, 21113, 9612, 21112, 9610, 21110}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21125, 9628, 9732, 21207, 9734, 21209, 9630, 9629, 21126,
              9627, 21125}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21127, 9633, 9738, 21211, 9739, 9740, 9878, 21309, 9742, 
             21212, 9741, 21213, 617, 9638, 21132, 9636, 21130, 9634, 21128, 
             9631, 21127}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21135, 617, 9743, 9882, 21313, 9744, 21214, 9644, 9641, 
             21135}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21143, 9654, 9754, 21219, 9756, 21220, 9657, 9655, 21144,
              9653, 21143}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21188, 9713, 800, 21384, 9843, 21280, 9842, 21278, 9840, 
             21276, 9836, 21274, 9838, 21379, 903, 21480, 10092, 21478, 10089,
              21476, 10091, 21569, 10218, 21566, 10214, 21563, 10216, 21660, 
             10340, 21657, 10337, 21655, 10339, 21740, 10449, 10562, 21826, 
             10566, 21828, 10568, 21830, 10453, 21742, 10451, 21744, 10348, 
             21662, 10346, 21665, 10350, 21667, 10223, 21570, 10222, 21571, 
             10224, 21573, 10096, 21482, 10095, 21484, 10098, 21487, 9975, 
             21383, 9973, 21384}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{21189, 9712, 21188}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{9716, 9714, 21189}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21215, 9746, 9885, 21316, 9887, 9890, 10018, 21415, 
             10020, 21416, 9894, 9892, 21318, 9889, 9749, 9747, 21216, 9745, 
             21215}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{9783, 21235, 9781, 21238, 9786, 9789, 21346, 9933, 21438,
              10048, 21435, 10045, 9931, 21343, 9783}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21266, 9827, 21371, 9958, 21369, 9955, 21367, 9956, 
             21465, 10078, 10209, 21559, 10080, 21467, 10079, 21468, 10082, 
             21471, 10085, 21473, 9964, 21373, 9832, 9829, 21269, 9825, 
             21266}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{800, 21281, 9844, 21282, 9716}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21297, 9865, 21401, 9993, 21399, 9992, 21398, 9991, 
             21397, 9989, 21396, 9990, 21507, 10124, 21504, 10122, 9988, 9984,
              21393, 9986, 21501, 10118, 21499, 10116, 21497, 10115, 21496, 
             10114, 21495, 10112, 21494, 10109, 21492, 10111, 21581, 10232, 
             21579, 10229, 21577, 10230, 21675, 10356, 21672, 10358, 21753, 
             10462, 21752, 10461, 21750, 10458, 21748, 10460, 21839, 10577, 
             21838, 10576, 21836, 10574, 21834, 10570, 21832, 10572, 21930, 
             10703, 21928, 10705, 22040, 10836, 22039, 10833, 22037, 10834, 
             22121, 10948, 11107, 22239, 10951, 22123, 10949, 22125, 10953, 
             22127, 10839, 22041, 10837, 22043, 10707, 21932, 10706, 21933, 
             10708, 21935, 10711, 21937, 10713, 21939, 10715, 21941, 10580, 
             21840, 10578, 21842, 10582, 21844, 10465, 21754, 10464, 21756, 
             10466, 21757, 10364, 21677, 10363, 21679, 10366, 21681, 10367, 
             21683, 10370, 21685, 10372, 21687, 10374, 21689, 10376, 21691, 
             10379, 21694, 10382, 21697, 10384, 21699, 10244, 21586, 10243, 
             21588, 10245, 21590, 10132, 21509, 10131, 10134, 10249, 21593, 
             10251, 21595, 10253, 21596, 10255, 21598, 10258, 21600, 10260, 
             21602, 10137, 21512, 10136, 21513, 10138, 10140, 10264, 21606, 
             10141, 10139, 10006, 10004, 21408, 10003, 21407, 10002, 21406, 
             10001, 21405, 10000, 21404, 9998, 21403, 9997, 9867, 9863, 
             21297}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[LineBox[{21323, 9902, 10025, 21419, 9905, 9900, 21323}],
            
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21330, 9915, 21421, 10029, 10182, 21532, 10031, 21422, 
             9916, 9913, 21330}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21410, 10010, 21514, 10142, 10267, 21608, 10270, 21610, 
             10271, 10272, 10397, 21704, 10399, 21706, 10273, 21611, 10154, 
             10151, 21519, 10149, 21517, 10146, 21516, 10144, 10012, 10008, 
             21410}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21527, 10168, 10283, 21617, 10170, 10167, 21527}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21530, 10179, 10290, 21619, 10180, 10177, 21530}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21641, 10316, 21729, 10434, 10538, 21806, 10436, 21731, 
             10319, 10314, 21641}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21645, 10324, 21733, 10438, 21810, 10543, 10678, 21910, 
             10546, 21812, 10545, 21814, 10443, 21736, 10329, 10326, 21647, 
             10322, 21645}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21763, 10475, 21862, 10601, 21860, 10602, 10738, 21962, 
             10740, 21964, 10742, 21966, 10606, 10603, 10476, 10474, 21763}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21769, 10483, 10611, 21864, 10485, 10482, 21769}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21802, 10534, 21902, 10671, 22018, 10813, 22016, 10814, 
             22096, 10906, 22092, 10908, 22205, 11062, 11195, 22299, 11199, 
             22302, 11065, 22209, 10917, 22097, 10913, 22099, 10816, 22019, 
             10815, 22020, 10672, 21904, 10539, 10536, 21804, 10532, 21802}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21816, 10550, 21914, 10687, 10825, 22029, 10689, 21916, 
             10688, 21917, 10555, 10552, 21818, 10548, 21816}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21823, 10561, 10698, 21924, 10564, 10560, 21823}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21848, 10588, 21950, 10723, 21947, 10720, 21945, 10722, 
             22055, 10850, 22053, 10849, 22051, 10847, 22049, 10844, 22047, 
             10846, 22137, 10961, 22133, 10957, 22130, 10959, 22245, 11112, 
             22243, 11113, 11262, 22351, 11264, 22353, 11268, 22356, 11270, 
             22358, 11120, 22250, 11119, 22252, 10970, 22139, 10968, 22140, 
             10971, 22142, 10975, 22145, 10978, 22148, 10857, 22057, 10855, 
             22059, 10858, 22060, 10729, 21952, 10728, 21953, 10730, 21954, 
             10731, 21956, 10734, 21958, 10599, 10597, 21858, 10596, 21856, 
             10594, 21854, 10592, 21852, 10590, 21850, 10586, 21848}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            LineBox[{21863, 10610, 10745, 21969, 10612, 10609, 21863}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21865, 10614, 10752, 21976, 10754, 21978, 10616, 10615, 
             21866, 10613, 21865}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21867, 10619, 10758, 21982, 10621, 10617, 21867}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21912, 10683, 22026, 10822, 10932, 22109, 10824, 22028, 
             10686, 10681, 21912}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21920, 10694, 10830, 22035, 10696, 10693, 21920}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21989, 10776, 10880, 22072, 10779, 10774, 21989}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22101, 10923, 11070, 22213, 10924, 10922, 22101}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22104, 10928, 22217, 11076, 11220, 22316, 11224, 22319, 
             11081, 22220, 10933, 10930, 22106, 10926, 22104}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22152, 10984, 22259, 11125, 22256, 11127, 11284, 22370, 
             11286, 22372, 11288, 22374, 11289, 22376, 11292, 22378, 11135, 
             22264, 11134, 22265, 11136, 22267, 11139, 22268, 11001, 10998, 
             22165, 10997, 22164, 10995, 22162, 10993, 22160, 10989, 22157, 
             10986, 22154, 10982, 22152}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22168, 11004, 22269, 11141, 11298, 22384, 11300, 22386, 
             11302, 22388, 11304, 22390, 11143, 22270, 11142, 11144, 11307, 
             22393, 11309, 22394, 11311, 22395, 11312, 11313, 11439, 22492, 
             11315, 22396, 11150, 11148, 22273, 11147, 22272, 11146, 22271, 
             11145, 11015, 11012, 22176, 11010, 22174, 11008, 22172, 11006, 
             22171, 11005, 22170, 11003, 22168}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22187, 11031, 11159, 11161, 11332, 22407, 11334, 11338, 
             11455, 11457, 11624, 22634, 11626, 11630, 11737, 22718, 11632, 
             11628, 11459, 11458, 2036, 11336, 11164, 11162, 11035, 11033, 
             22189, 11029, 22187}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22211, 11068, 11207, 22306, 11071, 11067, 22211}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22232, 11098, 22334, 11240, 22332, 11242, 22459, 11406, 
             11531, 22557, 11408, 22461, 11407, 22462, 11246, 22336, 11245, 
             22338, 11104, 11101, 22235, 11096, 22232}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22303, 11206, 22435, 11379, 11496, 22528, 11381, 22436, 
             11208, 11204, 22303}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22309, 11213, 22441, 11387, 11501, 22534, 11505, 22537, 
             11390, 22445, 11222, 11216, 22312, 11211, 22309}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22342, 11253, 22468, 11413, 22466, 11414, 22564, 11540, 
             22562, 11536, 22560, 11538, 22680, 11678, 22677, 11680, 22768, 
             11801, 22766, 11803, 22886, 11963, 12082, 22975, 12085, 22977, 
             11965, 22887, 11806, 22770, 11805, 22772, 11807, 22774, 11810, 
             22776, 11687, 22682, 11685, 22684, 11543, 22565, 11542, 22567, 
             11544, 22569, 11419, 22472, 11418, 22473, 11263, 11260, 22350, 
             11259, 22348, 11255, 22345, 11251, 22342}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22363, 11278, 22482, 11428, 22481, 11427, 22479, 11424, 
             22477, 11426, 22578, 11554, 22576, 11550, 22573, 11552, 22691, 
             11693, 22689, 11694, 11822, 22786, 11826, 22788, 11829, 22791, 
             11699, 22694, 11696, 22696, 11558, 22579, 11557, 22580, 11559, 
             22582, 11562, 22584, 11564, 22586, 11430, 22483, 11429, 22484, 
             11283, 11281, 22367, 11279, 22365, 11276, 22363}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22404, 11329, 11451, 22498, 11330, 11327, 22404}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22411, 11346, 22501, 11462, 11634, 22636, 11465, 22502, 
             11348, 11344, 22411}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{11573, 22591, 11570, 22594, 11575, 22597, 11578, 22600, 
             11581, 2218, 22708, 11713, 22819, 11861, 22816, 11858, 22813, 
             11855, 22809, 11850, 22805, 11847, 22804, 11844, 11704, 22699, 
             11702, 22701, 11706, 22705, 11573}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22603, 2218, 11714, 11864, 22822, 11866, 22824, 11868, 
             22826, 11870, 22828, 11716, 22709, 11715, 22710, 11717, 11719, 
             11874, 22832, 2334, 11877, 22835, 11879, 11882, 12000, 22917, 
             12002, 22919, 12004, 22920, 11886, 11885, 22838, 11884, 22837, 
             11881, 11724, 11722, 22713, 11721, 11606, 11602, 22619, 11598, 
             22616, 11595, 22613, 11593, 22611, 11591, 22609, 11589, 22607, 
             11587, 22605, 11585, 22603}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22717, 11732, 11899, 22845, 11734, 11731, 22717}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{11770, 22744, 11767, 11773, 22869, 11945, 22950, 12050, 
             22948, 12048, 22946, 12049, 23057, 12185, 23056, 12187, 23146, 
             12315, 23270, 12471, 23269, 12472, 23358, 12584, 23356, 12587, 
             23502, 12782, 23499, 12778, 12582, 23353, 12468, 23266, 12307, 
             23137, 12305, 23139, 12309, 23142, 12182, 23052, 12180, 23055, 
             12046, 22942, 12044, 22944, 11938, 22863, 11937, 22866, 11941, 
             22867, 11770}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22793, 11833, 22904, 11984, 12104, 22997, 12107, 22999, 
             11987, 22906, 11986, 22908, 11989, 22910, 11846, 11842, 22801, 
             11838, 22798, 11835, 22795, 11831, 22793}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22839, 11889, 12006, 22921, 11891, 11887, 22839}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22846, 11904, 22923, 12013, 12155, 23033, 12015, 22924, 
             11906, 11902, 22846}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22900, 11979, 22994, 12102, 22992, 12099, 22991, 12101, 
             23095, 12233, 23094, 12230, 23093, 12231, 12363, 23189, 12364, 
             23190, 12365, 23192, 12367, 23194, 12235, 23096, 12234, 23097, 
             2638, 11982, 11977, 22900}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22915, 11997, 23012, 12120, 23010, 12117, 23008, 12119, 
             23112, 12250, 23111, 12249, 23110, 12248, 23109, 12247, 23108, 
             12246, 23106, 12243, 23104, 12245, 12388, 23207, 12389, 23208, 
             12390, 23210, 12393, 23212, 12395, 23214, 12397, 23216, 12399, 
             23218, 12401, 23220, 12252, 23113, 12251, 12253, 12404, 23223, 
             12406, 23225, 12254, 23114, 12126, 12123, 23013, 12121, 11998, 
             11995, 22915}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22972, 12080, 12214, 23081, 12081, 12079, 22972}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23016, 12129, 23115, 12255, 12409, 23228, 12411, 23230, 
             12413, 23232, 12258, 12257, 23116, 12256, 12131, 12127, 23016}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23035, 12160, 12278, 12281, 23247, 12443, 12557, 3012, 
             23335, 12444, 23249, 12285, 12282, 12164, 12162, 23036, 12158, 
             23035}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23079, 12213, 12340, 23170, 12215, 12212, 23079}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23124, 12289, 12446, 23251, 12292, 12287, 23124}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23252, 12451, 23337, 12561, 12754, 23479, 12756, 23480, 
             12564, 12563, 12453, 12449, 23252}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23287, 12490, 12615, 23379, 12491, 2834, 23287}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23328, 12536, 12711, 23462, 12713, 12715, 12890, 12893, 
             13051, 23695, 12897, 23595, 12896, 12899, 13054, 13056, 13195, 
             13197, 13340, 23881, 13342, 13343, 13490, 13492, 13628, 13630, 
             13797, 24169, 13800, 3866, 13949, 13951, 14116, 14120, 14258, 
             14261, 14411, 14414, 14569, 14570, 24794, 14730, 24878, 14861, 
             14729, 14727, 14567, 24681, 14412, 14409, 14259, 14256, 14117, 
             14114, 24382, 14111, 13947, 24265, 3866, 13632, 13631, 13496, 
             13493, 13345, 13344, 13203, 13200, 23791, 13199, 13059, 13057, 
             12903, 12900, 23597, 12898, 12726, 12722, 23466, 12718, 12540, 
             12538, 23330, 12537, 23329, 12535, 23328}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23376, 12612, 23520, 12804, 12984, 23645, 12986, 23646, 
             12806, 23522, 12616, 12614, 23377, 12610, 23376}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23425, 12666, 23562, 12841, 23558, 12843, 23674, 13018, 
             23671, 13020, 13158, 13160, 13300, 23852, 13163, 23769, 13162, 
             23771, 13164, 23772, 13025, 23679, 12854, 12849, 12669, 12664, 
             23425}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23428, 12672, 12851, 23566, 12857, 12860, 23682, 13028, 
             23775, 13166, 23773, 13167, 13305, 23857, 13307, 23858, 13309, 
             23860, 13312, 23862, 13314, 23864, 13317, 13320, 13463, 23958, 
             13465, 23960, 13324, 23869, 13323, 23870, 13180, 13176, 13038, 
             13035, 23687, 13033, 23686, 13032, 23685, 13030, 23684, 13031, 
             23776, 13168, 13029, 23683, 12864, 23570, 12863, 23572, 12866, 
             23574, 12868, 23576, 12870, 23579, 12873, 23581, 12875, 23583, 
             12877, 23585, 12698, 12695, 23450, 12693, 23448, 12690, 23447, 
             12689, 23446, 12687, 23444, 12685, 23442, 12683, 23440, 12681, 
             23437, 12678, 23434, 12674, 23431, 12670, 23428}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23454, 12702, 12881, 23589, 12883, 23591, 12706, 12703, 
             23456, 12700, 23454}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23472, 12735, 12910, 23600, 12912, 12917, 23699, 13067, 
             13213, 23795, 13215, 13218, 13355, 13357, 13507, 13510, 24064, 
             13645, 13813, 13815, 24267, 13958, 14129, 14132, 14266, 14268, 
             14426, 24583, 14428, 14431, 24684, 14578, 14739, 14742, 24882, 
             14871, 15042, 15044, 15192, 15195, 15315, 25135, 15196, 15194, 
             15046, 4637, 14743, 14741, 14581, 24685, 14433, 14430, 14270, 
             14269, 14135, 14134, 24385, 14131, 13960, 24269, 13818, 24175, 
             13647, 13646, 13512, 13509, 13359, 23884, 13222, 13220, 23797, 
             13217, 13070, 23701, 12921, 12918, 23602, 12915, 12740, 12737, 
             23473, 12734, 23472}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23493, 12772, 23622, 12956, 13097, 23715, 13099, 23717, 
             12959, 23625, 12780, 12775, 23496, 12770, 23493}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23693, 13045, 13189, 23787, 13191, 23788, 13049, 13047, 
             23694, 13044, 23693}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23782, 13183, 13325, 23871, 13185, 13181, 23782}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23794, 13209, 13348, 13351, 13499, 23979, 13353, 13350, 
             13211, 13208, 23794}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23872, 13327, 13471, 23966, 13473, 23968, 13329, 13328, 
             23873, 13326, 23872}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23876, 13334, 13479, 23973, 13481, 13484, 24056, 13622, 
             13786, 24164, 13789, 13792, 24262, 13939, 14101, 24379, 14103, 
             24381, 14105, 14107, 14250, 14252, 14401, 24576, 14254, 24472, 
             14110, 14108, 13944, 13942, 24264, 13941, 13796, 13794, 24166, 
             13791, 13624, 24057, 13487, 13485, 23974, 13482, 13338, 13336, 
             23878, 13332, 23876}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23932, 13424, 24023, 13573, 13727, 24127, 13732, 24130, 
             13577, 24025, 13429, 13425, 23933, 13422, 23932}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23980, 13503, 24061, 13638, 24171, 13806, 13953, 13954, 
             14122, 14124, 14263, 24476, 14127, 24384, 13956, 13955, 13810, 
             13808, 13642, 24062, 13504, 13501, 23980}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24019, 13567, 24119, 13714, 24117, 13716, 24213, 13872, 
             24212, 13873, 24319, 14022, 24317, 14024, 24426, 14184, 24425, 
             14185, 24513, 14314, 24512, 14316, 24613, 14478, 24720, 14622, 
             24820, 14774, 24819, 14775, 24910, 14907, 24909, 14910, 25004, 
             15078, 25083, 15225, 15356, 25164, 15227, 25084, 15226, 15229, 
             25165, 15359, 25257, 15527, 25351, 15660, 15806, 25450, 15663, 
             25352, 15661, 25355, 15531, 25260, 15363, 25168, 15361, 25171, 
             4885, 15367, 25173, 15370, 25175, 15234, 25091, 15090, 25013, 
             14926, 14924, 24917, 14921, 24916, 14922, 25010, 15087, 25089, 
             4885, 15369, 25264, 15534, 25359, 15668, 25452, 15811, 25537, 
             15953, 16103, 25629, 15957, 25539, 15955, 25542, 15817, 25456, 
             15671, 25362, 15670, 25364, 15537, 25267, 15377, 25176, 15375, 
             25178, 15238, 25094, 15094, 25015, 15092, 25017, 14931, 24921, 
             14929, 24924, 14934, 24926, 14788, 24831, 14644, 24739, 14643, 
             24740, 14500, 24630, 14499, 24632, 14337, 24532, 14336, 24534, 
             14339, 24536, 14205, 24442, 14204, 24444, 14048, 24337, 14047, 
             24339, 14050, 24341, 13897, 24234, 13895, 24236, 13743, 13740, 
             24136, 13738, 24134, 13739, 24232, 13893, 24231, 13891, 24229, 
             13892, 24336, 14045, 24335, 14046, 24441, 14203, 24440, 14200, 
             24439, 14202, 24531, 14333, 24529, 14335, 24629, 14496, 24627, 
             14498, 24737, 14639, 24734, 14636, 24732, 14637, 24826, 14781, 
             24825, 14780, 14634, 24729, 14633, 24731, 14492, 24622, 14491, 
             24624, 14329, 24522, 14327, 24525, 14197, 24435, 14196, 24438, 
             14043, 24331, 14040, 24332, 13885, 24222, 13883, 24224, 13729, 
             13725, 24124, 13721, 24122, 13723, 24220, 13880, 24219, 13881, 
             24329, 14036, 24327, 14032, 24325, 14034, 24433, 14192, 14031, 
             24322, 13878, 24216, 13876, 24218, 13720, 24121, 13569, 13568, 
             24020, 13566, 24019}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24044, 13603, 13758, 24148, 13759, 24149, 13760, 24151, 
             13762, 24153, 13764, 13766, 13922, 24255, 13925, 24257, 13927, 
             13928, 14076, 24362, 14078, 24364, 14080, 24366, 14082, 24368, 
             13931, 13930, 24258, 13929, 13777, 13774, 24157, 13772, 24156, 
             13770, 24155, 13768, 13612, 13610, 24052, 13609, 24050, 13607, 
             24049, 13606, 24047, 13604, 24046, 13602, 24044}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24241, 13905, 24348, 14060, 24347, 14058, 24344, 14059, 
             14210, 24448, 14211, 24450, 14213, 24452, 14062, 24349, 14061, 
             24350, 14063, 24351, 14064, 24352, 13909, 13908, 24244, 13907, 
             24243, 13906, 24242, 13904, 24241}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24260, 13936, 14096, 24378, 13937, 13935, 24260}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24303, 14005, 24413, 14168, 24500, 14301, 24499, 4225, 
             14464, 24708, 14609, 24812, 14763, 24900, 14894, 24899, 14896, 
             15068, 24994, 15069, 24996, 14899, 24902, 14765, 24813, 14764, 
             24814, 14612, 24710, 14468, 24604, 14303, 24502, 14170, 24415, 
             14008, 14002, 24303}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24373, 14090, 14238, 14241, 14387, 24572, 14243, 14240, 
             14092, 14088, 24373}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24388, 14141, 24479, 14273, 14438, 24587, 14440, 14444, 
             24689, 14586, 14747, 24801, 14591, 24694, 14449, 14442, 14276, 
             14274, 14142, 14140, 24388}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24429, 14190, 24518, 14323, 24516, 14319, 24515, 14321, 
             24616, 14482, 24722, 14627, 24822, 14777, 14917, 24914, 14778, 
             24823, 14630, 24725, 14629, 24727, 14487, 24619, 14485, 24620, 
             14325, 24519, 14324, 24520, 14194, 14191, 24431, 14189, 24429}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24465, 14231, 14375, 24564, 14233, 14230, 24465}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24539, 14344, 24635, 14504, 14652, 24747, 14506, 24636, 
             14505, 24639, 14348, 14345, 24541, 14342, 24539}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24568, 14382, 24667, 14538, 14691, 24777, 14693, 24779, 
             14541, 14539, 14384, 14380, 24568}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24573, 14392, 24672, 14550, 14710, 24788, 14552, 24673, 
             14393, 14390, 24573}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24580, 14420, 14572, 14575, 14733, 14736, 24880, 14866, 
             15035, 15038, 15186, 25064, 15040, 15037, 14868, 24881, 14737, 
             14735, 14576, 14574, 14423, 14418, 24580}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24600, 14461, 14604, 24706, 14607, 24707, 14463, 14462, 
             24601, 14459, 24600}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24679, 14563, 14723, 24792, 14564, 14562, 24679}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24743, 14650, 24835, 14790, 24834, 14791, 14942, 24932, 
             14945, 24934, 14793, 24836, 14792, 24837, 14653, 14651, 24745, 
             14649, 24743}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24751, 14660, 24842, 14796, 24840, 14798, 24937, 14951, 
             15108, 25029, 14954, 24938, 14952, 24940, 14801, 24844, 14663, 
             14658, 24751}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24780, 14697, 14831, 14833, 14987, 14989, 15143, 15145, 
             25119, 15282, 15435, 25217, 15437, 15440, 15578, 25297, 15442, 
             15439, 15285, 25121, 15148, 15147, 14993, 14990, 14836, 14834, 
             14701, 14698, 24781, 14696, 24780}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24784, 14704, 24870, 14839, 14994, 24969, 14997, 24971, 
             14999, 15002, 15151, 15155, 15287, 25123, 15157, 15153, 15003, 
             15001, 14843, 14841, 14708, 14705, 24785, 14702, 24784}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24806, 14756, 24893, 14881, 24892, 14885, 24987, 15059, 
             25072, 15208, 15324, 25145, 15209, 25073, 15061, 24988, 15060, 
             24989, 14886, 24894, 14758, 14755, 24806}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24816, 14768, 14901, 24905, 14770, 14767, 24816}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24877, 14856, 15021, 15024, 25061, 15173, 15300, 15303, 
             25224, 15469, 25307, 15599, 15751, 25413, 15601, 25309, 15472, 
             25225, 15304, 15302, 15175, 25062, 15025, 15023, 14858, 14855, 
             24877}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24895, 14889, 15062, 24990, 15063, 24992, 14892, 14890, 
             24897, 14888, 24895}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24912, 14914, 25005, 15080, 15228, 25085, 15082, 25007, 
             15081, 25008, 14918, 14916, 24913, 14913, 24912}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24928, 14938, 25023, 15099, 25021, 15097, 25019, 15098, 
             25096, 15242, 25182, 15379, 25181, 15380, 25268, 15539, 25367, 
             15673, 25365, 15675, 25459, 15820, 25544, 15959, 25633, 16109, 
             16249, 25733, 16111, 25635, 15963, 25546, 15961, 25549, 15822, 
             25461, 15679, 25369, 15677, 25371, 15541, 25271, 15383, 25184, 
             15382, 25187, 15249, 25099, 15247, 25102, 15105, 25024, 15103, 
             25025, 14943, 14939, 24930, 14937, 24928}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24964, 14979, 15129, 25047, 15131, 15134, 15276, 15278, 
             15427, 25213, 15429, 25215, 15431, 25216, 15280, 15279, 15140, 
             15137, 25050, 15136, 25049, 15133, 14983, 14980, 24965, 14978, 
             24964}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24973, 15009, 15160, 25056, 15010, 15007, 24973}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24977, 15029, 15178, 15180, 25131, 15306, 15474, 15476, 
             25311, 15603, 15754, 15756, 25502, 15894, 16053, 16057, 25687, 
             16181, 25787, 16350, 16477, 16479, 25972, 16629, 16756, 16758, 
             26150, 16891, 17009, 26233, 16894, 26151, 16759, 26062, 16633, 
             16631, 16480, 25874, 16354, 16352, 16183, 25688, 16058, 16055, 
             15896, 25503, 15757, 25417, 15605, 25313, 15480, 15478, 15308, 
             25133, 15184, 15182, 15032, 15030, 24978, 15028, 24977}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25057, 15166, 25126, 15291, 15454, 25221, 15292, 25127, 
             15167, 15164, 25057}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25074, 15211, 25148, 15328, 25146, 15331, 25237, 15503, 
             15630, 25331, 15633, 25333, 15507, 25240, 15335, 25150, 15334, 
             25152, 15213, 15212, 25075, 15210, 25074}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25077, 15216, 25155, 15339, 25153, 15342, 25244, 15510, 
             15641, 25337, 15645, 25339, 15513, 25247, 15345, 25156, 15217, 
             15215, 25077}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25108, 15260, 15402, 25199, 15262, 15259, 25108}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            LineBox[{25113, 4915, 15415, 25209, 15270, 15268, 25113}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25114, 15272, 15418, 25211, 15420, 15423, 25294, 15567, 
             15712, 25398, 15570, 25295, 15424, 15421, 15274, 15273, 25116, 
             15271, 25114}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25158, 15348, 25248, 15515, 15646, 25340, 15518, 25251, 
             15351, 15347, 25158}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25162, 15354, 25253, 15521, 25345, 15650, 25343, 15651, 
             25442, 15796, 25528, 15940, 25527, 15942, 25619, 16093, 25717, 
             16226, 16387, 25813, 16228, 25718, 16227, 25720, 16095, 25620, 
             15946, 25531, 15799, 25444, 15798, 25445, 15652, 25346, 15523, 
             25254, 15522, 25255, 15357, 15355, 25163, 15352, 25162}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25189, 15389, 25278, 15547, 25276, 15548, 25376, 15682, 
             25374, 15684, 25464, 15824, 25463, 15825, 25551, 15968, 25638, 
             16115, 16258, 25739, 16118, 25640, 15972, 25553, 15970, 25556, 
             15976, 25561, 15831, 25468, 15688, 25378, 15687, 25380, 15551, 
             25279, 15550, 25282, 15395, 15391, 25191, 15386, 25189}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25218, 15447, 25300, 15586, 15733, 25407, 15735, 15738, 
             25497, 15873, 16033, 25588, 16035, 25589, 15875, 25498, 15741, 
             15739, 25408, 15737, 15589, 25302, 15451, 15449, 25219, 15445, 
             25218}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25298, 15582, 25405, 15728, 15867, 15869, 16025, 16029, 
             25675, 16161, 16327, 16330, 25863, 16458, 16608, 16611, 26052, 
             16737, 26050, 16738, 16864, 26141, 16866, 16868, 26219, 16991, 
             26321, 17127, 17284, 26412, 17286, 26414, 17129, 26323, 16993, 
             26220, 16871, 16869, 26142, 16867, 16741, 26053, 16612, 16610, 
             16460, 25864, 16332, 16329, 16164, 25677, 16031, 16027, 15870, 
             25495, 15731, 15730, 15584, 15580, 25298}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{15639, 25334, 15637, 15643, 25439, 15791, 25523, 15932, 
             25521, 15933, 25612, 16086, 25709, 16210, 16085, 25611, 15931, 
             25520, 15789, 25437, 15787, 25438, 15639}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25401, 15720, 15860, 15862, 16019, 25584, 16021, 25585, 
             15865, 15863, 15724, 15722, 25403, 15719, 25401}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25433, 15783, 15926, 25517, 15786, 5190, 25433}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25515, 15925, 16079, 25608, 15927, 15921, 25515}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25524, 15938, 25615, 16089, 16220, 25714, 16090, 25616, 
             5414, 15937, 25524}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25564, 15988, 25649, 16125, 25647, 16127, 25746, 16266, 
             25744, 16268, 25840, 16417, 25839, 16418, 25931, 16561, 25930, 
             16563, 26027, 16702, 16821, 26114, 16824, 26117, 16704, 26030, 
             16568, 25933, 16566, 25935, 16571, 25938, 16421, 25843, 16273, 
             25747, 16272, 25750, 16275, 25752, 16133, 25652, 15993, 15990, 
             25566, 15986, 25564}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25626, 16101, 25726, 16236, 25724, 16239, 25820, 16397, 
             16540, 25911, 16545, 25914, 16402, 25824, 16243, 25729, 16105, 
             16100, 25626}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25678, 16167, 16334, 16336, 16463, 25866, 16338, 25784, 
             16170, 16169, 25679, 16166, 25678}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25706, 16208, 25803, 16376, 25802, 16378, 25886, 16499, 
             25982, 16651, 26074, 16777, 26073, 16778, 26162, 16910, 26248, 
             17021, 26247, 17025, 17166, 26341, 17170, 26342, 17026, 26249, 
             16912, 26163, 16911, 26164, 16779, 26075, 16653, 25983, 16652, 
             25986, 16503, 25889, 16380, 25805, 16212, 16207, 25706}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[CompressedData["
1:eJwt1Wtol2UUAPCz1ipRyGzoWmpOnbvETDdFK2WWutxNTZ1aJuaWpnM6iy6G
5IWyXdLpxKjwg7XAzEtemdM1t1ZpCV0GUVmYmX0ohmFIKATRb9iH4+/4Ps9z
znn////eN628etaqhIh4yz/VT0U8nh/xNf9l+pKINZMihnEtN/GOhyLOc+8A
+cMRm5dG1DB5csQf8v68SxQ+HXGCBzhpSkTqsoifuHhqRJ28gsvENXlCQcTs
5REv8xhvfSTitsqIHWwfGNExLeJH/8/jCuayim9a783ePO7cBufnMomJ4rra
N7PMtXWcw/VsZi9nejn7Bisrb/T5WN0ZKyKeKIw4w25OrvLZFLk3+WnXFrCU
p+w99/+50fLl8vu4Tb0keRKP6LNWvzVipvwlHmKitUR76nmTSBAvWntOzLD+
Ag8yXK/pWbe3jpvFUnmOPt/xJIvMMs9Mn/ASO/kbt5t5h2g2f1pxxKiVEW18
jyUlEYNX+R65j6+WRmRV+96mR2Qwhensz43W9thzzt67+QMHsZhNarWqmcOB
PKrXNj3z+asZOsxSxmlsMeu3Zr6XS1jrXjaJkL/GCmZYK2cmu9jMAmdnq3Fe
XBQT1W7Q4zAH6HmQqcw2w3G+wyKzpZrxe77Pde5hNzdwmPu603018ShTZvi9
rXZP7MM09mU6k5nFFI7kIOZxKE84u0eNe5jDWrU/1OMXPYdwJnebpd1MuUxn
i1mH8SQzmCXGWOvkB5zjzHBnL/Ew69Q8xHqm6TNc7NWrlQ+aI9sc+RzJj1zb
Zy2DoziCuWxw9pgav6uZyfncr9dneo5jDtvNs9NnOpV/+ozP+swv80v+xb97
vkNru+zp5GhnHnD2TM/nzwVqZqvdzWZu03OM3plmyGMW97ONheYdb95STuAp
1w5Yy+ZYbnf2uBqNPMErao7kIh7R6ws9JzCPn5rlXTMV87oZvzHvNXaxgmUs
51ye9Vu66Dc1kc+zyW+uH5PZ5m+twd9cvVgkr+FC1vEk+9pzu727+CzHq/EM
7+cFfs45eizW6yte5ZNilvy0tZ/tGcdq7lTjbdFHtKj9ih7zuJGP8Rb+47m1
2rNxpdgqr+Ilz86h8mI2e6Z2eLY+ygxe9dxt9AzeIhrlW3mFQ6xd5lBOt7eN
R1igxmC1LvB1LlX/vHygfAoP2dNqbwkHMVV0q5PCerUb5P04llu8Dy54HySz
luu9J0Yw2OU9stB7ZH7+jXfLf2N3Rhg=
             "]],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{5644, 25731, 16246, 16251, 25830, 16407, 25920, 16552, 
             26018, 16690, 26105, 16809, 26184, 16939, 26272, 17060, 26270, 
             17062, 26367, 17202, 17059, 26269, 16936, 16933, 26182, 16932, 
             16805, 26100, 16803, 26101, 16687, 26014, 16686, 26015, 16549, 
             25917, 16404, 25827, 5644}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{16255, 25735, 16253, 16260, 25836, 16415, 25928, 16558, 
             25926, 16560, 26024, 16695, 16556, 25924, 16412, 25833, 16410, 
             25834, 16255}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25767, 16297, 25853, 16437, 16584, 25946, 16586, 25948, 
             16589, 25951, 16592, 25954, 16594, 5891, 25955, 16444, 16442, 
             25856, 16440, 16309, 16305, 25773, 16301, 25770, 16298, 25768, 
             16296, 25767}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25776, 16312, 16446, 25857, 5680, 16311, 25776}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25778, 5680, 16449, 16599, 25956, 16601, 25957, 16451, 
             16450, 16317, 16314, 25778}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            LineBox[{25780, 16324, 25860, 16454, 16606, 25960, 16455, 25861, 
             16325, 16322, 25780}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25871, 16474, 25969, 16624, 26058, 16751, 26147, 16885, 
             17004, 17006, 6359, 17311, 26519, 17440, 26627, 17600, 17738, 
             26740, 17602, 26629, 17442, 26521, 17313, 26426, 17149, 17147, 
             17007, 26230, 16888, 16887, 16754, 26060, 16626, 25970, 16475, 
             16473, 25871}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25898, 16516, 25994, 16663, 26080, 16783, 16915, 26167, 
             16785, 26082, 16666, 25997, 16519, 16514, 25898}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25900, 16524, 26000, 16672, 26086, 16788, 26170, 16919, 
             17040, 26259, 16920, 26171, 16791, 26087, 16789, 26089, 16675, 
             26003, 16530, 16525, 25902, 16522, 25900}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25906, 16536, 26006, 16679, 26092, 16794, 26174, 16924, 
             17047, 26264, 16927, 26175, 16925, 26179, 16800, 26096, 16681, 
             26009, 16542, 16537, 25908, 16534, 25906}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26021, 16694, 16812, 26109, 16696, 16692, 26021}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26037, 16714, 26126, 16836, 26201, 16957, 26199, 16954, 
             26197, 16955, 26290, 17084, 26381, 17235, 26477, 17375, 26475, 
             17376, 26575, 17520, 26685, 17662, 26683, 17663, 26797, 17815, 
             26900, 6952, 18083, 18084, 27081, 18210, 18081, 26994, 6952}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{16716, 16713, 26037}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26113, 16820, 26189, 16942, 26188, 16944, 26279, 17067, 
             26277, 17068, 17218, 26375, 17222, 26376, 17072, 26281, 17070, 
             26282, 16947, 26191, 16823, 16819, 26113}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{26127, 16837, 16716}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{16841, 16838, 26127}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26135, 16850, 26212, 16971, 26211, 16970, 26209, 16968, 
             26207, 16964, 26205, 16966, 17098, 26303, 17100, 26304, 17101, 
             26306, 17104, 26308, 17106, 26310, 17108, 26312, 16973, 16972, 
             16852, 16848, 26135}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26145, 16881, 26225, 17000, 17141, 26330, 17002, 26227, 
             16883, 16880, 26145}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26202, 16962, 26294, 17086, 26293, 17087, 26383, 17236, 
             26382, 17237, 26479, 17378, 26478, 17379, 26578, 17521, 26577, 
             17522, 26686, 17666, 26799, 17816, 26901, 17952, 26999, 18085, 
             26997, 18083}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{16961, 26203, 16841}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26215, 16977, 26314, 17111, 17262, 26402, 17264, 17269, 
             26497, 17407, 26605, 17559, 26713, 17700, 26820, 17854, 17980, 
             17983, 27020, 18124, 18249, 27104, 18125, 27021, 17985, 26922, 
             17858, 26823, 17704, 26716, 17561, 26607, 17409, 26499, 17273, 
             17270, 26404, 17267, 17114, 17113, 16979, 16976, 26215}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{6116, 16983, 26316, 17118, 26405, 17276, 17411, 17413, 
             17564, 26609, 17414, 26502, 17278, 26408, 17123, 17121, 16985, 
             16982, 6116}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26327, 17135, 6460, 17433, 17589, 26622, 17434, 26515, 
             17303, 26421, 17139, 17137, 26328, 17134, 26327}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26363, 6398, 17358, 26461, 17204, 17200, 26363}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26368, 17212, 26465, 17363, 26564, 17504, 26671, 17650, 
             17795, 26785, 17653, 26673, 17652, 26675, 17509, 26567, 17508, 
             26569, 17367, 26468, 17219, 17216, 26372, 17214, 26370, 17208, 
             26368}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{17295, 26416, 17292, 26418, 17297, 17300, 26512, 17430, 
             26619, 17586, 26731, 17726, 26843, 17883, 26932, 18003, 17881, 
             26842, 17725, 6672, 17428, 26509, 17295}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26424, 17307, 17437, 26517, 17308, 17306, 26424}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26458, 17356, 26556, 17493, 26664, 17642, 26773, 17783, 
             26880, 17932, 18061, 26977, 18064, 26978, 17935, 26883, 17786, 
             26777, 17645, 26666, 17499, 17495, 17357, 17354, 26458}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26507, 17423, 26616, 17580, 26726, 17720, 26836, 17873, 
             17995, 17998, 27027, 18137, 18264, 18267, 27213, 18428, 27316, 
             18575, 27434, 18729, 18872, 18874, 27683, 19045, 19186, 27796, 
             19046, 27684, 18875, 27549, 18731, 27436, 18577, 27318, 18432, 
             18429, 18268, 18266, 18139, 27029, 18000, 26930, 17878, 26839, 
             17722, 26728, 17583, 17582, 17425, 17422, 26507}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26538, 17464, 26645, 17622, 26757, 17756, 26756, 17758, 
             17915, 26867, 17917, 26868, 17760, 26758, 17624, 26647, 17466, 
             17463, 26538}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26598, 17547, 26705, 17684, 26703, 17681, 26701, 17683, 
             26810, 17832, 26808, 17833, 26909, 17963, 26907, 17961, 26906, 
             17962, 27006, 18094, 27004, 18092, 27002, 18093, 27087, 18217, 
             27178, 18372, 27176, 18374, 27277, 18524, 27386, 18672, 27384, 
             18670, 27382, 18671, 27500, 18816, 27634, 18978, 27751, 19133, 
             27868, 19286, 27867, 19287, 27990, 19429, 27989, 19431, 28104, 
             19576, 28233, 19728, 28370, 19886, 28502, 20044, 28499, 20047, 
             28610, 20179, 20384, 28815, 20389, 28820, 20393, 28824, 20183, 
             28614, 20055, 20050, 19888, 28371, 19732, 28236, 19579, 28106, 
             19578, 28107, 19433, 27991, 19432, 19434, 28108, 19582, 28240, 
             19734, 28238, 19737, 28374, 19889, 20053, 28504, 20057, 28506, 
             19891, 28376, 19739, 28242, 19585, 28110, 19584, 28112, 19437, 
             27992, 19436, 27994, 19295, 27872, 19135, 27753, 18986, 18983, 
             27636, 18980, 18819, 27503, 18818, 27506, 18681, 27388, 18678, 
             18684, 27508, 18823, 18985, 27640, 18825, 27509, 18824, 27511, 
             18686, 27393, 18529, 27281, 18379, 27182, 18220, 27089, 18219, 
             27091, 18222, 18224, 27185, 18384, 27284, 18531, 27395, 18688, 
             27513, 18827, 27645, 18994, 27643, 18991, 27641, 18993, 27757, 
             19140, 19296, 27877, 19300, 19303, 28002, 19444, 27999, 19442, 
             27998, 19440, 27996, 19441, 28114, 19589, 28113, 19591, 28246, 
             19744, 28379, 19893, 28508, 20059, 28616, 20185, 20410, 28841, 
             20415, 28846, 20419, 28850, 20188, 28619, 20065, 28511, 20063, 
             28513, 19900, 28383, 19748, 28251, 19597, 28117, 19596, 28119, 
             19452, 28004, 19450, 19454, 19600, 19601, 28253, 19750, 28386, 
             19902, 28385, 19903, 20069, 20072, 28622, 20191, 20436, 28867, 
             20440, 28871, 20445, 28876, 20193, 28624, 20079, 8375, 28517, 
             19905, 28388, 19906, 20073, 28517}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{26599, 17546, 26598}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{17551, 17549, 26599}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{17596, 26626, 17593, 17598, 26737, 17736, 26851, 17892, 
             26940, 18016, 18151, 18153, 27121, 18285, 27222, 18448, 27328, 
             18593, 27446, 18746, 27562, 18889, 19061, 19063, 27811, 19203, 
             27931, 19364, 27929, 19362, 19200, 27808, 19199, 27810, 19062, 
             19059, 18887, 27560, 18743, 27444, 18591, 27326, 18446, 18443, 
             18280, 27118, 18149, 27036, 18014, 18011, 17888, 26846, 17887, 
             26849, 17734, 26735, 17596}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26632, 17606, 26742, 17742, 26855, 17900, 26945, 18023, 
             18160, 27042, 18025, 26947, 17903, 26857, 17744, 26743, 17607, 
             17605, 26632}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{26708, 17689, 17551}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{17692, 17691, 26708}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26780, 17791, 26886, 17937, 26982, 18067, 26980, 18068, 
             27072, 18200, 18341, 18344, 18497, 27257, 18346, 27157, 18345, 
             27159, 18202, 27074, 18070, 26984, 17939, 26888, 17797, 17793, 
             26782, 17788, 26780}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26812, 17840, 26914, 17969, 26911, 17970, 18103, 18108, 
             27096, 18229, 27189, 18388, 27286, 18534, 27398, 18692, 27516, 
             18830, 27647, 18998, 27760, 19147, 19306, 27881, 19307, 27883, 
             19148, 27762, 19001, 27651, 18834, 27520, 18698, 27404, 18541, 
             27291, 18538, 27292, 18394, 18391, 18234, 27099, 18112, 27014, 
             17974, 17973, 17842, 17838, 26812}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26816, 17846, 26916, 17976, 18114, 18118, 27102, 18240, 
             27195, 18398, 27295, 18544, 27409, 18700, 27407, 18701, 27523, 
             18838, 27654, 19004, 27765, 19151, 27887, 19313, 28010, 19458, 
             28008, 19459, 28123, 19604, 28256, 19753, 8375}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26854, 17897, 26943, 18019, 27039, 18156, 27123, 18288, 
             18450, 18452, 27331, 18597, 27449, 18751, 27566, 18893, 19067, 
             27696, 19069, 27697, 18895, 27568, 18754, 18752, 18599, 27333, 
             18454, 27224, 18290, 27124, 18158, 18157, 18021, 26944, 17898, 
             17895, 26854}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27009, 18102, 18223, 27092, 18104, 18101, 27009}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            LineBox[{27079, 18208, 27167, 18356, 27266, 18509, 27373, 18655, 
             27370, 18657, 27491, 18806, 27620, 18963, 27741, 19125, 19278, 
             27862, 19127, 27743, 18967, 27623, 18966, 27625, 18810, 27494, 
             18661, 27375, 18659, 27376, 18512, 18510, 18358, 27169, 18211, 
             18207, 27079}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27112, 18272, 18434, 27215, 18274, 18271, 27112}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27126, 18294, 18456, 18458, 27335, 18602, 27451, 18757, 
             27570, 18897, 19071, 19074, 19213, 27813, 19075, 19073, 18899, 
             27572, 18759, 27452, 18603, 27336, 18459, 7230, 18293, 27126}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27162, 18350, 27259, 18501, 18646, 27366, 18503, 27261, 
             18502, 27262, 18354, 18352, 27164, 18349, 27162}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27171, 18365, 18517, 27271, 18366, 18363, 27171}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27201, 18406, 27301, 18552, 27415, 18708, 27413, 18709, 
             18850, 27529, 18852, 27530, 18712, 27417, 18555, 27302, 18407, 
             18405, 27201}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27269, 18515, 18663, 27378, 18518, 18514, 27269}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27362, 18636, 27479, 18789, 27603, 18938, 27602, 18939, 
             27725, 19108, 27846, 19254, 19403, 27966, 19257, 27847, 19255, 
             27849, 19110, 27728, 18941, 27605, 18791, 27481, 18637, 18635, 
             27362}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27364, 18640, 27482, 18793, 27608, 18947, 27731, 19114, 
             19260, 19262, 27970, 19408, 19261, 19258, 27851, 19259, 27968, 
             19404, 27967, 19405, 28084, 19552, 28209, 19702, 28349, 19862, 
             28473, 20017, 28592, 20161, 20319, 28750, 20324, 28755, 20163, 
             28594, 20020, 28476, 20019, 28479, 19867, 28352, 19866, 28354, 
             19705, 28212, 19557, 28086, 19411, 27972, 19264, 27853, 19116, 
             27732, 18950, 27611, 18795, 18794, 18641, 18639, 27364}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27365, 18643, 18796, 27483, 18645, 18642, 27365}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27486, 18800, 27616, 18958, 19122, 27739, 18960, 27618, 
             18803, 18799, 27486}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27662, 19019, 27774, 19160, 19321, 19324, 28019, 19471, 
             28131, 19610, 28129, 19611, 28265, 19768, 28399, 19918, 20087, 
             28528, 19920, 28401, 19771, 28267, 19770, 28268, 19613, 28132, 
             19472, 28021, 19326, 27899, 19164, 27777, 19023, 19021, 27663, 
             19017, 27662}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28115, 19593, 19746, 28249, 19594, 19592, 28115}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28516, 20068, 28620, 20189, 20429, 28860, 20190, 28621, 
             20070, 20067, 28516}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{16961, 26202}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{17692, 26816}],
            "168"],
           Annotation[#, 168, "Tooltip"]& ]}, 
         {GrayLevel[0], Opacity[0.4], 
          TagBox[
           
           TooltipBox[
            LineBox[{2402, 2510, 22964, 11958, 22881, 11954, 22878, 11955, 
             12068, 22963, 12070, 22964}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{5017, 5126, 25290, 15561, 25291, 15408, 15405, 15265, 
             15263, 25110, 15264, 25200, 5017, 25289, 15403, 25198, 15404, 
             25288, 15558, 25287, 15559, 15696, 25386, 15697, 25388, 15560, 
             25289}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[CompressedData["
1:eJwl13mUzuUeAPCvpTSksdyLCo01akZZR8QwjGVIDIMoFRFZQiFpshRxSZHD
PSgayXJDsiT7ciJLpym3rIVLV5cWbuhM3bgfxx/f83ne531+z/p75/lOpd7P
Zg0pEBHzC0XM6xjxQpWI9KyIVtUiFvML/sLa1SN6dI74lB+z0d0RTQpHjOnC
GhGHuZEVsyPK1Ix4mW/zCuveE/GGaNE1ogF/U1eP+czVZjwX8lW+xyXif8qp
2vzBhmzl2ZlsyVn8mPffG1GyW8RKJnI5b+MKzuJTyebOQxzZPWJcSsRenmXr
RyJm14r4UxS4L6JID3Nk8fv1IU74/CG/5Qc8zlWs09Maa0fs4AmmPxoxp07E
AlarG3GNO9msXkT3x6yZGWKj8kl+wlMs0SviyfrGYl++wNIN7CNns/3j5phq
P7if35eIKPyA/X7CWhpGjBClnrhR/yIL+e575rLxkxFVG0XM5Vf8hU83jjgm
GvY2b/5LzFKe/mDERd7aJOICi7N7n4hF7Mb3uZz1mtqjp/THp5mZFnFZfKbc
nv3Zjh3EXuV8VugbMbxZRA5vaR7xEhN4mBN5iJNZu59x0yMmcRzPsGQLZ/50
xBouYZ2W1ts/4iDHs0eG+TKf7QcYp5V58g/+yQmt7e8zEdXbRFSq4L0ZGNGx
bcRRsUW5U9sb9XnarNFmnchQn6V+K0/wwUER0zK9X7y9XUTNwRHruYBt26sb
EvE1y/EbLubYhyIqP+tcO+ifJfkuP+JfHnZOQyPK8maWZzEmMZFVWZo1WJYp
LM86rMQN+liir4pMZgXWYhKriGXKG9lI+5raN2UK01mbGazHNkxlezZmR6Zx
m2dX6iOZDXgvU8Qq5e3M1q6ldt3Zmj2ZyV58iH2Yxf7sxk89s9azqWzKBmzG
htfnKNYp7+az2vfS/nn24Wj258sczP3abNQ2ja34rj3eY68LsTELsCkHO4Mt
zmYQh4pm6m7y3V4uYqZnm+mjNVtwEw/wFeMMN85kjuLrfIkzOZ5zOIl52m7z
TBt24BJ9fq7vomzJBLbmSGPvNo8z3pUsZvGId2iTd6kPN3JqxYgu6o/6vNnn
fqzEu8QF718S+w660S5buy76+Tf3cJT+2xgn0XhfcgWzzaedeWWxA3fwKy4w
9+nm/h7f4lLO4QrO54dcwDXM5Xou5idcyq1cwZ1czd1cx73cwAPcdH1vuI0H
uZOHuJvHuZ+nmMczPMiz/IbneZQXeIKXeYb5/IF/8kcWdDddZBFeYTH+zhK8
xnPWesSacziCh+3JFXuTzmHMtWf/sXdlOIaT7eUkcco+T7LPXVmGS/3uX7f/
t/NO/lbeb1D5TeV/sJt2j4jJ2p5mQX1N0c9LLKvvc1zE4cZsYezfeJSjzGms
uR3jjyxj3jcNMwaLMomJrMJSrMGyTGF51mYS67MqG7Em01iL6azNDNZjJh/g
w2zKzkxnV2awJzP5BB9mH2axH7M5kD04lI/zOfbmKPZjYefyq7W8Yy2zeNUa
S7E/Z1hzXw4QpdWFNrOv/255mTd7Nkc/g/QznkM5iSM45XoOwmkcwxkcx9mc
yETPXtXHCn29zVtZkWOMtdC4efa+9PW951xnsdrZVGUpLnNmrzmzVB5ylhuc
aTumcaW///vdBZXYi2PdHy+KS+6T99wng9iKv7pvzrt3sjmGXfgy89xLxZnC
XPfVSvdWcxbjSffZGPfaBCawFl91740VBcU1d+QAUcZ9+LN7c7v78ydeFGXV
DfRdAe1GKw9RvoOXfLdLuwz25gH3ciHexyXu61z3dhcm8Lx7fYp7/g0edu/X
ZW/+KC/4Qn6wT1QU9X2uwIZcII84KZ+4ej3X4FAmco9cZJdoLjLkJmlsw5ly
loNyl+J8no/LaYryuFxnvZwnjZ25WW70uxzpLs7jW3KnJjwil9ospyrHFC6T
ax2WcyWwB/8mNyvI3+VrM+VuMzhNnJLL7ZLTneRu5nAYv5LznZP7PcY3uVRO
WIzJXCt3nC6HTGMtXpRjzpFzjmZJ3s61ctmDctpUjuQ++W4S6/Ij+e92eXA2
k3lOfrxPnryQzfmgaKKcyoasw7pMZi3ezXtYmdVYgUksxztZmmVYnCV5C4uz
EIvyalV/O5jP4CX+0cm7wys8x//ye/7MUzzPb3mWR3iaX/MEv+QxHuA33MMv
uZMHuIV7uIE7uYZbuJIbuIxruIgruYDLOY/vcw5z+Rbf4RucyymczamcYB2z
rW+S8itihvpxnM4cTuWLnMyRnMjhHM8hzOEzHM1+HMHeHMZeHMweHMCu7MtO
fJLt+ShbsRubszObsiMb8yGmMpN1mMEUNuPdbMwqTGVF1uUdvJ9/ZTJLsSZv
Y3UmsDILswKv+d+rHPNZmpeZyIssxp9YhD+wEE/zqr+L3zGfh3mJB3mBefyJ
n/Mc9/Esd/M0d/A7buYRruc/uZp5/ICfcwk/Yy53cT638u/cyFlczxlcw2lc
xde4nBO4mDlcyOeq3Phf8/+sf9t4
             "]],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21234, 9782, 21342, 9930, 10044, 21434, 10047, 21437, 
             9932, 21345, 9788, 9785, 21237, 9780, 21234}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21257, 9814, 890, 21363, 9952, 21364, 9818, 9815, 21260, 
             9813, 21257}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{21268, 9830, 9961, 21372, 9831, 9828, 21268}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[LineBox[{21370, 9960, 10081, 21470, 9962, 9959, 21370}],
            
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21378, 9970, 10093, 21481, 10094, 21483, 10097, 21486, 
             9974, 9972, 21382, 9971, 21381, 9969, 21378}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21400, 9995, 10133, 21510, 10135, 21511, 9999, 9996, 
             21402, 9994, 21400}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21491, 10110, 21580, 10233, 10362, 21678, 10365, 21680, 
             10235, 10234, 10113, 10108, 21491}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21498, 10119, 10236, 21582, 10237, 10238, 10378, 21693, 
             10381, 21696, 10241, 21583, 10240, 21585, 10242, 21587, 10130, 
             10128, 21508, 10126, 21506, 10123, 21503, 10121, 21502, 10120, 
             21500, 10117, 21498}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21515, 10145, 10269, 21609, 10148, 10143, 21515}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21565, 10219, 10343, 21661, 10345, 21664, 10221, 10220, 
             21568, 10217, 21565}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21659, 10342, 10450, 21741, 10344, 10341, 21659}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21674, 10360, 10463, 21755, 10361, 10359, 21674}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21735, 10441, 10544, 21813, 10442, 10440, 21735}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21798, 10527, 10666, 21898, 10529, 10526, 21798}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21949, 10726, 10854, 22058, 10727, 10725, 21949}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22054, 10852, 10974, 22144, 10977, 22147, 10856, 10853, 
             22056, 10851, 22054}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22091, 10907, 22204, 11061, 11194, 22298, 11198, 22301, 
             11064, 22208, 10916, 10911, 22095, 10905, 22091}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22132, 10962, 22246, 11114, 11267, 22355, 11117, 22247, 
             11116, 22249, 11118, 22251, 10969, 10966, 22138, 10964, 22136, 
             10960, 22132}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22156, 10991, 11131, 22262, 11133, 22263, 10996, 10992, 
             22159, 10988, 22156}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22216, 11075, 11219, 22315, 11223, 22318, 11080, 11078, 
             22219, 11074, 22216}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22225, 11090, 11233, 22327, 11091, 11089, 22225}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22234, 11102, 11244, 22337, 11103, 11100, 22234}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22258, 11129, 11285, 22371, 11287, 22373, 11132, 11130, 
             22261, 11128, 22258}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22292, 11189, 22427, 11370, 22519, 11486, 22516, 11488, 
             22651, 2275, 11756, 22735, 11654, 22652, 11653, 22653, 11491, 
             22521, 11490, 22523, 11375, 22431, 11196, 11192, 22295, 11186, 
             22292}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22311, 11218, 22443, 11385, 22440, 11386, 11500, 22533, 
             11504, 22536, 11389, 22444, 11221, 11215, 22311}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22321, 11229, 11397, 11398, 11522, 22549, 11400, 22453, 
             11235, 11232, 22324, 11227, 22321}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22344, 11257, 22469, 11415, 11541, 22566, 11417, 22470, 
             11416, 22471, 11261, 11258, 22347, 11254, 22344}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22540, 11514, 22664, 11665, 11780, 22751, 11783, 22754, 
             11668, 22666, 11520, 11516, 22544, 11512, 22540}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22575, 11555, 22692, 11695, 11828, 22790, 11698, 22693, 
             11556, 11553, 22575}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            LineBox[{22590, 11572, 22704, 11709, 11849, 22808, 11854, 22812, 
             11857, 22815, 11860, 22818, 11712, 22707, 11584, 11580, 22599, 
             11577, 22596, 11574, 22593, 11569, 22590}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22615, 11600, 11718, 22711, 11720, 22712, 11605, 11601, 
             22618, 11597, 22615}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22679, 11683, 11804, 22771, 11684, 11682, 22679}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22732, 11754, 22858, 11927, 22856, 11929, 12032, 22934, 
             12034, 22936, 12037, 22939, 11931, 11930, 11757, 2275, 22732}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22743, 11769, 11943, 22868, 11772, 11766, 22743}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22781, 11819, 22895, 11971, 22893, 11972, 12094, 22987, 
             12097, 22989, 11974, 22896, 11821, 11817, 22781}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22797, 11840, 11985, 22907, 11988, 22909, 11845, 11841, 
             22800, 11837, 22797}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22865, 11942, 12047, 22947, 11944, 11940, 22865}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22958, 12067, 23071, 12201, 23069, 12202, 23160, 12331, 
             12484, 23282, 12333, 23162, 12332, 23163, 12205, 23072, 12069, 
             12064, 22958}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23051, 12181, 23141, 12311, 12470, 23268, 12313, 23144, 
             12312, 23145, 12186, 12184, 23054, 12179, 23051}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23064, 12196, 12320, 23154, 12197, 12195, 23064}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23086, 12223, 12353, 23182, 12355, 23184, 12225, 12224, 
             23089, 12222, 23086}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23123, 12280, 12442, 23248, 12284, 2687, 23123}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23176, 12351, 23296, 12498, 23294, 12499, 12625, 23388, 
             12626, 23391, 12631, 23394, 12502, 23297, 12354, 12352, 23179, 
             12348, 23176}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23196, 12376, 23311, 12513, 23309, 12515, 12653, 23415, 
             12656, 23417, 12658, 23420, 12519, 23313, 12518, 23314, 12386, 
             12382, 23203, 12378, 23200, 12373, 23196}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23352, 12581, 12777, 23498, 12781, 23501, 12586, 12583, 
             23355, 12580, 23352}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23402, 12643, 12822, 23540, 12824, 23542, 12826, 23545, 
             12830, 23548, 12651, 12649, 23410, 12647, 23407, 12644, 23404, 
             12640, 23402}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23430, 12676, 12856, 23567, 12859, 23568, 12861, 23569, 
             12862, 23571, 12865, 23573, 12867, 23575, 12869, 23578, 12692, 
             12688, 23445, 12686, 23443, 12684, 23441, 12682, 23439, 12680, 
             23436, 12677, 23433, 12673, 23430}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23464, 12720, 12892, 23594, 12895, 23596, 12725, 12721, 
             23465, 12717, 23464}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23495, 12776, 12957, 23624, 12779, 12774, 23495}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23513, 12795, 12975, 23639, 12797, 12794, 23513}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{12847, 23561, 12845, 23564, 12848, 12853, 23678, 13023, 
             23677, 13024, 23770, 13161, 23768, 13159, 23767, 13157, 13019, 
             23670, 13017, 23673, 13021, 23675, 12847}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23601, 12916, 13066, 23700, 12920, 12914, 23601}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23630, 12966, 13108, 23724, 13110, 23726, 12968, 3146, 
             23633, 12965, 23630}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23651, 12993, 13134, 23746, 12994, 12992, 23651}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23721, 13107, 23815, 13255, 23812, 13256, 13392, 23907, 
             13394, 23909, 13260, 23816, 13109, 13106, 23721}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23777, 13170, 13316, 3517, 23866, 13322, 23868, 13178, 
             13175, 23781, 13172, 23779, 13169, 23777}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23843, 3497, 13439, 23943, 13289, 13288, 23843}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23900, 13387, 23997, 13540, 13677, 24087, 13679, 24088, 
             13544, 24000, 13393, 13390, 23903, 13384, 23900}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23926, 13416, 13564, 24018, 13417, 13415, 23926}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23929, 13420, 13570, 24021, 13571, 24022, 13423, 13421, 
             23931, 13419, 23929}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23936, 13435, 24028, 13578, 24027, 13579, 24131, 13734, 
             24129, 13731, 24126, 13733, 24226, 13887, 14044, 24334, 13889, 
             24227, 13888, 24228, 13890, 24230, 13736, 24132, 13735, 24133, 
             13737, 24135, 13581, 24029, 13580, 24030, 13438, 13437, 23941, 
             13436, 23939, 13433, 23936}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23984, 13519, 24069, 13654, 24176, 13825, 13653, 13651, 
             24068, 13652, 13822, 13826, 13962, 13964, 14137, 24386, 14139, 
             24387, 13965, 24271, 13829, 13827, 13655, 24070, 13522, 13517, 
             23984}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24005, 13549, 24098, 13689, 24095, 13683, 24092, 13686, 
             24195, 13854, 24297, 13999, 24410, 14165, 13997, 13989, 24292, 
             13992, 24407, 14163, 14297, 24496, 14299, 24497, 14300, 24498, 
             4118, 24412, 14004, 24302, 13860, 24199, 13858, 24200, 13693, 
             24101, 13552, 13548, 24005}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24017, 13563, 13713, 24116, 13565, 13562, 24017}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24060, 13637, 13805, 24173, 13641, 13636, 24060}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24105, 13698, 24203, 13863, 14014, 24309, 13864, 24204, 
             13701, 13697, 24105}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24112, 13711, 24210, 13867, 24207, 13868, 4018, 24315, 
             14021, 24316, 13871, 24211, 13712, 13709, 24112}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24138, 13748, 24239, 13899, 24235, 13900, 14054, 24343, 
             14057, 24346, 3931, 24240, 13752, 13749, 24140, 13745, 24138}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24154, 13769, 13924, 24256, 13771, 13767, 24154}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24215, 13877, 14030, 24324, 3917, 13875, 24215}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24245, 13911, 14065, 24354, 13913, 13910, 24245}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24284, 13981, 14155, 24401, 13983, 13979, 24284}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24305, 14012, 24417, 14172, 14305, 24504, 14174, 24418, 
             14013, 14010, 24305}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24330, 14042, 24437, 14199, 24527, 14330, 24524, 14331, 
             24625, 14493, 24623, 14494, 14635, 24733, 14638, 24736, 14497, 
             24626, 14495, 24628, 14334, 24528, 14332, 24530, 14201, 4029, 
             14039, 24330}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24338, 14052, 24445, 14206, 24443, 14207, 24537, 14340, 
             24535, 14338, 24533, 4247, 24631, 14501, 14646, 24741, 14647, 
             24742, 14648, 24744, 14503, 24633, 14502, 24634, 14343, 24538, 
             14341, 24540, 14209, 24446, 14208, 24447, 14055, 14053, 24340, 
             14049, 24338}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24423, 14182, 24510, 14311, 24507, 14312, 24610, 14475, 
             14619, 24718, 14620, 24719, 14477, 24612, 14315, 24511, 14183, 
             14181, 24423}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24449, 14214, 24546, 14351, 24545, 14349, 24543, 14346, 
             24542, 14347, 24638, 14509, 24748, 14654, 24746, 14655, 24838, 
             14794, 14949, 24936, 14797, 24839, 14795, 24841, 14659, 24750, 
             14657, 24752, 14662, 24754, 14515, 24642, 14512, 24644, 14355, 
             24547, 14354, 24548, 14217, 14215, 24451, 14212, 24449}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24489, 14291, 24596, 14457, 24702, 14600, 24808, 14759, 
             14887, 24896, 14760, 24809, 14602, 24704, 14601, 14605, 24810, 
             14761, 14891, 14893, 15066, 24993, 14895, 24898, 14762, 24811, 
             14608, 14606, 24705, 14603, 14460, 24599, 14298, 14294, 24491, 
             14288, 24489}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24555, 14367, 24654, 14524, 24651, 14525, 14677, 24766, 
             14680, 24767, 14527, 24655, 14526, 24656, 14528, 24657, 14373, 
             14370, 24561, 14368, 24558, 14364, 24555}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24586, 14439, 24687, 14583, 14744, 24797, 14585, 24688, 
             14441, 14437, 24586}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24603, 14467, 24709, 14611, 14766, 24815, 14614, 24712, 
             14613, 24713, 14471, 14470, 24606, 14466, 24603}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24615, 14481, 14626, 24724, 14628, 24726, 14486, 14484, 
             24618, 14480, 24615}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24757, 14671, 24847, 14805, 24846, 14803, 24845, 14804, 
             24943, 14957, 24942, 14955, 24939, 14956, 25030, 15109, 25105, 
             15256, 25194, 15398, 15255, 15253, 25104, 15254, 25193, 15397, 
             25283, 5116, 15396, 15393, 25192, 15394, 25281, 15552, 25381, 
             15690, 25379, 15691, 25470, 15829, 25467, 15830, 25560, 15975, 
             25555, 15978, 25642, 16116, 25639, 16117, 25738, 16257, 25737, 
             16259, 25835, 16414, 25927, 16557, 25925, 16559, 26023, 5972, 
             26108, 16811, 16693, 26020, 16555, 25922, 16554, 25923, 16411, 
             16409, 25832, 16405, 25829, 16406, 25919, 16551, 26017, 16689, 
             26104, 16808, 26183, 16938, 17063, 26274, 17064, 26275, 17065, 
             26276, 17066, 26278, 16943, 26187, 16818, 26111, 16817, 26112, 
             16700, 26025, 16699, 26026, 16562, 25929, 16416, 25838, 16263, 
             25740, 16262, 25741, 16265, 25743, 16124, 25645, 16122, 25646, 
             15985, 25562, 15984, 25563, 15833, 25471, 15832, 25472, 15834, 
             15835, 15992, 15994, 25653, 16131, 25651, 16132, 25751, 16274, 
             25749, 16276, 16422, 25844, 16423, 25845, 16278, 25753, 16277, 
             25754, 16279, 25756, 16135, 25654, 16134, 25655, 15996, 25567, 
             15838, 25474, 15695, 25385, 15557, 15555, 25286, 15556, 25384, 
             15693, 25383, 15694, 25473, 15836, 15692, 25382, 15554, 25284, 
             15553, 25285, 15400, 25195, 15399, 25196, 15401, 25197, 15258, 
             25106, 15257, 25107, 15110, 25031, 14959, 24944, 14958, 24945, 
             14960, 24948, 14966, 24952, 14810, 24850, 14679, 14675, 24764, 
             14672, 24760, 14668, 24757}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24817, 14772, 24907, 14903, 24904, 14905, 24999, 15072, 
             24998, 15073, 25080, 15222, 25160, 15349, 25159, 15350, 25250, 
             15517, 15648, 25342, 15649, 25344, 15520, 25252, 15353, 25161, 
             15224, 25081, 15223, 25082, 15077, 25001, 15076, 25003, 14909, 
             24908, 14773, 14771, 24817}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24830, 14787, 4677, 25020, 14933, 24923, 14935, 15096, 
             25020}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{24833, 14786, 24830}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{4462, 14789, 24929, 14936, 24927, 4677}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24901, 14898, 24995, 15070, 15220, 25079, 15071, 24997, 
             14900, 14897, 24901}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24933, 14947, 15106, 25027, 15107, 25028, 14950, 14948, 
             24935, 14946, 24933}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            LineBox[{24991, 15065, 15214, 25076, 15067, 15064, 24991}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25012, 4778, 15233, 25090, 15089, 15088, 25012}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25039, 15120, 15266, 25111, 15121, 15119, 25039}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25078, 15219, 15346, 25157, 15221, 15218, 25078}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25093, 15237, 15378, 25180, 15240, 15236, 25093}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25098, 15248, 25186, 15385, 25273, 15543, 15681, 25373, 
             15545, 25274, 15544, 25275, 15546, 25277, 15388, 25188, 15252, 
             15251, 25103, 15250, 25101, 15246, 25098}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25151, 15338, 25242, 15508, 15636, 25336, 15509, 25243, 
             15341, 15337, 25151}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25170, 15366, 25262, 15529, 25259, 15530, 25354, 15664, 
             25451, 15808, 25449, 15805, 15659, 25350, 15526, 15524, 25256, 
             15525, 25349, 15653, 25347, 15654, 25446, 15801, 5420, 16096, 
             25623, 15949, 25534, 15807, 15803, 25447, 15804, 25533, 5420, 
             16097, 25721, 16232, 16392, 16394, 16533, 25907, 16396, 25818, 
             16395, 25819, 16238, 25723, 16099, 25624, 16098, 25625, 15951, 
             25535, 15950, 25536, 15810, 15809, 15666, 25357, 15665, 25358, 
             15533, 25263, 15368, 15365, 25170}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25330, 15634, 25435, 15784, 25434, 15785, 25516, 15928, 
             25609, 16083, 16205, 25705, 16084, 25610, 15930, 25518, 15929, 
             25519, 15788, 25436, 15635, 15632, 25330}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25422, 15769, 15906, 15910, 25598, 16067, 16190, 25694, 
             16070, 25599, 15912, 15909, 15773, 15767, 25422}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25441, 15793, 25525, 15939, 25617, 16091, 25715, 16223, 
             25713, 16224, 25811, 16386, 25896, 16512, 16661, 25993, 16515, 
             25897, 16513, 16518, 25996, 16665, 26081, 16784, 26166, 16916, 
             26255, 17036, 17183, 26351, 17038, 26256, 16918, 26168, 16917, 
             26169, 16787, 26085, 16671, 25999, 16523, 16520, 25899, 16517, 
             16388, 25812, 16225, 25716, 16092, 25618, 15941, 25526, 15794, 
             15792, 25441}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25455, 15816, 25541, 15954, 25538, 15956, 25628, 16102, 
             25627, 16104, 25728, 16242, 25823, 16401, 25913, 16544, 25910, 
             16546, 26011, 16683, 26098, 16797, 26095, 16799, 26178, 16929, 
             26265, 17051, 26263, 17046, 16923, 26173, 16793, 26091, 16678, 
             26005, 16535, 16532, 25905, 16528, 25904, 16529, 26002, 16674, 
             26088, 16792, 26172, 16921, 6284, 26260, 17193, 26453, 17348, 
             26452, 17350, 26553, 17485, 26660, 17636, 26659, 17637, 26766, 
             17771, 17634, 26657, 17482, 26549, 17343, 26448, 17190, 26354, 
             17189, 26356, 17043, 26258, 17042, 6284}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{25458, 15815, 25455}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{15819, 15818, 25458}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25522, 15935, 25613, 16087, 16214, 25710, 16088, 25614, 
             15936, 15934, 25522}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25530, 15945, 5526, 16230, 16231, 25816, 16390, 25815, 
             16391, 25901, 16521, 16389, 25814, 16229, 25719, 5526, 25622, 
             15948, 15944, 25530}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{15958, 25543, 15819}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25548, 15966, 16113, 25637, 5433, 15965, 25548}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25576, 5451, 16145, 25664, 16008, 16007, 25576}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25630, 16107, 25730, 16245, 25826, 16403, 25916, 16547, 
             25915, 16548, 26013, 16684, 26012, 16685, 26099, 16804, 16931, 
             16935, 26268, 17057, 26362, 17199, 17056, 17054, 26267, 17055, 
             26361, 17196, 26360, 17198, 26457, 17355, 26555, 17492, 26663, 
             17641, 26772, 17782, 26879, 17929, 26878, 17930, 26974, 18054, 
             26972, 18056, 27065, 18191, 27150, 18333, 18190, 18189, 18053, 
             26968, 18052, 26971, 17928, 26877, 17779, 26769, 17778, 26770, 
             17780, 26771, 17639, 26662, 17490, 17488, 17352, 26454, 17195, 
             26358, 17049, 17044, 26260}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{25631, 16106, 25630}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{16108, 25632, 15958}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25660, 16142, 16289, 25762, 16291, 25763, 16144, 16143, 
             25662, 16141, 25660}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25707, 16211, 25804, 16379, 25888, 16502, 25985, 16654, 
             16780, 26076, 16656, 25987, 16655, 25988, 16506, 25890, 16381, 
             25806, 16215, 16213, 25708, 16209, 25707}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25759, 16287, 16429, 25849, 16290, 16286, 25759}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25769, 16303, 25854, 16439, 16588, 25950, 16591, 25953, 
             16441, 25855, 16308, 16304, 25772, 16300, 25769}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25790, 16360, 16483, 25877, 16362, 16358, 25790}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25850, 16431, 16580, 25942, 16581, 25943, 16434, 16432, 
             25851, 16430, 25850}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25934, 16572, 26032, 16706, 6087, 26194, 16826, 26116, 
             16827, 26193, 16948, 26192, 16945, 26190, 16946, 17073, 26283, 
             17075, 26285, 17078, 26287, 16950, 26194}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{25937, 16570, 25934}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{16574, 16573, 25937}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{16708, 26033, 16574}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{6087, 26119, 16828, 26121, 16708}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26200, 16959, 17085, 26292, 16960, 16958, 26200}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26250, 17028, 26343, 17171, 26439, 17332, 17460, 26537, 
             17462, 17465, 26646, 17623, 17759, 6816, 17918, 26869, 17764, 
             26760, 17762, 17767, 26870, 17920, 26962, 18044, 27059, 18182, 
             27143, 18322, 27142, 18319, 18180, 27057, 18042, 26961, 17919, 
             6816, 26759, 17626, 26649, 17471, 26540, 17336, 17334, 26440, 
             17333, 17173, 26344, 17030, 17029, 26251, 17027, 26250}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26253, 17033, 17175, 26346, 17035, 17032, 26253}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26280, 17071, 17224, 17227, 26471, 17369, 17225, 17221, 
             26374, 17223, 26470, 17368, 17510, 17511, 26676, 17655, 26790, 
             17806, 17945, 26895, 17809, 26791, 17808, 26792, 17656, 26677, 
             17513, 26570, 17370, 26472, 17228, 17226, 17074, 17069, 26280}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26297, 17094, 26387, 17242, 17386, 26483, 17243, 26389, 
             6315, 17091, 26297}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26315, 17117, 17275, 6442, 26407, 17122, 17120, 26317, 
             17116, 26315}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26364, 17203, 26460, 6507, 26560, 17497, 26559, 17498, 
             26665, 17644, 26776, 17785, 26882, 17934, 18065, 26979, 18066, 
             26981, 17936, 26885, 17790, 26779, 17648, 26668, 17647, 26669, 
             17649, 26670, 17503, 26563, 17362, 26464, 17211, 17206, 26366, 
             17201, 26364}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26397, 17256, 26495, 17398, 26493, 17399, 17548, 26600, 
             17550, 26601, 17552, 26602, 17402, 17400, 17259, 17253, 26397}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26403, 17268, 17406, 26498, 17272, 17266, 26403}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26415, 17294, 17427, 26511, 17299, 17291, 26415}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26482, 17385, 26583, 17527, 26580, 17528, 26691, 17673, 
             17825, 26803, 17827, 26804, 17674, 26693, 17532, 26584, 17387, 
             17384, 26482}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26536, 6595, 26643, 17620, 26754, 17755, 26865, 17914, 
             26957, 18035, 27052, 18172, 27051, 18173, 18307, 27134, 18308, 
             27135, 18175, 27053, 18174, 27054, 18037, 26958, 17916, 26866, 
             17757, 26755, 17621, 26644, 17461, 17459, 26536}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26543, 17475, 26651, 17628, 17765, 26762, 17630, 26653, 
             17477, 17474, 26543}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            LineBox[{26554, 17487, 17638, 26661, 17489, 17486, 26554}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26591, 17542, 26699, 17677, 26696, 17678, 17830, 26807, 
             17831, 26809, 17682, 26700, 17680, 26702, 17545, 17543, 26594, 
             17539, 26591}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26611, 17568, 26719, 17709, 17866, 17868, 17989, 17990, 
             7097, 27025, 17992, 26925, 17870, 26833, 17717, 17715, 17576, 
             17571, 26613, 17567, 26611}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26625, 17595, 26734, 17733, 26848, 17890, 26938, 18013, 
             18148, 27037, 18015, 26939, 17891, 26850, 17735, 26736, 17597, 
             17592, 26625}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26712, 17699, 17853, 17856, 17982, 26921, 17857, 26822, 
             17703, 17702, 26715, 17698, 26712}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26784, 17800, 26890, 17941, 18072, 26986, 17943, 26891, 
             17942, 26892, 17803, 17801, 26787, 17799, 26784}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26801, 17824, 17957, 26904, 17826, 17823, 26801}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26838, 17876, 26928, 17997, 18136, 27028, 17999, 26929, 
             17877, 17875, 26838}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26899, 17950, 18082, 26996, 17951, 6845, 26899}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26905, 17959, 18091, 27003, 17960, 17958, 26905}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26913, 17972, 27012, 18107, 27095, 18228, 27188, 18387, 
             18533, 18537, 27401, 18690, 27397, 18691, 27515, 18829, 18997, 
             27649, 19000, 27650, 18833, 27519, 18697, 27403, 18540, 27290, 
             18393, 27192, 18233, 27098, 18111, 6969, 17971, 26913}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27017, 18117, 27101, 18239, 27194, 18397, 27294, 18543, 
             18703, 18704, 18843, 18845, 19012, 27659, 18847, 27526, 18705, 
             27410, 18546, 18545, 18401, 27198, 18245, 18242, 18120, 18116, 
             27017}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27068, 18195, 27153, 18337, 18492, 27254, 18494, 27255, 
             18495, 18496, 18638, 27363, 18498, 27256, 18343, 18340, 27156, 
             18339, 18199, 18198, 27071, 18194, 27068}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27120, 18283, 27220, 18445, 18590, 27327, 18447, 27221, 
             18284, 18282, 27120}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27174, 18370, 27274, 18522, 18669, 27383, 18523, 27276, 
             7283, 18369, 27174}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27181, 18378, 27280, 18528, 27392, 18685, 27510, 18826, 
             18990, 27642, 7613, 27512, 18687, 27394, 18530, 27283, 18383, 
             18381, 27184, 18377, 27181}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            LineBox[{27212, 18427, 18574, 27317, 18431, 18426, 27212}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27265, 18508, 27372, 18654, 27369, 18656, 27490, 18805, 
             18962, 27622, 18965, 27624, 18809, 27493, 18660, 27374, 18511, 
             18507, 27265}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27300, 18551, 18711, 27416, 18554, 18550, 27300}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27310, 18567, 27428, 18723, 18866, 27544, 18869, 27545, 
             18726, 27431, 18570, 7315, 27313, 18566, 27310}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27357, 18629, 18783, 27475, 18631, 18628, 27357}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27387, 18680, 27505, 18821, 18982, 27638, 18822, 27507, 
             18683, 18677, 27387}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27448, 18750, 27565, 18892, 19066, 27695, 18894, 27567, 
             18753, 18749, 27448}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27522, 18837, 27653, 19003, 27764, 19150, 27886, 19312, 
             19460, 28011, 19315, 27889, 19153, 27767, 19007, 27656, 18841, 
             18836, 27522}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27553, 18879, 19050, 27687, 18880, 7539, 27553}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27596, 18930, 19101, 27719, 18932, 18928, 27596}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27607, 18944, 19112, 27730, 18946, 18943, 27607}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27612, 18953, 27734, 19118, 19266, 27855, 19119, 27735, 
             18954, 18952, 27612}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27639, 18989, 27755, 19137, 27874, 19293, 27871, 19294, 
             19438, 27995, 19439, 27997, 19298, 27875, 19139, 27756, 18992, 
             18988, 27639}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27776, 19162, 27897, 19323, 19470, 28020, 19325, 27898, 
             19163, 7734, 27776}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27793, 19181, 27915, 19346, 28037, 19488, 28147, 19628, 
             19788, 28283, 19629, 28148, 19489, 28038, 19347, 27916, 19182, 
             19180, 27793}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27829, 19231, 19388, 27951, 19232, 19230, 27829}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27838, 19244, 19396, 8011, 28078, 27961, 19248, 19247, 
             27841, 19243, 27838}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27876, 19301, 19443, 28001, 19302, 19299, 27876}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27903, 19332, 8062, 28136, 19474, 28023, 19475, 19615, 
             28136}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{19335, 19331, 27903}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27974, 19414, 28088, 19558, 19706, 28214, 19559, 28089, 
             19415, 19413, 27974}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28003, 19451, 19599, 28120, 19453, 19449, 28003}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{8062, 28026, 19335}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28053, 19511, 28169, 19654, 28308, 19822, 19972, 28439, 
             19825, 28311, 19657, 28172, 19516, 19510, 28053}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28069, 19535, 19679, 28194, 19682, 28195, 19539, 19538, 
             28072, 19534, 28069}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{28078, 19545, 19689, 28201, 19546, 8011}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28111, 19588, 28244, 19741, 8365, 28378, 19743, 28245, 
             19590, 19587, 28111}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28188, 19675, 28329, 19842, 19991, 28454, 19843, 28330, 
             19676, 19674, 28188}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28199, 19687, 19853, 28341, 19690, 19686, 28199}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28205, 19695, 19859, 28346, 19697, 19694, 28205}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28207, 19699, 28347, 19860, 20014, 28471, 20015, 28472, 
             19861, 28348, 19701, 19700, 28208, 19698, 28207}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28235, 19731, 19887, 28373, 19736, 19730, 28235}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28259, 19760, 28393, 19911, 20082, 28522, 20083, 28524, 
             19915, 28396, 19765, 19763, 28261, 19757, 28259}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28297, 19804, 19955, 28427, 19805, 19803, 28297}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28382, 19899, 20066, 28515, 8371, 19898, 28382}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28424, 19948, 20112, 28551, 19950, 19947, 28424}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{4462, 24833}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ], 
          TagBox[
           TooltipBox[LineBox[{16108, 25631}],
            "126"],
           Annotation[#, 126, "Tooltip"]& ]}, 
         {GrayLevel[0], Opacity[0.4], 
          TagBox[
           TooltipBox[LineBox[CompressedData["
1:eJwl1ntslfUdBvAv3USohQFOmAIrWC51tNgWLVKgUihgLQOpXFYQhMpFECgo
OKwwihPBMZBLqAFZWSdyyajDOkQHTmsGChirHQIbCgYMBhRhUbZCBPdZ9sfJ
5yQnJ7/3fU+e5zkdS0qLZjWKiLcSIjbcF/HLlIi8ooiBnSM28wN+zYwuEcX3
R/yNr7FX14hOI3zOMvZJjTjKN9h+ZMRNt0Us5EZeYtbPIvqPiljN19i9W0Sz
0RE7uJYPpTmHRzjvFxGL0iPe4xkOKo5Y192L37PxmIiVt0eMZ1JGxHG+zMyx
zs6MeJsnmPdAREVWRCU79Yi4xlqOHuda7oh4nSfZbHzEpDvdO1tluw+uY+GD
zu4Z8SIPsuWEiLl3RTzBhF4Rn7OKORMjUnIi1vMjfs0pvSN6lrgOruWKPhEX
eEPfiFEPRbzE7eyR634m+R6nsODuiHf5H7abHDG7X8STvD7Ps+FSZkxx3/0j
lnART7PFAL/Z1IgabmFmvut9OKKe5Swe6Hw2sHBaxJxBzucVfsfFgyMmTI/o
fE9EHWs44JGIYQURe/kJe8+IWH5vRDVbF0akzozYxUoOHhLRZlbEYW7mwp9H
dCh1XUMjfs9XeOMwz2227/I6tmUik9mcKWzFrmzNNLZlJjvwTnZiT3ZhL6ay
L9OYxwzmswcHM5uFzOEw5rKIeRzBARzNQRzDAo7jEJZwOKdyFKezmDM4lrM4
jo+xhPM5lQs5g+Us5VOcw6V8nL/lk1zNclZwCTfwWW7kclZyBV/kGm5lBXfw
Bf6JlaxhFXdxM1/nVr7JHazlTu7jn/ked/MQ/8I6/pX1rOUR7uNxHuRnrONp
1vMMP+Y5/oMXeILf8jQb+AW/45dspFcusjEvMZGX+SNe441MmKMz+EPewqZM
ZnPeypbsytZMY1tmMJl3MIW9mMpcpjOPGcxnDxbwLg5lXxYxjyOZzzEs4IMc
yhIO52SO4HQWs5Tj+Sgn8nFOZhmncQEfYTlLuYRzuex//crlLOMqLuI6Ps3m
ntdVWdkhKxt5A9uzTJY2yVSdbLVif66XuZ2yl8KW3CaTz8hmNo/I6m6ZvZe5
rJblgzLdgeP4K1m/IvMNsr+VpSzgv3XDeR0xmgtZpzuSmMYqnVKtW/oxkSd1
TpnuWcwmTOevddNhHXUd53Om7rqZ3+iyd3RaPifykK5LYHdu0YFVuvB+NuE5
HblMV67kUd2ZxYn8Uqd+oFufZwf2ZKXuPamDr+rkuSxlc+7X1VU6ewAHc7Uu
r9fpSXyM43V9Ux7X/btsQC6LuMc2XLYRP+UGrrEdfXjMluyxKW2Yxm225qjN
acJiPmuLGvGybVpto1Yxn6dt1z4btoCz+ZFtO2vjHuBz3Gr7EtmNr9rEFbYx
l+m8aDMrbOd8tuBP+Kptrbex2ZzHA7Y3mVl8xSa/ZZtHsBvP2uwDtnsT+7G3
Vx/vs9mTmcxiN6azC29jR3ZiOyazDW9hK97EJLbg9UxiApvyaifZZQO/H+43
5xWe5yWe5b/4Oc/zM57jJzzDYzzFwzzBD/lPHuLH3M8PWctD3Mv93M1a1nAv
q7mb21jDP7CaldzODXyJFaziGv6OK7mey7iOS7iWT3EVF3EFF/A3fIJLOY9P
cw7LOZMLOI3zOZlzOZGzOY4zWMyHOZKTeB8nsJBjOZCj2I9F7MthzOEQZrOA
mcxnGu9mF+bwVmazPbN4M2/nj9mNLZnKZuzMJuzIH7Adr/kf2IYNbMVv2ZwX
mciv2JhfMIGneFWPfcoGHuU3rOcF1vErvs+zPMAz3MdTfJufcg+PcRf/zp2s
4x/5PrfwXVbxHb7AN/k83+Ba7uIq1nA5X+Yz3M7F3MwF3MRHU/7/v/e/4eon
lg==
             "]],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{21505, 10127, 10239, 21584, 10129, 10125, 21505}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22094, 10912, 11063, 22207, 10915, 10910, 22094}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22135, 10965, 11115, 22248, 10967, 10963, 22135}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22430, 11373, 11489, 22522, 11374, 11372, 22430}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22543, 11517, 11666, 22665, 11519, 11515, 22543}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{22703, 11708, 11848, 22807, 11853, 22811, 11711, 11710, 
             22706, 11707, 22703}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23199, 12381, 12517, 23312, 12384, 12377, 23199}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23308, 12514, 12652, 23414, 12516, 12512, 23308}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23560, 12846, 13022, 23676, 12850, 12844, 23560}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{23778, 13173, 13319, 23865, 13321, 23867, 13177, 13174, 
             23780, 13171, 23778}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24194, 13853, 24296, 13998, 14167, 24411, 14001, 24300, 
             14000, 24301, 13859, 13857, 24198, 13852, 24194}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24238, 13902, 14056, 24345, 13903, 13901, 24238}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24406, 14162, 14296, 24495, 14166, 14161, 24406}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24544, 14352, 24640, 14511, 14661, 24753, 14514, 24641, 
             14353, 14350, 24544}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24637, 14508, 14656, 24749, 14510, 14507, 24637}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24763, 14676, 24848, 14806, 14965, 24951, 14809, 24849, 
             14678, 14674, 24763}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{24903, 14904, 15074, 25000, 15075, 25002, 14908, 14906, 
             24906, 14902, 24903}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25348, 15656, 15802, 25448, 15658, 15655, 25348}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25554, 15977, 16119, 16121, 16264, 25742, 16123, 25644, 
             15983, 15980, 25559, 15974, 25554}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25722, 16234, 16393, 25817, 16235, 16233, 25722}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25998, 16669, 16786, 26084, 16670, 16668, 25998}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26022, 16697, 16815, 26110, 16698, 5865, 26022}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26094, 16798, 26177, 16928, 17052, 26266, 16930, 26181, 
             16802, 16796, 26094}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26107, 16814, 16941, 26186, 16816, 16813, 26107}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26261, 17048, 26357, 17194, 17351, 26455, 17353, 26456, 
             17197, 26359, 17053, 17050, 26262, 17045, 26261}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26365, 17207, 26462, 17359, 26459, 17360, 17501, 26561, 
             17502, 26562, 17361, 26463, 17210, 17205, 26365}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26451, 17347, 17484, 26552, 17349, 17346, 26451}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26539, 17468, 17625, 26648, 17470, 17467, 26539}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{26722, 17713, 17867, 26831, 17869, 26832, 17716, 17714, 
             26723, 17712, 26722}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27011, 18106, 27094, 18227, 18386, 18390, 27288, 18536, 
             27400, 18694, 18832, 27518, 18696, 27402, 18539, 27289, 18392, 
             27191, 18232, 27097, 18110, 18109, 27013, 18105, 27011}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27100, 18238, 18396, 27197, 18243, 18237, 27100}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{27669, 19029, 27781, 19168, 19333, 27905, 19170, 27783, 
             19032, 19028, 27669}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28168, 19653, 19821, 28310, 19656, 19652, 28168}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28230, 19725, 28367, 19882, 20042, 28497, 19883, 28368, 
             19726, 19724, 28230}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{28392, 19910, 20081, 28521, 19914, 19909, 28392}],
            "84"],
           Annotation[#, 84, "Tooltip"]& ]}, 
         {GrayLevel[0], Opacity[0.4], 
          TagBox[
           TooltipBox[LineBox[CompressedData["
1:eJwl1n9wz3UcB/D3Kr+aZQoVImZWNm3DZGaMoTWRGRqRYURq8ys1ZJQoETnr
SNNK5KIfk1+lsi4qnKFCKTo6nX6gQ8mF6+H6Y/fY3bbP9/P5vF+v53PNRhT1
K4wIIWy7JoQpMSEs6xvCBK7gNK7kTK7hs3yH81jBhdzAxdzCl/kxX+FnLOcX
XMXdfJtVfI9fcwMP8SP+yG08xu08wa94krv5O6t4mvt5lgd5gT/yEo8xIieE
X1iNv7MWzzCK51iXF9iAl9mI17QI4XbWYAvWZhyj2Yo38S7ewmQ2ZgqbMZWx
7Mx4ZjKJWUxhL6ayDzsxh104gN05mNkcxvs5kv35MPM4jkNYxHxOYgGf4BhO
46Ms4Xg+w8mcwyf5PKdxPmdwIWdxMWdzCedyKRfwVb7EcpbyTS7jGpZxHV9n
Bd/iJq7jVlawkpu4g1u5i5Xcyx38lrv4PffyCL/hMR7iCf7AX/kT/+DP/JMn
eZ5/8CLP8srV8+S1/cwAazIiNoRIVmcdRrIe6/JWNmATNmIMb+cdjGUCWzGZ
SWzPFKaxI7v4WuH7r3jy6u+2DCE3N4RP+T6T41y7v59zMlPuMK9cz5sHuJ87
nR1LeYYJrUJIH+h8uJ6t4s3sAyGs5ot8MMHncB+L8pxla/vB48wc5DzvCmER
/2EYHMJzieaGNZLsB99i/IOeOdme8RDThjjjNs6Vt7X1t/yIOUPdSzt7ycOs
+VAIQ1NCmMjI9p6Di9hzWAjd7jYj3MGo/BAKO5hNXuJRlqV6d8NDaNpRLnAP
f2N+mnc0wr1xAed2ctaskR5Cv5GuyVVs3dk5FpgV5jOzi0zhWd4yysxneI+8
rqv54dNMGO063eQVi3mUtTKd2cNmlOWM7+5ZxsgSTufAHuaJfzFrrOfo6d3z
Ai/yqXvs3yOeIyuEnVzH9HEh3HuvOecBpjwqG7O9a0b3CqH5YzKOS9n1PnNX
6PO4gsW95UdRCNf3CWE51/ISo+63uxPsoxybwYUs5jxO4VxO4mwWsoSPcBrH
sJgFfJz5nMChLGQexzKXBezL4ezNh5jFQcxkf2Ywh53Ym3czi22YyURmMIHp
jGMHNmdbNmEiGzKe9dmS0WzGKDZhTd7Ka1mPEbyRl8eHcAP/YS2eZzWeYeBv
/Nf7+oUXeJzneISn+R1/5bc8wf08zir+xJ08zO08wEru5yes4ofcxU38kh9w
O99jJdfyY67mZq7kBpazgmV8l69wLUu5mi/xDc5nGedxOZ/jMs5mKUu4iFP5
Ah/nHI7nLBayhOM4naP5BIdzIofwMQ7mOOZxLAdwNPtyOHtxCLM4iD04kN2Y
ywzmMJ19mMpsprAn2zCTicxgPDsxjh0Yy/aMYTs2ZRIbMp712ZJ12ZxRbMJa
bMjrWJ8RvJHv25XX7EodNuV0u7TSTn1jtxqwJ8vs3Aa7F8f6XGcn59nNjvzB
rm61s33YjRV2ucpOt+AwzrTr/9r5i3Z/Dccz+2oWyIbTMiKPJdwvO6KZxFUy
pUK2dGcdHpc5M2TPbEYykXNk0wEZVZ1TWSS7GvFvWfaFTMviKO6TddXYhmtk
4JuycACv52kZOV9WLuYR2dmeo3hKpu6TrUvZnKksl70/y+AIPslJMjmaO2X1
GzK7B7O5RJYflOl1OYUjZX1tHpX9m3VAVw5kpW64rCNiWMZS3ZHBI7pkm05p
zCS+o2sO65xIDuUCXVSNV3TTEh21hD14Qnd9qcNmcDIP6LZTOm4EF3Ot7qvN
1tyoExfpxq5M5nmduVx3Tmc9NuYW3XpQx6axmHt0bww7cKNO/lw35zGRp3T2
Ht29kt2Z0e///3v/Aw7gJIc=
             "]],
            "42"],
           Annotation[#, 42, "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            LineBox[{25558, 15981, 16120, 25643, 15982, 15979, 25558}],
            "42"],
           Annotation[#, 42, "Tooltip"]& ]}, {}, {}}}],
      AspectRatio->1,
      DisplayFunction:>Identity,
      Frame->True,
      PlotRange->{{1., 108.}, {1., 84.}},
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], {192., -189.}, ImageScaled[{0.5, 0.5}], {360., 360.}],
     InsetBox[
     GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJx13btupNmWLeaELJo0aNCgQVEEQRAEwfv9Eie7urp27dqX7nP66OYJkC09
wnq0+Uh6BEEQxwDiQ0U7gS9HTas3cuSM9cf6/8f/4//6j//zf/jx48f//T/9
+PH/ff7///f/fG1//thsew/v4wN8iI/wMT7Bp/gMn+MLfImv8DW+wbf4Dt/j
B/yIn/AzfsGv+A2/4w/8ib/wZtsL//gv5PjHT3L841/I8Y9fyPGPfyXHP34l
xz/+jRz/+I0c//gLOf7xOzn+8Vdy/OMPcvzjb+T4x9/J8Y9/kOMf/9z2Bi88
+Me/M48XHvzjP5jHCw/+8V+ZxwsP/vHfmMcLD/7xn8zjhQf/+O/M44UH//if
mccLD/7xvzCPFx78439lHi88+Mf/xjxeePCP/x3bW37u4X18gA/xET7GJ/gU
n+FzfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BW/4Xf8gT/xF95se+H2V3Lc/kqO
21/JcfsrOW5/Jcftr+S4/ZUct7+S4/ZXctz+So7bX8lx+ys5bn8lx+2v5Lj9
lRy3v769wQsPbn9lHi88uP2Vebzw4PZX5vHCg9tfmccLD25/ZR4vPLj9lXm8
8OD2V+bxwoPbX5nHCw9uf2UeLzy4/ZV5vPDg9teuPcve8nMfH+BDfISP8Qk+
xWf4HF/gS3yFr/ENvsV3+B4/4Ef8hJ/xC37Fb/gdf+BP/IU32164/ZUct7+S
4/ZXctz+So7bX8lx+ys5bn8lx+2v5Lj9lRy3v5Lj9ldy3P5KjttfyXH7Kzlu
fyXH7a9vb/DCg9tfmccLD25/ZR4vPLj9lXm88OD2V+bxwoPbX5nHCw9uf2Ue
Lzy4/ZV5vPDg9lfm8cKD21+ZxwsPbn9lHi88uP2163tB9yx7y88DfIiP8DE+
waf4DJ/jC3yJr/A1vsG3+A7f4wf8iJ/wM37Br/gNv+MP/Im/8GbbC7e/kuP2
V3Lc/kqO21/JcfsrOW5/Jcftr+S4/ZUct7+S4/ZXctz+So7bX8lx+ys5bn8l
x+2v5Lj99e0NXnhw+yvzeOHB7a/M44UHt78yjxce3P7KPF54cPsr83jhwe2v
zOOFB7e/Mo8XHtz+yjxeeHD7K/N44cHtr8zjhQe3v2LPsfxe0D3L3vLzEB/h
Y3yCT/EZPscX+BJf4Wt8g2/xHb7HD/gRP+Fn/IJf8Rt+xx/4E3/hzbYXbn8l
x+2v5Lj9lRy3v5Lj9ldy3P5KjttfyXH7KzlufyXH7a/kuP2VHLe/kuP2V3Lc
/kqO21/Jcfvr2xu88OD2V+bxwoPbX5nHCw9uf2UeLzy4/ZV5vPDg9lfm8cKD
21+ZxwsPbn9lHi88uP2Vebzw4PZX5vHCg9tfmccLD25/xT534TmW3wu6Z9lb
fh7hY3yCT/EZPscX+BJf4Wt8g2/xHb7HD/gRP+Fn/IJf8Rt+xx/4E3/hzbYX
bn8lx+2v5Lj9lRy3v5Lj9ldy3P5KjttfyXH7KzlufyXH7a/kuP2VHLe/kuP2
V3Lc/kqO21/Jcfvr2xu88OD2V+bxwoPbX5nHCw9uf2UeLzy4/ZV5vPDg9lfm
8cKD21+ZxwsPbn9lHi88uP2Vebzw4PZX5vHCg9tfmccLD25/xT4nmP7y3Mrv
Ad2r7KmjHZ/H+ASf4jN8ji/wJb7C1/gG3+I7fI8f8CN+ws/4Bb/iN/yOP/An
/sKbbS/c/kqO21/JcfsrOW5/Jcftr+S4/ZUct7+S4/ZXctz+So7bX8lx+ys5
bn8lx+2v5Lj9lRy3v5Lj9te3N3jhwe2vzOOFB7e/Mo8XHtz+yjxeeHD7K/N4
4cHtr8zjhQe3vzKPFx7c/so8Xnhw+yvzeOHB7a/M44UHt78yjxce3P7a9Vx7
+svnLDy38ntA9yp76njH5wk+xWf4HF/gS3yFr/ENvsV3+B4/4Ef8hJ/xC37F
b/gdf+BP/IU32164/ZUct7+S4/ZXctz+So7bX8lx+ys5bn8lx+2v5Lj9lRy3
v5Lj9ldy3P5KjttfyXH7KzlufyXH7a9vb/DCg9tfmccLD25/ZR4vPLj9lXm8
8OD2V+bxwoPbX5nHCw9uf2UeLzy4/ZV5vPDg9lfm8cKD21+ZxwsPbn9lHi88
uP0V+zus9Ffsc4L72HMsvxd0z7K3/DzFZ/gcX+BLfIWv8Q2+xXf4Hj/gR/yE
n/ELfsVv+B1/4E/8hTfbXrj9lRy3v5Lj9ldy3P5KjttfyXH7KzlufyXH7a/k
uP2VHLe/kuP2V3Lc/kqO21/JcfsrOW5/Jcftr29v8MKD21+ZxwsPbn9lHi88
uP2Vebzw4PZX5vHCg9tfmccLD25/ZR4vPLj9lXm88OD2V+bxwoPbX5nHCw9u
f2UeLzy4/RX7u+H0l8+x+1ygz1l4buX3gO5V9tTpjs8zfI4v8CW+wtf4Bt/i
O3yPH/AjfsLP+AW/4jf8jj/wJ/7Cm20v3P5KjttfyXH7KzlufyXH7a/kuP2V
HLe/kuP2V3Lc/kqO21/JcfsrOW5/Jcftr+S4/ZUct7+S4/bXtzd44cHtr8zj
hQe3vzKPFx7c/so8Xnhw+yvzeOHB7a/M44UHt78yjxce3P7KPF54cPsr83jh
we2vzOOFB7e/Mo8XHtz+ir3nIv3l7658jt3nAn3OwnMrvwd0r7KnznZ8nuML
fImv8DW+wbf4Dt/jB/yIn/AzfsGv+A2/4w/8ib/wZtsLt7+S4/ZXctz+So7b
X8lx+ys5bn8lx+2v5Lj9lRy3v5Lj9ldy3P5KjttfyXH7KzlufyXH7a/kuP31
7Q1eeHD7K/N44cHtr8zjhQe3vzKPFx7c/so8Xnhw+yvzeOHB7a/M44UHt78y
jxce3P7KPF54cPsr83jhwe2vzOOFB7e/Yu9lSn/Fe3gfH+BD7HMXnmOdYPcs
e8vPC3yJr/A1vsG3+A7f4wf8iJ/wM37Br/gNv+MP/Im/8GbbC7e/kuP2V3Lc
/kqO21/JcfsrOW5/Jcftr+S4/ZUct7+S4/ZXctz+So7bX8lx+ys5bn8lx+2v
5Lj99e0NXnhw+yvzeOHB7a/M44UHt78yjxce3P7KPF54cPsr83jhwe2vzOOF
B7e/Mo8XHtz+yjxeeHD7K/N44cHtr8zjhQe3v2LvEUx/ea+FvxP2d1c+x+5z
gT5n4bmV3wO6V9lTFzs+L/EVvsY3+Bbf4Xv8gB/xE37GL/gVv+F3/IE/8Rfe
bHvh9ldy3P5KjttfyXH7KzlufyXH7a/kuP2VHLe/kuP2V3Lc/kqO21/Jcfsr
OW5/Jcftr+S4/ZUct7++vcELD25/ZR4vPLj9lXm88OD2V+bxwoPbX5nHCw9u
f2UeLzy4/ZV5vPDg9lfm8cKD21+ZxwsPbn9lHi88uP2Vebzw4PZX7L236S/v
YfJeC38n7O+ufI7d5wJ9zsJzK78HdK+ypy53fF7ha3yDb/EdvscP+BE/4Wf8
gl/xG37HH/gTf+HNthdufyXH7a/kuP2VHLe/kuP2V3Lc/kqO21/JcfsrOW5/
Jcftr+S4/ZUct7+S4/ZXctz+So7bX8lx++vbG7zw4PZX5vHCg9tfmccLD25/
ZR4vPLj9lXm88OD2V+bxwoPbX5nHCw9uf2UeLzy4/ZV5vPDg9lfm8cKD21+Z
xwsPbn/F3tOe/vLeQO9h8l4Lfyfs7658jt3nAn3OwnMrvwd0r7KnrnZ8XuMb
fIvv8D1+wI/4CT/jF/yK3/A7/sCf+Atvtr1w+ys5bn8lx+2v5Lj9lRy3v5Lj
9ldy3P5KjttfyXH7KzlufyXH7a/kuP2VHLe/kuP2V3Lc/kqO21/f3uCFB7e/
Mo8XHtz+yjxeeHD7K/N44cHtr8zjhQe3vzKPFx7c/so8Xnhw+yvzeOHB7a/M
44UHt78yjxce3P7KPF54cPsr9r0i6a94D+/jA3yI/d3wMT7BPifocxeeY/m9
oHuWveXnDb7Fd/geP+BH/ISf8Qt+xW/4HX/gT/yFN9teuP2VHLe/kuP2V3Lc
/kqO21/JcfsrOW5/Jcftr+S4/ZUct7+S4/ZXctz+So7bX8lx+ys5bn8lx+2v
b2/wwoPbX5nHCw9uf2UeLzy4/ZV5vPDg9lfm8cKD21+ZxwsPbn9lHi88uP2V
ebzw4PZX5vHCg9tfmccLD25/ZR4vPLj9FfserPSX97J7z633BnoPk/da+Dth
f3flc+w+F+hzFp5b+T2ge5U9dbPj8xbf4Xv8gB/xE37GL/gVv+F3/IE/8Rfe
bHvh9ldy3P5KjttfyXH7KzlufyXH7a/kuP2VHLe/kuP2V3Lc/kqO21/Jcfsr
OW5/Jcftr+S4/ZUct7++vcELD25/ZR4vPLj9lXm88OD2V+bxwoPbX5nHCw9u
f2UeLzy4/ZV5vPDg9lfm8cKD21+ZxwsPbn9lHi88uP2Vebzw4PZX7Hsb01++
R8R72b3n1nsDvYfJey38nbC/u/I5dp8L9DkLz638HtC9yp663fF5h+/xA37E
T/gZv+BX/Ibf8Qf+xF94s+2F21/JcfsrOW5/Jcftr+S4/ZUct7+S4/ZXctz+
So7bX8lx+ys5bn8lx+2v5Lj9lRy3v5Lj9ldy3P769gYvPLj9lXm88OD2V+bx
woPbX5nHCw9uf2UeLzy4/ZV5vPDg9lfm8cKD21+ZxwsPbn9lHi88uP2Vebzw
4PZX5vHCg9tfse8ZTn/53ivfI+K97N5z672B3sPkvRb+TtjfXfkcu88F+pyF
51Z+D+heZU/d7fi8xw/4ET/hZ/yCX/Ebfscf+BN/4c22F25/Jcftr+S4/ZUc
t7+S4/ZXctz+So7bX8lx+ys5bn8lx+2v5Lj9lRy3v5Lj9ldy3P5KjttfyXH7
69sbvPDg9lfm8cKD21+ZxwsPbn9lHi88uP2Vebzw4PZX5vHCg9tfmccLD25/
ZR4vPLj9lXm88OD2V+bxwoPbX5nHCw9uf8Xpr/y9nP6K9/A+PsCH2Htvj/EJ
9p4Lfzfs77B8rt3nBH3uwnMsvxd0z7K3/HzAj/gJP+MX/Irf8Dv+wJ/4C2+2
vXD7KzlufyXH7a/kuP2VHLe/kuP2V3Lc/kqO21/JcfsrOW5/Jcftr+S4/ZUc
t7+S4/ZXctz+So7bX9/e4IUHt78yjxce3P7KPF54cPsr83jhwe2vzOOFB7e/
Mo8XHtz+yjxeeHD7K/N44cHtr8zjhQe3vzKPFx7c/so8Xnhw+ytOf+Xv4fSX
7xX2PY2+98r3iHgvu/fcem+g9zB5r4W/E/Z3Vz7H7nOBPmfhuZXfA7pX2VMP
Oz4f8RN+xi/4Fb/hd/yBP/EX3mx74fZXctz+So7bX8lx+ys5bn8lx+2v5Lj9
lRy3v5Lj9ldy3P5KjttfyXH7KzlufyXH7a/kuP2VHLe/vr3BCw9uf2UeLzy4
/ZV5vPDg9lfm8cKD21+ZxwsPbn9lHi88uP2Vebzw4PZX5vHCg9tfmccLD25/
ZR4vPLj9lXm88OD2V5z+yt+76a94D+/jA3yIfa/IMT7B3iPovUzec+Hvhv0d
ls+1+5ygz114juX3gu5Z9pafT/gZv+BX/Ibf8Qf+xF94s+2F21/JcfsrOW5/
Jcftr+S4/ZUct7+S4/ZXctz+So7bX8lx+ys5bn8lx+2v5Lj9lRy3v5Lj9ldy
3P769gYvPLj9lXm88OD2V+bxwoPbX5nHCw9uf2UeLzy4/ZV5vPDg9lfm8cKD
21+ZxwsPbn9lHi88uP2Vebzw4PZX5vHCg9tfcforf8+mv+I9vI8P8CH2PVjH
+AR77633CJ5j77nwd8P+Dsvn2n1O0OcuPMfye0H3LHvLz2f8gl/xG37HH/gT
f+HNthdufyXH7a/kuP2VHLe/kuP2V3Lc/kqO21/JcfsrOW5/Jcftr+S4/ZUc
t7+S4/ZXctz+So7bX8lx++vbG7zw4PZX5vHCg9tfmccLD25/ZR4vPLj9lXm8
8OD2V+bxwoPbX5nHCw9uf2UeLzy4/ZV5vPDg9lfm8cKD21+ZxwsPbn/F6a/8
vZr+ivfwPj7Ah9j3Nh7jE+w97d57e469l8l7Lvzd8DX2uXafE/S5C8+x/F7Q
Pcve8vMFv+I3/I4/8Cf+wpttL9z+So7bX8lx+ys5bn8lx+2v5Lj9lRy3v5Lj
9ldy3P5KjttfyXH7KzlufyXH7a/kuP2VHLe/kuP217c3eOHB7a/M44UHt78y
jxce3P7KPF54cPsr83jhwe2vzOOFB7e/Mo8XHtz+yjxeeHD7K/N44cHtr8zj
hQe3vzKPFx7c/orTX/l7NP0V7+F9fIAPse8ZPsYn+BR7T/s59h5B72Xynotr
7O+wfK7d5wR97sJzLL8XdM+yt/x8xW/4HX/gT/yFN9teuP2VHLe/kuP2V3Lc
/kqO21/JcfsrOW5/Jcftr+S4/ZUct7+S4/ZXctz+So7bX8lx+ys5bn8lx+2v
b2/wwoPbX5nHCw9uf2UeLzy4/ZV5vPDg9lfm8cKD21+ZxwsPbn9lHi88uP2V
ebzw4PZX5vHCg9tfmccLD25/ZR4vPLj9Fae/8vdm+ivew/v4AB/iI3yMT/Ap
9r0i59h7b71H0HuZrrG/G/Z3WD7X7nOCPnfhOZbfC7pn2Vt+vuF3/IE/8Rfe
bHvh9ldy3P5KjttfyXH7KzlufyXH7a/kuP2VHLe/kuP2V3Lc/kqO21/Jcfsr
OW5/Jcftr+S4/ZUct7++vcELD25/ZR4vPLj9lXm88OD2V+bxwoPbX5nHCw9u
f2UeLzy4/ZV5vPDg9lfm8cKD21+ZxwsPbn9lHi88uP2Vebzw4PZXnP7K35Pp
r3gP7+MDfIiP8DE+waf4DJ9j72n33lvvEbzGN9jfDfs7LJ9r9zlBn7vwHMvv
Bd2z7C0/3/EH/sRfeLPthdtfyXH7KzlufyXH7a/kuP2VHLe/kuP2V3Lc/kqO
21/JcfsrOW5/Jcftr+S4/ZUct7+S4/ZXctz++vYGLzy4/ZV5vPDg9lfm8cKD
21+ZxwsPbn9lHi88uP2Vebzw4PZX5vHCg9tfmccLD25/ZR4vPLj9lXm88OD2
V+bxwoPbX3H6K38vpr/iPbyPD/AhPsLH+ASf4jN8jn2viPe0e+/tNb7Bt9jf
Dd9jn2v3OUGfu/Acy+8F3bPsLT8/8Cf+wpttL9z+So7bX8lx+ys5bn8lx+2v
5Lj9lRy3v5Lj9ldy3P5KjttfyXH7KzlufyXH7a/kuP2VHLe/kuP217c3eOHB
7a/M44UHt78yjxce3P7KPF54cPsr83jhwe2vzOOFB7e/Mo8XHtz+yjxeeHD7
K/N44cHtr8zjhQe3vzKPFx7c/orTX/l7MP0V7+F9fIAP8RE+xif4FJ/hc+x7
sHyviPe0X+MbfIvv8D32d1g+1+5zgj534TmW3wu6Z9lbfn7iL7zZ9sLtr+S4
/ZUct7+S4/ZXctz+So7bX8lx+ys5bn8lx+2v5Lj9lRy3v5Lj9ldy3P5Kjttf
yXH7Kzluf317gxce3P7KPF54cPsr83jhwe2vzOOFB7e/Mo8XHtz+yjxeeHD7
K/N44cHtr8zjhQe3vzKPFx7c/so8Xnhw+yvzeOHB7a84/ZW/99Jf8R7exwf4
EB/hY3yCT/EZPscX2Pdg+V6Ra3yDb/Edvsf+btjfYflcu88J+tyF51h+L+ie
ZW/5+YU32164/ZUct7+S4/ZXctz+So7bX8lx+ys5bn8lx+2v5Lj9lRy3v5Lj
9ldy3P5KjttfyXH7KzlufyXH7a9vb/DCg9tfmccLD25/ZR4vPLj9lXm88OD2
V+bxwoPbX5nHCw9uf2UeLzy4/ZV5vPDg9lfm8cKD21+ZxwsPbn9lHi88uP0V
p7/y91z6K97D+/gAH+IjfIxP8Ck+w+f4Al9i34N1jW/wLb7D99h7LvzdsL/D
8rl2nxP0uQvPsfxe0D3L3vJzs+2F21/JcfsrOW5/Jcftr+S4/ZUct7+S4/ZX
ctz+So7bX8lx+ys5bn8lx+2v5Lj9lRy3v5Lj9ldy3P769gYvPLj9lXm88OD2
V+bxwoPbX5nHCw9uf2UeLzy4/ZV5vPDg9lfm8cKD21+ZxwsPbn9lHi88uP2V
ebzw4PZX5vHCg9tfcforf4+lv+I9vI8P8CE+wsf4BJ/iM3yOL/Al9r2N1/gG
3+I7fI8fsPdc+Lthf4flc+0+J+hzF55j+b2ge5a9xefyz/8LOW5/Jcftr+S4
/ZUct7+S4/ZXctz+So7bX8lx+ys5bn8lx+2v5Lj9lRy3v5Lj9ldy3P5Kjttf
397ghQe3vzKPFx7c/so8Xnhw+yvzeOHB7a/M44UHt78yjxce3P7KPF54cPsr
83jhwe2vzOOFB7e/Mo8XHtz+yjxeeHD7K/7ur/499t1f9R7exwf4EB/hY3yC
T/EZPscX+BJf4Wt8g2/xHb7HD/gRe8/FM/Z3WD7X7nOCPnfhOZbfC7pn0Vt+
pr/65zj91Rynv5rj9FdznP5qjtNfzXH6qzlOfzXH6a/mOP3VHKe/muP0V3Oc
/mqO01/NcfqrOU5/xRu88OD0V+fxwoPTX53HCw9Of3UeLzw4/dV5vPDg9Ffn
8cKD01+dxwsPTn91Hi88OP3Vebzw4PRX5/HCg9NfnccLD05/1dm/8u/s7/6q
9/A+PsCH+Agf4xN8is/wOb7Al/gKX+MbfIvv8D1+wI/4CT9jfzfs77B8rt3n
BH3uwnMsvxfc0VPN+Vz++U9y3P0rOe7+lRx3/0qOu38lx92/kuPuX8lx96/k
uPtXctz9Kznu/pUcd/9Kjrt/Jcfdv5Lj7l/f3uCFB3f/yjxeeHD3r8zjhQd3
/8o8Xnhw96/M44UHd//KPF54cPevzOOFB3f/yjxeeHD3r8zjhQd3/8o8Xnhw
96/M44UHd/+Ks3/RX/Ue3scH+BAf4WN8gk/xGT7HF/gSX+FrfINv8R2+xw/4
ET/hZ+w9F/5u2N9h+Vy7zwn63IXnWDv2Kntq7fjs/kV/Nf8Xctz9i/5q/q/k
uPsX/dX838hx9y/6q/lfyHH3L/qr+V/Jcfcv+qv538hx9y/6q/k/yHH3L/qr
/z0e3P2L/uo8Htz9i/7qPB7c/Yv+6jwe3P2L/uo8Htz9i/7qPB7c/Yv+6jwe
3P2L/uo8Htz9i/7qPB7c/Yv+6jwe3P2L/uo8Htz9i/7qv6uzf8V7eB8f4EN8
hI/xCT7FZ/gcX+BLfIWv8Q2+xXf4Hj/gR/yEn7H3MnnPhb8b9ndYPtfuc4I+
d7Hje0D3KnuqOZ/LP/8Xctz9Kznu/pUcd/9Kjrt/Jcfdv5Lj7l/Jcfev5Lj7
V3Lc/Ss57v6VHHf/So67fyXH3b++vcELD+7+lXm88ODuX5nHCw/u/pV5vPDg
7l+ZxwsP7v6Vebzw4O5fmccLD+7+lXm88ODuX5nHCw/u/pV5vPDg7l+ZxwsP
7v4VZ/+Ks3/Fe3gfH+BDfISP8Qk+xWf4HF/gS3yFr/ENvsV3+B4/4Ef8hJ/x
C/ZeJu+58HfD/g7L59p9TnCzbc+xun8lx/aWn92/8ue4+1dy3P0rOe7+lRx3
/0qOu38lx92/kuPuX8lx96/kuPtXctz9Kznu/pUcd/9Kjrt/fXuDFx7c/Svz
eOHB3b8yjxce3P0r83jhwd2/Mo8XHtz9K/N44cHdvzKPFx7c/SvzeOHB3b8y
jxce3P0r83jhwd2/Mo8XHtz9K87+lX8nf/dXvYf38QE+xEf4GJ/gU3yGz/EF
vsRX+Brf4Ft8h+/xA37ET/gZv+BX7L1M3nPh74b9HZbPtW+27XMX3b/83s89
yl76lz//XP75L+S4+1dy3P0rOe7+lRx3/0qOu38lx92/kuPuX8lx96/kuPtX
ctz9Kznu/pUcd//69gYvPLj7V+bxwoO7f2UeLzy4+1fm8cKDu39lHi88uPtX
5vHCg7t/ZR4vPLj7V+bxwoO7f2UeLzy4+1fm8cKDu39lHi88uPtXnP2L/qr3
8D4+wIf4CB/jE3yKz/A5vsCX+Apf4xt8i+/wPX7Aj/gJP+MX/Iq9R9B7mbzn
wt8N+zuszbZ9TrD7F/3V/Cc5trf87P5FfzX/V3Lc/Yv+av5v5Lj7F/3V/C/k
uPsX/dX8r+S4+xf91fxv5Lj7F/3V/B/kuPsX/dX/Hg/u/kV/dR4P7v5Ff3Ue
D+7+RX91Hg/u/kV/dR4P7v5Ff3UeD+7+RX91Hg/u/kV/dR4P7v5Ff3UeD+7+
RX91Hg/u/kV/dR4P7v5Ff/Xfxdm/4j28jw/wIT7Cx/gEn+IzfI4v8CW+wtf4
Bt/iO3yPH/AjfsLP+AW/Yu+99R5B72Xyngt/N7zZts+1d//yuQrPqfzezz3K
Xvrlzz+Xf/6v5Lj7V3Lc/Ss57v6VHHf/So67fyXH3b+S4+5fyXH3r+S4+1dy
3P0rOe7+9e0NXnhw96/M44UHd//KPF54cPevzOOFB3f/yjxeeHD3r8zjhQd3
/8o8Xnhw96/M44UHd//KPF54cPevzOOFB3f/yjxeeHD3rzj7F/1V7+F9fIAP
8RE+xif4FJ/hc3yBL/EVvsY3+Bbf4Xv8gB/xE37GL/gVe0+79956j6D3MnnP
xWbb/g6r+xf91fwnOe7+RX/ZU2vHZ/cv+qv5r+S4+xf91fw3ctz9i/5q/js5
7v5FfzX/gxx3/6K/mv+dHHf/or+a/3PbG7zw4O5f9Ffn8eDuX/RX5/Hg7l/0
V+fx4O5f9Ffn8eDuX/RX5/Hg7l/0V+fx4O5f9Ffn8eDuX/RX5/Hg7l/0V+fx
4O5f9Ffn8eDuX/RX/92b/Svew/v4AB/iI3yMT/ApPsPn+AJf4it8jW/wLb7D
9/gBP+In/Ixf8Cv2vSLe0+69t94j6L1Mm237u+HuXz637nOAPlfhOZXf+7lH
2Uv/+uefyz//lRx3/0qOu38lx92/kuPuX8lx96/kuPtXctz9Kznu/pUcd/9K
jrt/fXuDFx7c/SvzeOHB3b8yjxce3P0r83jhwd2/Mo8XHtz9K/N44cHdvzKP
Fx7c/SvzeOHB3b8yjxce3P0r83jhwd2/Mo8XHtz9K87+RX/Ve3gfH+BDfISP
8Qk+xWf4HF/gS3yFr/ENvsV3+B4/4Ef8hJ/xC37FvgfL94p4T7v33nqP4Gbb
3nPR/Yv+av6THHf/or+a79ir7Km147P7F/3V/N/Icfcv+qv5X8hx9y/6q/lf
yXH3L/qr+d/Icfcv+qv5P8hx9y/6q/89Htz9i/7qPB7c/Yv+6jwe3P2L/uo8
Htz9i/7qPB7c/Yv+6jwe3P2L/uo8Htz9i/7qPB7c/Yv+6jwe3P2L/uo8Htz9
i/7qPB7c/Yv+6r9rs3/Fe3gfH+BDfISP8Qk+xWf4HF/gS3yFr/ENvsV3+B4/
4Ef8hJ/xC37FvrfR92D5XhHvaffe2822vZep+5e/C/Z3Vj637nOAPlfhOZXf
+7lH2Uu//vnn8s//jRx3/0qOu38lx92/kuPuX8lx96/kuPtXctz9Kznu/pUc
d//69gYvPLj7V+bxwoO7f2UeLzy4+1fm8cKDu39lHi88uPtX5vHCg7t/ZR4v
PLj7V+bxwoO7f2UeLzy4+1fm8cKDu39lHi88uPtXnP2L/qr38D4+wIf4CB/j
E3yKz/A5vsCX+Apf4xt8i+/wPX7Aj/gJP+MX/Ip9z7DvbfQ9WL5XxHvaN9v2
HsHuX/RX85/kuPsX/dV8x7lV8x17lT21dnx2/6K/mv9Gjrt/0V/NfyfH3b/o
r+Z/kOPuX/RX87+T4+5f9Ffzf257gxce3P2L/uo8Htz9i/7qPB7c/Yv+6jwe
3P2L/uo8Htz9i/7qPB7c/Yv+6jwe3P2L/uo8Htz9i/7qPB7c/Yv+6jwe3P2L
/uo8Htz9i/7qv1uzf8V7eB8f4EN8hI/xCT7FZ/gcX+BLfIWv8Q2+xXf4Hj/g
R/yEn/ELfsVv2PcM+95G34Ple0U22/be2+5f3rvkPRb+LtjfWfncus8B+lyF
51R+7+ceZS/9259/Lv/8N3Lc/Ss57v6VHHf/So67fyXH3b+S4+5fyXH3r+S4
+9e3N3jhwd2/Mo8XHtz9K/N44cHdvzKPFx7c/SvzeOHB3b8yjxce3P0r83jh
wd2/Mo8XHtz9K/N44cHdvzKPFx7c/SvzeOHB3b/i7F/0V72H9/EBPsRH+Bif
4FN8hs/xBb7EV/ga3+BbfIfv8QN+xE/4Gb/gV/yG37HvGfa9jb4Ha7Nt72nv
/kV/Nf9Jjrt/0V/NdzwX2HzHuVXzHXuVPbV2fHb/or+a/4Ucd/+iv5r/lRx3
/6K/mv+NHHf/or+a/4Mcd/+iv/rf48Hdv+ivzuPB3b/or87jwd2/6K/O48Hd
v+ivzuPB3b/or87jwd2/6K/O48Hdv+ivzuPB3b/or87jwd2/6K/O48Hdv+iv
zuPB3b/or/67NPtXvIf38QE+xEf4GJ/gU3yGz/EFvsRX+Brf4Ft8h+/xA37E
T/gZv+BX/Ibf8Qf2PcO+t3Gzbd8r0v3Le229J9B7l7zHwt8F+zsrn1v3OUCf
q/Ccyu/93KPspd/+/HP5538hx92/kuPuX8lx96/kuPtXctz9Kznu/pUcd//6
9gYvPLj7V+bxwoO7f2UeLzy4+1fm8cKDu39lHi88uPtX5vHCg7t/ZR4vPLj7
V+bxwoO7f2UeLzy4+1fm8cKDu39lHi88uPtXnP2L/qr38D4+wIf4CB/jE3yK
z/A5vsCX+Apf4xt8i+/wPX7Aj/gJP+MX/Irf8Dv+wJ/Y9wxvtu17sLp/0V/N
f5Lj7l/0V/Mdv7tqvuO5wOY7zq2a79ir7Km147P7F/3V/Hdy3P2L/mr+Bznu
/kV/Nf87Oe7+RX81/+e2N3jhwd2/6K/O48Hdv+ivzuPB3b/or87jwd2/6K/O
48Hdv+ivzuPB3b/or87jwd2/6K/O48Hdv+ivzuPB3b/or87jwd2/6K/O48Hd
v+iv/rsz+1e8h/fxAT7ER/gYn+BTfIbP8QW+xFf4Gt/gW3yH7/EDfsRP+Bm/
4Ff8ht/xB/7EX3izbd/b2P3L94Z4D7v32npPoPcueY+Fvwv2d1Y+t+5zgD5X
4TmV3/u5R9lLf/nzz+Wf/06Ou38lx92/kuPuX8lx96/kuPtXctz969sbvPDg
7l+ZxwsP7v6Vebzw4O5fmccLD+7+lXm88ODuX5nHCw/u/pV5vPDg7l+ZxwsP
7v6Vebzw4O5fmccLD+7+lXm88ODuX3H2L/qr3sP7+AAf4iN8jE/wKT7D5/gC
X+IrfI1v8C2+w/f4AT/iJ/yMX/ArfsPv+AN/4i+82bbvGe7+RX81/0mOu3/R
X8133GvRfMfvrprveC6w+Y5zq+Y79ip7au347P5FfzX/Kznu/kV/Nf8bOe7+
RX81/wc57v5Ff/W/x4O7f9FfnceDu3/RX53Hg7t/0V+dx4O7f9FfnceDu3/R
X53Hg7t/0V+dx4O7f9FfnceDu3/RX53Hg7t/0V+dx4O7f9FfnceDu3/RX/13
ZfaveA/v4wN8iI/wMT7Bp/gMn+MLfImv8DW+wbf4Dt/jB/yIn/AzfsGv+A2/
4w/8ib/wZtsLd//yvYy+58r3hngPu/faek+g9y55j4W/C/Z3Vj637nOAPlfh
OZXf+7lH2Uu///nn8s//So67fyXH3b+S4+5fyXH3r+S4+9e3N3jhwd2/Mo8X
Htz9K/N44cHdvzKPFx7c/SvzeOHB3b8yjxce3P0r83jhwd2/Mo8XHtz9K/N4
4cHdvzKPFx7c/SvzeOHB3b/i7F/0V72H9/EBPsRH+Bif4FN8hs/xBb7EV/ga
3+BbfIfv8QN+xE/4Gb/gV/yG3/EH/sRfeLPthbt/0V/Nf5Lj7l/0V/Md9wY2
33GvRfMdv7tqvuO5wOY7zq2a79ir7Km147P7F/3V/A9y3P2L/mr+d3Lc/Yv+
av7PbW/wwoO7f9FfnceDu3/RX53Hg7t/0V+dx4O7f9FfnceDu3/RX53Hg7t/
0V+dx4O7f9FfnceDu3/RX53Hg7t/0V+dx4O7f9FfnceDu3/RX/13Y/aveA/v
4wN8iI/wMT7Bp/gMn+MLfImv8DW+wbf4Dt/jB/yIn/AzfsGv+A2/4w/8ib/w
ZtsLd//yvfe+R9j3MvqeK98b4j3s3mvrPYHeu+Q9Fv4u2N9Z+dy6zwH6XIXn
VH7v5x5lL/31zz+Xf/4HOe7+lRx3/0qOu38lx92/vr3BCw/u/pV5vPDg7l+Z
xwsP7v6Vebzw4O5fmccLD+7+lXm88ODuX5nHCw/u/pV5vPDg7l+ZxwsP7v6V
ebzw4O5fmccLD+7+FWf/or/qPbyPD/AhPsLH+ASf4jN8ji/wJb7C1/gG3+I7
fI8f8CN+ws/4Bb/iN/yOP/An/sKbbS/c/Yv+av6THHf/or+a77iXvfmOewOb
77jXovmO31013/FcYPMd51bNd+xV9tTa8dn9i/5q/jdy3P2L/mr+D3Lc/Yv+
6n+PB3f/or86jwd3/6K/Oo8Hd/+ivzqPB3f/or86jwd3/6K/Oo8Hd/+ivzqP
B3f/or86jwd3/6K/Oo8Hd/+ivzqPB3f/or86jwd3/6K/+u/C7F/xHt7HB/gQ
H+FjfIJP8Rk+xxf4El/ha3yDb/EdvscP+BE/4Wf8gl/xG37HH/gTf+HNthfu
/pUcd//yvfe+R9j3MvqeK98b4j3s3mvrPYHeu+Q9Fv4u2N9Z+dy6zwH6XIXn
VH7v5x5lL/3x55/LP/8bOe7+lRx3/0qOu399e4MXHtz9K/N44cHdvzKPFx7c
/SvzeOHB3b8yjxce3P0r83jhwd2/Mo8XHtz9K/N44cHdvzKPFx7c/SvzeOHB
3b8yjxce3P0rzv5Ff9V7eB8f4EN8hI/xCT7FZ/gcX+BLfIWv8Q2+xXf4Hj/g
R/yEn/ELfsVv+B1/4E/8hTfbXrj7F/3V/Cc57v5FfzXf8d6r5jvuZW++497A
5jvutWi+43dXzXc8F9h8x7lV8x17lT21dnx2/6K/mv+dHHf/or+a/3PbG7zw
4O5f9Ffn8eDuX/RX5/Hg7l/0V+fx4O5f9Ffn8eDuX/RX5/Hg7l/0V+fx4O5f
9Ffn8eDuX/RX5/Hg7l/0V+fx4O5f9Ffn8eDuX/RX/92X/Svew/v4AB/iI3yM
T/ApPsPn+AJf4it8jW/wLb7D9/gBP+In/Ixf8Ct+w+/4A3/iL7zZ9sLdv5Lj
7l/Jcfcv33vve4R9L6PvufK9Id7D7r223hPovUveY+Hvgv2dlc+t+xygz1V4
TuX3fu5R9tLf/vxz+ed/J8fdv5Lj7l/f3uCFB3f/yjxeeHD3r8zjhQd3/8o8
Xnhw96/M44UHd//KPF54cPevzOOFB3f/yjxeeHD3r8zjhQd3/8o8Xnhw96/M
44UHd/+Ks3/RX/Ue3scH+BAf4WN8gk/xGT7HF/gSX+FrfINv8R2+xw/4ET/h
Z/yCX/Ebfscf+BN/4c22F+7+RX81/0mOu3/RX813vFe4+Y73XjXfcS978x33
Bjbfca9F8x2/u2q+47nA5jvOrZrv2KvsqbXjs/sX/dX8H+S4+xf91f8eD+7+
RX91Hg/u/kV/dR4P7v5Ff3UeD+7+RX91Hg/u/kV/dR4P7v5Ff3UeD+7+RX91
Hg/u/kV/dR4P7v5Ff3UeD+7+RX91Hg/u/kV/9d912b/iPbyPD/AhPsLH+ASf
4jN8ji/wJb7C1/gG3+I7fI8f8CN+ws/4Bb/iN/yOP/An/sKbbS/c/Ss57v6V
HHf/So67f/nee98j7HsZfc+V7w3xHnbvtfWeQO9d8h4Lfxfs76x8bt3nAH2u
wnMqv/dzj7KX/v7nn8s//wc57v717Q1eeHD3r8zjhQd3/8o8Xnhw96/M44UH
d//KPF54cPevzOOFB3f/yjxeeHD3r8zjhQd3/8o8Xnhw96/M44UHd//KPF54
cPevOPsX/VXv4X18gA/xET7GJ/gUn+FzfIEv8RW+xjf4Ft/he/yAH/ETfsYv
+BW/4Xf8gT/xF95se+HuX/RX85/kuPsX/dX8F3Lc/Yv+ar7jvVfNd9zL3nzH
vYHNd9xr0XzH766a73gusPmOc6vmO/Yqe2rt+Oz+RX81/+e2N3jhwd2/6K/O
48Hdv+ivzuPB3b/or87jwd2/6K/O48Hdv+ivzuPB3b/or87jwd2/6K/O48Hd
v+ivzuPB3b/or87jwd2/6K/O48Hdv+iv/rst+1e8h/fxAT7ER/gYn+BTfIbP
8QW+xFf4Gt/gW3yH7/EDfsRP+Bm/4Ff8ht/xB/7EX3iz7YW7fyXH3b+S4+5f
yXH3r+S4+5fvvfc9wr6X0fdc+d4Q72H3XlvvCfTeJe+x8HfB/s7K59Z9DtDn
Kjyn8ns/9yh76R9//rn8839ue4MXHtz9K/N44cHdvzKPFx7c/SvzeOHB3b8y
jxce3P0r83jhwd2/Mo8XHtz9K/N44cHdvzKPFx7c/SvzeOHB3b8yjxce3P0r
zv5Ff9V7eB8f4EN8hI/xCT7FZ/gcX+BLfIWv8Q2+xXf4Hj/gR/yEn/ELfsVv
+B1/4E/8hTfbXrj7F/3V/Cc57v5FfzX/hRx3/6K/mu94r3DzHe+9ar7jXvbm
O+4NbL7jXovmO3531XzHc4HNd5xbNd+xV9lTa8dn9y/6q/8dHtz9i/7qPB7c
/Yv+6jwe3P2L/uo8Htz9i/7qPB7c/Yv+6jwe3P2L/uo8Htz9i/7qPB7c/Yv+
6jwe3P2L/uo8Htz9i/7qPB7c/Yv+6r/Lsn/Fe3gfH+BDfISP8Qk+xWf4HF/g
S3yFr/ENvsV3+B4/4Ef8hJ/xC37Fb/gdf+BP/IU32164+1dy3P0rOe7+lRx3
/0qOu38lx92/kuPuX8lx96/kuPuX99Z6D6D3KnlPhb/79XdUPpfuc34+N+E5
lN/ruSfZO//8888NXnic+/dtb/DCg7t/ZR4vPLj7V+bxwoO7f2UeLzy4+1fm
8cKDu39lHi88uPtX5vHCg7t/ZR4vPLj7V+bxwoO7f2UeLzy4+1f83V/93/F3
f9V7eB8f4EN8hI/xCT7FZ/gcX+BLfIWv8Q2+xXf4Hj/gR/yEn/ELfsVv+B1/
4E/8hTfbXjj91Rynv5rj9FdznP5qjtNfzXH6qzlOfzXH6a/mOP3VHKe/muP0
V3Oc/mqO+1wx/dV8x7lV8x17lT212fG58OD0V+fwwoPTX53HCw9Of3UeLzw4
/dV5vPDg9Ffn8cKD01+dxwsPTn91Hi88OP3Vebzw4PRX5/HCg9NfnccLD05/
1fn+kP6q9/A+PsCH+Agf4xN8is/wOb7Al/gKX+MbfIvv8D1+wI/4CT/jF/yK
3/A7/sCf+Atvtr1wvz+kv5r/JMf9/pD+av4LOe73h/RX81/Jcb8/pL+a73hP
Y/Md7xFpvuOe2+Y77mFqvuN3ws13PMfefMdzFs13fA/YfEdPrR2fg/v9If3V
OTy43x/SX53Hg/v9If3VeTy43x/SX53Hg/v9If3VeTy43x/SX53Hg/v9If3V
eTy43x/SX53Hg/v9If3VeTy43x/SX53Hg/v9If2V/52mv+o9vI8P8CE+wsf4
BJ/iM3yOL/AlvsLX+Abf4jt8jx/wI37Cz/gFv+I3/I4/8Cf+wpttL5z+ao7T
X81x+qs5Tn81x+mv5jj91Rynv5rj9FdznP5qjtNfzXH6qzlOfzXH/d0m/dV8
x3OBzXecWzWnlzbY3vIz/dV5vPDg9Ffn8cKD01+dxwsPTn91Hi88OP3Vebzw
4PRX5/HCg9NfnccLD05/dR4vPDj91Xm88OD0V+fxwoPTX3XOv/I9dc6/4j28
jw/wIT7Cx/gEn+IzfI4v8CW+wtf4Bt/iO3yPH/AjfsLP+AW/4jf8jj/wJ/7C
m20v3POv5LjnX8lxz7+S455/Jcc9/0qOe/6VHPf8Kznu+Vdy3POv5LjnX74X
xHvWvbfWewC9V8l7Kvzdr7+j8rl0n/PzuQnPofxezz3J3vn3P//c4IXHuf/Y
9gYvPLjnX5nHCw/u+Vfm8cKDe/6Vebzw4J5/ZR4vPLjnX5nHCw/u+Vfm8cKD
e/6Vebzw4J5/ZR4vPLjnX3HOv+iveg/v4wN8iI/wMT7Bp/gMn+MLfImv8DW+
wbf4Dt/jB/yIn/AzfsGv+A2/4w/8ib/wZtsL9/yL/mr+kxz3/Iv+av4LOe75
F/3V/Fdy3PMv+qv5b+S451/0V/Md771qvuNe9uY77g1svuNei+Y7fnfVfMdz
gc3ZmzZ4Yfcse8vPhQf3/Iv+6jwe3PMv+qvzeHDPv+ivzuPBPf+ivzqPB/f8
i/7qPB7c8y/6q/N4cM+/6K/O48E9/6K/Oo8H9/yL/uo8HtzzL/or/7tLf9V7
eB8f4EN8hI/xCT7FZ/gcX+BLfIWv8Q2+xXf4Hj/gR/yEn/ELfsVv+B1/4E/8
hTfbXrjnX/RX85/kuOdf9FfzX8hxz7/or+a/kuOef9FfzX8jxz3/or+a73hP
Y/Md7xFpvuOe2+Y77mFqvuN3ws13PMfenO/5NnhhvxdMf9lTa8fn4J5/0V+d
w4N7/kV/dR4P7vkX/dV5PLjnX/RX5/Hgnn/RX53Hg3v+RX91Hg/u+Rf91Xk8
uOdf9Ffn8eCef9FfnceDe/5Ff+V/Z+mveg/v4wN8iI/wMT7Bp/gMn+MLfImv
8DW+wbf4Dt/jB/yIn/AzfsGv+A2/4w/8ib/wZtsL9/yL/mr+kxz3/Iv+av4L
Oe75F/3V/Fdy3PMv+qv5b+S451/0V/Md7xVuvuO9V8133MvefMe9gc133GvR
fMfvrppzLrXBC3uOlf7q/I6emh2fPf+ivzqPB/f8i/7qPB7c8y/6q/N4cM+/
6K/O48E9/6K/Oo8H9/yL/uo8HtzzL/qr83hwz7/or87jwT3/or86jwf3/Iv+
6vfSOf+K9/A+PsCH+Agf4xN8is/wOb7Al/gKX+MbfIvv8D1+wI/4CT/jF/yK
3/A7/sCf+Atvtr1wz7+S455/Jcc9/0qOe/6VHPf8Kznu+Vdy3POv5LjnX8lx
z7+S455/Jcc9/0qOe/7le0G8Z917a70H0HuVvKfC3/36OyqfS/c5P5+b8BzK
7/Xck+yd//jzzw1eeJz7r9ve4IUH9/wr83jhwT3/yjxeeHDPvzKPFx7c86/M
44UH9/wr83jhwT3/yjxeeHDPvzKPFx7c868451/0V72H9/EBPsRH+Bif4FN8
hs/xBb7EV/ga3+BbfIfv8QN+xE/4Gb/gV/yG3/EH/sRfeLPthXv+RX81/0mO
e/5FfzX/hRz3/Iv+av4rOe75F/3V/Ddy3PMv+qv57+S451/0V/Md771qvuNe
9uY77g1svuNei+Y897fBC/ucYPqr83hh9yx7y8+FB/f8i/7qPB7c8y/6q/N4
cM+/6K/O48E9/6K/Oo8H9/yL/uo8HtzzL/qr83hwz7/or87jwT3/or86jwf3
/Iv+yv9u0l/1Ht7HB/gQH+FjfIJP8Rk+xxf4El/ha3yDb/EdvscP+BE/4Wf8
gl/xG37HH/gTf+HNthfu+Rf91fwnOe75F/3V/Bdy3PMv+qv5r+S451/0V/Pf
yHHPv+iv5r+T455/0V/Nd7ynsfmO94g033HPbfMd9zA15zn1DV7Y59rTX53H
C/u9YPrLnlo7Pgf3/Iv+6hwe3PMv+qvzeHDPv+ivzuPBPf+ivzqPB/f8i/7q
PB7c8y/6q/N4cM+/6K/O48E9/6K/Oo8H9/yL/sr/TtJf9R7exwf4EB/hY3yC
T/EZPscX+BJf4Wt8g2/xHb7HD/gRP+Fn/IJf8Rt+xx/4E3/hzbYX7vkX/dX8
Jznu+Rf91fwXctzzL/qr+a/kuOdf9Ffz38hxz7/or+a/k+Oef9FfzXe8V7j5
jvdeNd9xL3vzHfcGNud3VRu8sL/D6vkX/dX5HedWnaeXNtje8rPnX/RX5/Hg
nn/RX53Hg3v+RX91Hg/u+Rf91Xk8uOdf9Ffn8eCef9FfnceDe/5Ff3UeD+75
F/3VeTy451/0V79XzvlXvIf38QE+xEf4GJ/gU3yGz/EFvsRX+Brf4Ft8h+/x
A37ET/gZv+BX/Ibf8Qf+xF94s+2Fe/6VHPf8Kznu+Vdy3POv5LjnX8lxz7+S
455/Jcc9/0qOe/6VHPf8Kznu+Vdy3POv5LjnX8lxz7+S455/eW+t9wB6r5L3
VPi7X39H5XPpPufncxOeQ/m9nnuSvfNf//xzgxce5/7btjd44cE9/8o8Xnhw
z78yjxce3POvzOOFB/f8K/N44cE9/8o8Xnhwz78yjxce3POvOOdf9Fe9h/fx
AT7ER/gYn+BTfIbP8QW+xFf4Gt/gW3yH7/EDfsRP+Bm/4Ff8ht/xB/7EX3iz
7YV7/kV/Nf9Jjnv+RX81/4Uc9/yL/mr+Kznu+Rf91fw3ctzzL/qr+e/kuOdf
9FfzP8hxz7/or+Y73nvVfMe97M25t2KDF/aei55/0V+d3/FcYOfZmzZ4Yfcs
e8vPhQf3/Iv+6jwe3PMv+qvzeHDPv+ivzuPBPf+ivzqPB/f8i/7qPB7c8y/6
q/N4cM+/6K/O48E9/6K/8v/39Fe9h/fxAT7ER/gYn+BTfIbP8QW+xFf4Gt/g
W3yH7/EDfsRP+Bm/4Ff8ht/xB/7EX3iz7YV7/kV/Nf9Jjnv+RX81/4Uc9/yL
/mr+Kznu+Rf91fw3ctzzL/qr+e/kuOdf9FfzP8hxz7/or+Y73tPYfMd7RJpz
z9IGL+y9TD3/or86v+M59s7zPd8GL+z3gukve2rt+Bzc8y/6q3N4cM+/6K/O
48E9/6K/Oo8H9/yL/uo8HtzzL/qr83hwz7/or87jwT3/or86jwf3/Iv+yv+f
01/1Ht7HB/gQH+FjfIJP8Rk+xxf4El/ha3yDb/EdvscP+BE/4Wf8gl/xG37H
H/gTf+HNthfu+Rf91fwnOe75F/3V/Bdy3PMv+qv5r+S451/0V/PfyHHPv+iv
5r+T455/0V/N/yDHPf+iv5rveK9w8x3vvWrOvYAbvLD3CPb8i/7q/I7fXXWe
c6kNXthzrPRX53f01Oz47PkX/dV5PLjnX/RX5/Hgnn/RX53Hg3v+RX91Hg/u
+Rf91Xk8uOdf9Ffn8eCef9FfnceDe/5Ff/V74Zx/xXt4Hx/gQ3yEj/EJPsVn
+Bxf4Et8ha/xDb7Fd/geP+BH/ISf8Qt+xW/4HX/gT/yFN9teuOdfyXHPv5Lj
nn8lxz3/So57/pUc9/wrOe75V3Lc86/kuOdfyXHPv5Ljnn8lxz3/So57/pUc
9/wrOe75V3Lc8698L4YX9t7bnn9lHi/s74Z7/uVz6T7n53MTnkP5vZ57kr3z
3/78c4MXHuf+c9sbvPDgnn9lHi88uOdfmccLD+75V+bxwoN7/pV5vPDgnn9l
Hi88uOdfcc6/6K96D+/jA3yIj/AxPsGn+Ayf4wt8ia/wNb7Bt/gO3+MH/Iif
8DN+wa/4Db/jD/yJv/Bm2wv3/Iv+av6THPf8i/5q/gs57vkX/dX8V3Lc8y/6
q/lv5LjnX/RX89/Jcc+/6K/mf5Djnn/RX83/To57/kV/Nefe9Q1e2Hvae/5F
f3V+x70Wnee5vw1e2OcE01+dxwu7Z9lbfi48uOdf9Ffn8eCef9FfnceDe/5F
f3UeD+75F/3VeTy451/0V+fx4J5/0V+dx4N7/kV/5f9v6a96D+/jA3yIj/Ax
PsGn+Ayf4wt8ia/wNb7Bt/gO3+MH/Iif8DN+wa/4Db/jD/yJv/Bm2wv3/Iv+
av6THPf8i/5q/gs57vkX/dX8V3Lc8y/6q/lv5LjnX/RX89/Jcc+/6K/mf5Dj
nn/RX83/To57/kV/Nec9IRu8sO8V6fkX/dX5HfcwdZ7n1Dd4YZ9rT391Hi/s
94LpL3tq7fgc3PMv+qtzeHDPv+ivzuPBPf+ivzqPB/f8i/7qPB7c8y/6q/N4
cM+/6K/O48E9/6K/8v+n9Fe9h/fxAT7ER/gYn+BTfIbP8QW+xFf4Gt/gW3yH
7/EDfsRP+Bm/4Ff8ht/xB/7EX3iz7YV7/kV/Nf9Jjnv+RX81/4Uc9/yL/mr+
Kznu+Rf91fw3ctzzL/qr+e/kuOdf9FfzP8hxz7/or+Z/J8c9/6K/mvNeqw1e
2Pdg9fyL/ur8jnsDO8/vqjZ4YX+H1fMv+qvzO86tOk8vbbC95WfPv+ivzuPB
Pf+ivzqPB/f8i/7qPB7c8y/6q/N4cM+/6K/O48E9/6K/Oo8H9/yL/ur3ujn/
ivfwPj7Ah/gIH+MTfIrP8Dm+wJf4Cl/jG3yL7/A9fsCP+Ak/4xf8it/wO/7A
n/gLb7a9cM+/kuOefyXHPf9Kjnv+lRz3/Cs57vlXctzzr+S451/Jcc+/kuOe
fyXHPf9Kjnv+lRz3/Cs57vlXctzzr+S451/5Xgsv7Hsbe/6Vebyw9972/Mt7
lbynwt/9+jsqn0v3OT+fm/Acyu/13JPsnf/8888NXnic++/b3uCFB/f8K/N4
4cE9/8o8Xnhwz78yjxce3POvzOOFB/f86z83/y+PCEVG
       "], {{
         {GrayLevel[0.8], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJws3WO45coWheGOVox1bNu2bdu2bdu2bdu2bdv2uefme8b4kWfuOVdmVa0k
9WZ398WEG22/0nbhiBEjNlp0xIioj9v1R9Af1Hbuj0F/pP2xU38kzvfpj7Y/
uv7Yrz+G/TFSf+zrGvmO/RG7Z4cRGpt8e49Nvnd/NB5rr/6one/WH3l/FP2x
a39kznfxWsj395wj98ee/VG5/8j+GKc/xu2Po/tjvP4Yvz8O7o/R+mP0/jio
P0Z1fohrY/THjf2xSH/0l2LEYf0xZn+M1R8H9sco7jnAc5If6j7OO8bzTNAf
xzpO2B9H9MfYXtMN/bGw5zjcY/PZUV4va93d37vsjz0c+W7HebyJ+uPU/pii
P6bsj1P6Y3Lnp7k2VX+c2B+T9Mek/XF+f8zUHzP3x8n9MZl7TvLn5Ke7b+r+
OKc/pu+PGfrjvP6Y0f3nukZ+Zn9M0x/T9scZ7iO/wPPM0h8X9ces/TFbf1zT
H/P3xwL9cXV/zOf8sv6Ysz/m6o/LHefujws9Bv0n9MfE/j7H+xqQX9ofc7j/
Jt+3xfrjkv6Y3Z9d4fHm6Y9rPf+C/XF9fyzk+3Gda+RX9ce8Xt+V7iO/2N+D
cc/y956uP272nIv3xwcjtGd4Tm/vj6X6Y+n+uK0/lnR+h2vL9MdD/bFqf6zW
Hw/2xyrOb+2PJdxzi8cmv9N9y/bHff2xYn+s1B8P9MfK7r/fNfK7+2O5/li+
P+5yH/nDnnP1/rjHn6/QH4+4tkZ/PN8fG/XHxv3xeH+s1R9r98dj/bGm8ydc
W6c/nu6P9fpj/f540rV1++NRj0fPU65x3jM+d4P+eMHzbNIfLzpu2h8vOW7W
H8/63A3745X+2Lw/tuiP51xjrff6e3BdXnYf573qc7fsj7dHyDgceqs/tnX+
jmtY9dkImYJJn47QPiR/oz+27o9t+uP1/tjK+bvuw7yPRsgsDPtkhPYz/R+7
Rv7+CHnKs/Ke+8g/95y4+IUj1v40QtZg0s+O+PH1CPmLhd84HtAf3zri1vcj
5B3+HdTDPmp/jNYfX42Q1/R/OELPLOv+0nPy2Q/uw8hfPCee/eqItb85YtiP
Ppe1vubrzTX6zmthHWeP0L7Bl9/dh9N/OOLo/0bIL3z6d4T2P/l/rmFYHsgp
TMoCjUv+zwgZQc/fI+QmOS81+vAyCWQWhqWB9jP9g0A18jCQs5gaBOojLwLN
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
QEfsPDiUlTwTh/q5wLPDQ5nFuIe5Rn6Q++g5qj/GDWXh0Y4YeYwj1p4WyiPc
Oi6Uxbh4vCMWnuCIYSc64t/JoUzEv2M9Hv17+j7wDjnJ53LeXq7xnU/3nPh3
hiO2nemIZ2c5YvCpoTxlrad4TvJn4v657I8N+uNsn4ujT/f5ev7s4lBm4dxF
oXwhvybUn5fw6bpQHuHTta6RXxjKC3ouCGUo+fmhbCW/OpR3jHVVKMvILwvl
KXZeGspc8ku8FvLrPSfWXhnKUPrvDOUF9twdyhHsuTmUg/h0UyjXyG9xDc8+
DPXc87zfFspHXLwxlKf03OA5yW91H+fd43nw9V5HnLsjlKes6YNQe4w5bvfY
fHaX18taL/f35v1whSPf7T6Ph5GPhnIK2x4J5SD5Y67h34Oh3nPY/HwopzDp
4VCG0vOQPyd/3H0Y+Uwos3DuuVB20P+sa+RPhnITI59wH/kLngcLXwrlLOa9
E8omnHg7lEHkr4VyCuded8S5Fz0G/Q+Eek/wfe73NSB/NZSb9H/k+4ZPr4Sy
lc/e8Hh4+a7nx633QznL/XjPNfK3QnnK+t50H/nL/h6M+5S/N++Ejz0nznWR
9gzP6eeh9i1WfRZqb5N/4Rrm/RTKJhz6MdQ7jPzTUC7T84nHJv/Sfdj5XSjv
cOuHUN7R/71r5F+H8hQ7v3If+c+eEwu/8ec4+otruMs/0uIUZvwRykH8+z2U
j+R/uoZh/4SyD/P+cg0Xf+uPI93zt2uc96/PxcUg0jxYFUaK+BpFipj3P5+L
i0kk+zDvP9dY67f+HlyXOFIf5w0inYuLZf/zeaEcKvqfzw2VV5FqWDVaJFMw
adRI+5A8j/Q7Oj1ZJDfJ60h9mDdSJLMwbJRI+5n+kSPVyNtInvKsNJH6yEeP
NCcujhEpYu1EkazBpIkjRfwYO5K/WDhOpIhP40aKuDV+JO/w76b+50X7Y7H+
GCuS1/QPIz2zrHvMSHPy2QSR+jBykkhz4tmkkSLWThYpYtiEkc5lrWmk6801
Gi/SWljH06H2Db5MHqkPp6eIFHF0ukh+4dO0kfY/+fSRahg2ZySnMGmOSOOS
TxPJCHqmjuQm+QyR+vBy1khmYdjskfYz/bNFqpHPFMlZTJ0xUh/5XJHmxMWZ
I32OnXNHqmEt1xc7sGS+SJZh4byRfCSfP1INVxaKZBkWLhCphmHzRBqPngUj
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
cCwT8e9ej0f/Vb4PvEMe8rmcd7VrfOfHPSf+PeGIbU864tlTjhj8aCxPWesj
npOcP6vwdy38PcuzsdzEyzvT/tr0x7L98VIsU3DrxVj7n/xl1/Dv3VhOYdI7
sf4cRf5CLDfpeT6Wp+SvuA9H34xlH4a9Hcs++t9yjfy1WLbi6KvuI3/Pc+Li
6/4cU993DYO/imUQlnwUyzIs/DCWj+Qfu4Zbn8UyEQs/cQ3nPvB49HzqGud9
7nPx8mvPg3PfOGLtt46Y94XPxbMu0X5jn33pGmt9w9+D6/Kd+3Dxe0e8/CWW
fVj1cywTyX91DfP+i2UTDv3mGi7+FMtren53DRf/cMTCv2LZh3n/xPIL8/4X
yxHG/dc18j/dR8+Psd6vzMF/CYz5cTFMZC7+VYmcwowkkX1YNUgUMS9NFDEv
SDQG/T/4GjBHnMhQ+kfqf740llVRonn4LE9kJUaWiexj7jrR/BjWJjKX+9Ek
qpEXifroyRKthbH+9rXhuoycaE5cXDDR881zOnqi/czeHS2Rs+RjJKph2ESJ
3lv4NGaiGhaOmshNesZKVMPLsRNFjBw3kYn4N34i+zBswkT2Me4EiWrk4yTq
o2fiRHPi33iJxqB/kkQ1jJw+kUFYNXkiE7FwskQuk0+RqIaLUyWyDAunTFQj
nzpRDRenTWQiFs6ayC/cmiHRPPg0Y6KIWzMlilg7c6KIf9MlGoP1TZpovaxp
lkSfM+5sicbGwjUS7U/25VyJvHuuP+ZM9G/h5HMnqmHVoon2IT7Nk6iGZ3Mk
+jdyeuZNVMPF+RJFvFwgkY88BwslehYwbJFETjHuwolq5PMn6qNnsURz4t/i
iSIuLpEo4utKiQzCqqUS+YuFSyeK+LdMoohbyyaKmLd8Igcxb8lE49E/SqLn
l2duuUTnct7sia4f33nlRHNi3iqJIp6tmihi2GqJIu6umMhQ1rpCojnJV0/0
OfdjzUT3BCM/7n/erT9274/1EjmCVesm2vPk6yeqYd6WiWzCoS0S7UnydRJZ
Sc/aiQwl3yBRH3Zumsg73No8kXf0b5aoRr5RIk+xc8NEfeRbJZoTCzdO9DmO
bp2ohrt8D9zBj+0S+YV/2yYykXx717Bqp0QO4t8OrmHbNonGo2dH1zhvZ5+b
+noxD7bt4Yivezri3C4+F8POTbTf2Ge7usZaN0n0Pbgue7kPC/d2xMgDEz0r
+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
VLaSJ6nWQt6lmhPzilSe0j9WKoMwY5xUBuHNKKnsw62RU1lGPmqqGhYunOpZ
5xkfPZWJWDhSKkPpGaaak3y0VH2cN26qeXBuvFQR28ZMZShrWijVvmKOMVKN
zWdjp1ova81SfW/eFXmqyHcbP9V4uDhZKtdwbtJU9pFPnqqGcxOlekfi5Yyp
bMKhSVK5Sc/EqT4nnyJVHxZO1//84EC2zZDKO/qnT1UjnyqVoXg5Zao+8plS
zYN/s6TyDufmS/X7DfbMm8om8jlSGYdtc6aK2DZzqjHonzDVu4HvM0Gqa0A+
eyor6V8k1X3DpNlSecpnc6UaDyPnTzU/5i2YyjvuxwKpauTzpDKU9c2dqo98
1lTfg3GnTvW9eT8smmpOfN0x1Z7hOV0y1X7DtiVSOUi+VKoa/q2SyiPsWTmV
WeSLp/KUnsVSjU2+dKo+jFwhlX2Yt1Iq4+hfMVWNnH/HxU0c5d916SNfNdWc
+Ldcqs8xdbVUNfzbMJXXOLRmKvswb41UJpKvlaqGf+um8g7n1k5Vw8LVU41H
zzqpapy3XqpzsXCjVPPg3MapIs5tkiri3PqpzsXLzVJ5h3MbpKqx1uVTfQ+u
y6ap+jhv81TnYuE2/c//DeTQ1qm8I982VQ2rdk9lCibtlmofkm/VH/8O1LNl
KjfJt3Mf5u2cyiwM2zXVfqZ/F9fId0jlKc/K9u4j38Nz4uKejlh7cCprMOkQ
R/zYJ5W/WLivIz7t54hbB6TyDv9GyXrz+nhFf+ydymv6d/Izy7r38px8dqD7
MPJQz4lnhzli7eGOGHaQz2WtW6S63lyj/b0W1jFNqn3D71NHuA+nj3TE0eNT
+YVPx6Xa/+QnuIZhZ6dyCpPO6o9pnR+bygh6jknlJvmJ7sPL01KZhWFnpNrP
rOt018hPTuUspp7kPvJzPCcunuLPsfNc12b09cUOLLkglWVYeH4qH8kvdA1X
LkllGRZe5BqGnefx6LnYNc671Ofi5ZWeB1OvcsTaqx0x7zKfi4XPpdrb7LnL
XWOtp/p7cF2ucR8uXuuIlzel8g6TbkxlLvnNruHWvalswqFbXMO/G1K9X+m5
1TWMvM0RF+9IZRxW3ZXKL3y6J9XeZty7XSO/3X30XJ/q/coc93l+XHwgla1Y
+1Qqp7Dn4VTe4dMjjtj2qCPm3e8x6L/O14A5HkplKP1Hp3rf85w96Hn47PFU
PmLhk6nsY+6nPT+ePZvKL+7HM66RP+E+eh7zWhjred83jHwxlY84979UzzfP
6aup9h4+vZLKPvLXXMOwD1I5hUnvp9r/5C+nspWelzw2+evuw8t3UpmFYe+l
eufR/65r5G+mchZT33Af+YeeExc/csTXb1IZgVXfOmLPp6lMxMLPHPHpc0cM
+zKVg/h3VCo/uB+fpHKc/re8Fpz+2HPy2Vfuw8vvPCeGfe+Iuz844u7XPpe1
vuD7wD34wmthHaNm2v/sy7c9J9frp1SGYufvXivPzm+p7CP/wzXcCjPtSaz6
0zVs+zWVm/T85RpG/u2Inf+mspJn4r9UzwWeBZnMYlz+B5Wpkf/jPnp+SWU6
c0SZ5sfFQf/zmams7TJ5hFt5JhPxr8gUcavMFDEvzjQG1v7sa8AcWSbH6f/R
15hrlGaah8/qTIbiZZvJR+YeZpofC0fOZByejZSpRt5k6qOnyrQWxhot0/3B
y9EzRbx8of954/7YpD/GzrTncWWsTA6Sj5OphmeTZfrPzGHVpJn8Ih8zk6H0
jJFpbPJxM/Vh50SZHMS/STJZRv/EmWrk42cyF1/Hy9RHPnmmObFwgkyfY+0U
mWp4OXMmO3Bo6kwm4tlUmYwmnyZTDSOnz+QaLk6bqYZnU2Yaj57pMtU4b4ZM
52LnLJnmwa1ZM0XMmy1TxN0ZM52Lr2tm2vPs9Zky1VjrhJm+B9dl9kx9eDlH
poiR82bae/g3TyYTyefLVMOtJTLtPayaP1MN2+bO9P6jZ4FMNYxcMFPEzoUz
WYl5i2byC88Wz+QI4y6WqUa+UKY+eubKZDpzLJlpflxcOpOVWLtqJi9wa7lM
JmLh8pkiPq2QKWLYUpnGoH/OTNeAOZbN5Dj9a2W6lhi2TKZ5+GylTIZi5yqZ
3GTu1TLNj39rZHKN+7F6phr5ypn66Fkx01oYa+1M82DkOpkiRh6V6fnmOV0/
k3fs9fUy7W3yDTLVMGarTE7x7towUw3b1s00Hj0bZaphJPuSiJ2bZrISFzfP
5CD+bZnJMsbdIlONnP1MHz1bZ5oTF7fJFLFw20wRI/fI5BdmbJ/JYizcwRHP
duqPJJOLOzvi1q6ZXMPF7Twe/ZtlWi9r3cXnct5+mSzDrT09J+bt5Yhhezvi
3z6OGLx7JnNZ626ek3yRTM8vz+6+Ppc5Lsy0V9mjB2dyEP8OyvTeIj/ENdw6
LtOexKpDXcO2AzP9WYKew1zDyMMdsfPITFbyTBzt5wLPjs1kFuMe4xr5Ee6j
53jPiYUnOGLkiY5Ye3Ymj3Dr5EwW4+Ipjlh4qiOGneaIf2dkMhH/TvJ49O/v
+8D75HSfy3kHuMZ3Psdz4t+5jth2niOene+IwWdl8pS1nuk5yflzI3/fxt+1
XeBzuTf8WZS/e+PvyC7PZApuXZZp/5Nf4Rr+3ZTJKUy60fee/NJMbtJzSSZP
ya90H45el8k+DLshk330X+8a+dWZbMXRq9xHfrPnxMVr/Dmm3uIaBt+fySAs
uT2TZVh4WyYfye9wDbfuzmQiFt7pGs7d6vHoucs1zrvH5+LlA54H5x50xNqH
HDHvXp+LZ59l2m/ss/tcY63X+ntwXR52Hy4+4oiXT2ayD6ueyGQi+VOuYd4r
mWzCoaddw8XHM3lNzzOu4eKzjlj4fCb7MO/FTH5h3suZHGHcl1wjf8599DyW
6f3KHK96flx8PZO5+PdRJqcw461M9mHV246Y944j5r3mMeh/1NeAOd7MZCj9
n/taYtUbnofP3s9kJUZ+mMk+5v7Y82PYp5nM5X584hr5B+6j573+2NFjfeF5
sPBLR5wbLdfzzXP6Tab9zN79OpOz5N+6hmG/Z3pv4dN3rmHhVx6Pnu9dw8sf
HDHyp0wm4t8vmezDsN8y2ce4v7pG/qP76PnDc+Lfn464+Jcj7sa5DMKqfzKZ
iIX/OmLh/xwx7D9HLAxyOYh/f3s8+n/2elkr/+cqnMt5RS7LMCzJNSdWDXJF
DEtzRdzNckUsjHLZylrDXHOSX5TpPcPvgHmuc5njYtfwqM11HrUm1/uJvMtV
w62xcu1JrBrmqmFbnctNekbKVcPIkXNF7Bw1l5U8E6Pnei7wbMxcZjHuGLlq
5KPk6qNn7FxzYuE4uSJGjpsrYu3kuTzCrfFzWYyLE+SKWDhhrohhE+WK+DdJ
LhPxb7xc49Ff5roPvEMmznUu51W5anznKXLNiX9T5orYNlWuiGdT54oYPFku
T1nrpLnmJOffX/nPp/CfR5km17k4Ol0uQ7Fzllxm4dzMuXwhnzfXn5fwaf5c
HuHTfLlq5DPl8oKeGXMZSj5DLlvJ58nlHWPNncsy8tlzeYqds+Uyl3zWXGsh
XyDXnFg7Vy5D6V86lxfYs2wuR7BnkVwO4tPCuVwjXzRXDc92zvXc87wvnstH
XFwol6f0LJhrTvLFcvVx3nK55sHX5XNFnFuq//ndTGvaKdceY44lco2Ntcvk
Wi9rnSPX9+b9MGeuyHdbIdd4GLl6LqewbbVcDpKvkauGfyvnes9h84a5nMKk
VXMZSs8quT4nXzNXH0aul8ssnNsglx30r5+rRr52Ljcxcq1cfeQb5ZoHCzfJ
5SzmbZfLJpzYNpdB5FvkcgrntswVcW7jXGPQv1Ku9wTfZ8Vc14B881xu0r+L
7xs+bZbLVj7bKtd4eLm958etHXM5y/3YwTXybXJ5yvq2ztVHvmmu78G46+T6
3rwTdvWcOHdhrj3Dc7pnrn2LVXvk2tvke7mGeYfksgmHDs71DiPfPZfL9Ozm
scn3dh92HpDLO9w6KJd39B/oGvm+uTzFzn3cR36o58TC/fw5jh7mGu6emMsp
zDgyl4P4d0QuH8mPcg3Djs1lH+Yd7RouHu7x6DnGNc47zufi4kmeB6tOdsTX
Uxwx73ifi4un5bIP805wjbXu7+/BdTnVfZx3us/FxXP6Y/pcDp2dyzvyc13D
qstzmYJJl+Xah+Rn9ce07jkzl5vk57kP8y7OZRaGXZprP9N/iWvkF+TylGfl
fPeRX+E5cfFKR6y9OZc1mHSLI35ck8tfLLzWEZ+uc8StG3J5h3+LFL15fXyj
P67O5TX9F+V6Zln3VZ6Tz250H0be1h9L5vLsdkesvcMRw27yuaz1DF9vrtH1
XgvrWDfXvsGXO92H03c54ugDufzCp/tz7X/yB13DsKdzOYVJT3lc8vtyGUHP
vbncJH/IfXj5eC6zMOzJXPuZ/idcI38kl7OY+rD7yJ/xnLj4qD/Hzmdd29DX
Fzuw5IVclmHh87l8JH/RNVx5JZdlWPiSaxj2nMej52XXOO9Vn4uXb3oeTH3L
EWvfdsS813wuFv4v195mz73uGmt9zN+D6/KO+3DxXUe8/CiXd5j0YS5zyT92
Dbe+zWUTDn3iGv59kOv9Ss+nrmHkZ464+EUu47Dqq1x+4dM3ufY2437tGvnn
7qPn/VzvV+b4zvPj4g+5bMXav3I5hT0/5/IOn35xxLZfHTHve49B/3u+Bszx
Uy5D6b8n1/ue5+xHz8Nnv+fyEQv/zGUfc//t+fHs31x+cT/+cY38D/fR85vX
wlj/+b5hZFDIR5ybvtDzzXOaFNp7+BQXso98UKiGYV0hpzCpLbT/yaNCttIT
FhqbPC3Uh5dVIbMwrCn0zqO/LlQjzws5i6lZoT7yYaE5cXGkQhFfxylkBFaN
Wyhiz6iFTMTC0QpFfBq9UMSwMQs5iH935/KD+zFKIcfpLwqtBadHLjQnn41V
qA8vxys0J4aNXyji7gSFIu6OXehc1sr/aSP3gXswRqG1sI5FC+1/9mVZaE6u
18SFDMXOKQqtlWdn8kL2kU9ZqIZbMxfak1g1VaEatk1WyE16pi5Uw8hpCkXs
nK6QlTwTMxR6LvBspkJmMe6MhWrk0xbqo2fSQqYzxyyF5sfF2QpZibULFPII
t+YsZCL+zVUo4tbchSLmzVpoDPonKXQNmGOOQo7TP1H/8625rtHshebhs3kL
GYqX8xfykbkXLDQ/Fi5cyDg8W6hQjXy+Qn30zFNoLYy1WKH7g5eLF4p4GZT9
/eS574+lC+15XFmqkIPkyxSq4dlq/c9f5rJq1UJ+kS9ZyFB6lig0Nvmyhfqw
c6VCDuLfKoUso3/lQjXy5QuZi6/LFeojX73QnFi4QqHPsXaNQjW83LiQHTi0
diET8WytQkaTr1OohpHrF3INF9ctVMOzNQuNR896hWqct0Ghc7Fzk0Lz4Nam
hSLmbVYo4u6Ghc7F1yML7Xn2+kaFaqx1xULfg+uyeaE+vNyiUMTIbQvtPfzb
ppCJ5Nu5hlt7FNp7WLW9a9i2daH3Hz07uIaROzpi586FrMS8XQv5hWe7F3KE
cXdzjXwn99GzVSHTmWNPz4+LexeyEmsPLeQFbu1XyEQs3N8Rnw5wxLC9PAb9
Wxa6BsyxbyHH6T/K1xLD9vE8fHZQIUOx85BCbjL3YZ4f/44o5Br343DXyA92
Hz0Hei2MdbTnwchjHDHyrkLPN8/pCYW8Y68fX2hvk5/oGsacXcgp3l0nuYZt
x/XHhO452TWMPMURO08rZCUunlHIQfw7q5BljHuma+Snuo+eczwnLp7riIXn
OWLkFYX8wowLClmMhRc64tlFjrh4sSNuXVrINVw83+PRf7rXy1ov8bmcd10h
y3DrSs+JeVc5YtjVjvh3jSMGX17IXNZ6meck36XQ88uze63PZY4XC+1V9ujN
hRzEv5sKvbfIb3ENt+4rtCex6lbXsO3GQn+WoOc21zDydkfsvLOQlTwTdxd6
LvDs3kJmMe49rpHf4T567vecWPiAI0Y+6Ii1TxfyCLceLmQxLj7iiIWPOmLY
Y47490QhE/HvIY9H//W+D7xPHve5nHeDa3znZzwn/j3riG3POeLZ844Y/FQh
T1nrk56TnPcEv+fyO+4LPpd7s27/Dvqhjz/2x+uFTMGt1wrtf/I3XMO/jwo5
hUkf+t6Tv1rITXpeKeQp+Zvuw9H3CtmHYR8Uso/+910jf7uQrTj6lvvIP/ac
uPiOP8fUT1zD4O8LGYQlnxeyDAs/K+Qj+Reu4dbXhUzEwi9dw7lPPR49X7nG
ed/4XLz8wfMc4mtHxNqfHDHvW5+LZ6OV2m/ss+9cY63v+ntwXX52Hy7+4oiX
f/XHsYWs+qOQiVj4t2uYl5SyCYf+cQ0Xfy/kNT3/uoaL/3PEQv5PwLEP88JS
fmFeXMoRxo1K1cj/cx89vxV6vzLHoNT8uJiVMhf/RirlFGaUpezDqqpUxLy6
VMS8tNQY9P/qa8AcRSlD6R+91LXEqrzUPHzWlrISI4el7GPukUvNj2GjljKX
+zFKqRp5V6qPnqbUWhhrjFLzYOGYpSLOLVbq+eY5HafUfmbvjl3KWfJxS9Uw
bPJS7y18Gq9UDQvHKjUePeOXquHlBKUiRk5UykT8m6SUfRg2WSn7GHfSUjXy
CUv10TNFqTnxb8pSERenKhVxd5ZSBmHVNKVMxMJpS0UsnK5UxLDpS0UsnLGU
g/g3danx6J+41HpZ6wylzuW8uUpZhmGzlpoTq2YrFTFs9lIRd+coFbFw5lK2
staZSs1J/lKh9wy/A85Z6lzmeNk1PJq/1HnU5iv1fiJfoFQNt5YqtSexasFS
NWybt5Sb9CxUqoaRC5eK2LloKSt5JhYv9Vzg2ZKlzGLcJUrVyBcp1UfP0qXm
xMJlSkWMXLZUxNrVS3mEW8uXshgXVygVsXDFUhHDVioV8W+VUibi33KlxqN/
7lL3gXfIyqXO5bx5StX4zmuUmhP/1iwVsW2tUhHP1i4VMXi1Up6y1lVLzUnO
33vy7zz8e8w6pc7F0WPr/lnvjwn7Y5NSZuHcxqV8Id+u1J+X8GmHUh7h0/au
kW9Uygt6NixlKPkGpWwl37aUd4y1TSnLyLco5Sl2bl7KXPLN+p//LJTv6Dmx
dutShtK/dykvsGffUo5gz66lHMSnXUq5Rr6ba3h2cannnud9j1I+4uLOpTyl
ZyfPSb67+zhvP8+Dr/s74txepTxlTReV2mPMsafH5rN9vF7WumWp7837YatS
ke92gMfDyMNLOYVth5VykPwI1/Dv4FLvOWw+sZRTmHRoKUPpOcSfkx/pPow8
rpRZOHdCKTvoP9418qNLuYmRR7mP/CTPg4WnlHIW884rZRNOnFvKIPIzSjmF
c2c64tzJHoP+g0q9J/g+B/oakJ9eyk36L/F9w6fTStnKZ2d5PLw83/Pj1oWl
nOV+XOAa+TmlPGV9Z7uP/FR/D8Y9xt+bd8KlnhPnXuqPTUs9p1eW2rdYdUWp
vU1+lWuYd0spm3Do5lLvMPLLS7lMz2Uem/xq92HnDaW8w62bSnlH/42ukV9b
ylPsvMZ95Ld6Tiy8zp/j6G2u4e6DpZzCjDtLOYh/d5Tykfwu1zDs3lL2Yd7d
ruHi7R6Pnntc47z7fC4uPuR5sOphR3x9xBHz7ve5uPhYKfsw7wHXWOv1/h5c
l0fdx3mP+1xcfKY/1i/l0NP9sZ7zZ13DqjdKmYJJr5fah+RPlfodnZ4nS7lJ
/pz7MO+VUmZh2Gul9jP9r7pG/kIpT/H1efeRv+k5cfEtR6z9pJQ1mPSpI368
W8pfLHzPEZ/ed8StD0t5h3+7VL1h/ZH1xzulvKb/5VLPLOt+23Py2Ufuw8jP
PCeefe6ItV84YtjHPpe1PuHrzTX6wGthHceW2jf48qX7cPorRxz9oZRf+PR9
qf1P/qNrGPZ3Kacw6S+PS/5dKSPo+baUm+Q/uQ8vfy9lFob9WWo/0/+Ha+S/
lHIWU392H/k/nhMXf/Xn2Pmva1jL9cUOLBlRyTIs/K+Uj+RBpRquxJUsw8Kw
Ug3D/ufx6Ikq1TgvqXQuXuaV5sHUolLE2rJSxLxBpXOxcLpKe5s9x7NAjbX+
5u/Bdakq9eFiXSni5UiVvMOkYSVzyUeuVMOtcSvZhEOjVKrhX1fp/UrPqJVq
GDlapYiLY1QyDqvGquQXPo1TaW8z7tiVauSjV+qjp630fmWO8SrNj4sTVLIV
a6eq5BT2TFzJO3yapFLEtkkrRcwbv9IY9DeVrgFzTFTJUPq/KfW+5zmbsNI8
fDZ5JR+xcMpK9jH31JXmx7NpK/nF/ZimUo18ikp99ExWaS2MNX2l+4aRM1by
EefWr/R885zOWmnv4dMslewjn61SDcMWrOQUJi1Qaf+Tz1zJVnpmqjQ2+eyV
+vBynkpmYdj8ld559M/X//xiqXzOSs5i6hyV+sgXqjQnLi5cKeLrspWMwKrl
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
z4lhBzji7oGOuLuPz2WtGza6D9yDPb0W1nFpo/3Pvtym0Zxcr4MbGYqdR3it
PDuHN7KP/EjXcOvkRnsSq45yDdsOa+QmPUe7hpHHOGLncY2s5Jk4wc8Fnp3U
yCzGPdE18mPdR8+hjUxnjlM8Py6e1shKrL2gkUe4dWYjE/HvLEfcOtsR8071
GPQf4mvAHGc0cpz+g3yNuUanex4+O7eRoXh5fiMfmftCz4+FFzcyDs8uco38
PPfRc47XwliX+f7g5eWOeLlh29/TPv7aH1c32vO4clUjB8mvcQ3PbuuPJRtZ
dWsjv8ivbGQoPVd4bPJr3YedNzVyEP9uaWQZ/Te7Rn59I3Px9Tr3kd/uObHw
Bn+OtXe4hpcPN7IDh+5uZCKe3dXIaPJ7XMPI+xu5hov3uoZnd3o8eu5zjfMe
8LnY+Yjnwa3H+mPNRuY97oi7D/pcfP2q0Z5nrz/kGmu90d+D6/KE+/DySUeM
fK7R3sO/ZxuZSP68a7j1ZqO9h1UvuIZtzzR6/9HzomsY+ZIjdr7SyErMe62R
X3j2RiNHGPd118hfdh89TzcynTne8vy4+E4jK7H2s0Ze4Nb7jUzEwg8c8elD
Rwx722PQ/5SvAXO818hx+r/2tcSwdz0Pn33cyFDs/LSRm8z9uefHvy8bucb9
+MI18k/cR89HXgtjfeN5MPJbR4wcq9XzzXP6QyPv2OvfN9rb5D+6hjF/N3KK
d9dPrmHbdx6Pnp9dw8hfHLHzt0ZW4uIfjRzEv78aWca4f7pG/qv76PnHc+Li
v45Y+D9HjMxa+YUZI1pZjIVBq4hnYauIi1GriFtJK9dw8T+PR//vXi9rjVud
y3lNK8twK281J+YVrSKGla0i/lWtIganrcxlrYNWc5K/2uj55dmtW53LHDP1
Pz/aaI+O3MpB/Bup1XuLfJRWNdwar9WexKpRW9WwbdjqzxL0jNaqhpGjt4rY
OWYrK3kmxm71XODZuK3MYtxxWtXIx2jVR8/4rebEwglaRYycsFXE2qlbeYRb
E7eyGBcnaRWxcNJWEcMmaxXxb4pWJuLfRK3Go79tdR94n0ze6lzO61rV+M7T
tJoT/6ZtFbFtulYRz6ZvFTF4qlaestYpW81JznuC33P5HXeGVufi6H39zyv2
x0r9MUcrU3Br9lb7n3zOVjX8W7iVU5i0UKt7Tz5bKzfpmbWVp+RzterD0flb
2YdhC7ayj/4FWtXI52llK47O3aqPfJFWc+LivK0+x9RFW9UweIVWBmHJEq0s
w8LFW/lIvmSrGm4t08pELFyqVQ3nFms1Hj1Lt6px3rKtzsVLrhnz4BzXjoi1
K7eKmLdcq3PxbLdW+419tnyrGmudr9X34Lqs0qoPF1dtFfFyrVb2YdWarUwk
X7tVDfM2bWUTDq3TqoaLa7Tymp51W9Vwcb1WEQs3aGUf5m3Uyi/M26SVI4y7
casa+fqt+uhZvdX7lTk2azU/Lm7Rylz826mVU5ixdSv7sGqbVhHztm0VMW/z
VmPQv1qra8AcW7UylP7dfS2xastW8/DZ9q2sxMgdW9nH3Dt7fgzbtZW53I9d
XCPfwX30bOe1MNYengcL93TEuctbPd88p/u02s/s3b1bOUu+r2sYdnir9xY+
7ecaFu7l8ejZ3zW8PMARIw9qZSL+HdLKPgw7rJV9jHuoa+QHuo+eIzwn/h3p
iItHOeLuKa0MwqpjWpmIhcc6YuFxjhh2vCMWntjKQfw72uPRf7DXy1pP8Lmc
d1YryzDsVM+JVac5Ytjpjrh7hiMWntzKVtZ6kuckn7nVe4bfAc/0ucwxS6sa
Hl3g86id3+r9RH6ha7h1das9iVUXuYZt5/XHjO652DWMvMQROy9rZSXPxBWt
ngs8u6qVWYx7pWvkl7qPnms8JxZe64iR1zli7R2tPMKtG1pZjIs3OmLhTY4Y
drMj/t3aykT8u97j0X+27wPvkFt8Lued4xrvijs9J/7d5Yhtdzvi2T2OGHx7
K09Z622ek5y/9+TfyPn3mHt9Lo7y95sT+bNHW5mFc4+08oX8uVZ/XsKnF1p5
hE/Pu0b+cCsv6HmolaHkD7aylfzZVt4x1jOtLCN/opWn2Pl4K3PJH/NayF/0
nFj7dCtD6X+7lRfY824rR7Dn1VYO4tMrrVwjf801PIs6Pfc872+08hEXX27l
KT0veU7y193Hee95Hnx93xHn3mrlKWsKO+0x5njTY/PZO14va33S35v3w1OO
fLcPPB5Gft7KKWz7rJWD5F+4hn8ft3rPYfOPrZzCpE9bGUrPJ/6c/Ev3YeR3
rczCuR9a2UH/966Rf93KTYz8yn3kP3keLPyllbOY979WNuHEv60MIv+jlVM4
96cjzv3sMej/qNV7gu/zoa8B+e+t3KQ/7nTf8Om3Vrby2V8eDy//8/y4FXRy
lvsxolON/J9WnrK+v91H/qu/B+N+4+/NOyHpNCfOzdRpz/CcFv3P57ayKuu0
t9nHZaca5o3aySYcGqXTO4w87eQyPYNOY5NXnfqwc9jJO9wauZN39I/UqUbO
v+PiKXby77r0kY/WaU4sbDt9jqOjd6rh7kSdnMKMsTo5iH9jdvKRfOxONQwb
r5N9mDdOpxoujtFpPHrG7VTjvPE7nYuLE3eaB6sm6RTxddJOEfMm6HQuLk7e
yT7Mm7BTjbV2nb4H12WyTn2cN0Wnc3Fx2v7nB1o5NE3/8/2t8uk61bBqjk6m
YNLsnfYh+dSdfkenZ6pObpJP36kP82bpZBaGzdZpP9M/a6ca+YydPOVZmaFT
H/mcnebExbk6RaxdpJM1mLRop4gf83byFwvn6xTxaf5OEbcW7OQd/r3S/7x5
f2zRH/N08pr+mTs9s6x77k5z8tlCnfowcrFOc+LZ4p0i1i7RKWLYwp3OZa1T
drreXKMFOq2FdXzbat/gy5Kd+nB6qU4RR1fo5Bc+Ld9p/5Ov2KmGYWt3cgqT
1uo0LvlynYygZ9lObpKv1KkPL1fvZBaGrdlpP9O/Rqca+SqdnMXUlTv1ka/T
aU5cXLXT59i5bqca1nJ9sQNLNuhkGRau38lH8g071XBlk06WYeFGnWoYtl6n
8ejZuFON8zbtdC5ebtlpHkzdqlPE2q07RczbrNO5WHh8p709sZ8Faqx1tU7f
g+uyTac+XNy2U8TLnTp5h0k7djKXfGfXcGu/Tjbh0C6u4d8Ond6v9OzWH3kn
I3d3xMU9OxmHVXt38guf9u20txl3H9fI93AfPdt3er8yx/6eHxcP7GQr1h7d
ySnsOaSTd/h0qCO2HeaIeQd4DPq38zVgjoM7GUr/Mp3e9zxnB3kePjuik49Y
eFQn+5j7GM+PZ8d18ov7caxr5Ee6j57DvRbGOsH3DSNP6uQjzt3f6fnmOT2t
097Dp1M72Ud+umsYdmEnpzDpgk77n/yUTrbSc7LHJj/DfXh5biezMOz8Tu88
+s9zjfysTs5i6pnuI7/Ic+LixY74em0nI7DqOkfsuayTiVh4uSM+XeGIYVd1
chD/lu7kB/fj0k6O03+214LTl3hOPrvafXh5vefEsBsccfdGR9y9xuey1hN9
H7gHV3otrOPVTvuffXmO5+R63dzJUOy8w2vl2bm9k33kd7qGWw932pNYdZdr
2HZbJzfpuds1jLzHETvv62Qlz8QDnZ4LPHuok1mM+6Br5Pe6j55bO5nOHI94
flx8rJOVWPtCJ49w68lOJuLfU4649bQj5j3qMei/xdeAOZ7o5Dj9N/kac40e
9zx89mwnQ/Hy+U4+MveLnh8LX+5kHJ695Br5c+6j5xmvhbFe8/3By9cd8fLE
YX9P+2PS/ni7057Hlbc6OUj+jmt49nmn/8wcVn3WyS/yNzsZSs8bHpv8Xfdh
58edHMS/TztZRv8nrpG/38lcfH3PfeRfeE4s/MCfY+2XruHlL53swKFvOpmI
Z193Mpr8W9cw8odOruHid67h2Vcej57vXeO8H30udv7qeXDrN0fM+90Rd3/y
ufg61lB7nr3+s2us9aP+2NXX5Q/34eWfjhj5v057D//+7WQi+X+u4VY+1N7D
qhFD1bDtn07vP3qCoWoYGQ4VsTMeykrMGwzlF55lQznCuOlQNfJoqD56/u5k
OnMUQ82Pi9VQVmLtaEN5gVvtUCZiYTdUxKfhUBHDyqHGoP8vXwPmaIZynP6x
h7qWGFYPNQ+fjTyUodg56lBuMvfoQ82Pf2MO5Rr3Y4yhauSjDNVHz0hDrYWx
xhlqHowcd6iIkUsN9XzznE4wlHfs9fGH2tvkEw5Vw5iph3KKd9dEQ9Wwbbyh
xqNn4qFqGMm+JGLnZENZiYtTDOUg/k01lGWMO+VQNXL2M330TDPUnLg47VAR
C6cbKmLkHEP5hRkzDGUxFs44VMSzmYaKuDjzUBG3Zh3KNVycfqjx6J98qPWy
1lmGOpfz5hvKMtyac6g5MW+uoSKGzT1UxL95hooYPPtQ5rLW2YaakzwZ6vnl
2Z13qHOZY6Oh9ip7dOGhHMS/hYZ6b5EvMlQNt5Yfak9i1aJD1bBtwaH+LEHP
YkPVMHLxoSJ2LjmUlTwTSw/1XODZcv3PH3Yad5mhahi2hM2lZ4Wh5sTCFYeK
GLnSUBFr1xnKI9xaZSiLcXHVoSIWrjZUxLDVh4r4t+ZQJuLfykONR//8Q90H
3idrDHUu5y0wVI3vvO5Qc+LfekNFbFt/qIhnGwwVMXjtoTxlrWsNNSc5f4bk
3yr4N4oNhzqXe/OAa/wd2RZDmYJbmw+1/8m3HKqGfzsP5RQm7TTUvSffbCg3
6dl0KE/JtxqqD0e3H8o+DNtxKPvo38E18m2GshVHtx6qj3wXz4mL2w71Oabu
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
UJZh4eWhfCS/0jXcuiaUiVh4lWs4d5nHo+dq1zjvWp+Llzd6nkV97YhYe7Mj
5l3nc/Hs9VD7jX12vWus9Tx/D67LLe7DxVsd8fKuUPZh1Z2hTCS/2zXMezSU
TTh0j2u4eEcor+m51zVcvM8RCx8IZR/mPRTKL8x7JJQjjPuwa+T3u4+e20O9
X5njMc+Pi0+EMhf/XgrlFGY8Hco+rHrGEfOedcS8xz0G/bf5GjDHU6EMpf8N
X0usetLz8NnzoazEyBdD2cfcL3t+DHtteGzp+/GKaxj8gvvoec5rYaw3PQ8W
vuWIc2NFer55Tt8NtZ/Zu++Ecpb8Pdcw7ItQ7y18et81LHzb49HzgWt4+aEj
Rn4cykT8+zSUfRj2eSj7GPcz18g/ch89X3pO/PufIy5+5Yi7v4QyCKu+CWUi
Fn7riIXfOWLY945Y+GMoB/Hva49H/ydeL2v9wedy3l+hLMOwXz0nVv3miGG/
O+LuH45Y+HMoW1nrT56T/ORQ7xl+B/zT5zLHKa7h0YhI51H7L9T7iXyUSDXc
Gi/SnsSqUSPVsO3fUG7SM1qkGkaOHili55iRrOSZGDvSc4Fn40Yyi3HHiVQj
HyNSHz3jR5oTCyeIFDFywkgRa9NIHuHWxJEsxsWRkSIWBpEihoWRIv7FkUzE
v4kijUf/374PvEOiSOdy3j+u8Z2zSHPiXx4pYlsRKeJZGSlicC+Sp6w1iTQn
+XLJ8JmOh8/m8KginYujyw7rH8T6bNJIZuHcJJF8IZ8u0p+X8GmGSB7h0/SR
auSDSF7Q00UylLyNZCv5tJG8Y6xpIllGPkUkT7Fz8kjmkk8WaS3kM0aaE2un
jmQo/XNH8gJ75o3kCPbMGslBfJolkmvks0Wq4dkmkZ57nvc5IvmIizNH8pSe
mSLNST57pD7Omy/SPPg6f6SIc3NF8pQ1bRxpjzHHnJHG5rN5Iq2XtU4Z6Xvz
fpgqUuS7LRBpPIxcIpJT2LZ4JAfJl4xUw79FIr3nsHmlSE5h0mKRDKVn0Uif
ky8VqQ8jl49kFs6tGMkO+leIVCNfJpKbGLl0pD7ylSPNg4WrRnIW89aPZBNO
rBfJIPI1IzmFc2tFiji3SqQx6F840nuC77PQ8OdXQ+VrRHKT/k0j3Td8Wj2S
rXy2dqTx8HKDSPPj1kaRnOV+bBipRr5uJE9Z3zqR+shXi/Q9GHfZSN+bd8Jm
kebEuZMi7Rme060i7Vus2jLS3ibfOlIN83aNZBMO7RLpHUa+RSSX6dk80tjk
20Tqw84dI3mHWztH8o7+nVwj3y6Sp9i5baQ+8t08JxZu789xdHfXcPegSE5h
xl6RHMS/PSP5SL63axi2XyT7MG8f13BxD49Hz76ucd7+PhcXD/Y8WHWII74e
6oh5B/hcXDw8kn2Yd6BrrHUHfw+uy2Hu47wjfC4uHjs8mkgOHTM8aufHuYZV
Z0QyBZNOj7QPyY+O9Ds6PUdFcpP8ePdh3imRzMKw0yLtZ/pPdY38xEie8qyc
4D7yMz0nLp7liLWXRLIGky51xI9zI/mLhec54tP5jrh1YSTv8G/WoelPDOOT
w+OcSF7Tf3KkZ5Z1n+05+ewi92HkZZ4Tzy53xNorHDHsYp/LWo/09eYaXeC1
sI7lIu0bfLnSfTh9lSOO3hjJL3y6IdL+J7/JNQy7J5JTmHS3xyW/PpIR9Fw3
PBZ0frP78PKOSGZh2F2R9jP9d7pGfmskZzH1FveR3+s5cfE2f46d97m2kq8v
dmDJg5Esw8IHIvlI/pBruPJoJMuw8GHXMOx+j0fPI65x3mM+Fy+f8jyY+rQj
1j7jiHmP+1ws/C7S3mbPPeEaa73d34Pr8qz7cPE5R7x8OZJ3mPRSJHPJX3EN
t96LZBMOveoa/r0Y6f1Kz2uuYeTrjrj4ZiTjsOrtSH7h07uR9jbjvuMa+Rvu
o+eFSO9X5njf8+Pih5FsxdqvIjmFPZ9E8g6fPnXEts8cMe8Dj0H/874GzPFx
JEPpvybS+57380eeh8++iOQjFv4vkn3M/bXnx7NvI/nF/fjGNfIv3UfP514L
Y33v+4aRP0byEeeaWM83z+mvkfYePv0SyT7y31zDsFFiOYVJI2Ltf/KfI9lK
z08em/x39+HlP5HMwrD/Ir3z6P/XNfI/IzmLqX+4j3zUWHPi4mixIr5OEMsI
rJowVsSeMWOZiIVjxYr4NHasiGHjxnIQ/66O5Af3Y4xYjtP/l9eC06PHmpPP
xovVh5cTxZoTwyaOFXF3ZKyIu+PHOpe1/uD7wD0YJ9ZaWMdssfY/+/Jvz8n1
CmMZip1prLXy7PRi2UeeD3++NpJbk8Tak1hVxKphWxLLTXrKWDWMrGJF7Kxj
Wckz0cZ6LvBsEMssxu1i1cj7sfroiWOZzhyTxpofFyePZSXWzhjLI9yaKpaJ
+Dd1rIhb08SKmDdZrDHoj2JdA+aYMpbj9AexrjHXaIpY8/DZdLEMxcsZYvnI
3DPFmh8LZ4llHJ7NHKtGPn2sPnqmjbUWxpo91v3ByzliRbz8cfjzocPjsOEx
T6w9jytzx3KQfN5YNTxbfPjzW5GsWiyWX+RzxTKUnjljjU0+X6w+7Fw4loP4
t2gsy+hfJFaNfIFY5uLr/LH6yJeINScWLhjrc6xdMlYNL1eJZQcOLRPLRDxb
OpbR5MvGqmHkCrFcw8XlYtXwbKlY49GzfKwa560Y61zsXDXWPLi1WqyIeavH
iri7Uqxz8XWvWHuevb5yrBprXSjW9+C6rBGrDy/XjBUxcr1Yew//1o1lIvn6
sWq4tWWsvYdVG8SqYds6sd5/9GwYq4aRG8WK2LlJLCsxb7NYfuHZFrEcYdzN
Y9XIN47VR8/asUxnjq1izY+L28SyEmt3i+UFbm0fy0Qs3MERn3Z0xLCtY41B
/1qxrgFzbBfLcfr39rXEsG1jzcNnO8cyFDt3jeUmc+/u+fFvz1iucT/2cI18
F/fRs5PXwlj7eB6M3NcRI6+O9XzznB4Qyzv2+v6x9jb5ga5hzDGxnOLddZBr
2Lafx6PnYNcw8hBH7Dw8lpW4eGQsB/Hv6FiWMe5RrpGznzP3HOs5cfE4Ryw8
3hEjz4zlF2acGMtiLDzJEc9OdsTFUxxx67RYruHiCR6P/iO8XtZ6qs/lvPNj
WYZbZ3lOzDvbEcPOccS/cx0x+IxY5rLW0z0n+aaxnl+e3fN8LnM8FGuvskcv
ieUg/l0c671FfqlruHV9rD2JVZe5hm0XxfqzBD2Xu4aRVzhi51WxrOSZuCbW
c4Fn18Uyi3GvdY38SvfRc4PnxMIbHTHyJkesvSeWR7h1SyyLcfFWRyy8zRHD
bnfEvztjmYh/N3s8+i/wfeB9cofP5bwLXeM73+s58e8+R2y73xHPHnDE4Ltj
ecpa7/Kc5PwZkn+r4N8oHvS53Bv+LEqNvyN7IpYpuPV4rP1P/qRr+PdyLKcw
6SXfe/LHYrlJz6OxPCV/yn04+nws+zDsxVj20f+Ca+TPxLIVR592H/krnhMX
n/XnmPqqaxjM3yNiEJa8EcsyLHw9lo/kb7qGW+/EMhEL33IN517zePS87Rrn
vetz8fJDz4NzHzli7ceOmPeez8WzsRLtN/bZ+66x1uf8Pbgun7gPFz91xMv/
xbIPq76MZSL5V65h3q+xbMKhr13DxS9ieU3PN67h4reOWPh9LPsw76dYfmHe
L7EcYdyfXSP/zn30fB7r/cocv3l+XPwjlrn4N1oipzDj71j2YdU/jpj3ryPm
/e4x6P/M14A5/oplKP1jJ7qWWPWn5+GzEYmsxMhRE9nH3KMnmh/DxkxkLvdj
jEQ18lES9dHzn9fCWOMkmgcLx00UcW72RM83z+kEifYze3f8RM6ST5iohmFp
ovcWPk2UqIaF4yUaj56JE9XwcmSiiJFhIhPxL05kH4b1EtnHuEmiGnmQqI+e
LNGc+JcnirhYJIq4O2kig7CqSmQiFvYTRSysE0UMaxJFLOwSOYh/ZaLx6I8S
rZe1tonO5bypE1mGYZMlmhOrJk8UMWyKRBF3p0wUsXCSRLay1kGiOckfjvWe
4XfAqRKdyxyPuIZHMyQ6j9r0id5P5DMmquHW3In2JFbNlKiGbdMlcpOemRPV
MHKWRBE7Z0tkJc/EHImeCzybK5FZjDtnohr5rIn66Jkn0ZxYOG+iiJHzJYpY
u0Qij3BrgUQW4+KCiSIWLpQoYtjCiSL+LZrIRPybP9F49E+T6D7wDlkk0bmc
N22iGt95yURz4t9SiSK2LZ0o4tkyiSIGL57IU9a6WKI5yfmzCn/Xwt+zLJ/I
TbycOxtem3T4/YfHKolMwa2VE+1/8lUT1fBvg0ROYdL6if4cRb5SIjfpWTGR
p+SrJerD0bUT2Ydh6w1//iFW/zqJali4RiJbcXT1RH3kGyaaExfXTPQ5pm6U
qIbB2yYyCEs2TWQZFm6SyEfyzRLVcGvLRCZi4eaJaji3caLx6NkiUY3ztkp0
Ll5u53lwbntHrN3BEfO2TnQunp2caL+xz7ZJVGOtayX6HlyXHd2Hizs54uXu
iezDqt0SmUi+h2uYd1Aim3BoT9dwcddEXtOzl2u4uLcjFu6byD7M2z+RX5h3
YCJHGPcA18j3cR89uyR6vzLHwZ4fFw9NZC7+HZ/IKcw4IpF9WHWkI+Yd5Yh5
h3gM+nf2NWCOwxMZSv8pvpZYdZjn4bNjElmJkcclso+5T/D8GHZSInO5Hye6
Rn6s++g52mthrP18bbgup3pOXHw40fPNc3pmov3M3j0jkbPkZ7mGYZckem/h
09muYeHpidyk5xzX8PJcR4w8P5GJ+HdhIvsw7OJE9jHuRa6Rn+c+ei71nPh3
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
TZlqDPqnTjUG/RMOf76wp3szQ6pzcXGmVCZi4SzDnx/vyb+ZU9XIZ01Vw8LZ
UznIfZ0tVY18xlTjMdacqe45Fs6VKmLh3Kki1s6bykT8mydVjXy+VDX24gKp
7MPC+VPVyBdMVcPChVJF/Fs4VcTFRVM5iH+LpKqRL5aqhoVLpLIPCxdPVSNf
MlUNC5dKFfFv6VQRF5dJFbFw2VQRC5dLFbFw+VQRC1dIFbFwxVQRC1dKFTFl
7VRmYdUqqYzBwlVTRSxcLVXkXbF6qoiFa6SKWLhmqoiFa6WKjLtOqrHxj3cI
v1Pz+/S6qWpYuFuqPc/+3iCVufi3fqr3FvmGqWq/DI+NU1mGfxulqpFvkqqG
kZumiri4WaqIhVuksg/zNk9VI98yVQ3Ptk7lIIZtlapGvk2qGi5umypi4XaO
GLm9Iwbv4IiLOzpi4U6OGLOzI/7t4oiLuzqO4+/HewC7d/d1wsU9HLFwr+Ex
Qao9t7cjLu7jiG37OmLwfo4YuV6q+8C15u87+Tcf/m1mf3+OnQemchMvD09l
HOYdlsoU8hNSOYVJJ6UyCJNOdI380FRu0nNIKk/JD07lLPnxqYxjrONSOUh+
VCo3cfTIVLaSH+G1kJ/sOTHv2FSe0n9uKoMw4/xUBuHN6answ63TUllGfoZr
WPhoqmedZ/ysVCZi4ampDKXnFM9Jfqb7OO8Cz4NzFzpi2zmpDGVNj6TaV8xx
tsfms/O8XtZ6tL8374pjHPluF3k8XLwylWs4d0Uq+8ivcg3nLk31jsTLm1PZ
hEOXp3KTnsv8OfnV7sPCG1J5h203pfKO/htdI782laF4eY37yG/xPPh3Wyrv
cO6BVL/fYM/9qWwivyuVcdh2tyO23eox6L8k1buB73OxrwH5namspP8x3zdM
uiOVp3x2j8fDyAc9P+Y9nMo77sdDrpHfl8pQ1nev+8hv9/dg3Ov8vXk/PO45
8fXnVHuG5/TpVPsN255K5SD5M67h32upPMKeV1OZRf5kKk/pecJjkz/rPox8
KZV9mPdKKuPof9k1cv4dFzdx9Dn3kb/uOfHvBX+OqW+4hn8fp/Iah95OZR/m
vZXKRPJ3XMO/91N5h3PvuoaFb3o8et5zjfM+8LlY+InnwbnPhseeqZz73BHn
PvS5ePllKu9w7iPXWOuL/h5cly/cx3n/87lY+N3wOCiVQ9+m8o78e9ew6s9U
pmDSH6n2Ifk3w+MA93ydyk3yH9yHeb+mMgvDfk+1n+n/zTXyn1J5yrPyo/vI
//KcuPi3I9aOmckaTBorU8SP/1L5i4UjMkV8GiVTxK3RMnmHf6cNf55yeEw1
PP5N5TX9v6R6Zln3P56Tz0bP1IeRY2eaE8/GyRSxdtxMEcPGyHQua/3K15tr
NGqmtbCO61PtG3wZL1MfTo+fKeJokMkvfBqZaf+Th5lqGFZlcgqTykzjkk+c
yQh6JsrkJnmUqQ8vs0xmYViRaT/Tn2eqkSeZnMXUOFMfeT/TnLjYy/Q5dtaZ
aljL9cUOLOkyWYaFbSYfyQeZargyWSbLsHCSTDUMazKNR8+kmWqcN3mmc/Fy
6kzzYOo0mSLWTpspYt4Umc7FwhUy7W32HM8CNdaaZvoeXJfpMvXh4vSZIl7O
ksk7TJo5k7nks2aq4db8mWzCodky1fBvpkzvV3pmz1TDyDkyRVycK5NxWDVP
Jr/wab5Me5tx581UI58zUx89M2Z6vzLHApnmx8WFMtmKtctkcgp7Fs3kHT4t
lili2+KZIuYtmGkM+mfIdA2YY5FMhtI/Yab3Pc/Zwpnm4bMlM/mIhUtnso+5
l800P54tn8kv7sdymWrkS2Xqo2eJTGthrJWGP3+ayshVMvmIcwdmer55TtfI
tPfwafVM9pGvmamGYRtncgqTNsq0/8lXy2QrPatmGpt8rUx9eLl+JrMwbMNM
7zz6N8hUI18nk7OYunamPvJNMs2Ji5tmivi6fSYjsGoHR+zZIpOJWLhlpohP
W2WKGLZNJgfxb4JMfnA/Ns/kOP3rZloLTm+WaU4+2zZTH17u6DkxbCdH3N3Z
EXe387msdeVM94F7sLU9ZR2n21f25XqZ5uR67ZrJUOzcy2vl2dkzk33ke7uG
W4dm2pNYtY9r2LZHJjfp2dc1jNzPETsPyGQlz8RBfi7w7JBMZjHuwa6R7+8+
enbPZDpzHOb5cfGITFZi7UmZPMKtozOZiH/HOOLWsY6Yd7jHoH83XwPmOCqT
4/Tv4mvMNTrS8/DZ8ZkMxcsTM/nI3Cd7fiw8NZNxeHaKa+QnuI+e47wWxjrD
9wcvz3TEy5Xz4T0dxs+Hx7mZ9jyunJPJQfLzXMOzKzL9b+aw6vJMfpGfnclQ
es7y2OTnuw87L8nkIP5dlsky+i91jfzCTObi6wXuI7/Sc2LhRf4ca69yDS9v
zWQHDl2byUQ8uyaT0eTXuYaRN2ZyDRevdw3PrvZ49NzgGufd5HOx8zbPg1u3
O2LeHY64e7PPxdd3Mu159votrrHWi/09uC53ug8v73LEyAcy7T38uz+TieQP
uoZbT2fae1j1kGvYdt/wWNE9D7uGkY84YudjmazEvCcy+YVnT2VyhHGfdI38
UffRc08m03nHPuP5cfG5TFZi7RuZvMCtFzOZiIUvOeLTy44Y9qzHoP9uXwPm
eCGT4/S/62uJYc97Hj57NZOh2Pl6JjeZ+03Pj39vZ3KN+/GWa+SvuY+eV7wW
xnrP82Dk+44YOX6u55vn9KNM3rHXP8y0t8k/dg1jvsnkFO+uT1zDtg88Hj2f
uoaRnzli5xeZrMTF/2VyEP++zmQZ437lGvnn7qPnW8+Ji985YuH3jhj5Zya/
MOPHTBZj4U+OePazIy7+4ohbv2VyDRd/8Hj0f+n1stZffS7njchlGW795Tkx
729HDPvHEf/+dcTgPzKZy1p/95zkj2d6fnl2//O5zDHItVfZo2PkchD/Rs/1
3iIfM1cNtybOtSexaqxcNWwbLdefJegZO1cNI8fJFbFzvFxW8kxMkOu5wLOJ
cpnFuBPmqpGPm6uPnpG55sTCIFfEyDBXxNoql0e4FeeyGBeTXBELe7kihqW5
Iv7luUzEvyjXePSPkus+8D7Jcp3LeaPmqvGd+7nmxL86V8S2JlfEszZXxOAy
l6estcg1Jzl/buTv2/i7ti7Xudwb/izK373xd2RTDev3ZnJrilz7H2OmzlXD
v1lzOYVJs+S69+ST53KTnslyeUo+Ta4+HJ0xl30YNnMu++ifKVeNfLpctuLo
tLn6yGfLNScuTp/rc0ydPVcNgxfKZRCWzJXLMiycM5eP5HPnquHWfLlMxMJ5
ctVwbo5c49Ezb64a582f61y8XDjXPDi3SK6ItYvmipi3QK5z8WyLXPuNfbZg
rhprnSHX9+C6LJarDxcXzxXxcplc9mHV0rlMJF82Vw3zVs9lEw4tl6uGi0vl
8pqe5XPVcHGFXBELV8plH+atkssvzFstlyOMu2quGvmKufroWTLX+5U51sg1
Py6ulctc/Nskl1OYsW4u+7BqvVwR89bPFTFvzVxj0L9ErmvAHOvkMpT+LXNd
S6xaO9c8fLZhLisxcuNc9jH3prnmx7DNc5nL/dgsV418o1x99GyQay2MtVWu
ebBw61wR587M9XzznG6Xaz+zd7fN5Sz59q5h2J653lv4tINrWLhNrvHo2dE1
vNzJESN3yWUi/u2Wyz4M2yOXfYy7u2vkO7uPnr08J/7t7YiL+zji7mG5DMKq
/XKZiIX7O2LhAY4YdqAjFh6cy0H829fj0b+r18taD/K5nHdMLssw7HDPiVVH
OGLYkY64e5QjFh6ay1bWeojnJJ8k13uG3wGP9rnMMWmuGh6d6POonZDr/UR+
kmu4dW6uPYlVJ7uGbcfncpOeU1zDyNOGx5S57Dwjl5U8E2flei7w7JxcZjHu
2a6Rn+4+es7znFh4viNGXuCItVfl8gi3LsplMS5e7IiFlzhi2KWO+Hd5LhPx
70KPR/+xvg+8Qy7zuZx3nGt856s9J/5d44ht1zri2XWOGHxlLk9Z6xWek/x6
f46dNzhi542O2HlbLlNw69Zc+5/8dtfw78FcTmHSA7n+HEV+Sy436bk5l6fk
d7gPR+/NZR+G3Z/LPvrvc438rly24uid7iN/yHPi4t3+HFMfdg2Dn8tlEJY8
lssyLHw0l4/kj7uGW0/lMhELn3AN5x7xePQ86RrnPe1z8fJ5z4NzLzhi7YuO
mPeMz8Wzn3PtN/bZs66x1nv8PbguL7kPF192xMs3ctmHVa/nMpH8Tdcw7+Nc
NuHQW67h4mu5vKbnbddw8R1HLHwvl32Y90EuvzDvo1yOMO6HrpG/6z56Xs31
fmWOTzw/Ln6Wy1z8+z6XU5jxZS77sOp/jpj3lSPmfeox6H/F14A5vshlKP2/
+Fpi1eeeh8++yWUlRn6Xyz7m/sHzY9hPuczlfvzoGvm37qPna6+Fsd73teG6
/Oo5cXHSQs83z+mfufYze/ePXM6S/+Uaho1Z6L2FT3+7hoW/53KTnn9cw8t/
HTFyRCET8W+0QvZh2BiF7GPc0QvVyP9zHz1jFZoT/0Yd/nxqrv6xC9UwMixk
EFaNV8hELBy3kMvk4xeq4eKEhSzDwgkK1cgnKlTDxZGFTMTCrJBfuBUVmgef
4kIRt5JCEWt7hSL+BYXGYH3jFFova0oLfc64eaGxsfCx4c9rDo+1hke/kHE3
DY+qkH3kdaEaVk1ZaB/iU1OohmdlITfpaQvVcLErFPFykkI+8hxMVuhZwLAp
CjnFuJMXqpEPCvXRM1WhOfFv6kIRF6cpFPF1tkIGYdV0hfzFwukLRfyboVDE
rRkLRcybuZCDmDdtofHo/83PL8/cTIXO5byi0PXjO89eaE7Mm6NQxLM5C0UM
m6tQxN1ZCxnKWmcpNCf53IU+x8t5CkW8nLdQxMsFC+1zLFmgkH3kCxWqYdgy
hfYhPi1cqIaF8xdyk55FCtXwctFCESMXL2Qi/i1ZyD4MW7qQfYy7VKEa+WKF
+uhZttCc+LdEoTHoX65QDSN51vACe1Ys5CCGrVDIZfKVCtVwcZVCZuHZyoVq
5KsWqmHk6oV8xMUDC+2Z2M8082DV2oUizq1TKGLtuoUi5q1RaAzWt3yh9bKm
9Qp9jn/rF4q4uEGhyPtq40Le8bxsVMhc8k0K1XBrs0Le4d+mhWrkmxeq4d8W
hSLmbVko4tzWhYzDqq0K1ci3KVTDvO0LmYV52w2PUZzv4BrmbVhovaxvR9dw
cedC5uLfroW8w4/dHLFtd0fM28MR53byGPTv4jHoX63Q/eHe7Olz8W/vQibi
377DY+JC/u3jGvl+ruHZAYXM5b7u7xr5Xh6PseYrtD94vg/y/cfIQwr5iH+H
F7KPvXtYIWfJj3ANw04q9K7CpyNdw8JDPQY9R7mGl0c7YuSxhUzEv+ML2Ydh
Jxayj3FPcI38GPfRc7LnxL9THHHxVEfcPb+QQVh1eiETsfAMRyw80xHDznLE
wnMKOYh/p3k8+o/zelnr2T6X8w729ePaXeA5sepCRwy7yBF3L3bEwvMK2cpa
z/WcM/q+8q7jPXeJz8XLywpZiZFXFrIP864oZCL5Va5xn68pZBn+Xe0a+bWu
YeR1jrh4vSMW3ljIPsy7wTXym1zDs1sKOYhhN7tGfqtruHi518v6bnMNF+8o
ZCUG31XIRPy72xFX7nHEvHsdsfB2j0H/nR6D/kt9nbhG9/lcjHygkIkY+VAh
E9lzD7pG/rBrGPloIeMw+BHXyO/3eIz1eCE38fIJR7x80hEvnynkIP49XchH
8mddw5jXCzmFW8+5hotPeQx6nncNO19wxMuXCvmIl68U8hEXXytkIuO+6hr5
i+6j5w3PiYsvewz63xoe2xZy8dNCfmHSu4V8xMJ3ChlK/p5r2PZBIR+x7X3X
yD90DS8/LmQlRo5faq+ybz7zPFj1uSP+feGIeV86YuEnHoP1ve31sqb/+XNc
/MoRC792xMjvCtnH3v220LuQ/HvXsPDHQpbh3w+ukf/kGkb+7IiLvzhi4W+F
7MO8X10j/901PPuzkIO48odr5H+5hovfeL2s72/XcPHfQlZi8IhSJmLhKKUi
Fo5aKmLYaKUiFv7jMej/z2PQ/5HvD/dm9FLn4uWYpazEyLFL2YeRY5WqkY9T
qoZh45Vyjfs6bqka+RilxmOsCUrdc4ycsFTEyIlKRYwcWco+9vTEpWrkQaka
FkalfMG/sFSNPC5Vw8ikVMTFXqmIhVkpH7EwLVUjz0vVcLEsZSL+FaVq5FWp
Gkb2S0VcrEtFLGxKRYxsS0Vc7EpFLByUing2SamIi5OWitg2WamIkdOX8gur
pihlJUZOWSpi5FSlIv5NXSri1jSlIhZOWyri33SlIuPOUGpszFu51J5kL85Y
qoaLS5fa8+zvWUo5iH8zl/ozEvmspWpYOHspy/BvtlI18jlK1TByzlIRF+cq
FbFwnlL2Yd7cpWrk85aq4dn8pRzEsPlK1cgXKFXDxQVLRSxcqFTEyIVLRQxe
pFTExcWGP79ZyMLFS0WMWaJUxL8lS0VcXKpU5LqsUuqa4dYypa4TLi5bKmLh
cqUie275UhEXVygVsW3FUhGDVyoVuR8zlboPXOv3hz/vNDx2Hh6rlpoTI28p
tW7Wu2Yp+7BkjVImkq9VqoZ/m5QyC5/WLlXDyNVLeUrPOqVqGLluqYiL65ey
Ehc3LGUiFm5cyj7G3ahUjXy9Un30bFpqTvzboNQY9G9WqoaRO5byCD+2LOUg
hm1RykryrUrVcHGbUq7h4talauTblqph5PalfMTFM0rtk2l8LZlnTF9TIs7t
4oh/uzpi3g4eg/VtXmq9rGk3f45/uzvi4h6OvPf2LmUf5u1VykTyfVzDvP1K
OYh5+7pGvr9rmHeAIxYe6Ih/B5eyD/MOco38ENcw77BSDmLeoa6RH+4a5u3p
9bK+I1zDxaNKOYh/x5SyD/OOdcS84xwx73hHzDvSY9B/tMegfzvfH+7NCT4X
F08qZSIWnjI8Ji/l38mukZ/qGhaeXspB7utprpGf6PEY60zfcyw8yxELz3bE
2nNLmYh/57hGfp5r7MULStmHhee7Rn6ha1h4kSP+XeyIi5eWchD/LnGN/DLX
sPCKUvZh4eWukV/pGhZe5Yh/Vzvi4jWOWHitIxZe54iF1zti4Q2OWHjT8Fi0
lIU3O2LKPaXMwqpbSxmDhbc5YuHtjrwr7nDEwjsdsfAuRyy825Fx7/XY+PdB
qX3I/rvPNSx8vdSeZ38/WMpc/Hug1HuL/CHXVhsej5SyDP8edo38Udcw8jFH
XHzcEQufLGUf5j3hGvlTruHZM6UcxLCnXSN/1jVcfM4RC593xMgXHDH4RUdc
fMkRC192xJhXHPHvVUdcfM1xK38/3gPY/YavEy6+6YiFbzmy5952xMV3HLHt
XUcMfs8RI+/3feBas/f43YTfRT70vcLI1fvD+avhu2N4fFbKEZz7tJSD5J+7
hoU/lLIJh74v5Rf5J6UMpefjUraSf+E+vPymlIP4910p7+j/1jXy/5UyFFO/
dB/5j54TC7/y5/j6k2tY+G8pO3Do11J+4d8vpUwk/801PPuzlIP497trGPmz
x6PnD9c47y+fi5H/eR5sG1EpYt4olSLO/e1zMXLSSnuMvfWPa6z1a38Prsuo
lfqwcLRKESPHruQdto1VyUHycSrV8C+s5BH2jFuphn9jVjKUnvEq1fBv/EoR
Fyes5CD+TVzJPpwLKtnHuCMr1cgnqNRHzxiV3s3MEVWaHwuTSvZhXlvpdx0c
yip5h3N5pYhzRaWIc3GlMegfvdI1YI60kpv0T1bpWuJTr9I8fNYf/nxjKReb
SiYyd1dpfvybpJJ93I9BpRp5XamPnrLSWrB2okrXhusyeaU5sXDVSs83z+nU
lexjz01VyUfyaSrVMG+2Sk5h0rSVarg4ZSWv6ZmuUg0Xp68UsXDGSj5i4cyV
HMS/WSt5x7izVKqRz1Cpj57ZK82JeTNVGoP+OSrVcHHhSjZh9tyVHMS/uSr5
SD5PpRoWzlfJQfybt1KNfP5KNSxcsJKD+LdkJbOwapFK82DeopUi5i1WKWLe
4pUi5i1UaQzWN2el9bKmJSp9zrhLVRob/34b/nzU8Dh6eCxXybuPhseyld5V
5MtXqmHVmpX2IT6tUKmGZ8tU+t2dnhUr1XBxpUoRL1ep5CPPwWqVngUMW6OS
U4y7eqUa+cp2lp61Ks2Jf2tXiri4TqWIr5tVMgir1qvkLxauXyni3waVIm5t
WCli3saVHMS8dSuNR/8UlZ5fnrmNKp3LeUtXun58580rzYl5W1SKeLZlpYhh
W1WKuLtpJUNZ6yaV5iTfutLneLlNpYiX21aKeLljpX2OJTtUso98J9cwbJ9K
+xCfdnYNC7ev5CY9u7iGl7s6YuTulUzEvz0r2Ydhe1eyj3H3co18N/fRs6/n
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
bRPUihg8Ya2Ikd/5PnCt+d+889/68N/nTFzLTbwMalmJhb1axmFeUssU8qaW
U5jU1TIIk9paNfK4lpv0RLU8JQ9rjU1e1zKOsfq1HCTPa7mJo1ktW8nTWmsh
H9SaE/OqWp7SP20tgzBj+loG4c3ktezDrclqWUY+Ra0aFq5W61nnGZ+qlolY
OGktQ+mZpNac5FPW6uO8GWrNg3Mz1orYNk0tQ1nTqrX2FXNMXWtsPpuu1npZ
a1Hre/OuKGtFvttMtcbDxbmGPz/bl3Nz1LIP5+auVcO5WWu9I/FykVo24dDs
tdykZ7Zan5PPU6sPCxes5R22LVzLO/oXqlUjn6+WoXg5b60+8kVrzYN/i9fy
DudWrPX7DfasUMsm8qVrGYdty9SK2LZYrTHon6XWu4HvM3Ota0C+VC0r6V+9
1n3DpCVrecpny9YaDyNXqjU/5q1Syzvux8q1auTL1zKU9S1Xq498iVrfg3Hn
r/W9eT+sUWtOfD2k1p7hOV2n1n7DtrVrOUi+bq0a/m1eyyPs2ayWWeRr1fKU
njVrjU2+Xq0+jNy4ln2Yt2kt4+jfpFaNfINabuLo+rX6yLeoNSf+bVjrc0zd
slYN/3ap5TUObVPLPszbupaJ5NvWquHfDrW8w7ntXMPCrWqNR8/2rnHejj4X
C3f1PDi3myPO7e6Iczv5XLzcs5Z3OLeza6x1o1rfg+uyh/s4by+fi4X71zIO
h/YbHiOdH+AaVh1VyxRMOrLWPiTft5aV9OxT6/d48gPdh3mH1TILw46otZ/p
P9w18oNrecqzcpD7yI/2nLh4jCPWnlbLGkw63RE/jq/lLxae4IhPJzri1sm1
vMO/yZuhecN49/A4rpbX9B9a65ll3cd6Tj47xX0YeYbnxLMzHbH2LEcMO9Xn
sta9fb25Rid5LaxjgVr7Bl/Odh9On+OIoxfV8gufLqy1/8kvdg3DrqvlFCZd
63HJL6hlBD3n13KT/BL34eVVtczCsGtq7Wf6r3aN/PJazmLqZcNjTufXe05c
vMKfY+cNri3i64sdWHJzLcuw8KZaPpLf4hqu3F7LMiy81TUMu9Hj0XOba5x3
h8/Fy3s8D6be64i19zli3p0+Fws/rLW32XN3ucZar/T34Lrc7z5cfMARLx+t
5R0mPVLLXPLHXMOtF2rZhEOPu4Z/D9d6v9LzhGsY+aQjLj5dyziseraWX/j0
fK29zbjPuUb+lPvoeajW+5U5XvT8uPhyLVux9t1aTmHPa7W8w6fXHbHtDUfM
e8lj0P+grwFzvFrLUPrPq/W+5zl7xfPw2Vu1fMTCd2rZx9zveX48+6CWX9yP
910jf9t99LzptTDWR75vGPlJLR9xLhju60trPadf1Np7+PR5LfvIv3QNw36q
5RQm/Vhr/5N/VstWej712OT/cx9eflfLLAz7odY7j/7vXSP/upazmPqV+8h/
9py4+Isjvv5XywisGtEoYs/vtUzEwj8c8elPRwz7u5aD+HduLT+4H7/Vcpz+
b7wWnP7Vc/LZP+7Dy1EazYlhozaKuDtao4i7//pc1vqx7wP34C+vhXVM0Wj/
sy+/9ZxcrzEaGYqd4zZaK8/OOI3sIx+vUQ23kkZ7EqvGb1TDtrEbuUnPBI1q
GDlho4idEzeyEvPCRs8FnsWNzGLcqFGNfKJGffSM1ch05ug1mh8Xs0ZWYu2g
kUe4VTYyEf+qRhG3+o0i5qWNxqB/zEbXgDmKRo7TP3qja8w1yhvNw2dNI0Px
smvkI3NP0mh+LJyskXF4NmmjGnnbqI+eutFaGGvKRvcHL6dqFPHy4+HPuw2P
3YfHdI32PK5M28hB8ukb1fBszuHPz9Syao5GfpFP08hQeqZuNDb5DI36sHPW
Rg7i3+yNLKN/tkY18pkamYuvMzbqI5+r0ZxYOHOjz7F27kY1vFyskR04NF8j
E/Fs3kZGk8/fqIaRCzVyDRcXaFTDs3kajUfPgo1qnLdwo3Oxc/FG8+DWEo0i
5i3ZKOLuIo3OxddtGu159vqijWqsdZZG34PrslSjPrxculHEyBUa7T38W76R
ieQrNqrh1tqN9h5WrdSohm3LNXr/0bNyoxpGrtIoYudqjazEvDUa+YVnazVy
hHHXbFQjX7VRHz3LNjKdOdZpND8urtfISqzdopEXuLVhIxOxcKNGEZ82bhQx
bN1GY9C/TKNrwBwbNHKc/m0bXUsMW7/RPHy2aSNDsXPzRm4y95aN5se/rRu5
xv3YqlGNfLNGffRs0mgtjLWd58HI7R0x8txGzzfP6U6NvGOv79hob5Pv7BrG
7Dc8RjZ6d+3iGrbt4PHo2dW1cbwvidi5RyMrcXGvRg7i3z6NLMO/vV2byPt5
XPfs7zlx8QBHLDzQESOPbuQXZhzcyGIsPMQRzw51xMXDHHHriEau4eJBHo/+
Pb1e1nq4z+W8ExtZhlvHeE7MO9axHR7HOeLf8Y4YfFQjc1nrkZ6TfPVGzy/P
7gk+lzluabRX2aOnNXIQ/05t9N4iP9013Lqw0Z7EqjNcw7ZTGv1Zgp4zXcPI
sxyx85xGVvJMnNfoucCzCxqZxbjnu0Z+tvvouchzYuHFjhh5iSPWXtfII9y6
rJHFuHi5IxZe4YhhVzri39WNTMS/Sz0e/Sf5PvA+ucrnct7JrvGdr/ec+HeD
I7bd6IhnNzli8LWNPGWt13hOct4T/J7L77g3+1zuzQLt0N5hfGV43NXIFNy6
s9H+J7/bNfx7tJFTmPSI7z35HY3cpOf2Rp6S3+M+HH2wkX0Y9nAj++h/yDXy
+xrZiqP3uo/8Mc+Ji/f7c0x93DUMfqmRQVjyVCPLsPDJRj6SP+0abj3XyEQs
fMY1nHvC49HzrGuc97zPxcuXPc/mvnZErH3VEfNe8Ll49kej/cY+e9E11vqA
vwfX5TX34eLrjnj5TiP7sOrtRiaSv+sa5n3eyCYces81XHyrkdf0vO8aLn7g
iIUfNbIP8z5p5BfmfdbIEcb91DXyD91Hz5uN3q/M8YXnx8WvGpmLf780cgoz
vm1kH1Z954h53zti3v+Gx77uf8PXgDm+aWQo/X/6WmLV156Hz35sZCVG/tzI
Pub+1fNj2O+NzOV+/OYa+U/uo+cHr4Wx/vI8WPi3I85N2er55jn9r9F+Zu/+
28hZ8hGtahg2bqv3Fj6N0qqGhf94PHpGbVXDy9FaRYwco5WJ+DdWK/swbJxW
9jHu2K1q5KO36qNnvFZz4t/4rSIuTtAqXjg8eq0MwqqJWpmIhRO3ilg4slXE
sKBVxMKolYP4N2Gr8egfs9V6WWvY6lzOq1pZhmFpqzmxKmsVMSxvFXG3aBWx
MGllK2uNW81Jfmuj9wy/A5atzmWO21zDo67VedTaVu8n8kGrGm5N22pPPjg8
JmlVw7amlZv0TNqqhpGTtYrYOUUrK3kmpmr1XODZNK3MYtypW9XIJ2/VR890
rebEwulbRYycoVXE2rlaeYRbM7WyGBdnbhWxcJZWEcNmbRXxb/ZWJuLfjK3G
o7/f6j7wDpmt1bmcV7eq8Z3nbjUn/s3TKmLbvK0ins3XKmLwnK08Za1ztJqT
fP5Wn2Pngq3cxEv+fpN/C+LfgRZrZQpuLdpq/5Mv3qqGfyu2cgqTVmj15yjy
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
KSPvyCtm5NMqGfVwZ83IXTMybNWMerjM2BUysnC1jHo4uHpGNTatEbljRh51
jtwpozvNel0yuttkejjIWObzvcray2fkX7eMzoGp3SOvlZE1vSNvkJFH60Tu
kZFPPTOqsa1XRjWmMo+1+K5gbZ4FPjJv7Yy+j/l8/dlGnvIz9sO+9SKvm5F5
7Ll+Rn5tmNE5cIv3YaOM/CLTw0fGMh9bWYMzYeLGGb1/uNY/cj9/LsdFHJTR
ndss8qYZ3T3ygIzM2iLy5hkZtEPk7TO69+TtMvKRsZtkZCeZPTBvYEbzsWpQ
5G0y8oJ522bkGZkehm4VecuMfCUzH/92zGhvXNwpoxobdo88PCNr9sioxr5d
I++SkUeDM6rxabeMarwbGnlIRr9v/WlHMJR5O2fk8tYZnQnL+Rl74+OwjOZj
1p4Z7Y1hIzKqcXavjGr84ozM4TuJZ8/7gaPsz5m4h7MychbTeU7sjZX7RN47
ozOOjjwqo7OSR2b0Odo/ox53cULEIRkZNiajHj4ydr+MnDsgox5GHphR3caf
hbEZuXWwPx+p1xufkVnj3cNTxjIfi1l734wcnOhzYOSkiEMzcmh6xFEZeTc1
YkpGTh3mGrcOd13wPNbie4K1eRZlz5uc0fcKz4ZnXfLP2A8fj4w4IiP72HNa
RvYd7XPgF99pMzIyboZ7TY9lft1rcCZ8PNbvEz7Odv1yRP8k3tdEd31uxPEZ
3XnycRkZc4J72HR6xGkZuUU+NSMrGTsnI0PneA/8O9Hz8W5BxPyMDGPeKRlZ
dop7eHpyxEkZWXuS52PfGd4bW+d5HC6e6R5mXBJxcUZ+nRNxdkYmks/KyLZz
3cOzCyLOz8iv89zr6rGsu7b79LDyQs/BqUu9H25d5hrzLneNpxd5Dnf7qYgn
M3LtYvdW9fPg9eDjFZ6PiVe65s5dF3FtRnePfE1GTl3vHnfuzog7MjLsBvf6
euzVGTl3o3sYeZNrjLsl4uaM3Lot4taM7jDr3Z6RI7e7t7nHLsz4OzXiqowc
vMvnwMh7Iu7OyInHIh7NyL77I+7LyKMHXOPTg6639TzW2shr8yx28Lx7MzLr
aT/T7f0z9sPKhyMeysgm9nwkI+8e9zmG+314IiPXnnBvsMcyfxevwZkw8Rnv
h4nPuuZz+UfE7xnd7Rcins/oTpOfy+jev+gePr0V8WZG3rzk3l4ey7o4t8g9
jHzZNQ6+GvFKRt69HvFaRoax3hsZWfaGe6M9lvk4+Lb3xr53XGPhu64x4vOI
zzKy7/2I9zLy6wPXePaha5z6yDWefRLxcUbWvud1x/iMnHuy+8zBqW8ivs7I
p8XeG7O+cI1hX7rGv69cH+YzfpqRuZ96b75r+czyOZ7utZnDnWyGbY1E3v0Y
8UNGDpK/z8ipn9zjLv4T8XdGhv3s3jEe+11Gzv3iHkb+6hrj+Cz8lpFbf2b0
+Zjn9f7KyKy/3JvrsczHvn+9Nxb+5xoj2ySqcagc/7mUyMEkciaRfdlENWal
iWoMyyWq8a4QOZ/IbOaxLt8b3/r9wEj6zJnp10oP7yqJ9sayaqIav2qJajyr
J6qxkjMWE3lKZm/+LM73B98buMl7wpy1I85nXiJL2kVeKtG9J7dNZFj7RD0M
WiXyyonec/JKiYxg7JKJ3CQvkcjLpRPNx6wV+K5L9Flh3oqJPCPTw81lIy+T
yFYy8/Fv1UR7Y2iHROMwcrVEPezoHnmtRIatEbljIsvIqydyqlOiHvZ1jdwl
kWGdE/UwlLGsi3n06eHjmonmYBXPjv1wroefJcatk6jGr26J5nCvdo28SyLb
OCM9vgOWS/R6cLBnovm42CtRjU29I2+QyD7y+onc2jBRD3c2i7xpIv82StTD
Tcaul8jBPol62Nc3UY1x/A6ycSK3Nkn0ewl+sN6ARI6Q6eEjY5nPdwBrr5vI
v80TnQPvBkbeIpERO0beIZFNW0feKpFV2ySqMW5QohpTmcdafFewNs8CK5m3
ZSKbBid6pnjKz9gPE7eLvG0i89hz+0RW7ZToHHjH+7BzIs/I9PCRsczHWdbg
TNi3W6L9cG1IoprP5bERsxLd1eGRhyW6z+Shie7x7ol6eDQq8shEnu2RqIeX
jGVdXNwzUQ8TRySq8W7vyHslMmvfyPskMo/19kvkGZkebjKW+Xg3OtHe+Ld/
ohoXxySqsWdixIRE9h0Y+YBE9o1NVGPWQYlqDBvnGu/GRxycyFDmsS4uc0bO
nbjPHMw6LGJqIpsO9d5YNck1hk12jX1TXOd8xkMS2XqI9+Z3vlai75uK12YO
v8/hUMtxVMQ0jyMfmag/3T1smhtxfCLDjnav4bFHJHJuhnsYOdN1e38Wjknk
1mx/Prjbx0XMSWTWHPfaeSzzse8E742FJ7rGyJNc49CZEWckcnBexMmJ7Jvv
GrMWuMawU1zj3WkRpyYy+2Svy3fG4X4/OrrPnLpfKz28O8t7Y9nZrvHrHNd4
dq7rzj7j6Yk8Pd17P1iMOaVYoyQ3z/OcEWkYF/FMKqsui7g0kSvkSxJ5dH3E
dYkcujHihkQe3eDeuh57cSIvyBclMpR8YSLnWOPaRIaRr0lk5ZURVyTylHx5
Imsv95mw8Cbv3dfzrk7kxN0RdyXy496IexJ5dGvELYk8I9+cyKrb3OPz/VHE
h4kcvCPi9kT2MXZhIk8Xeu+t3Gc+tt3n/XDtfteDfJY7E90l1v4gka13eo/t
fEbOzffBVX79ffyaqDHxAa+LT49HPJbIKfKjiZx7wj0sfjjioUQGvRjxQiIr
GftIIkMf8ThMfNLzseq5iGcTmcG85xPZ8bx7mPh0xFOJ3HzK8zHvJe+HcS9H
LErkwrsR7ySyh/x2Ip9ej3gtkWtvuB7peay1i1/Hg4m+Hx70sxjjea8m8uhj
v3/7+2evJPLxTa+LT+/5HBP9PryfyLD33Rvnc72VyNO3PH+01+P18B3wjF8/
rn3ivflctrLhWVb3dXHE54nuLfmzRG594R7u/BTxYyKbyD8kuv+M/TSRnZ96
D4z80vNx6ruIbxM5x7zvExn2vXtY+XXEV4k8/crzMe9n742b33gczv4a8Usi
IzL8hW1W3v0R8XsiB8m/JTLrT/cw7p+IvxN59pd7cz2Wdee5Tw8H//UcTEqy
2g+rslnVGJdmVePgf56Dcfn4WS4rIzkjvRl+HrweTKTPfBwsZDUHd6qRKxEX
JMrlrEyqZdXDkvaR22V1/8hLZfW7OWNLWXlJLmZlWz2r+Vi1ZOQlsrq3zGub
1X0m08NRPiONrIwkMx//ls5qb1xcJqsaY1aNvEpWXqyWVY19y0XukJVHy2dV
49MKWdU4t1LkFSO2oI64OSunmbdsVqZyXj672M3P2BsTV85qPlatntXeeNYx
qxqz1siqxkHOyBy+S3g2PHfsZH/OxO9Az/r+YF6nrObjZuesajzqHnmtrO49
uVtWVq2dVQ+DNozcO6v1yBtkZQNj18zKCHLXrMzrkdV8rFov8rpZnYN562d1
n8n0MLRn5HWy8pXMfPzbKKu9sbJXVuMwsk9WPcwY6OeNYf0ib5yVZeS+WTnS
P6sehm0aeUBWxmySVQ9DGcu6eEafHj5ultUcrNoyq/0wdausaozbOqsa+zbP
ag53bFzEQVm5xhnpYTfPg9eDg9tkNR8XB2VVY9COkXfIyjvy9ln5tFNWPdzZ
PfLwrAzbOaseLjN2u6ws3CWrHg7umlWNTbtFHpyVR0MjD8nqTrPesKzuNpke
DjKW+Xyvsva2Wfm3R1bnwNQRkffMypoDIo/JyqN9I++TlU/7ZVVj28isakxl
HmvxXcHaPAt8ZN7eWX0f8/nqkpWne2W1H/aNjjwqK/PYc/+s/Dowq3O08fsw
Niu/yPTwkbHMx1bW4EyYeLDfP1w7JGK8P5cXRJyf1Z2bFHFoVnePPDErqya7
h0FHR0zP6t6Tj8rKR8ZOyMrOCd4D86Z4PlYdGXFEVl4wb1pWnk1zD0MPi5ia
la9TPR//ZnhvXJzpGhtOjDghK2tOco19x0bMysqj2a7xaY5rvDs+4risft/i
fcCR9p53TFYuH+4ztfPP2Bsf53o+Zp3svTFsnmucne96BZ+ROVk/e96PDt6f
M3EPb83K2bqfE3tj5SkRC7I645kRZ/is5NOz+hyd5R538ZKIi7My7Gz3Onns
aVk5d457GHmua4zjs3BeVm5dmNXno5fXuygrsy5yr7vHMn8Nr31qVg5e6nNg
5OURl2Xl0I0RN2Tl3VURV2bl1NWucesa1+t7Hmt19No8iw0974qsvlcW+Fn3
9s/YDx+vi7g2K/vY8/qs7LvJ58AvvtMWZmXcQvf6eyzzN/YanAkfb/P7hI+3
u87Gn3nGRxyc6q7fHXFXVneefGdWxtzjHjY9FvFoVm6RH8nKSsbekZWhd3gP
/LvX8/HuoYgHszKMeQ9nZdnD7uHp/RH3ZWXtfZ6PfY97b2x9wONw8Qn3MOPl
iEVZ+fV0xFNZmUh+MivbnnEPz16IeD4rv551b7jHsu7e7j+XlZUveg5OveL9
cOtV15j3mms8fclzuNt/RPyelWuL3NvZz4PXg4+vez4mvuGaO/duxDtZ3T3y
21k59Z573LnFEZ9nZdj77o3z2Leycu4D9zDyQ9cY93HER1m59WnEJ1ndYdb7
LCtHPnNvkscy/yCv/WZWDn7hc2DkVxFfZuXELxE/Z2XftxHfZOXRd67x6XvX
0zyPtcZ6bZ7F0Z73dVZm/elnOt0/Yz+s/DHih6xsYs+fsvLuV5/jBL8Pv2Xl
2m/uzfZY5s/yGpwJE//yfpj4t2s+l53j3nRKdbf/i/g3qztN/iere89/IZQe
PpXjP5dSeZNJ1ZvvsayLc0mqHkZyP6lxMBc5TeVdIXI+lWGsV0xlGZkenjKW
+ThYSbU39lVT1VhYS1VjRPvI7VLZ14hcT+VXM1WNZ61UNU4tkarGs7aRl0xl
LfNYF6M5I+fGNvrMwanlIy+XyqelU+2NWcukqjFs2VQ1/nVIVWMrZ1wqlblk
9p7izyyfY3xkbeZwJzeJ3D+Vd6tEXjmVg+SVUjm1aqoed7Fb5DVTGbZaqh7f
bYxdMZVzq6fqYWTHVDXG8VlYI5VbXVJ9PrjbrNc1lVlkenjKWOZj31qp9sbC
7qlqjFw7VY1DG0XeMJWD60Tukcq+nqlqzOqVqsawdVPVeLd+5PVSmc081uV7
Y4VU7wdG0mcO3y28Vnp41yfV3ljWN1WNXxunqvGsX6oaKzlj71SebpBqb/5O
gj9/8mdK3OQ9YQ5/33Che1gyMH62Rap7T948lWFbpuph0E6Rd0z1npN3SGUE
YzdL5SZ501RebpVqPmZtF3nbVJ8V5m2fyjMyPdzcJvLWqWwlMx//dk61N4YO
SjUOI3dJ1cMO/nninqkM2y3y4FSWkXdN5dSQVD3sGx55WCrDhqbqYShjWRfz
6NPDx91TzcGqvVLth3N7p6oxbp9UNX7tkWoO9+rYiFmpbOOM9PgO4HnwenBw
31TzcXG/VDU2jYm8fyr7yKNTuXVAqh7uHBoxMZV/B6bq4SZjR6VycGyqHvYd
lKrGOH4HGZfKrUNS/V6S93oTUjkywb2MxzKf7wDWHpnKv0k+B95NiZicyogZ
EUensunwiMNSWXWEa4w70nXJ81jr/9/ZqZ5F1fOmprJptp9pxT9jP0w8KmJa
KvPYc3oqq2b6HO39PhyTyrNj3FvCY5nf9BqcCfvmeD9cO841n8vbI25LdVdP
iJib6j6Tj091j090D4/OiDg9lWcnubecx7IuLp7sHibOc413CyLmpzLr1IhT
UpnHeqel8uw091b1WObj3ZneG//Oco2LZ7vGnksjLkll37kR56Sy7zzXmHW+
awy7wDXeXRRxYSpDz/G6q/uMnHsd95mDWddEXJ3Kpsu8N2ZdEXF5KsOudI19
V7le12e8OJWtF3tvfucbkOr7po/XZg6/z+HQAMeNETd4HPn6VP2b3OMu3h1x
VyrDFrrX32OvS+Xcze5h5C2uMY7Pwq2p3Loj1edjkNe7M5VZd7o30GOZj333
eG8svNc1Rt7nGoeeiHg8lYMPRNyfyr4HXWPWQ64x7GHXePdoxCOpzL7f6/Kd
ca3fj8HuM6efXys9vHvSe2PZU67x62nXePaM66E+42OpPH3Me/PPg/kzzG62
87lUf/czqBDPJ+LOgqx6JeLlVK6QF6Xy6N2Id1I59H7Ee6k8es+9kR77Uiov
yC+mMpT8QirnWOPtVIaR30pl5esRr6XylPxqKmtf9Zmw8APvfZDnvZnKiS8j
vkjlx9e81lQefRLxcSrPyB+lsupT9/h8L5kLe3Jy8POIz1LZx9gPU3n6ofc+
zH3mY9s33g/XvnV9pM+yONVdYu1WTrYu9h5H+Yycm++DN/z6x/o1UWPid14X
n36N+CWVU+SfUzn3m3tY/GPED6kM4n+Y9V8qKxn7UypDf/I4TPzd87Hqn4i/
U5nBvH9T2fGve5j4Z8Qfqdz8w/MxL5PTfhiXjZzk5EItcjUne8iVnHwqRM7n
5FoxpxpHmcdas/w6vk/1/fC9nwWuMS+Xk0dtc3r/MJSfpTn5WMppXXyq53QO
jGtGbuRkGJkeJnKuck6ekpmP0azH6+E74C+/flxbKqe9+VxuErl/Tvd1mchL
53Rvye1zcmvZnHq4s1rkVXOyibxKTvefse1yspPMHhjZIaf5OLVS5BVzco55
K+dkGJkeVi4febmcPCUzH/NWz2lv3Fwhp3G42DGnHkb0iLx2Tt51jtwpJwfJ
a+RkVpecehjXLfKaOXnWNacehjKWdTGRPj0cXCunOZi0Tk77YVXPnGqM65VT
jYPdc5qDcetFXjcnIzkjPdznefB6MJE+83Fw/Zzm4E6fyBtFPJ8qb5iTSX1z
6mHJwMhb5HT/yJvnZCRje+dkJXmDnGzbOKf5WLVp5AE53VvmbZbTfSbTw1E+
I/1yMpLMfPzbMqe9cXGrnGqM2TnyTjl5sUtONfYNirxNTh5tm1ONT9vlVOPc
DpG3j5hMHfFRTk4zb+ucTOW8fHaxm5+xNybumNN8rNo1p73xbHBONWbtllON
g5yROXz/8Gx47tjJ/pxpnl3h/mDekJzm4+bQnGo8GhF5z5zuPXmPnKzaK6ce
Bh0QeUxO65H3z8kGxu6ekxHk4TmZt3dO87FqVOSROZ2DeaNzus9kehi6b+R9
cvKVzHz8OzCnvbFyv5zGYeTYnHqYMcXPG8MOjhiXk2Xkg3JyZLx7GDYxYkJO
xhziXhuPZd2c+/Tw8VDPwaqp3g9TD3ONcYe7xr5JnsMduyDi/Jxcm+wedvM8
eD04eITn4+KRrjFoZsSMnLwjH52TT8e4hzsnRZyYk2Gz3FvSY6fnZOGx7uHg
bNfYdFzEnJw8mhtxfE53mvVOyOlun+Desh7L/CW89lE5+Xeyz4Gp8yPm5WTN
ORFn5+TRqRGn5OTTaa6x7XTXq3gea7W89rScfGTegpy+j/l8DcvJ0wXeD/vO
jDgjJ/PY86yc/DrX51jb78N5Ofl1nntdPZb5nb0GZ8LEC/3+4drFERfl9Ll8
PuK5nO7c5RGX5XT3yJfmZNUV7mHQTRE35nTvyTfk5CNjL8nJzku8B+Zd6flY
dV3EtTl5wbzrc/Lsevcw9OqIq3Ly9SrPx7+F3hsXb3aNDfdG3JOTNfe5xr7b
Im7NyaPbXePTHa7x7q6IO3P6fYv3AUcGet4tObl8jc+0hX/G3vh4t+dj1v3e
G8MecI2zD7rezmdkTk8/e96Pbbw/Z+IefpKTsxv7ObE3Vj4c8VBOZ3wi4nGf
lfxYTp+jJ93jLi6KeCknw55yb4jHPpqTc0+7h5HPuMY4PgvP5uTWCzl9Pvbz
ei/mZNaL7o3wWObv5rUfycnBl30OjHw14pWcHHo/4r2cvHsj4vWcnHrTNW69
5Xq057HWYK/NszjA817L6XvlIT/rMf4Z++HjOxFv52Qfe76bk30f+Bz4xXfa
hzkZ96F74z2W+eO8BmfCx0/9PuHjZ6575uM9jbgwr7v+VcSXOd158hc5GfO1
e9j0a8QvOblF/jknKxdHfJ6ToZ97D/z7xvPx7seIH3IyjHk/5WTZT+7h6XcR
3+Zk7beej32/eW9s/d7jcPF39zAjG68jycuvvyL+zMlE8h852fa3e3j2X8S/
Ofn1j3sneizrLnCfHlbyfw7BHJxK89oPt3J51ZiXz6vG00xec7jbnSN3yss1
zkhvlp8HrwcfC3nNx8RiXjV3rha5mtfdI1fycqqeV487t3Tk9nkZ1sirh5uM
LeflXDOvHka28qoxbsnIS+Tl1lKR2+Z1h1mvXV6OkOnhKWOZj+WsXcrLwWXy
OgdGdoi8bF5OrB55tbzsWyHy8nl5tGJeNT6tlFeNqcxjLb4fWJtngaHMWy4v
s7rk9UyxnJ+xH1auEnnlvGxiz1Xz8q5jXufAM96HNfJyjUwPWxnLfBxlDc6E
iV3z2g8T18yr5nM5LPLQvO5298hr5XWnyd3yuvdr59XDpw0j987Lmx559bj/
jGVdnFsnr97jvp/UOLhu5F55ebd+5PXyMoz1NsjLMjI9PGUs83Fwo7z2xr4+
edVY2DevGiMGRt4iL/v6Rd44L7/651Xj2SZ51Tg1IK8azzaLvGle1jKPdTGa
M3JubKPPHJzaNvKgvHzaMq+9MWurvGoM2zqvGv+2yavGVs64eV7mktmb71o+
s3yO8ZG1mcOdPCRifF7e7RR5x7wcJO+Ql1M759XjLu4ZeY+8DNslrx7fbYzd
Pi8TB0feNS8jd8urxjg+C0Pycmt4Xp8P7jbr7Z6XWWR6eMpY5mPfiLz2xsK9
8qoxcu+8ahw6MPIBeTm4b+R98rJvv7xqzBqZV41ho/Kq8W7/yKPzMpt5rMv3
xnZ5vR8YSZ85fLfwWunh3di89sayg/Kq8Wucazw72DVWcsYxeXlKZm/+LM73
B98bWb8nzJnPHMbmZcmUiMl53XvypLwMm+oeBs2MmJHXe04+Oi8jGHtoXm6S
J+bl5WGej1lHRUzzZ4V50/PybLp7uHlExOF52Xq45+PfMd4bQ4/0OIyc5R52
zIs4OS/D5kTMzssy8rF5OXWce9h3QsTcvAw73r2lPZZ1l3efHj6e6Dmr+tmx
H84tcI1xp7jGr5M8h3t1W8Stedl2sntNPw9eDw6e6vm4eJprbDo74qy87COf
mZdb57iHO5dFXJqXf+e618Vjz8jLwfPcw77zXWMcv4NckJdbF+f1e8l6Xu+S
vBy5xL0eHsv8zl779Lz8u9znwLsrI67Iy4iFETflZdM1EVfnZdW1rjHuOte9
PY+1OnltnkUfz7sqL5tu9zPdyD9jP0y8IeL6vMxjzxvzsupmn2Og34db8vLs
FvcGeCzz+3sNzoR9d3g/XLvTNZ/LzyI+zeuu3hNxd173mXxXXvf4Xvfw6ImI
x/Py7D73Bnks6+Li/e5h4gOu8e7hiIfyMuvRiEfyMo/1HsvLs8fcw80HPR/v
nvTe+PeUa1x82jX2vBLxcl72PRvxTF72Pecas553jWEvuMa7lyJezMvQZ7zu
YJ+Rc+/rPnMw662IN/Oy6VXvjVWvucaw111j3xuuR/mMi/KydZH35ne+CXl9
34z12szh97mJ7hHvR7znceR33f/APe7ilxFf5GXYh+6N99h38nLuI/cw8mPX
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
PVMs52fsh5U7Rd6xKJvYc+eivBtc1DnwjPdht6JcI9PDVsYyH0dZgzNh4vCi
9sPE3Yuq+VzOjTi+qLs9IvKeRd1p8h5F3fu9iurh0wGRxxTlzd5F9bj/jGVd
nNunqB5Gcj+pcXBk5P2K8m505FFFGcZ6+xdlGZkenjKW+Th4YFF7Y9/Yomos
PKioGiOmRkwpyr6DI8YV5dd41zg4IeKQopya6BrPJkUcWpS147wuRnNGzl1w
nzk4dVTEtKJ8Osx7Y9bhrjHsCNf4d6Trss84uShzJ3tvvmv5zPI5bnpt5nAn
L464qCjvjomYWZSD5BlFOTXLPe7iyREnFWXYse619diji3JutnsYOcf1cv4s
HFeUWyf487GS1zuxKLNOdK+DxzIf++Z5byyc7xojF7jGoXMjzinKwVMjTinK
vtNcY9bprjHsDNd4d1bEmUWZfYrX5Xtjut+PLu4zZ0m/Vnp4d573xrLzXePX
Ba7x7ELX3XzGs4vy9Gzvzd9J8OdP/kzZ0+8Jc/j7hv/cw5IrI64o6t6TLy/K
sKvcw6CbIxYW9Z6TbyrKCMZeVpSb5EuL8vJqz8esGyKuL+qzwrwbi/LsRvdw
89qIa4qy9RrPx79bvDeGXudxGHmre9jxQMT9RRl2R8TtRVlGvq0op+50D/vu
ibi7KMPucm9Lj2Xdbd2nh4/3eg5WPej9cO4h1xj3sGv8us9zuFefRXxalG33
u9ffz4PXg4OPeD4uPuoam56KeLIo+8hPFOXW0+7hzisRLxfl3zPuDfPYx4ty
8Fn3sO851xjH7yDPF+XWS0X9XjLK6y0qypFF7u3tscwf6rUfK8q/V30OvHs9
4rWijPgo4sOibHor4s2irHrbNca943qM57HWEK/NsxjreW8UZdPnfqYH+mfs
h4nvR7xXlHns+UFRVn3sc0z1+/BJUZ594t5Ej2X+IV7j3aLsW+z9cO0L13wu
25XCs5Lu6tcRXxV1n8lfFnWPv3EPj36L+LUoz751b5rHsi4ufuceJn7vGu9+
jPihKLN+jvipKPNY75eiPPvFvVkey3y8+917498frnHxT9fYk8bryJZk398R
fxVl3z+uMetf1xj2n2u8y/AvUSnJ0L+87myfkXPjI33mYFY5/nOpJJtyJe2N
VfmSagwrlFRjX7GkGh85Y1KSrWT25ne+S4r6vsFH1mYOv89d6h7RiJ/VSxpH
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
qrFvs4pqjNsi8uYV2Uemh18DK+ph1laRt6zINjI9PNu6oh72bVNRjYWDKqox
ctuKahzcrqIa+7avqMaUHSqqMWbHimr826miGvt4HtT87svr5Bng364VPS/s
G1xRzR3braKaOzekohrLhlZUY9uwimpM5HuGmu8injHvB39O405yFzFxz4re
s/2r8XwjXqnKj33jZ/tU5Ah574rM26+iHu4cHDGuIpvIB1VkJWP3qshQ8oiK
fBwVeWRF3h0Y+YCKnGPe2Iq8I9PDzv0jj67IUDLzMW+898bTMRWNw75D3MOM
IyOOqMitQyMmVuQXeUJFfk1yD++mRkypyLbJ7uU8lnXL7tPDxMM8B8umeT9s
O8o1rk13jYmHew536ZKIiyty7Qj3+D7gefB6sO9oz8fCGa6xbHbEsRV5R55V
kXNz3MOaBRHzK/LuOPfae+wxFXl3vHv4N9c13p0YcUJFrp0ccVJFrrHevIrM
m+feCh7L/HZee2ZF5p3ic2DcaRGnVuTOBRHnV+TamRFnVOTaWa5x7WzXHT2P
tZby2jyLzp53ekUeXepn2sk/Yz8cPDfinIosZM/zKvLuQp+jl9+Hiyqy7yL3
unss87t5Dc60kp8Hzwj7LvPefC5fjlhU0R27KuLKiuwjX1HR/bvaPQy6JeLm
ivy7xr3eHnt5RQ5e6x72Xeca+26IuL4i726KuLEi51hvYUXeLXSvv8cyH+Nu
9d4DPI+18O829zDpwYgHKvLuzog7KnKQfHtF9t3lHt7dE3F3RQ7e7R723ese
3t0fcV9FNj0e8VhFxj3k/TDuYdcY94hrjHvU9U4+F2tt5bNw7iFej3F494T3
KIRlh0ZMrMq5ZyKersg78lMV2fSse9y/1yNeq8it59zb3WOfrMi2593DxRdc
j/T7/1JFVr1S0WdijNd7tSKnXnUPQ1/0fLx7w3vj35uucfEt19jzScTHFdn3
TsTbFXn3rmuces81br3vGuM+jPigIqff9rp8h/NZ43M80X3mDPdr5Tli3Kfe
G78+c41Zn7vGsMWuJ/uMH1Vk6EfeGx+/8Dh8/NI1Pn7lmvv9XcS3Fd1z8jcV
ufK9e9y/PyP+qMizH9w72mO/rsjFH93DxJ9c490vET9XZNZvEb9WdJ9Z7/eK
PPvdvTkey3y8+8t7H+95rIWFf7uHE3zm8lWZ9V/EvxU5SP6nIs/aVNXDqiT+
c6Yqs8j0sC1bVQ8Hc5HTqu7GWpG7VWVTsar9sKpUVY1z5apqjKtUVeMX52Kt
+T4L58a7alXj8K9WVf3/76eqaj4frcjNqrwjN6r67CxRVQ/n2kZesirDyPTw
bqmqehjXrqoa19pXVWPTMpGXrso4Mj3cWraqHlYtF7lDVWaR6WHc8lX1+A7g
XJwb/1aoqod3K0VesSovVom8clV+rFpVjW2rVVXj2upV1ZjKPNbCR+axFt9V
vCe8T3jXsao5eNcp8hpVedclcueqLCTTw6+uVfWwj/dzzapsI9PDUdZg3en+
XHNPMLF7VZ8DvOsRee2q7mqvyD2rso+8TlX3eN2qenjUP3K/qjxbr6oedjKW
tXBx/ap6mLhBVTXebRi5d1Vm9Ym8UVXmsd7GVdlH7luVm4xlPt5tUtXe+Deg
qhoXN62qxp5tIw+qyr7NI29WlX1bVFVj1sCqagzbsqoa77aOvFVVhjKPdXGZ
M3JufKTPHL5LeGY8R2zarqq9sWr7qmoM26GqGvt2rKrGR864TVW2ktmb3+95
v3mf8XGnquZg4i6Rd67KuN0iD67KPvKuVb2vQ6rqYdiwyEOres/J9LBweFU9
HNy9qhr79qiqxrgRkfesyj4yPfzaq6oeZu0Tee+qbCPTw7N9q+phNOfi3Di4
X1U9jBwVeWRV3vFnhtFVOTKmqhpXDqiqxrwDq6oxlXmshaHMYy2+P3g2PC9M
HFvVHCwcF3FQVXdsfMTBVZl4sHvcv0Pcwza+5ydUZdwE99p4DdbFx0lV/U6A
j5Nd4+MU13h3eMRhVTlInlqVKUe4h0/HRsyqypsj3at4LGth5DT38PEo17h4
dMT0qhycGTGjKu9Y75iqTDzGvSU8lvk4ONt7t/U81sLBOe5h0CkRC6qyb27E
8VX5SD6uKstOcA/LToo4sSrnTnQP5052DxPnR8yr6p7cHXFXVTad6v2w6jTX
GHe6a8w7w/VqPhdrdfBZODcOnulx2HeWayw82zV39byIc6uyj3xOVff4fPcw
7MKIC6qy7AL3sPAi93DwYtfYd4lrjLss4tKq7LvUPfy63D0cuTLiiqpsu8I9
jLnKvW4+F+fGwWsirq7KyOsirq3Kvhsirq/KvhtdY9ZNrjFsoeuNPY+1+nse
a63i94T3CR9v9hxMvDXilqrMuz3itqrsu809zLrDvUF+P++syrM73dvCa7Au
Jt7j9x4T73WNife55g4/EHF/Vfbd7x73+0H3cOXhiIeq8uUh97DwEfdw8FHX
2PeYa+x7IuLxqlx83D0cfNI9vHs64qmqTHzKPSx8xj0cfNY19j3nGgufd42D
L7jGvhdd49dLrvFskWsse9k1tr3iGpvejXinKhNfq+qfs2Di667x7g3XOPWm
a9x6yzXeve36YK9HjXHveQ/uXptaOFqVf++7x33+PeK3qrz7KOLDqhwkf1CV
fR+7h2GfRnxSlWWfuIeFn7mHg5+7xr7FrjHuy4gvqrLvC/fw6yv3MOubiK+r
su1r9/DsW/ew7zvXWPi9a4z8wTUO/uga+35yjSk/u8aYX1zj36+u5/p5UONU
pqZnh39/+Hlh35+uuWN/uebO/e0ay/5xjW3/usbE/1xP9DPm/Vgp9jiJfWoy
Malpb863d+S9arIjHzlXk33ktCZXCjX18KgVuVmThcWaerjJ2GxNJpZq6uFg
uaYaB6uRKzXZV49cq8k81mvUZB+ZHo4ylvl4t0RNe2Mo81gLC5esqYcXK0Ze
oSaz2kduV5OD5KVq8mzpmnp4tmzkZWpyjUwPEzvU1MPB5SMvV9N92CLy5jX5
xDNlP1xbuaYa51apqca4VWuq8ZFzsRZet63p3Hi3Wk3j8G/1mur/f8/VVGNc
58idarKPvEZNxnWpqYdxa0buWpN/ZHoY162mHuatVVONd91rqjGuR+S1a7KP
TA/j1qmph3G9IvesyT8yPYxbt6YeRnMuzo1/69XUw7sNIq9fk3EbRu5dk3Eb
1VRjXJ+aaozrW1ONm8xjLaxkHmvxXcV7wvuEgxvXNAf7+kfuV5N3AyJvUpOL
ZHrYt2lNPbzj/dysJgfJ9PCUNVgX+wbW9N5j35Y11Vi4VU013m0TeeuaTCTT
4+4NqqmHedtF3rame0mmh33b19TDux1qqvFvx5pqvNs58k41OUimh3271NTD
vMGRd63JPjI97Nutph7eDampxr+hNdXYN6ymGvuG11Rj3+411di3R0019u1Z
U419I2qqsQ9LqLFpTOT9a7Jvn5qswb59a6qxcL+aauwbWVONfaNqqrFvdE01
9rEeNd4dUNMe/B0q/0yNf96GfQfW1OM+HxsxqybvxkUcVJO55LE1WXiwexh2
SMT4miwb7x4WTnAPBye6xr5DXWPc5IhJNdk3yT38muIeZh0WMbUm26a6h2eH
u4d9R7jGwiNdY+Q01zh4lGvsm+4aU452jXczI2bU5N8xrtv7eVDzu2/WzwD/
Zvt5Yd8c19yx41xz5453jWVzXWPbCa4x8UTXfBfxjHk/+N838t99578Xj48n
1/SdhH3zI+bVZNvpEafVZAn51JoMuiDi/JrsuSjiwpoMutC9jh57Sk1ukhfU
5OkC77G21zivJuPI59bk5VkRZ9bkJvmMmmw9w2fCuIu991qed05NRlwbcU1N
vlwfcV1NTl0ecVlNhpEvrcmwK9zjM/1yxKKa7Lsq4sqavGPsJTUZeon33tB9
5uPZDd4Py2503ddnubqm+8PaL9Xk6dXeo5/PyLn5bjjbr7+bXxM1Dt7kdfHs
jojba3KNfFtNrt3pHj7eEnFzTe48FPFgTT4y9taa3LzV47DvLs/Hsvsj7qvJ
MuY9UJNzD7iHj/dE3F2TnXd7Ps497P1w7dGIR2qy5vmI52oyifxsTZY9GfFE
TZY95Xqw57HW5n4dC2v6TljoZzHM8x6vyaBX/P4N9c8eq8nEp70uxr3gc+zn
9+HFmrx70b0RPtczNRn6jOcP8Xq8Hr4P7vXrx79XvTefy6QettV1z96MeKOm
+0Z+vSbn3nIPaz6J+Lgmj8gf1WQlY1+rydPXvAcmvu35GPdBxPs12ca8D2sy
7kP38PLdiHdqcvMdz8e5T703hr7ncXj3mXu482PEDzUZ90XE4prsI39ek3df
uodr30Z8U5N9X7l3uMeyLg5+7R72fec5uPaT98O1n13j2i+u8fF7z8G13yJ+
rcnOH9yb4OfB6znefeZj3++egzv/RPxdk3Hkv2oy6V/3sKQY72GhrvtHztdl
JGP/rMlK8h812faf52NVGmOzdd1b5uXqus9kejjKZ6RNXUaSmY9/pbr2xsVy
XTXGtI28ZF1eLFVXjX21yNW6PKrXVeNTo64a51qRmxHrU0dcWpfTzKvUZSrn
5bOL3fyMvTFxibrmY1W7uvbGs/Z11Zi1dF01DnJG5pzoZ8Nzx07250z8/oQr
3B/MW6au+bi5bF01Hq0UecW67j15hbqsWrmuHgZ1jdylrvXIneuygbHL12UE
ebm6zFulrvlYtUbkjnWdg3md6rrPZHoYulrkVevylcx8/Fuzrr2xcvW6xmFk
t7p6mLGBnzeGrR25e12Wkdeqy5EedfUwrFfknnUZs05dPQxlLOviGX16+Lhu
XXOwqndd+2HqhnXVGLdRXTX2rVfXHO7YiMh71uUaZ6SH3TwPXg8O9qlrPi72
ravGoAGRN6nLO3L/unzatK4e7mwbeVBdhm1WVw+XGduvLgs3r6uHg1vUVWPT
lpEH1uXR1pG3qutOs942dd1tMj0cZCzz+V5l7Y3r8m+7us6BqTtE3r4ua4ZH
HlaXRztH3qkun3apq8a2XeuqMZV5rMV3BWvzLPCReTvW9X3M56tDXZ7yM/bD
vt0iD67LRPYcWpdfu9d1DtzifdijLr/I9PBxSF3zsZU1OBMm7lXX+4dr+0Te
25/LeREn13XnRkUeWdfdI+9Xl1Wj6+ph0CER4+u69+SD6/KRsfvWZSeZPTBv
/7rmY9VBEWPr8oJ54+rybJx7GHpA5DF1+UpmPv5N8N64ONE1NkyLOLIua45y
jX2TIybV5dEU1/g01TXeHR5xWF2/b/E+4EjR8w6ty+UD6zpTwT9jb3w8wvMx
a7r3xrCjXePsDNcNn5E5fCfx7Hk/qt6fM3EPL6/LWUznObE3Vh4TMdOfleMi
5vis5Nl1fY6Od4+7eGrEKXUZNte9ZTz22LqcO8E9jDzR9cr+LJxUl1vz/flY
3estqMusBe6t5LHMX9prz6rLwdN8Dow8I+L0uhy6KOLCurw7O+Ksupw6xzVu
neu6k+exVnuvzbPo6nln1vW9MtPPuot/xn74eH7EeXXZx54X1GXfxT4HfvGd
dkldxl3iXg+PZX53r8GZ8PEKv0/4eKXrnyP2bsR72tBdvzbimrruPPnquoy5
zj1suj3itrrcIt9al5WMvaouQ6/yHvh3vefj3c0RC+syjHm31GXZLe7h6Y0R
N9Rl7Q2ej313eG9svcnjcPFO9zDjkYiH6/Lrnoi76zKRfFddtt3rHp49EHF/
XX7d594gj2XdHd2nh5UPeg5OPer9MO7xiMfqMu8J13j6kOdwt7+M+KIu1x52
bzM/D14PPj7p+Zj4lGvu3PMRz9V198jP1uXUC+5x596MeKMuw150b4THPlOX
cy+5h5GLXGPcKxEv1+XWaxGv1nWHWe/1uhx53b1RHsv8Pb3203U5+JbPgZHv
RLxdlxOfRXxal33vR7xXl0cfuManD12P8zzW2sNr8ywO8bx36zLrKz/T8f4Z
+2HlxxEf1WUTe35Sl3ef+xxH+n1YXJdri92b4rHMn+Q1OBMmfu39MPEb13wu
l417s0xDd/v7iO/qutPkb+u69z+4h09/RfxZlzc/ujfDY1kX535yDyN/do2D
v0b8Upd3v0f8VpdhrPdHXZb94d5xHst8HPzbe2PfP66x8F/XGFGM11FoyL42
kf+ry69MQzWeJQ3VOJVtqMazXOS0IWv/87pzfUbOjW30mYNT9ci1hnwqNbQ3
ZpUbqjGs0lCNf9WGamzljPmGzCWzN9+1fGb5HOMjazOHO7lO5B4Nebdk5CUa
cpDcasiptg31uIsrRF6+IcOWaqjHdxtjmw05166hHka2b6jGOD4LSzfkVoeG
Ph/cbdZbriGzyPTwlLHMx74VG9obC1dqqMbIlRuqcahr5C4NObhq5FUasm+1
hmrMWr2hGsM6NlTjXafIazRkNvNYl++NRkPvB0bSZw7fLbxWeni3ZkN7Y1m3
hmr8WquhGs+6N1RjJWfs3JCnZPbmz+J8f/C9gZtrNzRnR14b8xqyZIPI6zd0
78nrNWRY74Z6GLRp5AENvefkTRoygrHrNuQmuVdDXm7Y0HzM6sd3XUOfFeb1
b8gzMj3c7BN5o4ZsJTMf/zZraG8M7dvQOIzcvKEeduwQefuGDNsy8sCGLCNv
0ZBTWzXUw75BkbdpyLCtG+phKGNZF/Po08PHbRuag1U8O/bDuZ38LDFu54Zq
/NquoTncq8kRkxqyjTPS4zuA58HrwcFdGpqPi7s2VGPTsMhDG7KPPKQht4Y3
1MOdkZH3a8i/3Rvq4SZjd2vIwT0a6mHfng3VGMfvICMacmufhn4vwQ/W27ch
R8j08JGxzOc7gLUHN+TfqIbOgXf7Rx7dkBETIg5pyKYDIx/QkFVjG6ox7qCG
akxlHmvxXcHaPAusZN6Yhmya4meKp/yM/TDx4IhxDZnHnuMbsmqiz1H0+3Bo
Q54d6l7WY5mf8RqcCfumej9cO8w1n8srI65o6K4eGXFEQ/eZfHhD93iae3g0
J2J2Q54d5V7NY1kXF6e7h4lHu8a7mREzGjJrVsQxDZnHesc25Nmx7rX1WObj
3XHeG/+Od42Lc11jz2kRpzZk34kRJzRk30muMetk1xg2zzXeLYiY35ChJ3jd
dj4j517VfeZg1jkRZzdk0+neG6vOcI1hZ7rGvrNcd/QZT2nI1lO8N7/z9Wzo
+2ZNr80cfp/DoZ6OiyIu9DjyBQ31L3aPu3htxDUNGXaJez089vyGnLvUPYy8
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
BmfCweVa2g8Hl2+p5nO5deStWrrHK0VesaX7TF6hJUdWbqmHSV0jd2nJmFVa
6mElY1kXF1dtqYeJ3E9qLOwYefWW7OsUeY2WjGO9zi05SKaHm4xlPvat2dLe
eNetpRr/1mqpxp0NIq/fkndrR+7eklk9WqoxbJ2Wavzq2VKNfetG7tWSocxj
XbzmjJwb8+gzB5s2jty3JZt6t7Q3Vm3YUo1xG7VUY16flmo85YzrteQsmb35
nuYzy+cYE1mbOdzJfSLv3ZJ5m0Ye0JJ95E1acmqzlnrcxe0jb9eSYZu31ON3
d8b2b8m5LVrqYeTAlmqM47OwZUtubdPS54O7zXrbtmTWoJZ6eMpY5mPfDi3t
jYU7tlRj5E4t1Ti0e+ThLTm4S+SdW7Jv15ZqzBrcUo1hu7VU493QyENaMpt5
rMt3Rb+W3g+MpM8cvk94rfTwbo+W9sayPVuq8WtESzWe7dVSjZWccVhLnpLZ
m9/Feda8D7jJe8Ic/u6BP4vy51Qs2T9+Nrqle08e1ZJhY1rqYdDEiAktvefk
Q1oygrEjW3KTvF9LXh7Q0nzMOjhinD8rzBvfkmfj3cPNsZEPbMlWMvPx71Dv
jaEHtTQOIye5hx38eyamt2TY1IgpLVlGntySU4e5h31HRhzRkmGHu1fyWNat
u08PH6d5DlbN8H44N9M1xh3jGr+O8hzu1RURl7dk23T3Mn4evB4cnOX5uHis
a2ya+z8Wzjp+iqr749iF8d2d3Z3Zmtm1MRC7C8XCbh67EAMTQVARBUFBwe7u
Tuzu7u7CLuz2d96/z+eP8/p45txzz5k7977vIs9j2PE9Yh86oUfcmugY3Dk9
7LQe8W+SYw2PHd8jDp7oGOw7yT6M4zfI5B5x65Qe/S5Z2POd2iOOnOpY12PJ
r3vu43rEvzPcB7w7K+zMHjHikrCLe8Smc8PO6RGrzrMP486338d5zJV5btZi
Ceed3SM2Xek1XdzPqAcTLwy7oEfMo+ZFPWLVpe5jRX+Hy3rEs8scW8Zjye/n
OegJ9l3lenDtavvsyzfCXu/RWb0u7NoenWf0mh6d4+sdg0d3hN3eI57d4Nhq
Hsu8cPFGx2DiTfbh3S1hN/eIWbeF3doj5jHf1B7xbKpj63gs+fDuTteGg3eH
3dUjLt5jH/Y8FvZoj9h3X9i9PWLf/fZh1gP2YdiD9uHdw2EP9Yih93reAe6R
vrdynByY9UzY0z1i0+OuDauesA/DnrQP+56yv617fKRHbH3EtfnNt3uP7psd
PTc5/J6DQ7vbXgx7wePQ53sUf8kxzuI7YW/3iGEvO7arxz7XI8694hiMfNU+
jGMvvNYjbr3Zo/2xv+d7q0fMesuxvT2WfNj3rmvDwvfsw8j37cOhL8I+7xEH
Pwz7oEfs+8g+zPrYPgz7xD68mxb2aY+Y/YHn5c541t9juOPk7OJ3JQbvvnRt
WPaVffj1tX149o39ke7xsx7x9DPXfqIW3zjsfzXx8fse/bmobyvOfdi5LXHn
37B/esStX8J+7hF3/nMMJs1QinugJCahxMZ77E89Ygb6Y4/YgU7vEbf+Dvur
R3z8nT3SI4aiv/aIr7+69ljn/dAjHswVteYsiZf/eC540bukGLyZJ3Tukpg0
a+gsJbEJnbkk3s0eOltJe3q50GVL2uvoMiXxj7EzlcRBdMaS2Iry/rBs3pLq
wSn6mqOk88McS5fEU55RD3ZSk57gHD3S90lejz97dDf84XU50c/w4VkaY2sl
sQqtlsSaTmhREnu6JflwuRxaKolrjK2UxE00KYmnKOPgBHPkJfECbZfEwUZo
vSRWollJPEXpCa4tEDp/SSzoG7pkSbxBlyiJE0uVFINlfUIXLYmd5NH3/9/N
oT0l3QnofCXdDShrDdvIW6Qkvixf0veDdzxbuCS2LhS6YElc4zv0K4lbKH3A
QfpavCSGoouVxFaU/uAy8zEXLGc9WiXtzd1Ddytpz+5Rkg+fVglduaSzi65U
EoPWCe1fEnsGhK5bEoNQYpxzxq5YEgvQFUriKMp7wjbmWLskbqFrlcTH1UNX
K4mh6Kol8RWlJ/i3Xkm14R15a5bEm81DNyuJE1uGblESmzYK3bAk9qEblMSt
gSXFzmYvl+NclcW7TcLfuCRuMnb9kniKUhs+EicfPm1VUj24tnVJPuyjl01L
4tq2oduUxFCeUQOW0SN9cwesUdL7cwfwTvjwkTzmhR87he5YEkfQHUo6W4ND
9yqJI0NC9y7pLKLEYCRj/1cSK9FBJf27JHT7ks4nc+xZ0rlF2ROwcNfQXUpi
IbpzSSxE6QmG7VNSbdhwaNghJfFimH34cZh9uDM0bP+SOHSAfVh1UNiBYWeV
9E1mLus+2K6kdezlvP1KYiv7l/5gN8/2LYlzB3peeDbctWHrCPuzuseDS7pz
WANqzOJn9ME9wXy8G7+fmiVxhN9DnCF82He454VDY8KOLolH6OiSxp4QdnxJ
TJoUNrGkszjRsZLHHlUSM9AjS2IGeoTrMccE94GOL4mjY8OOLYmR6DElMfIY
9wQXT3TtuvOOK4kTrPWZJbHknJLOBNw5Jezkktg2JWxySRw51bF53deokrh1
ethpJXGQsSeVxPGTXHthx8mHqee6Hjw9z34f93JGSefjgbD7S+LlGa6xuHuk
b9g9zu+f+Z3w4eP5nhf2XBZ2aUkMQi8piU+XO8Zdd1HYhSVx5Yaw60viMmMv
Lulevdjj4NwVzufcXht2TUlnl7zrSjrD1zkGv64Ku7Ikpl7pfPh3o+vB0JvD
biqJEfeE3V0Sb9C7SuLQ1LDbSuLT7fb7O4+5lvZ7XFDSXXGB12I9591aErMe
9PoO8LNbSmLkHZ4XVt3rPjb3d7ivJLbd59hA93VnSTy90/nrej7eB349HPZQ
Sfvx+7DvStqX6LclceiJsMdLOovoYyXdSS+GvVASk14Oe6kkNr3k2HYe+2hJ
jEAfKYmdj7j2bp7j+ZJ4gT5XEkefDnuqJEaiT5bEyCfdE1x8xbXhynth75bE
iPftw4wP7MOLN8JeL4kfb9qHW2+HvVXS7y3OzciSfkOhcGSI814ribX0+GxJ
LOfZqyVx7i3PC8M+dG04+5H9A9zjOyXdSQ/5ew/1M/oY7Pl4N87hbGXdhTD9
Ga8LvP7Y83LWvwz7wr2jn5fEp68cg4PTwj4t6Sz+FPaj34+xn/k9P/M4OPe1
8+HWDyXtj3HOm17S2Z7uGExlv3xTEi+/cT48+9n1YOSvYb+UxJsZ4p16lcUd
9L+SePRn2B8l8ekv+xOcx1zD/R6flHR/fOK1mOS830u6A5/1ek30s99K4t/f
nhdmzVhWH7CNO22msniGEoOn9PVvScxF/ynpbvjN7wMfZy/rO20V9lDYg2Fb
Wh8oi01zh/YuiwHoXGFXxz9XQytl8SgNrZXFLJQYnGDsnGXxAp2jLIai1IZh
zJGUxTC0XBZT5wudtyxeovOUxUuUnmBhVlZt2EdeqSzWzB/aLYsfC4YuUBbP
WqHNsriGNspiSrusGOdto9ANy2JYEZqXxVPG1sviMUptmEScfLi1UFn14OvC
ZfnwlF46ZZ1t5t6gLHbyjBowjh7pm/ujp6z35z7gnfDh5iJlzQuD+oYuWdZZ
RJcoi09LlRWDr4uF9ilrT60UumJZ55axi5fFa5RxcK5fWflwa/nQ5crai+St
UNYZRonB1GVCly6Llyj5MGblsurByFVDVymLMQNC1y2LNeg6ZfFizdA1yuLH
WmX5MJU85uJ+4D0WLeueQFkLGEre6mUxa2BZ3w+W82y1sji3dlnzwqn1yuoD
nvEd1i+LYSgx2Epf/ctiJ0o+dwPz8T4wceOy6rEfR4WN9L5EDy/rrG8eullZ
Zx3dtCxObVFWDDbtEPq/su4udFBZXGDsJmWxEqUenON8kg+ntgvdtuw7L3T7
shiGEoOpW5d1vuElSj7s27Gs2rBwp7J8+LJ36OCyeLFP6JCy+LVr6C5l8Wy3
snw4sntZPqzaM3QPeq5Ez9XouSqGkrdzWUzfpqye4DHPqA3/9iorH1btW1Zt
GLZfWT6s3b8sH7bSIznw7oCwoWWxjfr0xF27bFl7lPuAdaI2jDzQOTBoWNih
ZXEQPaQsPh3mGFw5Omx0WWcRPaqsu42xB5f1Zwv0oLI4N9z5cOsI748e5x1Z
1tk+0rHe3i8jyuLlCOfDwjGuDSOPsQ9vJoVNLIsdJ9qHg+PCxpbFpuPsw6rx
9mHe8WETyuLUKWEnl8Vs8o4t614Z6rWu+hm14eMJzodbJ7k2bJtsH35Nsd92
j+TM7LVh3RuuT0/8WZy7hHuA30fwhm8GN091f/Dp7LCzyuIUemZZYy8Ju7gs
Jl0WdmlZbLrUsT4ee0ZZzEBPL4sd6GmuxxwXlbVX0AvLYuh5YeeWxVf0nLLY
eY57gouXu/bSzrugLF7cGHZDWSy5OeymsthxddhVZbENvbIsrlzjGHv9zbA3
ymLbdWHXlsVBxl5RFluvcO3VHScfpt7iejDuVvtruZfryzpXzP16WZy93jX6
u0f65g443+/fz++EDx9v87ww6Z6wu8tiE3pXWdy61zHuujvCbi+LR4+FPVoW
Nxl7Z1m8vtPjYOR9zocRD5f1u2Rb5z1S1hl+xDE4yO+U+8vi6f3Oh3+Pux5M
fTLsibL48nLYS2VxAn2xLA49G/ZMWax6zv4g5zHXBn6PqWXdFVO9Fjs57+my
2PSWv9+OfvZUWax83vPCrFfcxxB/h9fK4tmrju3uvl4oi60vOH8Hz8f7cD7f
dj3242xJMCnRvkRnSXTm3g97r6yzh75bFqs+cAwGfRn2RVmcQj8vi4+Mfacs
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
G1XElE0qinHeRoWNrIhhm4VuWhFPGbthRTxGqQ2TiJMPt7apqB583bYiH57S
y+YVnW3mPrwidvKMGjCOHumb+2Otit6f+4B3woeb21U0LwzaOXSnis4iumNF
fNqlohh8/V/ooIr21JDQvSs6t4zdoSJeo4yDc7tWlA+39grds6K9SN7gis4w
Sgym7h66W0W8RMmHMftUVA9G7he6b0WMOSxsWEWsQQ+tiBcHhh1QET8Osg9T
yWMu7gfeY/uK7gmUtZjReUMrYtYR/n4z+Nn+FXHuYM8Lp4a7j97+DiMqYtgI
x2ZzX4dUxM5DnN/L8/E+MPFI12M/Xht2TUX7Er26orM+Juzois46OroiTh3j
GGw6MWxSRXcXOrEiLjD2qIpYeZTrwbljnQ+njg+bUBHDyDuhIoad4BhsPa6i
8w0vxzof9p3k2rBwsn34cnbYWRXx4hz78OuUsJMr4tmp9uHIafZh1Rlhp4d9
WNHf/wysiqHkTamI6ePd0/x+Rm34d6bzYdW5rg3DzrMPa8+3v5h7JAfeXRh2
QUVsO909cdfuUdEebXidqA0jL3IODLo87LKKOIheWhGfrnAMrtwUdmNFZxG9
oaK7jbGXVPRnC/Tiijh3pfPh1nUV7Y+1nHd9RWf7esdgKvvlqop4eZXzYeHN
rg0jb7EPb+4Nu6cidtxnHw5ODbutIjbdbh9W3WEf5t0VdmdFnHo47KGKmE3e
rRXdKxd4rQf4GbXh493Oh1v3uzZse8A+/HrQ/ibukZxlvTas+0auT0/8nQN/
bmz69xG84ZvBzUfcH3x6KuzJijiFPlHR2JfDXqqISa+GvVIRm15xbJDHPl4R
M9DHKmIH+qjrMceLFe0V9IWKGPps2DMV8RV9uiJ2Pu2e4OJrrr2b856viBcf
hL1fEUv4O1HOBOx4K+zNitiGvlERV952jL0+e5yb2api27th71TEQca+XhFb
X3ftoY6TD1M/dj0Y94n9g9zLexWdK+aetSrOvucah7hH+uYOeM7vv6vfCR8+
fup5YdLXYV9VxCb0y4q49Y1j3HWfh31WEY9+DfulIm4y9ouKeP2Fx8HIb50P
I36q6HfJBOf9XNEZ/tkxOMjvlO8q4ul3zod/v7keTP0j7PeK+DJTvPeMVXEC
naEqDv0T9ndFrPrX/kTnMdfhfo9pFd0V07wWk533V0VsmqOq73eSn/1ZESv/
87wwa+aq+oCtfIdZquIZSgx+0VevqtiKkn+i5+N9OJ9zVlWP/bhC6PJV7Ut0
uarO3Dyhc1d19tDeVbFq3qpiMCgLTaviFFqrio+MnasqHqDUg3nzVZUPqyqh
SVX3HnnVqniGEoOhpdCeqviKkg//6lXVhouNqnzYsCD3RlWsWagqH/a1Q1tV
8SivyodPRVU+vOuGdqr6e0r+3Rb/vgqGktesisvlqnqC5TyjNnycv6p8mLVw
VbVh2CJV+XB20ap8+EWP5MC+xUL7VMVR6tMTv+ngK0yE6awTteHj4lXlwKB+
oUtVxTy0b1V8WrqqGFxZNXSVqs4iunJVfGTsklXVQZeoinPLVJUPt1asan9w
hslbqaqzjRKDqeyXZaviJUo+LFytqtowcvWqfHizfuh6VbFjg6p8OLhW6JpV
sWntqnxY1b8qH+atG7pOVb9leX/eG2aTt0ZV9wpryVrDcZ5RGz4OqCofbm1Y
VW3YtlFVPvzidwc+TKRHcvgGrA3rDkepT0/8+2D+PMOfReDaZlX9ndBzaaxV
FmuUiU9b8z2r4hS6ZVVs2jl0p6qYtGvoLlWxCSUGMxi7RVXMQDevih0o9fhz
F3PsWBXPdgj9X1UM3Y51qoqv6DZVsROlJ7i4W1W14R95g6rixX6h+1bFkqFh
+1fFjr1C96yKbegeVXFlcFUx9vppYadWxbYhoXtXxUHG7l4VW1Fqwzni5MPU
A1wPxh1oH/bRyz5VnSvmPqUqzvKMGr3cI31zB2xf1fvDdN4JHz4e5Hlh0oiw
4VWxCT2sKm4d7hh33aFhh1TFo2PCxlTFTcYOq4rXwzwORo50PowYHXZUVWeX
vKOrOsNHOwYHjwgbVRVPRzkf/h3rejB1XNjYqvgyOeykqjiBnlgVh44Pm1AV
q06wX3Mec83q9zi4qrviYK9Fw3njq2LT6f5+dT87ripWTvS8MGuK+1jQ3+Hk
qnh2smOF+5pUFVsnOT/zfLwPHD/S789ZPcO12ZcPhz1U1Zk7J+zsqs4eelZV
rDrXMRh0edhlVXEKvbQqPjL2zKp4cKZrwLzznA+rLg67qKp7j7xLquLZJY7B
0AvCzq+Kr+c7H/5d4dqw8kKPg5FXOgZrbgm7uSr2XRN2dVVMRK+qik3XOgbv
bgi7vipuXefYKh7LvGs6Tgwm3ugcOHWr68Gt2+zD1qn2YdZNzoF3d4TdXhXP
bnZsGa8H77OB4+TDxDudA3fuC7u3Kt6h91TFpPsdgyVPhj1R1flDH6/q78sZ
e3dVf85D76qKbQ84H1Y9GvZIVeeWvMeqOs+POQZH2SMPVsXIB50PB58Oe6oq
Lj5jH8a8FvZqVbx43T7sez7suap49IJ9+PSifTj3cthLVbHpnbC3q+I0ec9W
xVT6Ze/u7GfUhomvOB9WveHa8OxN+zDrLfuD3SM5A702rPserk9P/A6CK5yf
/d0L+bDyXfcHkz4O+6gqNqEfOu/rsK+q4tC3Yd9UxaNvHDvEYz+oihPo+1Xx
An3PtZnjy6rOMPpFVdycFvZpVUxFP6mKl5+4J1j4nWuPct7nVTHi97DfquLH
n2F/VMWLH8OmV8Uz9IeqWPKTY+z1oha8qYlnv4T9XBX7GPt9VTz93rXHO04+
HP3L9eDa3/ZPcC+/VnWumLtdE1t/dY1J7pG+4f5nfv+Rfid8mPiP54VDM8cc
M9XEI3TGmlg1S00x7rdeof9VxaB54p/nromPjJ2hJkajjIOLs9aUD4PmCp2z
pnNMXu+azjNKDPbNHjpbTQxFyYd589ZUD472hM5XE18aofWa2INmNTGpEprU
xLNqTT4cJY+5uB94j3+ruh/+9VrAMvLKNbGpU9P3g5s8K9XExFpN88KsZk19
wCq+Q6smZqHEYCJ9pTVxEyUfRjMf7wPLujXVYz9uFrppTfsS3aSmM7dQ6II1
nT10gZpYtXBNMRjUL3Spms492rcmPjJ2/prYiVIP5i1SUz6sWiJ08Zp4Qd6S
NfEMJQZD+4QuWhNfUfLh39I11YaLy9Tkw4bVQ1eriTVr1OTDvhVCl6+JRyvW
5MOnlWry4d0qoSvXtJf3Ct2zJoaSt1xNXF6spp5g+bI11YaPq9aUD7PWrKk2
DFurJh/Orl2TD7/okRzYt05o/5o4Sn16mjG29QFhQ3uJ6awTteHjujXlwKAN
QzeoiXno+jXxaaOaYnBl69CtajqL6JY18ZGx69XETnRATZwbWFM+3Nq8pv3B
GSZvi5rONkoMprJfNq6Jlyj5sHCbmmrDyG1r8uHNrqG71MSO3Wry4SD/PYHt
a2IT/10BfFi1Q00+zNspdMeafr/y/rw3zCZvu5ruFdaStYbjPKM2fNy5pny4
tXtNtWHbHjX58Itvjg8T6ZEc7hXWhnWHo9SnJ1g5uKa9AteGhO7Nnmfvx59/
uqnYtH/YfjUxAN23Jm4NdQwejQgbXhOz0MNq4gRj96mJFyg14N8Bzodbh4Yd
EjaH84bVxLZhjsHTg1izmlh7oPNh4eGuDTcP9jh4OdIx+DEubGxNPDsy7Iia
uIaOqokpRzkGz8aEHV0Tb0Y7No/HMm/ZcWKw8hjnwK3jXA++jrcP7ybYh4PH
Ooczdl3YtTUxbqxjs3o9eB+YeLzzYeQJ9uHR5LCTauIgemJNrJriGAw6J+zs
mnh2smOFx06qiYunOAYTT7UPp04PO60mXpwZdkZN55j5zqrpPJ/l2MIeS37u
uSfWxMJz3Qd8PT/svJpYc1XYlTUx6KKwC2vi1CVhF9fErUvt93Uec7U9N2ux
tPMuqIlT13tN+/kZ9eDj5WGX1cQnal5RE7+udh+r+ztcUxPbrnFsJY8lfwXP
QU9w8AbX46zeaJ99+W7YOzWdt1vCbq6Jd+hNNZ3FWx2DTfeF3VsTw25zrL/H
Mi+cm+oYjLzdPoy7M+yOmrh1d9hdNd2BzHdPTWy7x7ENPZZ82He/a8PCB+zD
yAftw4mnw56qiYMPhz1UEwcfsQ+bHrUPqx6zD/v4b6w8XhOzH/K8A90jfW/v
ODnw68WwF2pi3DOuDb+etQ/PnrMPc5+3v4N7fLImzj7p2ty37Fn28W6emxzO
5E9hP9bEu9fCXq2JhegrNXHqdcc4ix+GfVATw95wbC+Pfbkmzr3pGIx8yz6M
Yy+8XRO33qtpfxzs+d6viVnvO7a/x5IP+z5ybVj4sX0Y+Yl9OPRt2Dc1cXBa
2Kc1se8z+zDrc/sw7Av78O6rsC9rYvannpf74yV/jyMcJ2dPvysxePeda8Oy
7+3Drx/sw7Pp9ke7x69r4unXrs2fw+E+vB/nb0IOv9339jeBJX+E/V7TuUd/
q4lhfzoGg2aO+2qmVN8cnTEVIxj7a03cRH+piZd/OR9m9Yqx/9W0V8ibIRXP
UGJw85+wv2ti69/Oh3+zpKoNQ//1OBg5a6oY7CiF9qRi2Byhs6diGTpbKk7N
mSoG++YJnTsVw+ZKFYOhjGVemNc7VQw+zpsqB1aVU9WDc0kqH8ZVUvnwa75U
OZyrFUNXSMU2eiTGHfCf3wcOVlPlw8VaKh82NUMbqdiH1lNxq5UqBncWDl0o
Ff/aqWJwk7FZKg7mqWKwr0jlwzh+g3RScWuBVL9L4AfzLZiKIygx+MhY8rkD
mDtNxb9FUvUB7/qELpqKEcuGLpOKTUuELp6KVUum8mFc31Q+TCWPubgrmJu1
gJXkLZaKTSulWlN4yjPqwcR+oUulYh41l07FquVS9QHv+A7Lp+IZSgw+MpZ8
OMsc9AT7Vk5VD66tkspnX+4dOjjVWV09dLVU5xldNdU5XiNVDB5tELp+Kp6t
mSoGLxnLvHBxrVQxmLh2Kh/erRPaPxWzBoSum4p5zLdeKp6hxOAmY8mHdxum
qg3/Nkrlw8WBqXzYs03o1qnYt0noxqnYt2kqH2ZtlsqHYZun8uHdlqFbpGIo
ecwLl+mRvuEjcXJg1g6h/0vFpm1T1YZV26XyYdj2qXzYNyiVDx/pcatUbEWp
zW++n2u6b+Ajc5MzwRz62bZrPNsl1Th051Tx3VLFOIv7he6bimG7p4rBS8bu
lIpze6SKwcg9U/kwjr2wVypuDUm1PzjbzLdPKmahxOApY8mHffunqg0Lh9qH
kQfYh1Mjww5PxcGDwg5Mxb6D7cOsQ+zDsEPtw7vDwoalYvaBnpc7Y8dU32N2
x8nhbuBdicG7Ua4Ny46wD7+OtA/PjrIPK0eEDU/F0+Gu/XzYKpn+vod/N8yf
YeYwR48OG52KO1PCJqfi1viw41Jx52THYNKpYaekYtIpjmUeOy4VM9CxqdiB
HpuKWyeFnZiKjyeEHZ+KoeiEVHyd4NpV5x2Tigfnh52XipeTPRe8uMAxeHNR
2IWpmHRW2Jmp2ISekYp354SdnWpPPx72WKq9jj6ain+MPT0VB9HTUrH1NL8/
LLvY9fq6r3NTnR/meCQVT891vcVdk56Wdo/0XXg9JqW6GyZ6XXI/w4dn14Rd
nYpV6FWpWHNr2C2p2HObfbh8edhlqbjG2CtTcRO9IhVPr/C4dT3Hzal4gd6U
ioPXh12XipXotal4eq17gmu3h01NxYIHwx5IxRv0/lSceMgxWHZP2N2p2DnV
fa/gfi9NdSegl6S6Gy7xWm/svLtS8eUJf7+BfnZnKrbe4Z628Xd4OBW3HnYf
m7uv+1IxFL03FVvvdX8beT7m6u/1uDHV3vwl7OdUe/ZX+/Dp2bBnUp1d9OlU
DHot7NVU7Hkj7PVUDHrdsR099qlULECfTMXRJ/2egz3HK6m4hb6cio8vpDrf
u1r5e91drPQE/9507T2d91Iq3nwc9lEqTnwa9kkqNr0b9k4q9qFvp+LWe471
CY6cGXZGJt59EPZ+Km4y9q1UPH3LtQ9ynHwY+lnYtFRc+9z+oe7lw1Rc+zLs
i1QM/dA1DnOP9M0d8KLffw+/E/4o5zEv/Pgh7PtUHEG/S3W2/gj7PRVH/gr7
M9VZ/NOxMR77bSpGot+kYiX6darzyRy/pTq3KHsCFv4U9mMqFqLTU7FwunuC
YX+7NmyYNdZylky8mC2TDz9mz+TDnV6h/6Xi0AyZfFg1U+iMYYv6m5ye6T74
yusIp8n7NxVbf3Z/J/vZP6k4xxzMC8/myFQbts6ZyYdf9Dhzpjvna9eArzyj
jymej3fj99MNqTjC76Eb7cO+uTLNC4fKoaVMPEJ7Mo1thjYyMakd2sp0FlFi
MIOx82ViBjpvJmag82Sqxxz1TH2gWSaOVkMrmRiJJpkYidITXMwz1YZ/5KWZ
OMFaL5KJJYtlOhNwZ/7Qbia2oZ1MHFkgUwyW0dfcmbi1UOiCmTjI2CITx1Fq
wyHi5MPUxTPVg6dLZPJhFr0snOl8bBa6aSZe8owacK6P9wjsrmV6f1jOO+HD
xyUzzQt7lgtdNhOD0GUy8Wn5TDHuun6hS2Xiyhqhq2fiMmOXznSvooyDcytk
yufcrprpdwlnl7zVMp1hlBj84n+fsmImpqLkw781M9WDoWuHrpWJEQNDN8rE
G3TDTBwaELpuJj6tl8mHqeQxF3cF79E3012Bshbwi7x1MjFri9DNM/GUZ/0z
MXL9TPPCqo0z9QGn+A6bZGIbSgwO0tcGmXiKks+dwHy8D/zaKnRL78sxYUd7
X6KjM3Fo+9DtMp1FdNtMd9JuobtmYtIeobtnYhNKjHPL2G0yMQLdOhM7UWrD
CebYJRMv0J0zcXSH0P9lYiQ6KBMjUXqCi3tmqg1XDggbmokRB9qHGQfZhxdD
QvfOxI99Mvlwa7/QfTP93uLc9M70GwqFIzCUvMGZWEuPO2ViOc/2ysQ55mBe
GHawa8PZQ+zP4B73z3QnsfZ8715+Rh/cDczHu3EOz8p0F8L0HTOtC7w+1PNy
1keFjczUO3p4Jj4d4RgcHB52WKazOC5srN+TsSP8niM8Ds4d6Xy4dYz3R815
x2Y628c6VvJ+OSoTL49yPjw7zvVg5ISw8Zl4c0rYyZm4g07JxKNJYRMz8elE
+3XnMdccfo9hme6PYV6LtvNOyHQH8n1Yr5afHZ+Jfyd5Xph1qvuAbdxpp2Xi
2WmOze++Jmdi7WTnNz0f7wMfz/Z3+ixsy3p807BpmXTzuth0Qdj5mRiAnpfp
z0tXhl2RiUdXh12ViVlXOdbXY8/NxAv0nEwMPce1V/Icl2diGHpZJqZeHHZR
Jl6iF2bi5YXuCRZe49orOO/STKy5LezWTPy4PWxqJp7dEHZ9Jq6h12Viyo2O
cd7eC3s3E8NuDrspE08Ze20mHl/r2v0dJx9u3eF68PVO+wPcyy2ZzjZzv5OJ
nbe4xvrukb65Py7x+y/vd8KHm3d5Xhj0UNiDmc4i+kAmPj3sGHy9N+yeTHvq
mbCnM51bxt6fidfofZk494jz4daTYU9k2ovkPZXpDD/lGEx9LOzRTLx81Pkw
5lnXg5HPhz2XiTFvhr2RiTXo65l48XLYS5n48Yr9XZzHXJv4Pe7OdE/c7bXY
w3kvZmLW+/5+u/vZC5k496rnhVNvuY+h/g5vZ2LY244NcV+vZWLna87fzfPx
PjDxA9djP/aOszJXXfsSnbOus/5J2MeZzjr6USZOfeoYbPou7NtMdxf6TSYu
MPbDTKz80PXg3DTnw6mvwr7MfOeFfZ2JYV87BlM/z3S+D7eSD/u+d21Y+IN9
+PJn2B+ZePGXffj1U9iPmXj2s3048ot9WPVb2K+Z/l0zf07gzwfjnDc9E9O/
cE9j/Yza8O9358Oqv10bhv1jH9b+a3+SeyQH3vWK9f4vE9t+dU/ctY9n2qNH
eJ2oDSNnqCsHBs0aOktdHERnrotPs9UVgys9ofPVdRbReeu62xg7U11/tkBn
rItzs9eVD7fmrmt/cIbJm6eus40Sg6nslznq4iVKPiws1VUbRpbr8uFNK7RZ
FzvadflwsBpaqYtNtbp8WJXW5cO8emhWF6fmD+3WxWzykrrulf+81nCcZ9SG
j4268uFWXldt2FbU5cOvTl0+TKRHcrijWBvWHY5Sn574uwr+3HiUfx894W8G
Nxeoqz/4tFhon7o4hS5a19hlQ5epi0nLhy5XF5tQYjBjkdCF62IGulBd7EAX
rKsecyxd115B+9XF0CVDl6iLr+jidbETpSe4uEJdteEfeUvVxYu1QtesiyX9
Q9euix2rhK5cF9vQleriyqp1xdjrQ0L3rottq4euVhcHGbtiXWxFqQ3niJMP
U9epqx6MW7cuH/bRyxp1nSvmHlwXZ3lGDThHj/TNHdC3rveH6bwTPnwcUNe8
MGnj0IF1sQndqC5ubVJXjLtug9D16+LRtqHb1MVNxm5YF69RxsHITevKhxFb
1fW7hLNL3tZ1nWGUGBzkd8pmdfEUJR/+bVdXPZg6KHT7uviyR+judXEC3a0u
Du0UumNdrNq5Lh+mksdc3BW8x3p13RUoawG/yNuhLjbtU9f3g6c8+19drNyl
rnlh1p519QFb+Q571cUzlBj8oq9d62IrSj68Zj7eh/O5b1312I9nh53lfYme
WdeZOyBsaF1nD92/LlYd6BgMGhl2eF2cQkfUxUfG7lcXD1DqwbyDnA+rDgsb
Vte9R97wung23DEYekjYwXXx9WDnw79Rrg0Xj7APG44LG1cXa8bbh32jw46q
i0dH24dPY+zDu2PDjqnr7yyP8T3U47wj6+Lyoe5pPj+jNnwc63yYNcG1Ydjx
9uHsCfZT90gO7JsUNrEujh7jnvhNB19h4uxeJ2rDxxOdA4NOCTu5LuahU+ri
06mOwZULws6v6yyi59XFR8ZOrqsOelJdnDvN+XDrnLr2R1/nnVvX2T7XMZjK
fjmjLraip9fFwgtdG0ZeZB/eXBN2dV3suNY+HLw07JK62HSZfVh1uX2Yd2XY
FXX9ll3Q772c8y6u616Z6LVe1s+oDR+vcj7cus61Ydv19uHXDfZXdY9X+Ruc
5HVfyfXpif9G1Nv+/wLBvxudD0Nvsg+f7gi7vS5OoVPrYtODYQ/UxaSHwx6q
i00POba+x95WFzPQW+tiB3pLXX/eYo776+IZel9dDL077K66+IreWRc773RP
cPER197MeffWxYvnwp6tiyUvhD1fFzueCHu8Lrahj9XFlScdY6//EvZzXWx7
OuypujjI2EfrYuujrr2D4+TD1BddD8a9ZH9n9/JMXeeKuX+qi7PPuMau7pG+
uQPu8ftv6nfCh48ve16Y9FbYm3WxCX2jLm697Rh33Wthr9bFo0/CPq6Lm4x9
vS5ev+5xMPId58OID8M+qOvskvdRXWf4I8fg4Hth79bF03edD/8+dT2Y+lnY
tLr48kPY93VxAv2uLg59FfZlXaz62v4I5zHXYL/HK3XdFa94LY5w3hd1selX
f79RfvZ5Xaz8xvPCrOnu4zh/hx/r4tmPjo1xX9/WxdZvnT/S8/E+cPx9vz9n
9TfXZl8u0Ag+NXTm/gr7s66zh/5RF6v+dgwGzRZjZ22IU+gsDfGRsb/XxYPf
XQPm/eN8WDVTjJ2xoXuPvJkb4hlKDIb+F/ZvXXz91/nwb/aGasPKXg2Ng5Fz
NBSDNUlouSH29Q6dqyEmonM2xKa5G4rBu/lC522IW/M0FIPZjGVeOEecGEzs
aSgHTlUaqge3qg35sLXWkA+zSg3lwLssNG2IZ/RIDHazHjM0xEfi5MPEekM5
cCcPbYfdXJe2GmJS0VAMlvQJXbSh84cu0hAXGdtsiI9ooyG2dRrKh1ULhS7Y
0Lklb+GGzjNKDI6yR7oNMRIlH/4t1lBtuLh4Qz6MWT50uYZ4sUJDPuzrG7pk
QzxaqiEfPvVryIdzy4QuHbY9fthjDXGavCUaYir9sndhN8+oDROXbSgfVq3Y
UG14tlJDPsxauSEfDtIjOdwlrA3rDjupT0/8DvrA5wfmrdJQPtxctSEfHq0d
ulZD5x5dsyFW9W8oBoM2Dh3Y0HzoRg2xgbFrNMQIdPWGmLdOQ/mwaoPQ9Rvq
g7wNGzrPKDEYOiB03Yb4ipIP/zZpqDasXK+hcTBy04ZiMGOQ1xuGbRG6eUMs
QzdriCNbNhSDYduEbt0QY7ZqKAZDGcu88Iw4Mfi4bUM5sOp/DdWDqTs05MO4
HRvyYd92DeVwxsaEHd0Q1+iRGOxmPXgfOLhTQ/lwceeGfBi0R+juDfEO3a0h
Pu3ZUAzuHBh2QEMM26uhGFxm7K4NsXBwQzE4uHdDPmzaJ3RIQzzaL3Tfhs40
8w1t6Gyj+zfEQcaSz73K3Ls0xL+D3AdMPYR91xBrjgw7oiEeHRY2rCE+DbcP
20bYn8V5zMVdwdysxezOO7Sh+5j9tVpDPD3U9WDfyLDDG2IeNUc1xK+j3EfZ
32F0Q/wa7dg8Hkt+b89BTzDxGH8/uDY27NiG9uXNYTc1dOYmhI1v6OyhxzXE
quMdg0Gnhp3S0LlHT26Ij4wd1xA7x7kGzDvB+bBqcthJDfGCvCkN8WyKYzB0
UtjEhvg60fnw7zTXhoun24cNF4Zd0BBrLrIP+84KO7MhHp1tHz6dYx/enRd2
bkO/t/gOcKSP885oiMsnuqdF/Yza8PF858Osi10bhl1iH85ear+feySn6rXn
eyzp+vTEOXyiIc52vE7UhpWXh13WUI/XhF3tXtGrGtpH1zrGWZwadltDDLvO
sVU89sqGOHe9YzDyBvswjr1wY0PcuqWh/bGe57u1IWbd6tjaHkv+yp77ioY4
eLv7gJF3ht3REIceDnuoId7dE3Z3Q5y61z7cus/+hs5jrpU8N2uxsfPuauhe
ucxrPdDPqAcfHwi7vyH2UfPBhtj3iPuAX9xpjzbEuEcd29Jjyd/cc9ATfHzS
3wk+PmW/2oxvGnZMU2f9ubBnGzrz6DMNMeZ5x2DTm2FvNMQt9PWGWMnYpxti
6NOuAf9ecD68ezXslYYYRt5rDbHsNcfg6UthLzbE2hedD/veDnurIba+7HFw
8R3HYMZnYdMa4tf7Ye81xET03YbY9oFj8OzjsI8a4teHjh3gscx7qOPEYOUn
zoFTn7se3PrCPsz70j48/dQ5nO3escZzNcW1aY7t5fXgfeDjV86HiV/b58z9
EPZ9Q2cP/a4hTk13jDP3V9ifDTHsR8fGeOy3DXHuJ8dg5M/2YdyvYb80xK3f
w35r6Awz3x8NceQPxyZ4LPlHe+5vGuLg3+4DRv4b9k9DnJg93nu2ptg3Q2iv
png0Y1M+fJqpKX+K85hrtOdmLWAoef81xKy5m1pTWP6f68HKWeLZzE2xiZqz
NsW7OZrqA57xHeZsimsoMdjKWPLhKHPQE0ycp6l6MHHepnz25aqhqzR1tkuh
PU2daXS+ps59uakYfGqFNpviTdJUjPPPWOaFc5WmYjCS84kPB9PQWlO8q4dm
TTGM+RpNsQwlBk8ZSz4cbDdVG/blTfmwsGjKhxF9Qhdtin3d0E5T/Jq/KR+e
LdCUD6cWbMqHZwuHLtQUa8ljXhhNj/QN24iTA6eWCu3bFJ8Wa6o2zFq8KR+G
LdGUD/+WbMqHrfS4SFPMRal9gvcs+xg+Mjc5nMmtQrdsinfLhS7bFAfRZZri
1PJNxTiLa4au0RTDVmgqxt3G2KWb4tyKTcVg5EpN+TCOvbByU9xaran9wdlm
vtWbYhZKDJ4ylnzYt1ZTtWHh2k35MLJ/Uz4c2iR046Y4OCB03abYt15TPsxa
vykfhm3QlA/vNgrdsClmr9PUvNwb/Zr6HjCSODncLbwrMXi3aVO1YdlmTfnw
a/OmfHi2RVM+rKTHgU3xFKU2fxbn/uDegJt8E3IOIYexTbFkUOj2TZ17dLum
GPa/pmIwaM/QPZr65ujuTTGCsds2xU10m6Z4uUNT+TBr19Bdmtor5O3WFM9Q
YnBzp9Adm2IrSj7826up2jB056bGwcjBTcVgx8FhBzXFsH1ChzTFMnTvpji1
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
9lghNj3m2ECPvbMQM9A7CrEDvd31mOPhQnsFfagQQ+8Pu68QX9F7C7HzXvcE
F59w7a2c92AhXrwU9mIhlrwS9nIhdjwT9nQhtqFPFeLKs46x1/8M+6MQ254P
e64QBxn7ZCG2PunauzhOPkx91fVg3Gv2d3cvLxQ6V8z9eyHOvuAae7pH+uYO
eMDvv6XfCR8+vu55YdJ7Ye8WYhP6TiFuve8Yd91bYW8W4tHnYZ8V4iZj3y7E
67c9DkZ+4HwY8Wmh3yWHO29aoTM8zTE4+FHYh4V4+qHz4d8XrgdTvw77qhBf
fgn7uRAn0J8Kcej7sO8KseoH+0c678tCdwXv8Uahu+INr8UY531biE1/+fsd
7WffFGLldM8Ls351HxP9HX4rxLPfHDvOff1YiK0/On+05+N9OJ9/ux77cdFO
MKmjfYku3NGZ6xX6X6Gzh/5biFUzdBSDQXOFztkRp9A5OuIjY/8pxIN/XA/m
zdhRPqyaLXTWju498mbviGcoMRg6c+hMHfEVJR/+9e6oNlycuyMfNtRCqx2x
Ju3Ih33zhc7bEY96OvLhU6kjH94loeWOzsCaoWt0xFDy5umIy7N01NPFhZ5R
Gz5WOsqHWVlHtWFYvSMfzjY68uEXPZID+1qhzY44Sn164jcdfIWJMJ11ojZ8
bHeUA4PmD+12xDy00xGfFugo9lD885KhS3R0FtHFO+IjY4uO6qB5R5xbsKN8
uNWno/3BGSZvsY7ONkoMprJfFuqIlyj5sLBvR7Vh5FId+fBm5dCVOmLHKh35
cHCZ0KU7YtOyHfmwarmOfJi3QujyHf2W5f15b5hNXr+O7hXWkrWG4zyjNnxc
saN8uLVqR7Vh22od+fBr9Y58mEiP5PANWBvWHY5Sn574d8PP+h6Cf+wX8uHm
Wh3tIfi0Ht+zI06h63bEps1CN+2ISVuEbt4Rm1BiMIOx63TEDLR/R+xA1+7o
z1vMsUlHPEM37oihG7JOHfEVXb8jdqL0BBe37Kj2h4XyBnbEi51Cd+yIJbvw
rh2xY7vQbTtiG7pNR1zZvqMYe/24sHEdse1/oYM64iBjt+6IrVt1VBvOEScf
pu7aUT0Yt1tHPuyjlx06OlfMPbYjzvKMGnCOHumbO2Cjjt4fpvNO+PBx947m
hUn7hA7piE3o3h1xa9+OYtx1e4Xu2RGPDg07pCNuMnZwR7xGGQcj9+soH0Yc
FHZgR2eXvIM7OsMHOwYHh4bt3xFPUfLh3zDXg6nDww7riC9jwo7uiBPo6I44
NCpsZEesOsL+HM5jLu4K3mOPju4KlLWY23mHd8Sm8f5+vf1sREesPNLzwqxj
3EfN3+HYjnh2rGMl93VUR2w9yvlzeT7eh/M5wfXYj1PDbutoX6K3dnTmJoVN
7OjsoSd0xKoTHYNBZ4ad0RGn0NM74iNjj++IB8e7Hsw7yfmw6tSwUzq698g7
rSOeneYYDJ3S0d/rdq3kw7+zXBsunm0fNlwadklHrLnMPuw7L+zcjnh0vn34
dIF9eHdR2IVhX4dt140z1hVDyTunIy6f7J6W8DNqw8eLnQ+zLndtGHaFfTh7
pf3l3CM5sO/qsKs64uiF7om79oCO9uiCXidqw8drnAODbgy7oSPmodd3xKeb
HIMrd4fd1dFZRO/siI+Mva4jdqLXdsS5m50Pt27vaH9s5Lw7OjrbdzgGU9kv
t3TEy1ucDwvvcW0Yea99ePNE2OMdseNJ+3DwgbD7O2LTg/Zh1sNhD3XEvEfD
Hgn7qqPvs01XzCbvvo7ulau81pv5GbXh42POh1tPuTZse9o+/HrG/vbukZzV
vTas+zauT0/fMK6rvcLvowP9zWDoc2HPdsSmV8Je7ogB6EsdcetVx+DR+2Hv
eQ703Y44wdgXO+IF+kJH/HvN+XDr7bC3XJu8dzraN+84Bk/fCHu9I9a+7nxY
+IFrw803PQ5efugY/Pja6w3PPgn7uCOuoR91xJRPHYNnn4d91hFvpjl2qMcy
7+GOE4OVXzhntNeUevD1W/vw7jv7cPBL53DGemLt5+uKcV85tp/Xg/eBid87
H0b+YB8e/RL2c0ccRH/qiFW/OgaDesXc/3XEs98cO85jf+yIi787BhP/sA+n
+N+h/NkRL/7p6H+bwjlmvn87Os//Onaix5I/znNP74iFM3TVB3ydKXTGrlgz
d2jvrhg0a+gsXTFptq58uDV7Vz58JY+5xnpu1gJukjdzV3cz++v5jtjKM+rB
xzlD5+iKT9Scqyt+zdNVH3CW7zBvV2xDicEyxpIPc5mDnmBiqavvx1lNQstd
7cu1Q9fq6sylobWuzh5a7YpVWVcxGDR/aLcrTqGdrvjI2EpXPECpAfPqXeXD
qjy03dW9R17RFc9QYjC0Gdroiq8o+fBvga5qw8UFu/Jhw1KhfbtiTb+ufNi3
SOjCXfFo0a58+NSnKx/eLR66WFe/vfgOcASGkrdQV1xuddUTLOcZteHjkqFL
dMWspbuqDcOW6cqHs8t25cMveiSHO4m153vAUerTE7/pYBhMhOmsE7Vh5fKh
y3XV4yqhK3fVK7pSV/to1a5inMUBoet2xbDVuooxN2NX7Ipzq3cVg5FrdOXD
OPbCml1xq39X+4OzzXzrdMUslBg8ZSz59M3cK3TFwfW66gNGbhC6flcc2jJ0
i654NzB0o644tXFXPtzapCsfppLHXNwTzM1awFDyNuzqXmFtWGtYzjPqwcfN
Qjftin3U3Lwr9m3VVR/wiztt664YhxKDoYwlH+4yBz0d2xPnOOz7HvFxUFd3
0hVh5fnjm84vluwc/k5dnXt0x674tHfo4K4YtE/okK44hRL7v5bNMlrIIgjD
BopY4DnmsXBeDOxubMDCBgNU5AKicOEqNhwMriIGooiFhYUidmADthjYCXaL
LYqJ8/DOjznvmW93dmb32332u5cLjKBvjzA30e5hnqLkg1uM0TfML7RPmKG9
2MthvqI9w+xEqQn+9Q/nhpvE9Q4z4sS0E8LsODntpDDDBqUNDLMMbQxzqqna
2PfXpl0TZtvxaceFGUrfAWEGo+RuUe3Ew6pTKh+cO7X8llXL4PB5Zuyrw5wd
XDlaVY3UzT3REJ4/dwNzwoeVp9W48OjMtDPC5w89Pcyqs6pt/t2WNjR8/s5P
Oy98Vuk7LMzQYdUP5g2veFh1btqI8LklbmSYHSOrDYaendYc5mtzxcO+Cyof
XByVdmGYDVekXR5mBHpZmEGXpF0cZtKY8ttWHGO1rnkMCd8NQ2ot2lXc6DCn
rqv3p3p2UZh/l9a4MO6qtCvDDOM9jAuzbFy1ta+6xoY5O7bio8ZjPnDw+srH
fnw57aXwvkRfDJ/vm9JuDJ9z9IYwV26uNnh0V9qdYVahd4QZQN/xYRaMr3ww
75aKh3G3p00Mc4u4SWF+Tao2GHpr2oQwXydUPLy7u3LDv3vKhwuPpj0S5sRj
5cOs+9PuCzPsgfJh04Plw7CH0iaH/+8BfzfG34t1qrh7w+y+rWrqWM/IDSsf
rng49XjlhltPlA/zppTfpWokBsZNS5sa5uXkqol7+pzwHu1Q60RuuPhkxcCg
59KeDbMPfSbMp+erDa68nvZa+Cyir4a/3en7dPjnCfSpMOdeqHi49Up4fzRU
3Izw2Z5RbTCV/TI9zMvpFQ8L36jcMPLN8uHNh2mzwuz4qHw4+E7a22E2vVs+
rHqvfJj3Qdr7YU59nvZZmNnEvRW+S6bWWverZ+SGjzMrHm59XLlh2yflw69P
y2+qGonpVmvDujdWfmpiPy4r3zd8G42odwY3v6j64NN3ad+GOYV+U31/S/s1
zKTf0+aE2TSn2oZW36/DzEC/CrMD/bLyMcYv4b2C/hxm6A9p34f5is4Os3N2
1QQX/6jczRX3U5gXC+acFpBZsnDqQjI7/k77K8w29M8wV/6pNvb6utm3vcy2
/9L+DXOQvnPDbJ1buUdXO/EwtYWcD8YtmrqIzD5qmRc+V4y9jszZeZUDzlEj
dXMH/FjzH15zwoePLeVxYdLSqUvJbEKXlLnVWm7jrls8tZXMoxVTV5C5Sd8l
ZF6j9IORbeR4GLGcvD84u8QtL59hlDY4yHfKMjJPUeLh30pyPpi6MvtL5sua
qe1kTqCSObR66moyq9rKPkwljrG4K5jHYvJdgbIW8Iu4VWU2rSe/P3jKs1Vk
Vq4hjwuz1pLrgK28h7VlnqG0wS/qCpmtKPHwmvGYD+dzfTkf+/HQ1EPkfYke
LJ+5jVM3ks8euqHMqk3kNhi0Xeq2MqfQbWQ+0ncDmQco+WDepnI8rNoqdUv5
3iNua5lnKG0wdPPUzWS+osTDv+3l3HCxg+zDhs6pnWTW7C77sG+n1B1lHu0s
+/BpF9mHd7ul7ir/myW/5+L3WzCUuB1kLm8h1wTLeUZu+NhRjodZe8i5Ydie
sg9n95J9+EWNxMC+Lql7yxwlPzXxTQdfYSJMZ53IDR/3kWNg0IGpB8jMQ/eX
+XSQ3AZXjkg9XD6LaA+Zj/TdT86D7itzrqscD7cOk/cHZ5i47vLZRmmDqeyX
bjIvUeJh4ZFybhjZU/bhzbGpx8js6C/7cLAhtZfMpt6yD6v6yD7MOzq1r/wt
y/yZN8wm7ij5XmEtWWs4zjNyw8d+cjzcGiDnhm2Nsg+/BpYPE6mRGN4Ba8O6
w1HyUxOsbEoblPY/5dOxfw==
            "]]]}, {}, {}, {}}, {}},
       VertexColors->CompressedData["
1:eJzt3Xm01+P6N/AKxxRFZApJIUr8DpLirhOKDIVC0jEkY2WIk7GORIOQKUOU
WRRCyKwjM7Xn9m7Y7aHa7V1kyBDy7H7n79ez1rX2tr7P8nz9cy+ftft87899
X8P7el/Xfd17nTfslAsaNWjQ4PK9GzTYpHZ86MGN/81J2TE7ZsfsmB2zY3bM
jtkxO2bH7Jgds2N2zI7ZMTtmx+yYHbNjdsyO2TE7ZsfsmB2zY3bMjtkxO2bH
7Jgds2N2zI7/r4yb7N3h0vMOqk4P7/L7RYefXJ1a7Lf2pHeHrkrLehy6+qcv
q9NDL95955Ka6nTY5xc88f3Pq9LJ/d+YMbdFTXrouiWtDjqiJv1nyrQTtz2q
ms9/vq39kQ8NrUxn1Uy45bXKynRRq8tGXPd8ZRq02XvbHPx0eXr3xy/ubnBM
Reo9dlT3Z4+qSN0/rcz/6pTl6bkLLr1x0qvL01XflN1dce7y9MoXrXY465WV
qU3DSy4pXroyVb390YF9eq4Mz+e+pjOem1y2Kk056eWC5Q2q0539Zj/5RNtV
qX2bz4/bb1R52nyb35sNaFWRru089+JuLSvS+I+PmT22VWVavdPqW4dMrUxz
xn7z4Yza79F7tJ5XHvryAe1H1j6v7PHb+Eeq0/Rf9v9l4SurUslHU5+97Omq
9Gir28Y+/HFV6t/0s18P37GK6zP2lm9+32bb8lR68sTJQ98sT9+fdtvixvPK
064fbn7Nbx+UpctvWPNgm6vL09FvbdU2jS1P101f+EDRiOXp3JM7/3Zo0fLU
q8u0y44ftTy8bkNLn9hwXZNVqefBXR/f8qBV6dLcIeMGXFGVpl36z64d1q1I
d17ef+3jB69Mr3Zp8vVJL63gvms+s9/fo1nb26vSD0t3bjRqZlUq2PPcnQ/a
EN/fOc3bd13066p07N0tBzTcrTo167HH2BldV/F3h+/dbv/yk8vSce/duPvh
25Sn9/LnP7xV+/K0runEr1s2KU0lLe+5fcr5y9Jpt3/f8bFZy9KWTz90Zq+d
K9KKV2o/dEZFKhz61oLFD1akGZu0/Lr66rLUYPqJUxZ3KE/373XH1Vf0Kuff
b9uuxyddu61MG7qvX1Nzzcp0XuGEx1qsWUG5kvz88UXLo156vyodN3jdtq+X
VaWlDf5e2q2d5Wf0IefnDN9lWdr3qWmLen29LD1856Xd5x1Ylt4bVPFB80PK
0+ROZzdvtqQ8ffbYMa9dVVGeGq9a2/SjdsvTd9c/vGH1pOVpyuN7z7mh+/Kw
/F/Yc8d5z79ZmT5/94Cb/2i7PDV/u+qAnlWVlJ9Z474YsOzR5WmXTltfX/LL
8tRq3MBjZ9X+//88/683dp++Iu35yJvfnbl6RdrsibuP+PdVK1K//Z99dn3T
Fanrj9f99PG5K9Kzwx7MW17777TvLxx7zVMXjK9I21wxY8KiHSrTgL4/nr3d
uorU9dY7dj+tdp0eeaTxHXfPr0gz37r2ue5vVPDvpXdHdj98cHHbsjSpYOaj
91SXpZW3bTf3iVq93WN8oxsfP2xZeuS9LcdssVVZmv7jqhFf9Cjj8xe22bHi
t5eWpAM37bTfudeVpj/2+v3Hq3dbll596ZndN4wsSSfs+ea0d69YnK7YsM8O
ra5bklpsPrD9vwor0g1HnzCudf/KtPU3V25XenAl7dipK/t8O/K3inTIgS22
+PSGylTe+eCaY3pXcr96vPDwKQOPrNXTZl8Nbf/PqtTzpH2G7jhnZWo1casp
l/2xMt2Xv+VFrVpXpcn9upfvMWZlunt563vfrZWL74e/sF+b41eltXMLL7tg
bFV6veapto2OXpUeeaPFi10HrUrDX0m9h06top2RnOs9kk/ZB71H85fd/vWz
0T/sMHpFuvCV6qtmf7oiHdgv/5xd+67g+kuuZJceXv5yTqcvytM1y6Zs99SF
FWm/gqN2b3J2RWr17K7v7Lp3VTp+wT+rtjumKn149jvjGz++kt9VX/Zfct7h
or0aPnFvZWpWcNYmZ22+PKVh+59S9mll2mfDftVf3F07n9EX/uOel1elhmOu
Wz+20vPZ7KTX/t25qjod832D5r9sVpPeeuurW39rUp16bfrcyKYzV6UeHxd8
8sIXq9KtV1csmfSr3yP8UF/ro+eZxnd1Ha+Z8P4ZpV/XpDWTT+7XeOvVaUXL
qov6/ljN58KNd735yI3La+XluIefu37QPVWpT4efD9l35cr04PbH/fA/75am
zpd/NTb3tWXppg+GLnztt2Wp2+uTDzm2y5J0+kP33jx069I075kGO8/PLaX+
av37jEn/eTi/JnU/rWz+2rU16byDRo45odTzlx+XP5I86/2az3sXnDR5Xv7S
NOhv+1eU9liWjm1zdaOHHliWHnh8wK7vvb4sXbLzUa2evrksnftY4SHDXimj
HZD/kh5pPvKz/xp8c9mAQRWpby3s7PhdRRqzxeG3PFfrb86de1G/1yYtSy8f
OPSJhueUpfGn7XzWFvcZV0hOouum75Ldln9s9/bnx9xwXGnqXQsTzhy5LJ33
/RVDnv1sGb9XuEi/W37l241yxtTOf9z9XR59vCYVDDx60cEP+bv098c07nz7
cReuTK+1/+yyux5cmY7Y+/jrR2+9knGT5GHsm026XvLQ0vR1zfud9m63LHXc
CBRrv1s4RPhTeE/2X/6u1kveeufHi9Oog9Yuvn7K0nT71pv/4+Whpem0Q7vl
/375sjT2h0VF/+5WluZ9uKKi5FrjooP/OXDUjTsvTu9MurayyY9LUsfHmja8
beFSfpf0SPOXHZCc6Ln064bVB/Y+ZeLKNHSnh2oOeXtl2u7yLfpWt11J+ykc
In8tfyf81ufJXzttVlWW9hv8zs6fTS5PtSix0dO1cYX0WvurdZZ903PpqXC4
4iDZec1TOFnyID8V5VUeHPxm0XF9atI3Dd/scOHQmvTFjVfu0PIy4xnZJX2v
ngs/R/2p5Fb6q/hU6y87GcUt0rtoHBT93Uzju7qOlY903+W5I1enNec9tGrg
mavT8O9aNbu8cw2fS27lp8SfKD6SPJzY4eD7Vw2qTmunFV89bHR1arPl3B0X
TFnFv9f8FWdJX/R+PZfdFj6UX9tozjfpuCL9XHr8NZfdsiKNfPv0mSfsvILz
l3zKLsk+izfT/BUXPzyp29ettlydHlj0zuJ926xOl27X54SB21iuhE/kj/S7
8hey8/Knkjd9l57L/stfa57y47L/0kfxdbKHwqXz37mt1x0/l6ZZ4zv+z525
y9Lt+63Z5t0dyygnei4/ovhRv6t9F06TvOn5ccWtLu64rhanrcnZ7esdV6WV
ZZs+fWr/KuKE/U/ruNPIRrX7ftiwKTu0rElpRsdLNtvX8cK7l3UeMvHSWnk5
Zr/Xbh5bk/oMXfTTfrVyt/m1Rz6ww7Sa9PUXm/5nzts16cyTZ757xKxqypve
IzmUvWr48zOnjRuxKn2XfnnrXw+sSjfeu91Oo740/pT/VR5BuFp5HOE6vUd4
Unrxt/OPfnzBJmWpuGbJnt98XJaadj61qsvaMr5Hceiex79a+W318jSu8fMj
9k4rUk6rRb/ctGh5WtrihYI9mlenbwvuKG9xaHWa3PG2S2efbjnRPmpfNB99
r3Cd5E3zkR+U3RDfKNwou6T5yL9onsLzUVyhv880vqvrOHfucQ+lRavT6p87
NN30x9XpjvseuPCpef7eOaceccYfJxWli4/ovEuLi4tT5Ru1D94p4XPt4yNv
f7Lpb++vTt1mfzCuqvb3t3qqwy1TXqih/RSvIhwlfVz5yWcdRq9bnWq/6v49
m65J29/asNcLi2v4/NSXPioefnvt+rRffsOsZ1anhhsB2aga4hbJv+yM9Ejz
0X4JVwiHf7NhxIv9xxWlvsO2uey+acWp4W29nxr8TUlq+mLNTqsXFKdxte71
lM8XpRb3HpT3Y8Vi5ndkT5Q/lR3bbdDdk15pszRtNnTJl6euKk27rf3l3FtO
XJY2W3/0o61vKEiN75l+c5+ZRalRzyHlle2KiXO0X5I3raf8r9ZBOE18l/g9
+SnhH61zFD8Idyle2GvzNl+8+kNJ2nujnC1bnJ57qGX1UUuX8Hvlp8SHCIcI
j8kvC1eIl5M9eXS/Lce9uqwy3fzsrw2ePGF5+nqLZzZ78W/LWe+h743ylvLj
kn/NU38f5Wek7wc+d8zRB1+5Ov2j+pof75u4Ot2Q90Pxvy+2H5E+6v3KIwj3
yo9L/pUXUB5TOFZ5FvEkkk/97pZPfvjCmtNXp8lPb3H5dVetTj+XT/hxxCm2
b1qHKA4UfpO+RO2t5EdyK7+m3436/fp6nml8V9dR8Yv2vXRCh5KKM/JTfsHu
E4YMKUx5U3/vud3qorT20E0/vqAiP1XesuUTZ25RlIYeMur1ruMWUh62nt9r
3kdN1qRuoxrv3nn/NWnyNZcc+Pr3NfR30kc9n9z57x9c/mCtPakV86dfr07t
q+9ZXPbZqnRd2VdjJg1ck7r2Ov2liSPWpNY9n1qYc/hqypVwpvLmwjni/cTv
9V104toTj16T7t98Vdsra+c77fQu6z7ZazX1SLhU86k+a8XwM98sSR03Ovzp
i9PEL/YeedCMJeRt5C/Eu0brCko2mfn+XfcXp0d6XdG3+J5FqcFHf7+oatZi
2gHZSe1vdD3ll4XTdjzlplPWTC1MTz/8YcuX5i5Md5509i/t9i1Jx7/e5soP
ns9LDTp3HPLR8wVp+8ElG+7btyg9ccbQiw8dUJxebj610TkDFqWKnw77vXjk
YuIH4SLFU9H4QjyP4pcozlF8J30XThZfpPkLv0k+xWcKz/fov/+wHluXpOGz
d/z180aL0+HntT9qs+ZLGGdF+VXhduXrpV/KF1w84dIb9pm/IhXdOv6KDduu
TIu/6b1D1aQV3C/FucKlsm+K4+QXhBMUX6guSDgzyhfJL8hvqg42Ks+s4wJO
ln2TndT3qq5Sz7X+0fnIvsk+RP3+n/080/iurqPskuyA4m7lZeSnlL9THk15
WOHbKE5QfkR+UHoq3iY6H/En4km0X5q/7LDmI/ss+6Y6IvGuss+aj3CO5EHz
FE4QHhBvJlyhPHI0L6n4QvZTciL8Jnyr79W6iW+cePbj11168aK0/rtGq584
eUkqP2zX98/6x1KesxC/LT650za1K7FXXlo7oVffkqYFaUTO6XcNHl+Yrjji
036T8xekmorHvhl6U26qKp6xfsDXefxd4TH5a8m5cJrkRHFcNC7W/gqHi/dW
XZZwqeId4VLZK32X8Ea0Dlk4NnoeSnyC7KrwsPRX9XiKd6LnrRRfy67KDuu5
1k11rapziP5upnDgXxUfikcS7y250n6JX5K9Ur267HB9xSPiSXQuUvqudRBO
Vh5B6yO9E55UviAaPwpnqg5Q9lY4MLpfwkvK7ww/p9M//va3gvTs5ZtO36FD
Ubq3uBbAvLSQOCRaB6X6NPkLfa/kSnGx/KPwm/y1eM4Gp798/t4za9fpX/tt
9cPsknTHxK5vv7BqEXGCcI6eKx/96OxFBx4ycXG699fdxze6YGm6/Mitip7o
Upq6PDV63cjXCtLPH19f8FllUdqj+SUnfj+w+L/+cENRalc8a7uxTUpSp418
16m1ePSVPdu2Wroo5Qx4ZtL97y5Ju+U1u3/E00vD5xklh8Lzeo/O6cs/iu9S
PK55Sq9VL6H5iC8SnhROkxyKBxA+1PrrufRIz8VjiB/QukX9lOYjf6F9jPL2
mr/kR/MXTyJ+SeupvNWfjQ+Fk/9/w4dRfj7KgyleED8s/6756HcV34kXivKQ
0XWQPZR/jNZtRucjnK98UBTX6blwsvy1/IV4rVMa33VRo2/z0tjt21/b5ZeC
dM5Lu73W/poi8jmKX7RuwnvR+p8oTyh+QPy/8p5aN/2u8Ey0fkm4V3IiedPv
al8kb8JX8qfR9+jct+yY5F9+X3X1ihfk9/Ue4Vv9vfYlGi9rPZXf0X4p36rn
UbwR7TelcyWSc+FD4cxoPoj+HXlwxcXRfY/6C+ET8Tk6z5IpvjHT+K6uo/RF
+is5VNwq3k9+SvIp/yKcE60rjsqP5iN9/3CLspyPnliUVuxbq1i3LUl/bLrT
AZcMX8q6u/rinaS/itdk36J6IbykvKryd8r3iY9SPCJ/pzhR85edj57/Vb2o
8o/i0/T3sufie4VjpV+yD7ID4hO0zuI3xD9EzydG+84pjoj2Y9Q5BeUN9ffy
m6qPlTyI34v2BeL5oGAfA9lhxa3C4fIj4jmFx6J1ksJvsjPSF+2v5E3yqXXW
/LUO+l3ZPX1XNH+t/ZXcat2idV9ZfPjfMRp3qJ5B/k5+7dKNP/x+fmr54LaP
PFpWmHrcWbroh3MXhu2G8IBwqfxLtM5NdWWSW81TeVjZGfHt+l7hUuHnaB2g
ngsXyd9pfZTfic5HeEZ2NdqvWHURqrsTn6n4RXYyWucgfZdcKX4UnpEdUL4g
ipPFwwuPCeeo/k35C/299Ei8q+qrhVejfdv0u+LZpHd6rvo91cupvlHxYLQO
TX5ZeXnFiaqvjp7L0PoozpI+yu6pjkW/K9wuexLlJcR7C0/K3+m58izCCYwX
MH+9X35BflnymWl8V9dRdkN29dPnr2r8yZUL0ybd+71+3U0l6cr3uveZ9voi
1idH+0tLj2T3hD+3bnzmkuqGS9KlF8ztsC5vaZpevMnM96eVcn+VL9D5vmj9
RvQct/wv65aRN5f+Ru2Avkt+Sn5cfE603lt/L35DcY1wmvCe/JpwQrRvmL5L
/k7xfrQviuILnTfR+VzV++l8UPT8o+RHfIWea93kL+pLPvV+fVe0biQaF9RX
vy/JefReDOEc4eRon0npXX31udL5ZfH28i88t4L11zylR4p3NM9oHyE9F+6K
9m+U34nWXym/prhG8azmn2l8V+f8MurYZf+VD12+sd9hzZK060b8P6s0bTPu
+nY3HrIsHPeJr5af0vwlV8Kl0f5pwpOyw9Jf2UnhQ/lZ4VXZeemR7LzshvhA
rU999Z8RXo32uVX+WjxDtA4zWo+heE34X3l2fZf0RXGfzqfU1z2J8iPy13ou
vkV9SKI8m/xI9NyE4jXhhGgcIbmK1tn+2fVaer9wu+yk7Hn0XEb0HES07l37
KzwpPk12T7yZ+BbphXC48raKN6WnjINUVwY+RH65vs5B6/2q9xYflWl8V9dR
OFDnGcVLRM9nCbfofMG6QRtyOv60IL04f8q6tk/lpiYjTyx8dsd82hPpu3CO
/KzyVpIr2Wf5d/EtwqvR8wKqV1ceTfOM5r+0PpqP9FF2Q/hfODBafyj5lJwL
nyjPovy1cNqYLxvsNOjFr9LIucUzL8hfkLp+MG/8rkflpsLD5lU83iw/nbBh
35E/7VmYbu379qRrHyni78o+R/mBKB6WfKqeU3l24X/FrcK3Wn/9rvKt8l96
Lv8i3B7tiyj5l32TPVR9iPAA7z0P4kPFEVH8Kbwk/xW9LymaV1W8EL0/VPhH
9lz6ovhd9lB5bdlnrUO0/kd2I1qfqf2K9odXfa/qYTKN7/4sfFj6dPp10gWF
6a3B33152ISF6apR59yxx7ricP9J+RfhHPUxO+vc9QO7H5afmla3GvPysYVp
5voBQ+Z9WBTmwZSPVp5LciK7ITu5z3Ov/+21/xSlrk+WvrvtwuK0e98Tm169
1yLigei9P4pP5Ud4LgZxkOxYNE5UH37VJ8j+yF7JL0T5qCj/IzygPLv4dumj
6kjFM0TrErUO4h/0fq1btA4h2ndadQLCgdpH+V/VFSh+FL6K1j0KN+q7VF8R
7dMoXKr6SeEQxVOSE+lR9JxUtD989D3KJyq/I1ytuFX+hX0AYCdVJyO9035F
+xjrefQ8o/ZLeUbFO3ou/lZxrnCF+j9kGt/VdZS9Ut4wivPVh1a8h/ZR9kR6
pzoB5ReieUDxfvJrsnvyR+JzlCeS3xSuFl+n35VeqA5H9kf+SPhc8YXspPIm
4mPl78Q73TD7icN79CpIB/dc/+r4G4pS2d7nHd/6j4XkZ/S7ijui5/u0DuIf
pC+SB53nVb2HcK/kX3hGeFJ2OIpjo/d8yT5E6/r0/mh/pGh/Y9kx6V30PmXx
ruJ55Jc1H8WbihPFIwm3a56K94XftM6aj+RZ9UXR85XR/vnKH4k3E88TrYNV
fkpxh/Cn9kv8ieJr8gDBPl2Zxnd1HYVPtP6yY8LzJ/z+9vSeJYXp7gX3X9V2
/cI0o0X/QZ3PLElPHt5j992H56YW3w7q+PeT89NG2FAzr4DyJn8qPyKeSjhW
eQ3Jle6bFj6M3h8qXkK4V/2CtP7CD/Jfsm/CFeI3FOcK/0frlIRDNB/ZQ62b
/l5yW1/nwaN6J/5H/Ln0hffLwH/J/2q/6quPX7TvsZ7r/Vp/2SU9j97jJj5c
9jnaj0LfJTsgPCOcpufRvtPC27Ib0kfxe8JLqmOM4gTF9aqv0HwUj0frt+UH
ZZ91XkP8UrTPpPRR8ab4W/lxrYP0S35N8ctf9fxytI5IciKeUHlV8S3R+yPE
c0rOZQ+FM/V+6bVwoORZfln3fcyYOKvZwDm56clP+nefPiU/bVp+9e8371DI
eF98mvIa0Xo5zV/rEO23L5wg/KM8WrRfYvS8T7QPebQPpPqoS07E+4mfj/Yn
jNYRaR8Vf6n/le55l53Rc/EhkvNoP3/Fa9oX8W+691DxqdZTvLHwRrSviPa9
vs6tiDeTnY/+rvydvlf2P5qnjp4D0t8rTpQ9URwt3C45EY8hfZGf0vornlLe
Qfgteq5Z8iZ9Fy7KNL6r6yi5VVyv+/hkx1Q3JbnSPkpuo31NJec67xA9nyW7
qjhIeTrVB07/tcGThx1QmOYf3PL6d05dmDamQZv+p5j+XXGi+B/5Rz0Xvorm
3YRXeQ841kf4UO8RboniH8Wt4lvUx0M4VnhDcZn0Qv4u2gdG9e3ym8rjC+c3
GXTk7PUf5aQe/W7a5faJeenHs7f7bVjDgrRhzkWfjOiSkzo+c3fDad/lpgGf
3jGx66B81lHMLt9tq6kbclO7ab1P3rM6P/Vp9/qru55fyHwW5RzzFN5Tvbr4
McUjqh8WvpWcy3+JT4ueW5E/jdazyV/LPig/WF99gaJ98/T3itOlX9H5iJ9U
vKA8iPZd+h7N44iXE48nORFu1DrLLkXrHuXvFK9lGt/VdRT+EW+muiz5L+2X
8GdUThQviK9T/ld+U/Ijv694jeeFgdP0fuFk8Q86byKcL7uhPh7RukTh8Oj5
btm9aF4jeo9AtG5H+E1148rHCf9Hz99Jv1QXqvUXL6fvFc8jnKx1iPY/kTxE
eV3Jv/xIffVLUdwRPQ8ruyHcKJwsPMx+IPCnspPyF/XVV0f2XHGi7FsU3wpf
qc5NuLe++mRKv+Q3xWOIx5Ndlb7oPezHHjx/p32P9sNUnKJ62kzju7qO2nfZ
f/WfEX6WndT9I+K7hN8Up+tcsHjvaH5Bdk9xvf5e9S3y45JPfa/4RuFDnSsR
v6T9Vb237IDwlXibaB8M2QfZW/Ekqsf7X/5pQ1FqVzxru7FNSlKnjft46iL2
AVAeX7hF/kV+XPZKfJHueamNtm698+PFadRBaxdfP2Vpun3rzf/x8tBS1mPo
d6P1/NG+iNH7N8UnyC4p/lJf9Oi51Oi5pGi/fT2P4mHhfK2b+CjxpYof/+x7
0BTPah20btH6T9kf8TbiCaPnRqVfWgfecwQeXnFKVA7Ft0fvWdO+yw5E+7jK
jmUa39V1VF8R1TvJ/kvOo+cuZR+UN5TcKp6VfMrO63uVN5c/lVxJ/sXHiv8U
/yPeMlonLz0STpA/lR9RPBs9Zyo51Hy0X8Kr4lvkB4WHxZ/o/cKl0gvFKfLv
0fyR/I74H+2veHLJlfxR9LlwtXhdyYnspOIv5WUUtwrPR+9TUzwiu8TzC0Hc
Jf1V/Ku8gOYTrVeP5nM1f81T+h7l+aM4R35K/lFyEu0DIH0Xzyy9EO6N5tOF
b6Pn/WWXVEchec40vqvreFijb9+8aeXCVDJj/YAha0rS82cdue87u7mfWJSP
1b5oPXVuVLhIcaj8nXgknbNQfjbah034U3x+6YQOJRVn5Kf8gt0nDBlSmPKm
/t5zu9VFzN8JbyhvEr1/QXyg7ID8l94frVeUHZC/Fr8t3lU4TfXV8jvR/jB6
Ll5X8ZT8vp4rflf9hvCG/j5afyi8FD0nIpyvug7te/R+RuFJ1V0rflE9quYZ
7csXPQ+uuEx2PppPj/abFU8l/j+aD43eNxrt46T4JconR/PXskvCRVpn7bv8
kfobSx9l/8VXqP5WcbHqB+QfFacIN2Ya39V17PLU6HUjXytIP398fcFnlUVp
j+aXnPj9wGL3Kw7Gj8qrqu5auEt55GhdmXgevV88oeyn4hrZAflHrb/OuUT7
VItfEr+h+Ws9FW8qvlA+RTyq8rk6p6A6OuEc4SX5WdV3yW7oueQn2s9Q+ET6
pfuJhKuF9+SPxJNH66wUZ0X7oQkny1+IVxdu0XP5O71f/EwULykeV32m7In2
S3ZAfy++S/sS5feUHxT+kXzqXHA0jyw7I7uq+FrrJnureSqPI15deQrx7ZIH
xTWK46J9tsU/yG7rd2VXpb+yM5nGd3Ud5X/ZNybYH0B8jvy1eADpV/S+cuFS
4VjlEWRvVU8ofjLKD4ifUb265qP4UTyJ3iPcovUR3ys9Vf+WaFyjeFP+Ufhf
9lz5U9WhyU+JfxCeV975b03y3p3z75z03k1jt2neNS9Nb7bg6IUv53Pd1DdG
+iL+RPyP8I/ica2neGP9veyY8mvym+IfpBfR+33E/9RXP6XoeQq9XzhKciv5
UZyruEPrpjgiev+I9it6X7PWX7hX+D+Kw+WnFE9F+6XTb4LfEM5U3Yjsm/Bh
NC8v+VFeRjxktF9KpvFdXUfhAX2v/ILwts65fLNhxIv9xxWlvsO2uey+acWp
4W29nxr8TUn4/gLx2OKrlZ/ifU9Yh2i+TM8Vf2kd5GeFM5UfV75D+hjt66Lv
Uv5UcYrsjPRd+6V5Kk4XfpbdEJ+pfIr0QvhWOFD7rv0VnpFfU55F6yz+TflT
4Td9r+phxIvqnqbN1h/9aOsbClLje6bf3GdmUWrUc0h5ZTvHF7o3R38vO6N4
Wfoi/ko8UrQ/W/S8SX3xn8ItWgets/ppCF9Fz5UIZ+rcivLa0b6RUfyvOkPZ
MflN6a/ws+yz+vDLH+n90by27JviL+FM5UEkP5pnpvFdXUfFEeJVxPPIPite
YLyPfZedkRyqDlb1Y9HzKdHzI4q7tQ7KM4pHVTwu+xC9t0v8vOJKrY9wguJW
8XXiDcQvRfk34XnxJMKZ0fx19Dyv4hrxpXqu90fPd6seQ/0M1Qdbcahwi/Jf
2l/hLvkX/a78TrQflOouonGi4ibZmShPJb8pnk3vl56Kb1d+R/yGcLLi0/rq
l6V4SnKl35W/k/wInyhPIX8tfB7tE6V9VDyoOFd2Rusgfk84Vn5Beq04QvX5
mcZ3dR0lV/Jrwoeyz/IvsnvyC+IDo3Gl5qPvFU8oPZJdEi8nv6P4TrhFfJHw
sPyX7L/q2dSnWn5ZdkP5PvkF1Rdp/YWfVXcqXK31kV0SHhOuk17o/ZIfnVPQ
c8mJ7LP0Tnlq8W/y15IT2WHFgzo/Ij+lfJP4t+i5GMVBwgPCjXoe7TsXvW80
ei+h+Hbpl35XdltxlnjRKM+m80TR/LXsm+JNxcXCmdH7vtnnDfye1kH7JXlT
XCA9kj5Kj4Tr9B7pqeL96D2bmcZ3dR3Zjw54LFpPHu1/rrpEnWuWvou3VNyh
OFRypfMFer/WWXGNcIuei0+Q3EofNR/xhNFzlFo37Zf2V/hc+Tvew4L5yM4o
Hhd/onlqPRWPSB/1Hn2vcJH0WvsinKbflfxHzzVE10H6K/8oeRPfcs5dP1y8
4/EL0qJDXiu6uSInnXTM/re375PH+k/NU/sieZC9Ur5DeCl6bjdafy6cr/gu
Wser+Et2WPXSklvZSfkp7aNwWvS8nuJl4aVoH0LhfMX7eq71l/yIn5R9EF8h
XC1eXbyQ4lbxNuJ/Mo3v6jpG4ynx4YqntC/C56pLVJ/n6D1iwgPil2QHlP8V
DyD7E8UzsgPiAWQPpV+KH6P37invL75L/ZmVr9R+6Xdlb2U/tc46ZyReV7yW
6uhkb6P9VZQ/VR2F7LN4TsWD0ovofUmaj3C78IZwhey58Ilwl/ZXei3+WfOP
9mlR/YZwZrTPofgx8QDikfRc8iN/JP+l71L9huwS4xTwTopHovWH0jvJg+yS
8Ey0bkH2R/ZWuCva3152WPserSfh+R3oi96vfc80vqvrqLhYecPoeWH169M5
SuET8VHRe0+i982pPkE8v/RXOFN6HeWxxasIdwmHR/sGq25Ez4XrVLepPKZ4
LcW/8pviY3Vvr+bDvjGIQ4U3FF+ozid6D4LiBcV9knPhHOHtaB8q7aPy4Pp7
zVProDrhaL5A+1VfvBzPzQH/aD7ir4RblGf8s+9JlL7L3sqOyY+L/1ccoXWQ
3dPv6ruifSOlv8KHiiulR7JLwo2yq9ovxX3yO/J3ei4cIrwX5RvFG2ca39V1
jPbZk51h/zfgTPUllp4qnhJekv3XuVHFC8on6n4W2QflKcRraT3198Kfwi2K
x8Vj6Hv1HsXX0X7C2hfVHfHejeA9jN3Oe+v6UYPz0ojzu53be2BBmrfbgz02
LCykPAsHqu5IeTH5HeET4R/FQdH7QaJ5cNl/6al4Hu2j6hmidQiST+2j7KHq
x7Qv0Xvx/ux75aLPWXcB/k12Q+smfCgcrvo3yYN4fuGcqH0W3yi5knxG5UTr
I7yn8/vipRUviJfT90p/o/eHql+E/l44R/yJ4kTJm3BLpvFdXUfVpSi+i8Yp
PB+KOoroPSzy7yuXPbig9aP5acDMZpMr3ixMLauPajD9iIWsY5T/lb+T/5Uc
yj8q3ld+SnqhPKzODSm/IN5S8VH03jHF0bK3wlHy7+JFo+eYdP5acqI8hXC7
+k5r/vJrWodofalwvvC8vkvziZ5/kV0S3ta+iPcQvyq+VLyE4i/po94jvC2e
Wc9lZ6J9iqJ9EfX30gvtu+rNhNPkl5XPEm8QrZ/RPIWHJW+KB5W3Eo5V/Yb2
V/ZBdkDrLLmSPZcdk15Lf+VfpI+qT5P9l31THuqv2h9b8Zr0S/KpeE3xguyw
5Fl25ozO46/K33RBOvXs9z9vfH9OavhrVf59jfJS5Zttl8++bEGa2nLWkiO3
yk3Dqz+78NoRecQz4gmFi+Q35d+VB9Q5YvWFFn8lfkP1G9E+gaqXU15ecbF4
FdkT6aPwm+YpXlf7K3+keFxyrv4tMybOajZwTm568pP+3adPyU+bll/9+807
FHI95XeEE2TP5Y+ifeeUT9S6yZ6IP1R8KvyjuDJaFye9UD2k6l5kJ1VXrHhZ
z/WeaP9w6V20j4rwodZf7xcfJT2V31G+KXpvQrRPjngD8VGSZ9X1ie9S/CX+
QfGU7Jiey1/od2Vn1D9N85Qdi/Iq8tfCh4r7/qr9bWSfZefF14knFG+seEf7
KL3Yac4zz3dunJsWtB/eptGivFQbNbyyee8C9iWW31EdoPCY5Fy8h+JlfVe0
X4fsdvRcmM5/id8QXhIeFp6RXGkdxFPJjsnO6HslD7InpU+nXyddUJjeGvzd
l4dNWJiuGnXOHXusK+Z8hPeU35f9l18Tb6y/F28guxeti9Nz5QXkX2RPdK5B
8qZ4U3xIFH/qefReNuEZ6Zf0XbhLdila16d8sfCDvkvrIDwZ5eVkJ6P3J8pu
KD+i+JR91SD/qouL2hnJifiKKL8tfSGviDhIeEy8h+Ji8Sd6v/Cq5F99+DON
7+o6yh9JHqLrKXmQ/bl4+cBz+t25IJ3feEbFzwfl/tcvT81jXvj419tc+cHz
ealB545DPnq+IG0/uGTDffsWEVeoHlvxoOpaZQ+FP6N8uHh46bt4ePF10hfh
fNkNxRfi2xWXqR5A9aLRui/hHM2ndEKHkooz8lN+we4ThgwpTHlTf++53eoi
5oWZ/w3e4xPFpac0vuuiRt/mpbHbt7+2yy8F6ZyXdnut/TVF1Mdo/73oucto
fU60H4t4JD3X+kuPxDvJLwuXyv8Kf9ZXPld/r3oSfZfWQXGleH7pqfgHxQv6
LsUd0nfFWZJ/vV/ro7hD66P15PlKxBeSf8WDspPiM6WnsjPyC9pf7YvyfeJn
VAerukrZYeUF9H7hokzju7qO4mGifTKlX/Jr6perOEt4VXUawr2KN8XnCz+o
bwbvecf5XK2P9F32R/KpPKzwsOxqlOcXz3nWuesHdj8sPzWtbjXm5WML08z1
A4bM+7CIOFB+RPZNcYHw57zb1/7Yclxe6nJylwu3HlOQVteqwfENihgXaH2U
T1R+Wfy28s6av/ZR/INwgvCM+GHxk+LblaeO3k8nuy0eJio/qndV3Zr8o/Cn
8Krqt7WPwi3Re9nEj+m58InwgPy+9ot9O4O4UXG64lzxgcIVwtXRPrSKo/W7
Ov/C+0aBz8XXKY5TPBLlAzV/rY/4Xum15Ef2TfG4eBvhEOVDM43v6jrKnyrP
qzyFcJH62Oj8lOqaVL+qc6my28J1O55y0ylrphampx/+sOVLcxemO086+5d2
+5awfpX3AwLX6T3CyVpn2YHofb56v/RddkZ5SeEr6Z14LdkB+VnVH6pfjfCh
8IniR+a7gff0u+sGbcjp+NOC9OL8KevaPpWbmow8sfDZHfMpV9pH8VrR+yZk
b6XXuj9F/KryYvLj0boy4WE913uivIr2K3o+SPhKflx5WMmD7Krwm/y18KrW
Tf5Ueqc4RfhZuFF5T+Wzon3LFS9H5yP/JdwlfB7t9yVeTnEB+ylh3VRPJf5B
eQr5QX2X9Ej7JT8i3uOven9KtK9F9P5E4QTxXarjEu8k/yL7KXsofk95WPEY
sv/KLwvfio+V3VadtvZLdl56KpwgfVH8Kz8lfkZyorhGvJb2UeekhJf0HsU7
wsOSQ+2j/JH0VLy34gXZw4crFu+z+MDcdO8uww54p2F+qkWBd5z6rwLmF8Tn
S57l18Tz6xyZ8KTeIz4hes+snsuvRevcxFfL7kXviVM8Hu1XIFyhPI5wvuoT
xD/IbkT5Rq2/5Ef2XHkoyUO0j1B0H6V3irtVXyQ8r/mLvxXuVXwdzVML5yvP
IvuvdY6ec880vqvrKDuvugjFL8KH8juyM/KzOs8rHkn2RPKvc2rKO0geVJ+m
9wsnSD5lt+UXxC8pnlKeS/yh8miy87J76ncnPKM8puRKeQ3ZB+lFtN+49Eh1
AuJPhEsVT0lfVFcpPrPJoCNnr/8oJ/Xod9Mut0/MS7XS/9uwhgX0m9pfxfvi
Y6PnbmSXhLeFu6L+V3lq4VXhBOEW5bvFt0f7VQqnCVcoHyf/Lj5H8ZfWQXkN
2XnJld4TvWch2vdV+yjeVXXystvC58KB2nfVyaivndZNci78Jp4h2kdUdlX5
C8WzkhPZZ/EAmcZ3dR3lN4VbhMeElyRXss/sOwc8EK1HVd5c8bjOoylvOL7T
Fkf0fzInjb5kdLOcwXlpwRuXt2xdkk87Jv5fdlh6FM0HCf+Ir1NeXvGd/KPw
m/Lv4gklV8r7a38VLwiX6pyU5ER8V7SfTPQeIvX70r7Lrko+tb/CLcK32l/h
cPGi8jvyj7IbyjuI99C+67nsLftrBflJ4VvhGcmh7LPwG/u0AFfLzwpHRe/7
E84RXo2ep5b8C2/IbyoPpe/V+SbF6YoL9B7Fy+JLpY+SB8mt9j3axyl6T5/s
ofyp7ORflT+U/orvkj+V3kXvNRP/Fr1nRzhTfVSY7wbfIpyp/IL0Tv5CeqF6
J9VTKd6UXxY+kd7JzshuyM5E9VG8nPRUeEN4W/Igeyt5Fi6VnETvH9f5fcmt
8izss4HvVTwufY/qnfCJeCfhQNVbSh9VXyE5Fy+qvKdwmuRWOEp2Q/5XcaL4
xuj9a8Kx4peEx8QPR8996+9Vnym7KvnXdykPK9yo59G6SuV3on1vxMuJT5ad
1+9Gz+MLZ4r/ET8geYjWt2tf/qrnU+RnlS8WTlPcKrmVP5V9UB2L7Jv8kfCJ
8gLK0wl/Cj8rb6v5K68t+Y/aJfll8R7R+F04RzhN8bj2PdqHUPyb/CB5Y9g9
ybPmKflRfKTzU6rLjcqhvkt2QPol3jt6v4/4H8mzcJfwpL43ep+j9EJ+NpqX
UZyufLriROUrheeF/2WXxOdE+/CIr4iei4neG6h90fpH42XxhNp38dvKC8t+
ileX3xFu13cpfhEvp3xTdL+i96tqfYQ/JQ/ys4qPMo3v6jrKHymfrry8zh3I
DypPJ75IOEE8jH5XeV6d/xVvo/hL+ii8IT5H9b2KX2RndO5GdYzSI62b6ru0
/lof2X/5fcmtcIvkWd+r+FTyoDha53nF+2n+WgflbRXvKL8f7U+uvotaZ8U1
Wn/hGdln/b3qxyTPwj/C/9FztdH+2LK30ftxZE9UJxzlVWRPVJciHCt/LfnX
8+j5FP2u5ER8u/ZLcqi/l7wpLoj2vZR9EJ8T5aU1f/ZXD9YJiAcO1+VCT4U/
pV+yb5nGd3UdhYvUd0X2UHG68JvOrWidtS/Re2lV5xC9t1dxruyVeDPhnGg/
qOg5Dp1bUfyo+Ff8m+yA8hTSR8XvWjfhH+E9xR3K70frJNVXX/0Mo/ka4U/J
m+oitJ7i9/S94gm1zoorhaPEy+nv9Vx4MtrfWHys7IPORws/6HtlB+RPxYeI
n5HflB4pXpYeaT7ar2h8rXMNwsPRPorR/oRaZ32veHvZ2ygeljyrzlb8oXCj
9kv5O/mdaF234pH66hMu/Cncnml8V9dR/JLyOPK/wieKN7WPwgPCmXouuZKc
ROuyZB/0fuFw9buTHIrP1/t5X0kwHlS+QOsvvy+/E7X/ik91flZ5Gdmrbue9
df2owXlpxPndzu09sCDN2+3BHhsWFpIfUzwl3BXFh/pd5c0VN8m/KJ+luF48
XrSfrfyR6sF0Lkm/Kzyg+Qunyc9K3rSequcRrx7Nu0X7UAmnSU+FExTfyf4r
ftH7hatlnxW/yH9F709UXbf2N9rPXPITxXXi2fRd4vPlrzV/7Yt4G81TcaXs
tup+tV/RPtjCk8ItmcZ3dR31XYqD5I+EM2X3hP+FQ6L9poTndd5TvB/zR5Af
2R/l01UnJt5P71F9muRf8ZHq9oVzlG+Vv5D9EZ6RPKjORHG07JXqFYUPJf/i
S7W/Wk/pkdZZz+WndO4jep+X5ER8mvgQ1SEIJysuUF5M3yt+T345ihuFc2RP
5Nei+FB5HMmn4jLtb7TPM3lU6IXO++h3hWMVp6t+XnlY/a7yXJJD5allr4Qn
hZcUR6sOQfhQcVwU96rOUHkQ5ZUUfwn/y+9LrlSfI75LdbayM5nGd3UdlReQ
3RDeUB2a8sJ6v3gY+RHhefGfyiMrjpYdUJ5O85Q8K64/6I0Vd2xYlJsuerXv
cYP+k58OuK158VedC3keQfIsPkF1VnqPvld1a6qrUfyoegOtm/KAwu3iaU9s
X4tkhn+cSspe/HTX4z5N3z7ywLrzWn9Ofk/xu3Cv8vKKI5SP1nlk8cbC58Ih
kgetp+RW+yW7ofeID5GflZ7qexVfCF/J78vviM+UvxM/Fj3vqeeaj3gV2VXN
R8+j53x1vknrE60f0Pl0+UHJW/RckuRN6xzdX+E38bfRvtzii4SXJA/Cq/JT
klutp+ICfZf2VzyA7IP4z0zju7qO0T6fUT5W8aPiHfEqmo/iHX2XcI74TMXR
0fyF8LNwkfoV6z5f1mmADxFPFT2vLX2Uv1Z9mvJNigel15JPnQd5Zq/n1l74
4fx05xXz5vUZlpNK+vb85bhaXC7+SnhA/KRwjnC18KHiJumR7FU0zy47qTpM
4T3ZAemX9lf1w7L/Wgc9F6+ueEfyIJ5Q9YHyd8qPR8/tii9SHBE9P6t5RnGU
8Ix4Bu2jflfzjJ5nj54zUr1EtM+kvkvrI/sTrYcUjlWdleRT+6U8pvRdz+Vn
pV+yP+K3VY+tODTT+K6uo/h24Qetj+IC8XXix7Qv4mc0H+FM+TXJufJi4m20
brI/+nvdayZ8K72T/xKOUr5VfKzqDIUbhTNlH+SXo/2ihUuFryRvspPKg2ud
hQ+Fk2XnJVeaJ88ngi9lPyj4ceEf7aP4HL1f+6U4S/qlPHiUD1EeWbyH4h3p
l/LC8ndRXCG7oXwf+/Mgfo/OR/5a+ltf/JvqoIQPxSfU1zl08Z+av/LjiluF
8/V+5Wu0bvpdrY94Y9Udqa5AeFv1WrIDwhXq2yB/l2l8V9dR6yZ8JR5beq36
KOXLxPspXpD86Hej+fHovYHyX5pntI+3eHjpO+/XAx+lOkb5ceGoKO8kvyN+
OHpORHVrOgckPko8gOpg5deEh4XH9LvKX0uexYtKDvUexX3aX+EuyY/iVu2j
flf1ErL/2hfJQ5SHUbwmOdc6CGdG749jv2XwP+x7A3yo343ye8qPaD5RfBit
KxM+j/Jm4sllz6PrKbll//kg/hQ+l5/S+7WeUb5OfHj0/gLV28jvy35mGt/V
dRTfIj8rnKb9FQ4UXxG9Z1P+l/gB9TbiGbQ+4knEpwmHR+/tlf1UnCu+Ufyn
9EV5N+WRJT/Sd9l58cy6p1txjXgzyZv8r/ZReDjanzCaX1PfOcXjOv+rc/Gq
txRfKr+gfGL03IHsv/qQiAdT/lQ8nvyFfjd634eeK74TP6N5Rvuu6Ln4LtVl
yV6F8Sr0V7gxui+ap3hC5ZuE/+trncXDROsKlI+Q/9L7ZT8V1+icl+pLo3Yp
+r3CD+JDFI//Ve9f1nlY8QyST/k14RDVKcmeiz/R/orPUZyoPnJPHt5j992H
56YW3w7q+PeT89PGadfMK+A5MuElxR3CG9F7rLSewkviqfRdsquKT5k3Rx24
6jmvOOLTfpPzF6Saise+GXpTbqoqrl3Ar/PS7PLdtpq6ITe1m9b75D2r81Of
dq+/uuv5haz/1Hoq3onetyieSn5TeF52SfsiHCs9ld9RXCBcqnhQeaj6Omch
OYyeqxX+1PoLn8hfCNdFv1fnQIV/NE/pXZSPEm8jHlg8VVROJOfCD8IDmr/k
pL7Oa0T3XXkN2ZMoj81+Sni/9kV9bxSfiufR+iv+lf0UPpRflh+UXsuPyO9k
Gt/VdVR9i+Jr6V20r6DidNlnxWvCgeKpJG/RPLjsnviiaD5OfkHxqXCszmXI
Dkjfpb/SO32XeEXVW6rPTLQOVvGL4iDJg3Cs+F71fY32F4rmtaN94xW/a/71
dV5V/lT+SzhH+ys7H/XXyq9p/rJX4v1Urxidp+yn7K3sQHQ+kgf5C84nyKNK
L1i3BlxRX/wecV3w/eLxxP8L9wovyc7Lrio/Lr5CvK7whvyLfld1aMKfPP+O
PIj8gvhPxdGZxnd1HZWXj95bqnMliu+EoxSXyc5Hzx1EeU69X/PUOggfRvOh
0q8ZE2c1GzgnNz35Sf/u06fkp03Lr/795h0KybOpzlD6Ir5F8ZT4NPGKwo36
+2gcoXXWeWGdE1f+TnU4sleqP+d9u/B3+i7pqXCscJ38i+yteCHpnfCq/Ivy
VuIrtJ7hvoLB/Jpwi/ya9iU6H+F5xfvKO8jfZYoHE28cvZ9OfiH6XapTUlwT
5c+lX3q/cLj4T8VrPI8Jflh2Q/yJ7JjwsHCj7LD0TvZW/lr1hIqbFNdnGt/V
ddS5AOEf8RVaZ+EE4SXyJOiPoffLP4pPVv0A79OBnEf7+MlfbJhz0ScjuuSk
js/c3XDad7lpwKd3TOw6KD+N+bLBToNe/CqNnFs884L8BanrB/PG73pULvku
xYOq34vyydF7lPR++XfhZMXRWn/Jrfgo8cyKH1WPKr8fraeV3db5Eem19Ev+
SDyJ9EVyrvXUPkbvUxa/p+8S3tB7ovhB/LDyLLInzHcH+9to3RRfKD6KrkP0
/ppovjvKX2n9o/hN8iOcozqWaF9u5Y9k3xRP6buEu6Ln5SX/4o3FI0X7hMu+
aZ7aL9lhxQU6T5RpfFfXUfKj5/LvqktXHz/lbVV3qvfLv6iOUXhJPJjqfMQ7
ddqmz5i0V15aO6FX35KmBWlEzul3DR5fSBwrXH1G5/FX5W+6IJ169vufN74/
JzX8tSr/vkZ5qfLNtstnX7YgTW05a8mRW+Wm4dWfXXjtiDzyfuJnpKeK+7Rf
4i2Vv4iec5GdFx5W3Cc8I3souyG5Es+m/Ihwr3Cg+DfhB+1jlNcSDyNeV/OM
ntcQnhFfJByuuEPnieQX6uu8ifRC+6X6cOZ9gvNRvlU4X3xOlF8V36I8crS/
kHCp9Ff5KcUX0nf5EcWt8qfRfYz2R9J6RvNiwvnRPjny+7ID4smFY2WHJT+K
Z8W36z2Zxnd1HeV/5S+E08TX6dxH9D4O8Y3CFbLD4rXEGwsnqA/STnOeeb5z
49y0oP3wNo0W5aVaNPLK5r0L6DcVN2nddO5bOEfvl99kfV2nLY7o/2ROGn3J
6GY5g/PSgjcub9m6JD9dd+ffT1y4S0666q3Jv1Z+npsObf31rB+65FN/lacW
T6W4WLyH+jfqOe9/BF8qP6I4V7yB9EX5L/HY4iFV56bzv6q3kT7KbkjvtO/y
F8LPqgOX3Y7WM6huNtrvTvhBcqJ9EV7V90Zxhb5Ldl7+OsofKq5h/RJwmuRK
f6/vVb2T+Ad9r3hv9TWtL5yv/LLsvPCM/KneL/xfb/3Jsb9RfBi9B0f+SDy/
eN1M47u6jsKBwvPCD9F+gPKzymvongvxzKoHE2+gOg3JifCbcItwmnCy/ILW
WTynzrnoPdF+R8Kr8pviDaL3a+u57n8Rf6i4UnZG8qA8kfLOihfEn4hfEl4S
n6a8s/ROcZDsvNZTdkB4THohHkP2RHyp/KZwUZQ/kT+N4hzx/8IVwqXyg+xP
hTxafZ1bUR5ZeRnZGcU10fMO0bijvvg94Y1o/YDshuyA4latm96j+EvyrH2X
PYzy1bJv0muts/LF0XM3mcZ3dR2FW7RfUZyg9VT9s/Cb8tTieeSX1U9GeQfV
UUsvlJeP3iciu6S8qnCX4lnxscpnKb5W3wnxDNJTxdfKt6pOIJrf1zzF1wmH
y95q36V3whuye9oX8aJaf+FD4TTxP9JrxR2SN+Fz8ZPy+9pf8QnKr8n+a9+V
n1KfT9VdyF5pPeXXhNMkz7In4tOifYcUX4ivvnHE/S33vuSr9Fbh0meem7kg
7dKizYtfNc9NFy8feE6/Oxek8xvPqPj5oNz/4vypecTJei68LfscrVfUPR2K
OxRHRPO2kmfJv/Cb8KHwgPLsWjfZt2j/BNkH8WCyG/pd+SPFuZnGd3UdFdfr
3J/ydMKH8lPCb4oHxVuKdxK/Jz1VfkfnYqR3ek/0HkP228H6q7+B+IHo/YOK
B6WnyhcIp+n8uHgMxQXiRYXTon3DxBMqHyq5lZzLv2t/Fb8oLhPeU75AOFzx
i+yn7IxwSBS3CPdG6+qFH4Tntc7imaPnNLVushvyy5Jn4WfNU+dYo/c7a92U
F5B9kJ2P1g2qDlP2KnrftPLa0jvFWcLhym9G++pH7bnWP5p3Vtwk/Bz1d7IP
widaZ+EW2dVM47u6jsqzyJ9KT9UvRXZVdk/+VPhKvyt8pbhJ+WjFHeJPonWP
mr/yofLXwlGqS1RfROl7NI6L2nnhDdUPCJ+LB5Cdqa9+xcofRe9ZVjwrHlj8
lfyvfjda56n8gvCb6jfEm8l/aR+1zrInUb5LeUDhfMWVUd5J/Zqi9xfodyVv
8r/aryivpXP32l/ptXhUrb/0V/UJymdF70cWbomeF46emxbvJ/+r+FfzFH5m
Pi6YF5ZfkH1QfC0crjqQaH2U1iHT+K6uo/CG8IzqQ4SfxdfJPmg+qrdXnlR5
GeE64WTpUX35L81TvJDsrepn5Ef0vbJL6iMhPKx1k53XvsjO63mUH47yh/pd
4SXJifyv1lnzkT1U3x7FWapzk98UTtA85V+i/fY1H/WDUl5S6x/lh886d/3A
7oflp6bVrca8fGxhmrl+wJB5HxYRbwufSA4VH2kfFSdG718Tn1lf9ymLL5Id
E88j/K9+DuLxxBtE+WGtp/RUdp59t2AfhMcUX2h9xAOID5SdF98o+RE/Iz2S
fdD7VZ+pdZa/UDz1V71fT/VLwjPqcxLNH4mnFV+nerDoeVXtu/CS8Iz4K+Xl
dd5EfJrq6jV/yafyULJ7qi9SHkq4TvVawiGyb/J3wgnyp9F6b/lHxaHyL5L/
aL9x+QX5O62z9F3yr7gs2k9b/kI4R7hRPEzLbbd//IY+uemMzS45eMR++WnS
d/dcMvXRgnTzRkW4/7N0z7DX5hy87ov03j6X5ncfMJ9xhHgh3ZOi/k6qqxSu
kLwpzy6/pnNM0XMr0b5/0fdonYUP9ffCP+KdFP9KH7We4jfEk2sdlK+XPspO
Sn5kH5TX0zroueYpvkjyo7hJ9e1af8m59FfvUT5IfkQ4IdP47s86nyL/Ln5M
eEbvEf6X/KtuP9o3Rjy28K1wVLSfv+RceCPaF0L8tuoJhUvFh0TvN9d6qj5N
fI72V3YpWvei57LzkmfFL4rHxZ+ID1FcIJyjuEDvl/2M8oTKcylPp3mKJ5cf
lPyLV1S9mfROcqV6V8XR4vNVP6bvjfb/Ec8f1QvZsWgfPOEBxdfRc6bKf7F/
O+Iv8Vqyq7JLUX5VuFTxkfKh+i7ZsWj/SdkxrU+0PkF2SXlG2UnJp/RIdTiq
a9W5/kzju7qO0f4JilvlFxTHyU5qH4XHFI+Lz1FcIN5SeQ3pnfRLeFX+XbyB
9FHn7MTPa/11Hk1xlt6vfZddisbpWmfhOvlf4RzxkMIDmqf2UXGBeHWdx5H+
RvvxRu8fkV+T3un8mupvhau1X4pTdC+5+H/xJIrLVOesvkDym/JrsnuqKxNO
Fs6J9qURvhJPHsWH4g2i95ir7kj2Td8rfk/2NlrnLL2TP1J9SzQPon0UDxDF
t8Lnys9Gz61E74WMnptW/l12QHgg0/iurqPkRHZM8iD9ld8UPlc8KLst+Zfd
EH+lvIPyGpIT+R3lf4UPleeV/gp/yl/LDgs36nd1Lkx5Q+WFFQ8qvpM+6u/F
78lPab9UfxvNwwqvikcVnhRfpHUQLydcKryh75V97nbeW9ePGpyXRpzf7dze
AwvSvN0e7LFhYSH76ggXKX+kef6tSd67c/6dk967aew2zbvmpenNFhy98OV8
vl/7JX8kvkj4XHIlHKJ8inC+/LLslfyyflf10lF8KDwsvxyth9S5KvVHjfJv
qpeI8ofCh/KP8td6v3hX+Qvxw9E4QjhZdljvkX9U/ZjiRK2z7K1wQjTOyjS+
q+soOVT9QPT+U+VnpUeqvxKvrnhEuCiaHxfulZyIbxTukt3W+4W7pO863yo/
orhYdYDROnOtv+RB8Z3wv+yb8Jj4Pda1Im8oOyM8o98VrlOcpeeKs6S/4iHF
74nPVNwhfCh/F+0/IzzGe4jwHuENrYPq36RfqutQnZhwlM49aT6Kr4V/dG5C
97bLzmsfZeej8sDzZcCZqnuJvl/nraL3ociOyS9LDqP4UHYjig+j9caSW71f
fIvqVZTPkpyL/9H6KP6V3cg0vqvrKJ5Q/lH4RHhG/FI0jybcJfup+Uhuo/0u
5AdVT6U8eLSuUn5cOE04QfZH/SLEb+j90lP11dH3yn6q3kM8m+yYeBL5d8mt
8trCe+JLhau1L9rHaF2Z1lnrozqxaL/raN4/mu+Tv5Zey59G7/cUv6o4UXVW
wl3CUarzid4HLf19uGLxPosPzE337jLsgHca5qdaKbzj1H8V0F9onRV31xt+
w77Xl75InuUfo30SZDeifVz1XDhN/jr6fuFn8d6Kl+WXlWdXnZLsc7RPhfDD
X5U/VDwr3Cj/q3hQ+ig7KX8k+yn7Jj5HOEr5C8mn/Lvskvya4nr5X71f6691
U3yt/RIvoXyl1kf5RNmlaL+vaP+3aL8jyZXwqupdxcPI7+vv1ZdP3xt9Ltyo
PI7woXhsyZXipig/rzou+QXxCcpfC9+qflW8hL5XuFfxQjSPLByrOFT1nKrD
1DpLr5XXi96zFr2fNIo/FReId43iqyg/EJ2/cKbWP/p+4QThK+HtcD9J+EfF
9fqu+trfTOO7uo7Sa/HY4mkVD0brc2RP2LcWfLjkMHpPt+IO1bfIP6rOn/ex
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
        "]],
      AspectRatio->1,
      DisplayFunction:>Identity,
      Frame->True,
      PlotRange->{{1., 108.}, {1., 84.}},
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], {576., -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.}]}, {}},
  ContentSelectable->True,
  DisplayFunction->Identity,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.4070870431716757`*^9, 3.4071600207128563`*^9, {3.4071673335878563`*^9, 
   3.4071673497597313`*^9}, {3.4071675365566063`*^9, 
   3.4071675525878563`*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvYm7VdWV9jtr79MAYkwlqVRZ96tUkq9SVUk0bcV0JjHRNMZIxAaVTnrp
pDk0CiIgPXqkEURFEQSkFRWRVnqUvkdaAZvYRO8fUXf8xpxjrbnWXueAQO6t
73muj4ezz96rmWvtNd75jnc08+aOA7t3va/jwB6dO37193Ud+3Xv0XnAV3/X
t07eKv+dc3/X3Tm3/quO1/8tL8M//y3//3cP/uGd//deX8GvEkP4Mq+qeFVK
3vtH3Ujf1FfhRz/7h+RVudH3vsircva46affyJ4rd/4vf8bzf7ngvS80ev7m
/jZ8ruBEyfmrk7fj33o0V87s8qXiwxRt+vf6b01+07/JLuccUEO7f61493/8
jLfli3/T2/KFz77L5y/utjRt9KEpMprGhu63rM6M215/8f/gp+SfPuO3fonv
w/+0x+KfzvMoX2hwu4pDXuhdKZ3zmJf6WbjyPHf/+7/pxX/xXBf/hf8JD8A5
R5mbUS/JrfnbQMD5fu3n91Q2dslf+h9m7f/wN3g6/TVWZ94+tzH9D3gMvvzZ
B3LOJ+Kz3oz/z6aDlGH/Y/KqnH2vAYabstmUuTbIsHPvFTHsfyr4tDGGXXT+
Bhl2g+cPDPt8nJHaZKc1yasX/Ec1xd/FquK351/6nap4MTu53ZUblJMNSuc+
kD4p/1fBQ5NHTH7++Ty3K3qvWXK2xobd4HAu5tSND+c8blJu32cK3msAr8oN
7f53vPN3/lXukasutoQn3ZVXXll0vPSprzrXnhVnLZo0GjtXEZX+/8/wf/AZ
qvweX/jSP5TdZc0vL7vml1+R/un0pfvSl6/kfbER/qrR17xnP1/5+v+OjsA2
VboNr8KPflbSv8qZ/av033Jm+/gY0XlKyeBy29fktue3/DThj2pefdEPQV6V
eK+KP0vpiKqSveLRhmHwKvnLPmBbuXH6U/6MX5LecgG5X//6OldX19cNHNTf
DRpc5wbLD7/b3dPe3d2mjbvjzjvdPR3ucV26dnHde9ybbMP2/fv3cbfL53e1
vtu1adtW/+ZYdQP6ugED+rne9/WU/TrrMW694w4BuVtvv8P9m7unYwc3YGC/
5Fz39enlevTs7rp26+Latm+nn3fq3Mn16t0jMyaO3+3erq69jOeWW29zN97c
wrVo2dK1uvsud8ttt7nbW7Vyd959t7tXtunb7z4di42jU+eOOo6bWvzZtbz9
dh03x+lf16ekG1a5du3bu05dOrlu3bq6Dh07lHTszXRPRtS2XTu50tZ6BvvN
kf58662MouRu+vMt7kfuDzfd7H534x/dddf/Vjdp3baN3hx+cwhubM9e3V1P
ueCevXq4PnLxffry01tvBIPl777yNxfcX8bWT37rNvK5bcPguFkcl+FwQ25r
dYe746479fhs209ugt1AbgT7Mly25+K5SYMG+Zs7SL5QtueL4W++bD1G//vk
i+OdcvJF8OhUXZiVO//w3n5HS/0pu/rHxsu/N/z2enls+ulPSf+t0ff41H7Y
Xt7Tj6v1rxrd8rvf/0HyE45jhw276GZl/bdJQ4e1Q5VcC7mTfkR2VD1llW5Z
lZySzXR7f3C2t6tqpu9VZa5KNi+xfQ2vagt2uizckKJbYeezz8J+pdxl8uN3
8fcnf5m6fUk3q6nY4Jvf/E/XtGlT/ZZShvvPyatS/B3+5jfXua3b1ru3ju6X
v46fOCgeyKYt693s+XPdjGdmurkL5rtXVrziNm563R08tNudOHnIHT223+0/
sMstf225e2rWs27uC/PdZtmHz3mf37v3vOnWb1zrnn5uVsk9/uSTcvCpT8xw
Lyxa6DZsfl3GcOz4AfkO9+3f6ba+sdGtWrvSLX1pqVu0dLF7aflLOoT9B3aW
9Hw/docO75HNNrkly5a6aU895cY++pgbPfERHeG0p592U2c86WbOfs4tl5Fu
3baRXXWfPXu3u3XrV+t24ydNdhMmTZH9n9ZhrFu/Rrc7cHCXW7nmNbf4xSVu
5erX3LJXlrmX5GfFyuXu5Vdf0r8XyrBmPT/HPSPn4Dz85pyPPT7NTZw8xY15
pN6Nlp+R4ye6ISNGuX73D3WjJkx0s+fN1bvD7znz57n5ixa41XKpm+QWbJSf
N7dvkVuxY+dW+Z6379gif2/W3zt3bXV7922Xz7hBX3W7dr/hdu7eJu9v0224
Jsboj/28my73YNK06Xqdr6x4We/Bnr1v6jfFHeRm843MX/iCmzJjhpsnv7nF
Bw76b5Tv/fCRPck3zBi2bN1gxyjrm2XX/p62yTxVyj5epfNGDB7RT//v92QP
/q3Rv3nSR018VE2D1/JeWT+u1o95+OzHW5N8pjBQ4r1ysFI7UvjRz4KdR/bh
D1zObN0kmGfuCHbCEoMrezyStzyyVBsaJD/+GOxTTvbmpyYZTcAfeaXDahJG
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
+ArjgVfimx+2vX1oXeJBjbROiu7MJ4S998uJ1RlnCI8sLHEmjIQZsNNxvefq
666biqBy35CueEjAGZlMw9cvJYJEJhPOKtkmXFuvRm1BGuThmATHYMu6I8nB
DZDE3yuclECVi3DYPdL+4MOKB+5pbrn9lnhfzIs+9IjAB/szNONH7URFmORn
GpLL9n0mcwkT3RIYRkRX9wnSyYbyHKBbiMemVvp98R97BChjFza6BvBM5tPM
dvMtFjSf3X7nBM8PBpYJ6XwccAQ0l7ZA3icZjRhKOrzalsrDLnqVUJmPGW7a
h/AZwTw2PVZci7AUpiHGMq6uEa5KTJAQr037ti/bkbJDo03Awc0HP7TpahOx
NYZgNrNJc6tt1eujNkCUwK2sp0HgNj2hprNmRoWllWXUHqqtE8gCWh38lKTf
UJGvLWEjH96cXgRY1XXVEFiTr4LQVdqwruoehm/12u+ZdKdasBnmAWr9cByR
6hT7lfS0rwoaMnT7y7zePnqC17Lw4wwTITVnG2DYahKy85v3b7BhIlbHt9Mx
To7QDlgZmSOMkg005UIIJ8xCWGQ1ESjoYOVwhHnyE6MQLQMJhaKHRdvSZc3i
RLzMciXwI05CKkQOiCFqBKqYPPHcj8MyIm2nmoDgZewQtgAkY38pzCNIEeyt
boI7cYgg5HxZPqw0K1CYGGTxnjtjn4Dy8ONPDGSEWFYzsoh8Ebs49yDctem9
kgPYVmmKodxRuCe9J1GAOELaM9spbUQ1gn4MPUyk07kKoVnDIJcwD1oJ65yT
Zh+22/arXz3b3JEILcuIkNw9EeoijRBWsRck4fLLbbO/GswPK3P9ju/6IOsz
IVa9Omq1X6pThaVKIjx8GKKJk1phQ7HSFZHVTQOz59J5OUdSgZBSCYSQEjr7
XH0PNpoFio2nZM2YWT0FTvpFncv63XJGO+gGChVQqLv+DBXlvO/+3OaCkpXj
v4BJEdf6rqymG3M2Qq+qeKHfS3WGbt7tvZa7xvkv0uvmV/pS2VudZIh/d9y+
r5rPn1R8Pq47RoGuEjoXfNHpYtxIj7LrfKpze1g1u0Dx/OiOcdgxx4XTgIlf
6o7cdEjbbJAYHa2Rjzk+JCfsgwSE6RC9ieIiJN9hQZknOUlGKY7EmrWJZfgu
m34IlzAiYjvJ6otL9w8pKLdVfy1YCuE5RjskTDNSQ2MhFlFMBfNR5PDTFN24
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
kP4jrkn5oWUEs1333DcCZM3WZC6kRxlFmTrQLsYMLizB8ZcPOzqozaFH5zlq
xDnZFAuSF16wLGMAGHQO2iMFy8S13OwsC4CMctFu4+DlQb9Eg8AIgMBHr3Xu
8Fz9gYAdqKC4uoRQxpzPhZddHu2x7StqzdtZC3rrAgGUmZEPJDpPeA/jPRPc
ExmDMtLOOcP7Mjuh1CQBSIADg91T9FDjup/+7IcJWLLBDi2Hx54lB6TnBdHP
TAXgRfij2uVU7Kt5osx134zBAmX8ytPp/cefekakrm9In0kBSM8BKelTq34C
qCTzMDGTYKIGxDPJs01BKoOOBnEAm7nojHR8VDv37bwtxNJz038vpN+jDiKd
g/u6y65feF3R9DjcW1WA89eDw+keHJYE6jhelCPn+b2/1fjRw8S1XhcmLihT
hV8vIs4di4j5rGdOJv4Pj4hrjA411DDzKXvX9Ooj4rqr+s5Nrzz/+x8dCVUc
/bsi4W3/30TCo/9dkXB1qeJ096iO76f/pqqqr5JhjZjWL3PLr6P/chl6zi4w
TZRCqRLMlm1T7Vor23JplZ9yU0h/JetH97WMivXmsqir/rQZUueOjlTIZU6f
fDIq7Uu3jxY7puL90yN0yqfkp0ya6gsoP+cMc3eo+nX5b85v3uhm2FZuUvp3
qnXKlDPx9re+7W/zu/IlmItcX+dUe0YuxLayvRy5O2qX52mPPFVdkpd29yKP
uS+HKidbZIdywtXu8hGmy3V08mL7WK3+t97roYkzIHHyl2/T5h3veEez/Mgj
m8uvvCwFnzc2F1x4QXP2eec051/w1ebqa65svv2dW5q77/lOc9fd327O+9r5
zdL9D2y23WnXZodddmvO/ep5zZVXfaO5/IrLmqOOP6E56LDDm8OOPqa59rqr
m2uuvao565yzmyX77N/s/MU9miV7798ccMjyZv9DljV77ndAc/zJJzePPLIi
QZRs8jebI489rlm4+EvNjot2bw5O+3no4Xvibw8/cl9z2+03NwceelizaMle
8V7n8/DD9yX4M2300XjNLbfe0Jxz/rnNDgt3az6/6+Lwrt353dummutvuDY9
1m66+brmxBRjH37Msc2X066czsGHH9Gcde7Zza3psi+8+MJ0Sy69/JJmq+bL
yw9Pp3pos/yoo5szz/5Kc1D6/dQzz2huvvn65t777mzuW3Fnc2Pan9ftfeBB
sc+LLrmoeezxB5onfvBwc//9dzVfOfec5sqrv5Fu362x/Tt33NpccdXlcVtd
jlt24imnxKnemn73Pq9z+668+op06Q83Tz75SHPZNy6L2/iVc86Jy3S5K9L+
3cp9vnxwc9Lpp8XrbL/51hubU9Lvy444srkkXYnzfPz7DzVnpms8YFl6Au29
X0LF25sHHry7+dZtN8U1uu4bbrw2PrLd9tw77o1t9634bnPRpRc3x5x4YnNI
2p9b/oN0HLf8jju/NULJmV/RqTc7pp7rOGtAyekgkhkw119//fJf3jAdqQg/
+W8qvz79dSq2z4kXW1l2kf7rXhD0NH6a2/9Dk49XdjldHabsLGeN5vQOnX6O
fUyN9tZMj96Qf4sDjn4cvTNfyNx4cXua8Z+9d2/K75ke3QW7jWPNGR21/Ws5
0/yO+b2zrN/t53F7/6tHrXPbQRobfuADzT/98z83n/3sls3mH988/ffx5iMf
/Ujz6U9/qtlyyy2az269VbNgwdZTzcc2/1h657ve+77mPe/foPnQppumY3zq
U59Mu/D2TTfbrPnghz7UfPozn24+k/7z9g03+mBg7Xvfv2Gz8Yc2mUov2KT5
u9i83XYLmu2337b53Oe2azb7p39qNvjARs37NtgwBixvu902zXbbL2h22GG7
dFZbNZul3X8gMcr3vG+DZpttPttss2Dr9N78d/vYdtttmo9/4uNT8YK/j11s
nU56q622HF3Ev3zkI7EbZ+3wG6XdbfrhzeJvn/r0J5vNN988XrvxJps2H0r/
uZKPfPSj8Z6NNv5Qs8UWn4lDT7kV6UngdRtvsknzgQ9uHDfN1nI6H/3YR+Ne
eY/f/W2rrbZI2z82FSe1Vvrz5nGarnz7z20bb3W4dJNGv6ermoqN0/Fum/w3
FS96R9yQss1/rnCTD384rnDrrT8bu9k6nbFtG2y0UVydG+ts7MHrnKHP68Pp
s3v3+94fp+UqF2y7dXymH9r0w83H0tXZ/+fS/vzN1+TNyf1e8iZk8S6ZfCYT
3DUTjzrBKfH/H+H/JUfo72WTMdv+y5htn5x4Bv1t//vr3N/2k5B6/FnHC8ft
+61jts15k7fNncV71x6z7R/eyP66ar7449v+A13bX+V63+xtM8rVrh7d0Kur
P8U79n1zf27+t/8HycKN4Q==\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["thresholdImage",
  FontWeight->"Bold"],
 "\nConverts a grayscale image I into a binary image by setting all the \
values below the threshold t to zero"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037281051*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "thresholdImage", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"thresholdImage", "[", 
    RowBox[{"I_", ",", " ", "t_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#", " ", "<", " ", "t"}], ",", " ", "0", ",", " ", "1"}], 
       "]"}], "&"}], ",", " ", "I", ",", " ", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.407087037281051*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["normalizeImage",
  FontWeight->"Bold"],
 "\nConverts an image to the 0-255 range.."
}], "Subsubtitle",
 CellChangeTimes->{{3.4070831692966757`*^9, 3.407083181999801*^9}, 
   3.407087037281051*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"clear", "[", "normalizeImage", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normalizeImage", "[", "slice_", "]"}], " ", ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "maxVal", ",", " ", "minVal", ",", " ", "image", ",", " ", "newImage"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"image", " ", "=", " ", 
       RowBox[{"Take", "[", 
        RowBox[{"slice", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"sliceSize", "[", 
            RowBox[{"1", ",", "1"}], "]"}], ",", " ", 
           RowBox[{"sliceSize", "[", 
            RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"sliceSize", "[", 
            RowBox[{"2", ",", "1"}], "]"}], ",", " ", 
           RowBox[{"sliceSize", "[", 
            RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxVal", " ", "=", " ", 
       RowBox[{"Max", "[", "image", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"minVal", " ", "=", " ", 
       RowBox[{"Min", "[", "image", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newImage", " ", "=", " ", "slice"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"newImage", "\[LeftDoubleBracket]", 
           RowBox[{"x", ",", " ", "y"}], "\[RightDoubleBracket]"}], " ", "=", 
          " ", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"slice", "\[LeftDoubleBracket]", 
               RowBox[{"x", ",", " ", "y"}], "\[RightDoubleBracket]"}], " ", 
              "-", " ", "minVal"}], ")"}], "*", "255"}], 
           RowBox[{"maxVal", " ", "-", " ", "minVal"}]]}], ";"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", 
          RowBox[{"sliceSize", "[", 
           RowBox[{"1", ",", "1"}], "]"}], ",", " ", 
          RowBox[{"sliceSize", "[", 
           RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"y", ",", " ", 
          RowBox[{"sliceSize", "[", 
           RowBox[{"2", ",", "1"}], "]"}], ",", " ", 
          RowBox[{"sliceSize", "[", 
           RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "newImage"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.406912587843686*^9, 3.406912601984311*^9}, {
   3.406912745078061*^9, 3.406912936765561*^9}, {3.406913014562436*^9, 
   3.406913045062436*^9}, 3.407087037281051*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["invertImage",
  FontWeight->"Bold"],
 "\nInverts an image "
}], "Subsubtitle",
 CellChangeTimes->{3.407087037281051*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "invertImage", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"invertImage", "[", "I_", "]"}], " ", ":=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#", " ", "==", " ", "0"}], ",", " ", "1", ",", " ", "0"}], 
       "]"}], "&"}], ",", " ", "I", ",", " ", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.407087037281051*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["n4, n8",
  FontWeight->"Bold"],
 "\nReturns the points in the 4 neighborhood and the 8 neighborhood of p"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037281051*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "n4", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"n4", "[", "p_", "]"}], " ", ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "-", "1"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "+", "1"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "-", "1"}], ",", " ", 
        RowBox[{"p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
        "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "+", "1"}], ",", " ", 
        RowBox[{"p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
        "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "n8", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n8", "[", "p_", "]"}], " ", ":=", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
            "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
            "x"}], ",", " ", 
           RowBox[{
            RowBox[{
            "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "+", 
            "y"}]}], "}"}], ",", 
         RowBox[{"{", " ", 
          RowBox[{"x", ",", " ", 
           RowBox[{"-", "1"}], ",", " ", "1"}], " ", "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", 
           RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], "]"}], ",", " ", 
       "1"}], "]"}], " ", ",", " ", 
     RowBox[{"{", "p", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.407087037281051*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getN4, getN8, getN4Immersion",
  FontWeight->"Bold"],
 "\nReturns the points in the 4 / 8 neighborhood of p if it is in the \
thresholded image I"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037281051*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getN4", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getN4", "[", 
    RowBox[{"p_", ",", " ", "I_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"n4", "[", "p", "]"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"I", "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         ",", " ", 
         RowBox[{
         "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        "\[RightDoubleBracket]"}], " ", ">", " ", "0"}], " ", "&"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.407087037281051*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getN8", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getN8", "[", 
    RowBox[{"p_", ",", " ", "I_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"n8", "[", "p", "]"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"I", "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         ",", " ", 
         RowBox[{
         "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        "\[RightDoubleBracket]"}], " ", ">", " ", "0"}], "&"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.407087037281051*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getN4Immersion", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getN4Immersion", "[", 
    RowBox[{"p_", ",", " ", "V_"}], "]"}], " ", ":=", " ", 
   RowBox[{"getN4", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", "  ", 
     RowBox[{"thresholdImage", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{"V", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
            "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-", 
            "1"}], ",", " ", 
           RowBox[{
            RowBox[{
            "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
            "1"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
            "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
            "1"}], ",", " ", 
           RowBox[{
            RowBox[{
            "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "+", 
            "1"}]}], "}"}]}], "]"}], ",", " ", 
       RowBox[{"V", "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         ",", " ", 
         RowBox[{
         "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.407087037281051*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getC4",
  FontWeight->"Bold"],
 "\nGets the number of 4-connected elements around point p in the pointset X"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037281051*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getC4", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getC4", "[", 
   RowBox[{"p_", ",", " ", "testPoints_", ",", " ", "imagePoints_"}], "]"}], 
  " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"Module", " ", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "tPoints", ",", " ", "mImage", ",", " ", "count", ",", " ", "list", ",", 
      " ", "list2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tPoints", " ", "=", " ", "testPoints"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mImage", " ", "=", " ", "imagePoints"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"count", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Scan", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"tPoints", ",", " ", "#"}], "]"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"list", " ", "=", " ", 
              RowBox[{"{", "#", "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"count", " ", "=", " ", 
              RowBox[{"count", " ", "+", " ", "1"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"While", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "list", "]"}], " ", ">", " ", "0"}], 
               ",", " ", "\[IndentingNewLine]", 
               RowBox[{"Module", "[", 
                RowBox[{
                 RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"list2", " ", "=", " ", 
                   RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"Scan", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"tPoints", " ", "=", " ", 
                    RowBox[{"Complement", "[", 
                    RowBox[{"tPoints", ",", " ", 
                    RowBox[{"{", "#", "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"mImage", " ", "=", " ", 
                    RowBox[{"Complement", "[", 
                    RowBox[{"mImage", ",", " ", 
                    RowBox[{"{", "#", "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"list2", " ", "=", " ", 
                    RowBox[{"Union", "[", 
                    RowBox[{"list2", ",", " ", 
                    RowBox[{"Intersection", "[", 
                    RowBox[{
                    RowBox[{"n4", "[", "#", "]"}], ",", " ", "mImage"}], 
                    "]"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
                    " ", "&"}], ",", " ", "list"}], "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"list", " ", "=", " ", "list2"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
              "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
         "\[IndentingNewLine]", "]"}], " ", "&"}], ",", "testPoints"}], "]"}],
      ";", "\[IndentingNewLine]", "count"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{3.407087037281051*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getC4", "[", 
    RowBox[{"p_", ",", " ", "X_"}], "]"}], " ", ":=", " ", 
   RowBox[{"getC4", "[", 
    RowBox[{"p", ",", " ", "X", ",", " ", "X"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.407087037281051*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getC8",
  FontWeight->"Bold"],
 "\nGets the number of 8-connected elements around point p in the pointset X"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037281051*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getC8", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getC8", "[", 
   RowBox[{"p_", ",", " ", "testPoints_", ",", " ", "imagePoints_"}], "]"}], 
  " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"Module", " ", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "tPoints", ",", " ", "mImage", ",", " ", "count", ",", " ", "list", ",", 
      " ", "list2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tPoints", " ", "=", " ", "testPoints"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mImage", " ", "=", " ", "imagePoints"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"count", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Scan", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"tPoints", ",", " ", "#"}], "]"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"list", " ", "=", " ", 
              RowBox[{"{", "#", "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"count", " ", "=", " ", 
              RowBox[{"count", " ", "+", " ", "1"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"While", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "list", "]"}], " ", ">", " ", "0"}], 
               ",", " ", "\[IndentingNewLine]", 
               RowBox[{"Module", "[", 
                RowBox[{
                 RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"list2", " ", "=", " ", 
                   RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"Scan", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"tPoints", " ", "=", " ", 
                    RowBox[{"Complement", "[", 
                    RowBox[{"tPoints", ",", " ", 
                    RowBox[{"{", "#", "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"mImage", " ", "=", " ", 
                    RowBox[{"Complement", "[", 
                    RowBox[{"mImage", ",", " ", 
                    RowBox[{"{", "#", "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"list2", " ", "=", " ", 
                    RowBox[{"Union", "[", 
                    RowBox[{"list2", ",", " ", 
                    RowBox[{"Intersection", "[", 
                    RowBox[{
                    RowBox[{"n8", "[", "#", "]"}], ",", " ", "mImage"}], 
                    "]"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
                    " ", "&"}], ",", " ", "list"}], "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"list", " ", "=", " ", "list2"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
              "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
         "\[IndentingNewLine]", "]"}], " ", "&"}], ",", "testPoints"}], "]"}],
      ";", "\[IndentingNewLine]", "count"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{3.4070870372966757`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getC8", "[", 
    RowBox[{"p_", ",", " ", "X_"}], "]"}], " ", ":=", " ", 
   RowBox[{"getC8", "[", 
    RowBox[{"p", ",", " ", "X", ",", " ", "X"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.4070870372966757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["isCurveEnd",
  FontWeight->"Bold"],
 "\nTells us whether the point p is a curve end point in the image V"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870372966757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "isCurveEnd", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"isCurveEnd", "[", 
   RowBox[{"p_", ",", " ", "V_", ",", " ", "W_"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"currentN4", ",", " ", "n"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"currentN4", "=", " ", 
      RowBox[{"getN4", "[", 
       RowBox[{"p", ",", " ", "V"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"Length", "[", "currentN4", "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"Return", "[", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "\[Equal]", "0"}], ")"}], " ", "||", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "\[Equal]", "1"}], ")"}], "&&", " ", 
         RowBox[{"isBoundaryPoint", "[", 
          RowBox[{
           RowBox[{
           "currentN4", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}], ",", " ", "V", ",", " ", "W"}], 
          "]"}]}], ")"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.4070870372966757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "\n",
 StyleBox["isLocalMinima",
  FontWeight->"Bold"],
 "\nTells you whether the point p is a local minma in image V"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870372966757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "isLocalMinima", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"isLocalMinima", "[", 
   RowBox[{"V_", ",", " ", "p_"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"currentN8", ",", " ", "isAbove", ",", " ", "isBelow"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"currentN8", " ", "=", " ", 
      RowBox[{"n8", "[", "p", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"isAbove", " ", "=", " ", "False"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"isBelow", " ", "=", " ", "False"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Scan", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"isAbove", " ", "=", " ", 
            RowBox[{"isAbove", " ", "||", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"V", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 ",", " ", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], " ",
                ">", " ", 
               RowBox[{"V", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 ",", " ", 
                 RowBox[{
                 "p", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}]}], 
              ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"isBelow", " ", "=", " ", 
            RowBox[{"isBelow", " ", "||", "  ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"V", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 ",", " ", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], " ",
                "<", " ", 
               RowBox[{"V", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 ",", " ", 
                 RowBox[{
                 "p", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}]}], 
              ")"}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], "&"}], ",", 
       "  ", "currentN8"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"isAbove", " ", "&&", " ", 
      RowBox[{"!", "isBelow"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{3.4070870372966757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["isSimple",
  FontWeight->"Bold"],
 "\nTells us whether the point p is simple in the image V, inverse of the \
image W"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870372966757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "isSimple", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isSimple", "[", 
    RowBox[{"p_", ",", " ", "V_", ",", " ", "W_"}], "]"}], " ", ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"getC4", "[", 
        RowBox[{"p", ",", " ", 
         RowBox[{"getN4", "[", 
          RowBox[{"p", ",", " ", "V"}], "]"}], ",", " ", 
         RowBox[{"getN8", "[", 
          RowBox[{"p", ",", " ", "V"}], "]"}]}], "]"}], "  ", "\[Equal]", " ",
        "1"}], ")"}], " ", "&&", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"getC8", "[", 
        RowBox[{"p", ",", " ", 
         RowBox[{"getN8", "[", 
          RowBox[{"p", ",", " ", "W"}], "]"}], ",", " ", 
         RowBox[{"getN8", "[", 
          RowBox[{"p", ",", " ", "W"}], "]"}]}], "]"}], "  ", "\[Equal]", " ",
        "1"}], ")"}]}], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.4070870372966757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["isSimpleImmersion",
  FontWeight->"Bold"],
 "\nTells us whether the point p is simple in the image V,inverse of the \
image W when testing the immersion threshold "
}], "Subsubtitle",
 CellChangeTimes->{3.4070870372966757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "isSimpleImmersion", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"isSimpleImmersion", "[", 
   RowBox[{"p_", ",", " ", "V_", ",", " ", "threshold_"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"V2", ",", " ", "W2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"V2", " ", "=", " ", 
      RowBox[{"Take", "[", 
       RowBox[{"V", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
           "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-", 
           "1"}], ",", " ", 
          RowBox[{
           RowBox[{
           "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
           "1"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
           "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
           "1"}], ",", " ", 
          RowBox[{
           RowBox[{
           "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "+", 
           "1"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"V2", " ", "=", " ", 
      RowBox[{"thresholdImage", "[", 
       RowBox[{"V2", ",", " ", "threshold"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"W2", " ", "=", " ", 
      RowBox[{"invertImage", "[", "V2", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"isSimple", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", " ", "V2", ",", " ", "W2"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{3.4070870372966757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "\n",
 StyleBox["isBoundaryPoint",
  FontWeight->"Bold"],
 "\nTells us whether the point p is in the boundary point of the Image V, \
inverse of the image W"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870372966757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "isBoundaryPoint", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isBoundaryPoint", "[", 
    RowBox[{"p_", ",", " ", "V_", ",", " ", "W_"}], "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"V", "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         ",", " ", 
         RowBox[{
         "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        "\[RightDoubleBracket]"}], " ", ">", " ", "0"}], ")"}], " ", "&&", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"getN4", "[", 
         RowBox[{"p", ",", " ", "W"}], "]"}], "]"}], " ", ">", " ", "0"}], 
      ")"}]}], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.4070870372966757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "\n",
 StyleBox["isBoundaryPointImmersion",
  FontWeight->"Bold"],
 "\nTells us whether the point p is in the boundary point of the Image V, \
inverse of the image W when performing immersion"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870372966757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "isBoundaryPointImmersion", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isBoundaryPointImmersion", "[", 
    RowBox[{"p_", ",", " ", "V_"}], "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
              " ", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",",
              " ", 
             RowBox[{"V", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", " ", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
              "\[RightDoubleBracket]"}]}], "}"}], " ", "&"}], ",", "  ", 
          RowBox[{"n4", "[", "p", "]"}]}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], " ", 
           "<", " ", 
           RowBox[{"V", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
             "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
              " ", 
             RowBox[{
             "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            "\[RightDoubleBracket]"}]}], ")"}], " ", "&"}]}], " ", "]"}], 
      "]"}], " ", ">", " ", "0"}], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.4070870372966757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["isBorderingBackground",
  FontWeight->"Bold"],
 "\nTells us whether the point p is bordering a background pixel."
}], "Subsubtitle",
 CellChangeTimes->{3.4070870372966757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "isBorderingBackground", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isBorderingBackground", "[", 
    RowBox[{"p_", ",", " ", "V_", ",", " ", "W_"}], "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"V", "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         ",", " ", 
         RowBox[{
         "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        "\[RightDoubleBracket]"}], " ", ">", " ", "0"}], ")"}], " ", "&&", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"getN8", "[", 
         RowBox[{"p", ",", " ", "W"}], "]"}], "]"}], " ", ">", " ", "0"}], 
      ")"}]}], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.4070870372966757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["isDestructible",
  FontWeight->"Bold"],
 "\nTells us whether a point p can be destroyed from image V (inverse W) \
while preserving skeleton Pres..\n\tthinOperator = 0 \[Rule] Topology \
preservation \n\tthinOperator = 1 \[Rule] Curve preservation \n\tthinOperator \
= 2 \[Rule] Surface preservation (To be implemented)"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870372966757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "isDestructible", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"isDestructible", "[", 
   RowBox[{
   "p_", ",", " ", "V_", ",", " ", "W_", ",", " ", "Pres_", ",", " ", 
    "thinOperator_"}], "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"thinOperator", "==", "0"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"isBoundaryPoint", "[", 
       RowBox[{"p", ",", " ", "V", ",", " ", "W"}], "]"}], " ", "&&", " ", 
      RowBox[{"isSimple", "[", 
       RowBox[{"p", ",", " ", "V", ",", " ", "W"}], "]"}], " ", "&&", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Pres", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", " ", 
          RowBox[{
          "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "\[RightDoubleBracket]"}], " ", "\[Equal]", " ", "0"}], ")"}]}], 
     ")"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"isBoundaryPoint", "[", 
       RowBox[{"p", ",", " ", "V", ",", " ", "W"}], "]"}], " ", "&&", " ", 
      RowBox[{"isSimple", "[", 
       RowBox[{"p", ",", " ", "V", ",", " ", "W"}], "]"}], " ", "&&", " ", 
      RowBox[{"!", 
       RowBox[{"isCurveEnd", "[", 
        RowBox[{"p", ",", " ", "V", ",", " ", "W"}], "]"}]}], " ", "&&", " ", 
      
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Pres", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", " ", 
          RowBox[{
          "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "\[RightDoubleBracket]"}], " ", "\[Equal]", " ", "0"}], ")"}]}], 
     ")"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{3.4070870372966757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["isSkeletalSurfacePoint",
  FontWeight->"Bold"],
 "\nLets us know whether a given skeletal point p is a surface point... \n\t\
Pre: p is on the skeleton"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870372966757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "isSkeletalSurfacePoint", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"isSkeletalSurfacePoint", "[", 
   RowBox[{"p_", ",", " ", "S_"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", "imageN8", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"imageN8", " ", "=", " ", 
      RowBox[{"getN8", "[", 
       RowBox[{"p", ",", " ", "S"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"imageN8", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", ",", " ", 
              RowBox[{
               RowBox[{
               "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               " ", "+", " ", "1"}]}], "}"}]}], "]"}], " ", "&&", " ", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"imageN8", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
               "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "+", "1"}], ",", " ", 
              RowBox[{
              "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
             " ", "}"}]}], "]"}], " ", "&&", " ", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"imageN8", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
               "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "+", "1"}], " ", ",", " ", 
              RowBox[{
               RowBox[{
               "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               " ", "+", " ", "1"}]}], "}"}]}], "]"}]}], " ", ")"}], " ", "||",
         
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"imageN8", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", ",", " ", 
              RowBox[{
               RowBox[{
               "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               " ", "-", " ", "1"}]}], "}"}]}], "]"}], " ", "&&", " ", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"imageN8", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
               "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "-", "1"}], ",", " ", 
              RowBox[{
              "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
             " ", "}"}]}], "]"}], " ", "&&", " ", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"imageN8", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
               "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "-", "1"}], " ", ",", " ", 
              RowBox[{
               RowBox[{
               "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               " ", "-", " ", "1"}]}], "}"}]}], "]"}]}], " ", ")"}], " ", "||",
         "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"imageN8", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", ",", " ", 
              RowBox[{
               RowBox[{
               "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               " ", "+", " ", "1"}]}], "}"}]}], "]"}], " ", "&&", " ", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"imageN8", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
               "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "-", "1"}], ",", " ", 
              RowBox[{
              "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
             " ", "}"}]}], "]"}], " ", "&&", " ", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"imageN8", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
               "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "-", "1"}], " ", ",", " ", 
              RowBox[{
               RowBox[{
               "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               " ", "+", " ", "1"}]}], "}"}]}], "]"}]}], " ", ")"}], " ", "||",
         "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"imageN8", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", ",", " ", 
              RowBox[{
               RowBox[{
               "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               " ", "-", " ", "1"}]}], "}"}]}], "]"}], " ", "&&", " ", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"imageN8", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
               "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "+", "1"}], ",", " ", 
              RowBox[{
              "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
             " ", "}"}]}], "]"}], " ", "&&", " ", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"imageN8", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
               "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "+", "1"}], " ", ",", " ", 
              RowBox[{
               RowBox[{
               "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               " ", "-", " ", "1"}]}], "}"}]}], "]"}]}], " ", ")"}]}], ")"}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.4070870372966757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["isSkeletalSurfaceInteriorPoint",
  FontWeight->"Bold"],
 "\nLets us know whether the point is an interior point of a surface"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870372966757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "isSkeletalSurfaceInteriorPoint", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isSkeletalSurfaceInteriorPoint", "[", 
    RowBox[{"p_", ",", " ", "S_"}], "]"}], " ", ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"getN8", "[", 
       RowBox[{"p", ",", " ", "S"}], "]"}], "]"}], " ", "\[Equal]", " ", 
     "8"}], ")"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.4070870372966757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getSkeletalPixelType",
  FontWeight->"Bold"],
 "\nGets the point type of a pixel p in the Skeleton S\n\t0 - Not in the \
skeleton\n\t1 - A skeletal point\n\t2 - A curve end point\n\t3 - A curve \
interior point\n\t4 - A surface boundary point\n\t5 - A surface interior \
point"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870372966757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getSkeletalPixelType", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getSkeletalPixelType", "[", 
   RowBox[{"p_", ",", " ", "S_"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", "ret", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"S", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", " ", 
          RowBox[{
          "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "\[RightDoubleBracket]"}], "  ", "==", "0"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"ret", " ", "=", " ", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"isSkeletalSurfacePoint", "[", 
          RowBox[{"p", ",", " ", "S"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"isSkeletalSurfaceInteriorPoint", "[", 
            RowBox[{"p", ",", " ", "S"}], "]"}], ",", " ", 
           RowBox[{"ret", " ", "=", " ", "5"}], ",", " ", 
           RowBox[{"ret", " ", "=", " ", "4"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"getN4", "[", 
              RowBox[{"p", ",", " ", "S"}], "]"}], "]"}], " ", "\[Equal]", 
            " ", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ret", " ", "=", " ", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"getN4", "[", 
                RowBox[{"p", ",", " ", "S"}], "]"}], "]"}], " ", "\[Equal]", 
              " ", "1"}], ",", " ", 
             RowBox[{"ret", " ", "=", " ", "2"}], ",", " ", 
             RowBox[{"ret", " ", "=", " ", "3"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "ret", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.4070870372966757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getBlankImage",
  FontWeight->"Bold"],
 "\nReturns a blank image of the same size as the source image."
}], "Subsubtitle",
 CellChangeTimes->{3.4070870372966757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getBlankImage", "]"}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getBlankImage", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{
        RowBox[{"sliceSize", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "-", "gaussianRadius"}], ",", " ", 
       RowBox[{
        RowBox[{"sliceSize", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "+", "gaussianRadius"}]}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"y", ",", " ", 
       RowBox[{
        RowBox[{"sliceSize", "[", 
         RowBox[{"2", ",", "1"}], "]"}], "-", "gaussianRadius"}], ",", " ", 
       RowBox[{
        RowBox[{"sliceSize", "[", 
         RowBox[{"2", ",", "2"}], "]"}], "+", "gaussianRadius"}]}], "}"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.407087037312301*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["findSkeletalValue",
  FontWeight->"Bold"],
 "\nFinds the correct skeletal value that a pixel can be reduced while \
performing immersion"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037312301*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "findSkeletalValue", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"findSkeletalValue", "[", 
    RowBox[{"p_", ",", "V_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"neighbors", ",", "skelVal", ",", " ", "V2", ",", " ", "W2"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"V2", " ", "=", " ", 
       RowBox[{"thresholdImage", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"V", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
              "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "-", "2"}], ",", 
             RowBox[{
              RowBox[{
              "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "+", "2"}]}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
              "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "-", "2"}], ",", 
             RowBox[{
              RowBox[{
              "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "+", "2"}]}], "}"}]}], "]"}], ",", " ", 
         RowBox[{"V", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{
           "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           " ", 
           RowBox[{
           "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "\[RightDoubleBracket]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"W2", " ", "=", " ", 
       RowBox[{"invertImage", "[", "V2", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"isCurveEnd", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}], ",", " ", "V2", ",", " ", "W2"}], 
         "]"}], ",", " ", "\[IndentingNewLine]", 
        RowBox[{"V", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", " ", 
          RowBox[{
          "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"neighbors", "=", 
            RowBox[{"Sort", "[", 
             RowBox[{
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"V", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}]}], 
                  "}"}], "&"}], ",", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"n4", "[", "p", "]"}], ",", 
                  RowBox[{"{", "p", "}"}]}], "]"}]}], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                ">", 
                RowBox[{
                "#2", "\[LeftDoubleBracket]", "3", 
                 "\[RightDoubleBracket]"}]}], "&"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"neighbors", " ", "=", " ", 
            RowBox[{"Select", "[", 
             RowBox[{"neighbors", ",", " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                " ", "\[LessEqual]", " ", 
                RowBox[{"V", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{
                  "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   ",", " ", 
                  RowBox[{
                  "p", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}]}], 
               " ", "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"skelVal", "=", 
            RowBox[{"neighbors", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"Length", "[", "neighbors", "]"}], ",", "3"}], 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"\[Not]", 
                 RowBox[{"isSimpleImmersion", "[", 
                  RowBox[{"p", ",", "V", ",", 
                   RowBox[{"neighbors", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "3"}], "\[RightDoubleBracket]"}]}], 
                  "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"Module", "[", 
                 RowBox[{
                  RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"skelVal", "=", 
                    RowBox[{"neighbors", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "3"}], "\[RightDoubleBracket]"}]}], ";",
                    "\[IndentingNewLine]", 
                   RowBox[{"Break", "[", "]"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}]}], "]"}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "neighbors", "]"}]}], "}"}]}], "]"}], 
           ";", "\[IndentingNewLine]", "skelVal"}]}], "\[IndentingNewLine]", 
         "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.407087037312301*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["performThinning",
  FontWeight->"Bold"],
 "\nPerforms the thinning operation on image V, (Inverse of the image W) for \
a maximum of n iterations, while preserving earlier skeleton Pres, for \
topology/curve or surface preservation."
}], "Subsubtitle",
 CellChangeTimes->{3.407087037312301*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "performThinning", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"performThinning", "[", 
   RowBox[{
   "V_", ",", " ", "W_", ",", " ", "n_", ",", " ", "Pres_", ",", " ", 
    "thinOperator_"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "G", ",", "H", ",", "m", ",", " ", "dMap", ",", " ", "boundaryPoints", 
      ",", " ", "thicknessImage", ",", " ", "thickness", ",", " ", 
      "progress"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"m", " ", "=", " ", 
      RowBox[{"Max", "[", "V", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"G", " ", "=", " ", "V"}], ";", "\[IndentingNewLine]", 
     RowBox[{"H", " ", "=", " ", "W"}], ";", "\[IndentingNewLine]", 
     RowBox[{"thicknessImage", " ", "=", " ", 
      RowBox[{"getBlankImage", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"thickness", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"progress", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"progress", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{"progress", ",", " ", 
           RowBox[{"{", 
            RowBox[{"ListDensityPlot", "[", 
             RowBox[{"G", ",", " ", 
              RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
              RowBox[{"Frame", "\[Rule]", "False"}], ",", "  ", 
              RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}], ",", "  ", 
              "\[IndentingNewLine]", 
              RowBox[{"ColorFunction", "\[Rule]", 
               RowBox[{"Function", "[", 
                RowBox[{
                 RowBox[{"{", "x", "}"}], ",", " ", 
                 RowBox[{"GrayLevel", "[", "x", "]"}]}], "]"}]}], ",", " ", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"300", ",", "300"}], "}"}]}]}], "]"}], "}"}]}], 
          "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"thickness", " ", "=", " ", 
         RowBox[{"thickness", "+", "1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dMap", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"isDestructible", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", "G", ",", 
                 " ", "H", ",", " ", "Pres", ",", " ", "thinOperator"}], 
                "]"}], " ", ",", " ", 
               RowBox[{"{", 
                RowBox[{"x", ",", " ", "y", ",", " ", 
                 RowBox[{"Length", "[", 
                  RowBox[{"getN4", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", "G"}], 
                   "]"}], "]"}]}], "}"}], ",", " ", 
               RowBox[{"{", "}"}]}], "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"1", ",", "1"}], "]"}], ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"2", ",", "1"}], "]"}], ",", " ", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ",", " ", 
           "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dMap", " ", "=", " ", 
         RowBox[{"Select", "[", 
          RowBox[{"dMap", ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#", "]"}], ">", "0"}], "&"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"dMap", " ", "=", " ", 
         RowBox[{"Sort", "[", 
          RowBox[{"dMap", ",", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "#2", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              ">", 
              RowBox[{
              "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
             ")"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "dMap", "]"}], " ", "\[Equal]", " ", "0"}], 
          ",", " ", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"boundaryPoints", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"isBorderingBackground", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], ",", " ", "G", ",", " ", 
                 "H"}], "]"}], " ", ",", " ", 
               RowBox[{"{", 
                RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", 
               RowBox[{"{", "}"}]}], "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"1", ",", "1"}], "]"}], ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"2", ",", "1"}], "]"}], ",", " ", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ",", " ", 
           "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"boundaryPoints", " ", "=", " ", 
         RowBox[{"Select", "[", 
          RowBox[{"boundaryPoints", ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#", "]"}], ">", "0"}], "&"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Scan", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"thicknessImage", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 ",", " ", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], " ",
                "\[Equal]", " ", "0"}], ",", 
              RowBox[{
               RowBox[{"thicknessImage", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 ",", " ", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], "=",
                " ", "thickness"}]}], "]"}], ";"}], " ", "&"}], ",", " ", 
          "boundaryPoints"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Scan", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"isDestructible", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   ",", 
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}], "}"}], ",", " ", "G", ",", 
                " ", "H", ",", " ", "Pres", ",", " ", "thinOperator"}], "]"}],
               ",", " ", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"G", "\[LeftDoubleBracket]", " ", 
                   RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], " ", 
                   "\[RightDoubleBracket]"}], "  ", "=", " ", "0"}], ";", 
                 RowBox[{
                  RowBox[{"thicknessImage", "\[LeftDoubleBracket]", " ", 
                   RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], " ", 
                   "\[RightDoubleBracket]"}], " ", "=", " ", "0"}]}]}], 
               "]"}]}], "]"}], ";"}], "&"}], ",", "dMap"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"H", "=", 
         RowBox[{"invertImage", "[", "G", "]"}]}], ";"}], 
       "\[IndentingNewLine]", ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "n"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"boundaryPoints", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"isBorderingBackground", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], ",", " ", "G", ",", " ", "H"}],
              "]"}], " ", ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", 
            RowBox[{"{", "}"}]}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"1", ",", "1"}], "]"}], ",", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"2", ",", "1"}], "]"}], ",", " ", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ",", " ", 
        "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"boundaryPoints", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"boundaryPoints", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], ">", "0"}], "&"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"thicknessImage", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", " ", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
             "\[RightDoubleBracket]"}], " ", "\[Equal]", " ", "0"}], ",", 
           RowBox[{
            RowBox[{"thicknessImage", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", " ", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
             "\[RightDoubleBracket]"}], "=", " ", "thickness"}]}], "]"}], 
         ";"}], " ", "&"}], ",", " ", "boundaryPoints"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"progress", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"progress", ",", " ", 
          RowBox[{"{", 
           RowBox[{"ListDensityPlot", "[", 
            RowBox[{"G", ",", " ", 
             RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
             RowBox[{"Frame", "\[Rule]", "False"}], ",", " ", " ", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}], ",", " ", 
             RowBox[{"ColorFunction", "\[Rule]", 
              RowBox[{"Function", "[", 
               RowBox[{
                RowBox[{"{", "x", "}"}], ",", " ", 
                RowBox[{"GrayLevel", "[", "x", "]"}]}], "]"}]}], ",", "  ", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"300", ",", "300"}], "}"}]}]}], "]"}], "}"}]}], 
         "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"G", ",", " ", "thicknessImage", ",", " ", "progress"}], "}"}],
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.3993009561966295`*^9, 3.3993010048844414`*^9}, {
   3.3993011114788733`*^9, 3.3993011171039095`*^9}, {3.399301698076378*^9, 
   3.3993017057483015`*^9}, {3.399301797842641*^9, 3.3993018016395407`*^9}, {
   3.3993039893254166`*^9, 3.399303994591075*^9}, {3.3993113428568535`*^9, 
   3.399311368513268*^9}, {3.3993117123279686`*^9, 3.3993117228280354`*^9}, 
   3.407087037312301*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["performImmersionThinning",
  FontWeight->"Bold"],
 "\nPerforms shape perserving thinning on a grayscale volume"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037312301*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "performImmersionThinning", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"performImmersionThinning", "[", 
   RowBox[{"V_", ",", " ", "n_"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "bins", ",", " ", "V2", ",", " ", "beach", ",", " ", "modified", ",", 
      " ", "s0", ",", " ", "s1", ",", " ", "s2", ",", " ", "s3", ",", " ", 
      "s4"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"V2", " ", "=", " ", "V"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"bins", "[", "i", "]"}], " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", " ", "255"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"bins", "[", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "]"}],
           "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"bins", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
             "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", " ", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
              "}"}], "}"}]}], "]"}]}], ";"}], " ", "&"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", " ", "y", ",", " ", 
             RowBox[{"V2", "\[LeftDoubleBracket]", 
              RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}]}], "}"}], 
           ",", " ", 
           RowBox[{"{", 
            RowBox[{"x", ",", "1", ",", " ", 
             RowBox[{
              RowBox[{"Dimensions", "[", "V2", "]"}], "\[LeftDoubleBracket]", 
              "1", "\[RightDoubleBracket]"}]}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"y", ",", "1", ",", " ", 
             RowBox[{
              RowBox[{"Dimensions", "[", "V2", "]"}], "\[LeftDoubleBracket]", 
              "2", "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", " ", 
         "1"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"s0", " ", "=", " ", 
         RowBox[{"Show", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ListDensityPlot", "[", 
             RowBox[{"V2", ",", 
              RowBox[{"Mesh", "\[Rule]", "False"}], ",", " ", 
              RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], 
            ",", " ", 
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PointSize", "[", "0.001", "]"}], ",", " ", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", " ", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Point", "[", 
                   RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "\[RightDoubleBracket]"}],
                     " ", "-", " ", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", " ", "0.5"}], "}"}]}], "]"}], " ", 
                  "&"}], ",", " ", 
                 RowBox[{"bins", "[", "g", "]"}]}], "]"}]}], "}"}], "]"}]}], 
           "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"modified", " ", "=", " ", "False"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"beach", " ", "=", " ", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Scan", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"isBoundaryPointImmersion", "[", 
                 RowBox[{"#", ",", " ", "V2"}], "]"}], ",", " ", 
                RowBox[{"beach", " ", "=", " ", 
                 RowBox[{"Join", "[", 
                  RowBox[{"beach", ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", " ", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", " ", 
                    RowBox[{"Length", "[", 
                    RowBox[{"getN4Immersion", "[", 
                    RowBox[{"#", ",", " ", "V2"}], "]"}], "]"}]}], "}"}], 
                    "}"}]}], "]"}]}]}], "]"}], " ", "&"}], ",", " ", 
             RowBox[{"bins", "[", "g", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"s1", " ", "=", " ", 
            RowBox[{"Show", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ListDensityPlot", "[", 
                RowBox[{"V2", ",", 
                 RowBox[{"Mesh", "\[Rule]", "False"}], ",", " ", 
                 RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], 
               ",", " ", 
               RowBox[{"Graphics", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "0.001", "]"}], ",", 
                  RowBox[{"RGBColor", "[", 
                   RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", " ", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Point", "[", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "\[RightDoubleBracket]"}],
                     " ", "-", " ", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", " ", "0.5"}], "}"}]}], "]"}], "  ", 
                    "&"}], ",", " ", "beach"}], "]"}]}], "}"}], "]"}]}], 
              "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"s4", " ", "=", " ", 
            RowBox[{"ListDensityPlot", "[", 
             RowBox[{
              RowBox[{"Take", "[", 
               RowBox[{"V2", ",", " ", 
                RowBox[{"{", 
                 RowBox[{"40", ",", "55"}], "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"25", ",", "40"}], "}"}]}], "]"}], ",", " ", 
              RowBox[{"Mesh", "\[Rule]", "False"}], ",", " ", 
              RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "beach", "]"}], " ", "\[Equal]", " ", 
              "0"}], ",", " ", 
             RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]",
            
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"beach", " ", "=", " ", 
              RowBox[{"Sort", "[", 
               RowBox[{"beach", ",", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "#1", "\[LeftDoubleBracket]", "3", 
                   "\[RightDoubleBracket]"}], " ", "<", " ", 
                  RowBox[{
                  "#2", "\[LeftDoubleBracket]", "3", 
                   "\[RightDoubleBracket]"}]}], " ", "&"}]}], "]"}]}], ";"}], 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Scan", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Module", "[", 
                RowBox[{
                 RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"V2", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", " ", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                   " ", "=", " ", 
                   RowBox[{"findSkeletalValue", "[", 
                    RowBox[{"#", ",", " ", "V2"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"V2", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", " ", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                    " ", "\[NotEqual]", " ", "g"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"bins", "[", "g", "]"}], " ", "=", " ", 
                    RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"bins", "[", "g", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\[RightDoubleBracket]"}],
                     "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"modified", "=", "True"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                   "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "&"}],
              ",", " ", "beach"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"s2", " ", "=", " ", 
            RowBox[{"Show", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ListDensityPlot", "[", 
                RowBox[{"V2", ",", 
                 RowBox[{"Mesh", "\[Rule]", "False"}], ",", " ", 
                 RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], 
               ",", "\[IndentingNewLine]", " ", 
               RowBox[{"Graphics", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "0.001", "]"}], ",", 
                  RowBox[{"RGBColor", "[", 
                   RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", " ", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Point", "[", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "\[RightDoubleBracket]"}],
                     " ", "-", " ", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", " ", "0.5"}], "}"}]}], "]"}], "  ", 
                    "&"}], ",", " ", 
                    RowBox[{"Select", "[", 
                    RowBox[{"beach", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"V2", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", " ", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                    " ", "\[Equal]", " ", "g"}], " ", "&"}]}], "]"}]}], 
                   "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", " ", 
               RowBox[{"Graphics", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "0.001", "]"}], ",", 
                  RowBox[{"RGBColor", "[", 
                   RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", " ", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Point", "[", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "\[RightDoubleBracket]"}],
                     " ", "-", " ", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", " ", "0.5"}], "}"}]}], "]"}], "  ", 
                    "&"}], ",", " ", 
                    RowBox[{"Select", "[", 
                    RowBox[{"beach", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"V2", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", " ", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                    "\[NotEqual]", " ", "g"}], " ", "&"}]}], "]"}]}], "]"}]}],
                  "}"}], "]"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"s3", " ", "=", " ", 
            RowBox[{"ListDensityPlot", "[", 
             RowBox[{
              RowBox[{"Take", "[", 
               RowBox[{"V2", ",", " ", 
                RowBox[{"{", 
                 RowBox[{"40", ",", "55"}], "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"25", ",", "40"}], "}"}]}], "]"}], ",", " ", 
              RowBox[{"Mesh", "\[Rule]", "False"}], ",", " ", 
              RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"g", " ", "\[GreaterEqual]", " ", "99"}], " ", "&&", 
                " ", 
                RowBox[{"g", " ", "\[LessEqual]", " ", "99"}]}], ",", " ", 
               RowBox[{"Show", "[", 
                RowBox[{
                 RowBox[{"GraphicsArray", "[", 
                  RowBox[{"{", " ", 
                   RowBox[{"s1", ",", " ", "s2"}], "}"}], "]"}], ",", " ", 
                 RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], 
                 ",", " ", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"1600", ",", "800"}], "}"}]}], ",", " ", 
                 RowBox[{"PlotLabel", "\[Rule]", 
                  RowBox[{
                   RowBox[{"ToString", "[", "g", "]"}], " ", "<>", " ", 
                   "\"\< : \>\"", " ", "<>", " ", 
                   RowBox[{"ToString", "[", "i", "]"}]}]}]}], "]"}]}], "]"}], 
             ";"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"\[Not]", "modified"}], ",", " ", 
             RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", "n"}], "}"}]}], "]"}], ";"}],
        "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"g", ",", " ", "1", ",", " ", "255"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "V2"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{3.4070870373279257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["performErosion",
  FontWeight->"Bold"],
 "\nErodes the image by removing the curve end points"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870373279257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "performErosion", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"performErosion", "[", 
   RowBox[{"V_", ",", " ", "W_"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dMap", ",", " ", "outImage"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"ListDensityPlot", "[", 
       RowBox[{"V", ",", " ", 
        RowBox[{"Mesh", "\[Rule]", "False"}], ",", " ", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"600", ",", " ", "600"}], "}"}]}]}], "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dMap", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"isBoundaryPoint", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", "V", ",", " ",
                 "W"}], "]"}], "  ", "&&", " ", 
              RowBox[{"isCurveEnd", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", "V", ",", " ",
                 "W"}], "]"}]}], ")"}], " ", ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", 
            RowBox[{"{", "}"}]}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"1", ",", "1"}], "]"}], ",", " ", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"2", ",", "1"}], "]"}], ",", " ", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ",", " ", 
        "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dMap", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"dMap", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], ">", "0"}], "&"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"outImage", " ", "=", " ", "V"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"outImage", "\[LeftDoubleBracket]", " ", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           " ", "\[RightDoubleBracket]"}], "  ", "=", " ", "0"}], ";"}], 
        "&"}], ",", "dMap"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"ListDensityPlot", "[", 
        RowBox[{"outImage", ",", " ", 
         RowBox[{"Mesh", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"600", ",", " ", "600"}], "}"}]}]}], "]"}], ";"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "outImage", "]"}], ";"}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 CellChangeTimes->{3.4070870373279257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["isCurveNeighbor",
  FontWeight->"Bold"],
 "\nSpecifies whether a given point q is a curve neighbor of the point p in \
image V"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870373279257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "isCurveNeighbor", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"isCurveNeighbor", "[", 
   RowBox[{"q_", ",", " ", "p_", ",", " ", "V_"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "currentN4", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"currentN4", " ", "=", " ", 
      RowBox[{"getN4", "[", 
       RowBox[{"p", ",", " ", "V"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "[", "currentN4", "]"}], " ", "==", " ", "2"}], 
         ")"}], " ", "&&", " ", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"currentN4", ",", " ", "q"}], "]"}]}], ")"}], "]"}], ";"}]}],
    "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{3.4070870373279257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["addPixelToImage",
  FontWeight->"Bold"],
 "\nAdds a pixel to a binary Image"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870373279257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "addPixelToImage", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"addPixelToImage", "[", 
   RowBox[{"p_", ",", " ", "V_"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "outImage", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"outImage", " ", "=", " ", "V"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"outImage", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", " ", 
        RowBox[{"p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
        "\[RightDoubleBracket]"}], " ", "=", "1"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "outImage", "]"}], ";"}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 CellChangeTimes->{3.4070870373279257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getCurveNeighbors",
  FontWeight->"Bold"],
 "\nGets the curve neighbors of a given point p"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870373279257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getCurveNeighbors", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getCurveNeighbors", "[", 
   RowBox[{"p_", ",", " ", "V_"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "currentN4", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"currentN4", " ", "=", " ", 
      RowBox[{"getN4", "[", 
       RowBox[{"p", ",", " ", "V"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Select", "[", 
       RowBox[{"currentN4", ",", " ", 
        RowBox[{
         RowBox[{"isCurveNeighbor", "[", 
          RowBox[{"#", ",", " ", "p", ",", " ", "V"}], "]"}], "&"}]}], " ", 
       "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.4070870373279257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["performDilation",
  FontWeight->"Bold"],
 "\nDilates the image by adding curve end points"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870373279257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "performDilation", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"performDilation", "[", 
   RowBox[{"V_", ",", " ", "W_", ",", " ", "oldV_"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dMap", ",", " ", "outImage", ",", " ", "neighbors"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"ListDensityPlot", "[", 
       RowBox[{"V", ",", " ", 
        RowBox[{"Mesh", "\[Rule]", "False"}], ",", " ", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"600", ",", " ", "600"}], "}"}]}]}], "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dMap", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"isBoundaryPoint", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", "V", ",", " ", 
               "W"}], "]"}], "  ", "&&", " ", 
             RowBox[{"isCurveEnd", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", "V", ",", " ", 
               "W"}], "]"}]}], " ", ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", 
            RowBox[{"{", "}"}]}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"1", ",", "1"}], "]"}], ",", " ", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"2", ",", "1"}], "]"}], ",", " ", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ",", " ", 
        "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dMap", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"dMap", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], ">", "0"}], "&"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"neighbors", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"neighbors", " ", "=", " ", 
          RowBox[{"Join", "[", 
           RowBox[{"neighbors", ",", " ", 
            RowBox[{"getCurveNeighbors", "[", 
             RowBox[{"#", ",", " ", "oldV"}], "]"}]}], "]"}]}], ";"}], "&"}], 
       ",", " ", "dMap"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"outImage", " ", "=", " ", "V"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"outImage", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            " ", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           "\[RightDoubleBracket]"}], " ", "=", "1"}], ";"}], "&"}], ",", 
       "neighbors"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"ListDensityPlot", "[", 
        RowBox[{"outImage", ",", " ", 
         RowBox[{"Mesh", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"600", ",", " ", "600"}], "}"}]}]}], "]"}], ";"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "outImage", "]"}], ";"}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 CellChangeTimes->{3.4070870373279257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["performPruning",
  FontWeight->"Bold"],
 "\nPrunes the image n times."
}], "Subsubtitle",
 CellChangeTimes->{3.4070870373279257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "performPruning", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"performPruning", "[", 
   RowBox[{"V_", ",", " ", "W_", ",", " ", "n_"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{"n", " ", "\[Equal]", " ", "0"}], ",", " ", "V", ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "erodedImage", ",", " ", "prunedImage", ",", " ", "dilatedImage"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"ListDensityPlot", "[", 
         RowBox[{"V", ",", " ", 
          RowBox[{"Mesh", "\[Rule]", "False"}], ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"600", ",", " ", "600"}], "}"}]}]}], "]"}], ";"}], "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"erodedImage", " ", "=", " ", 
        RowBox[{"performErosion", "[", 
         RowBox[{"V", ",", " ", "W"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"prunedImage", " ", "=", " ", 
        RowBox[{"performPruning", "[", 
         RowBox[{"erodedImage", ",", " ", 
          RowBox[{"invertImage", "[", "erodedImage", "]"}], ",", " ", 
          RowBox[{"n", "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dilatedImage", " ", "=", " ", 
        RowBox[{"performDilation", "[", 
         RowBox[{"prunedImage", ",", " ", 
          RowBox[{"invertImage", "[", "prunedImage", "]"}], ",", " ", "V"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"ListDensityPlot", "[", 
          RowBox[{"dilatedImage", ",", " ", 
           RowBox[{"Mesh", "\[Rule]", "False"}], ",", " ", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"600", ",", " ", "600"}], "}"}]}]}], "]"}], ";"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "dilatedImage", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",\

 CellChangeTimes->{3.4070870373279257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getCurveLength:",
  FontWeight->"Bold"],
 "\nGets the length of a curve area given the starting point p, and the \
annotated skeleton A"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870373279257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getCurveLength", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getCurveLength", "[", 
   RowBox[{
   "p_", ",", " ", "A_", ",", " ", "curveTypes_", ",", " ", "hashKey_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "n", ",", " ", "dMap", ",", " ", "dMap2", ",", " ", "n4Temp", ",", " ", 
      "A2", ",", " ", "toHash", ",", " ", "doHash", ",", " ", 
      "curveEndPoints", ",", " ", "allCurvePoints"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
        "hashKey", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        " ", "\[NotEqual]", " ", 
        RowBox[{"curveLengthHashKey", "\[LeftDoubleBracket]", 
         RowBox[{
         "hashKey", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "\[RightDoubleBracket]"}]}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"curveLengthHashKey", "\[LeftDoubleBracket]", 
            RowBox[{
            "hashKey", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
             "\[RightDoubleBracket]"}], " ", "=", " ", 
           RowBox[{
           "hashKey", "\[LeftDoubleBracket]", "2", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"curveLengthHash", "\[LeftDoubleBracket]", 
            RowBox[{
            "hashKey", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
             "\[RightDoubleBracket]"}], " ", "=", " ", 
           RowBox[{"getBlankImage", "[", "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"curveLengthHash", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{
          "hashKey", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          ",", " ", 
          RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", " ", 
          RowBox[{
          "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "\[RightDoubleBracket]"}], " ", ">", " ", "0"}], ",", " ", 
       RowBox[{"Return", "[", 
        RowBox[{"curveLengthHash", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{
          "hashKey", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          ",", " ", 
          RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", " ", 
          RowBox[{
          "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "\[RightDoubleBracket]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"A2", " ", "=", " ", "A"}], ";", "\[IndentingNewLine]", 
     RowBox[{"dMap", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"curveTypes", ",", " ", 
               RowBox[{"A", "\[LeftDoubleBracket]", 
                RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}]}], "]"}]}],
             ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", 
            RowBox[{"{", "}"}]}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"1", ",", "1"}], "]"}], ",", " ", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"2", ",", "1"}], "]"}], ",", " ", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ",", " ", 
        "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dMap", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"dMap", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], ">", "0"}], "&"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"A2", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            " ", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           "\[RightDoubleBracket]"}], " ", "=", " ", "0"}], ";"}], "&"}], ",",
        " ", "dMap"}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ListDensityPlot", "[", 
            RowBox[{"A2", ",", " ", 
             RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], ",",
            
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
              RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
              RowBox[{"Point", "[", 
               RowBox[{
                RowBox[{"Reverse", "[", "p", "]"}], "+", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "0.5"}], ",", 
                  RowBox[{"-", "0.5"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
          "}"}], ",", 
         RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}]}], "]"}], 
       ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"n", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"toHash", " ", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dMap", " ", "=", " ", 
      RowBox[{"{", "p", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"doHash", " ", "=", " ", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"getN4", "[", 
         RowBox[{"p", ",", " ", "A2"}], "]"}], "]"}], " ", "\[LessEqual]", 
       " ", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"curveEndPoints", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"getN4", "[", 
          RowBox[{"p", ",", " ", "A2"}], "]"}], "]"}], " ", "\[NotEqual]", 
        " ", "2"}], ",", " ", 
       RowBox[{"curveEndPoints", " ", "=", " ", 
        RowBox[{"{", "p", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"allCurvePoints", " ", "=", " ", 
      RowBox[{"{", "p", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", " ", 
      RowBox[{"True", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"toHash", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{"toHash", ",", " ", "dMap"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dMap2", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"n", " ", "=", " ", 
         RowBox[{"n", " ", "+", " ", 
          RowBox[{"Length", "[", "dMap", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Scan", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"A2", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   ",", " ", 
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
               RowBox[{"n4Temp", "=", " ", 
                RowBox[{"getN4", "[", 
                 RowBox[{"#", ",", " ", "A2"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"dMap2", " ", "=", " ", 
                RowBox[{"Join", "[", 
                 RowBox[{"dMap2", ",", 
                  RowBox[{"Select", "[", 
                   RowBox[{"n4Temp", ",", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"getN4", "[", 
                    RowBox[{"#", ",", " ", "A2"}], "]"}], "]"}], " ", 
                    "\[LessEqual]", " ", "1"}], ")"}], "  ", "&"}]}], "]"}]}],
                  "]"}]}], ";", " ", "\[IndentingNewLine]", 
               RowBox[{"allCurvePoints", " ", "=", " ", 
                RowBox[{"Join", "[", 
                 RowBox[{"allCurvePoints", ",", 
                  RowBox[{"Select", "[", 
                   RowBox[{"n4Temp", ",", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"getN4", "[", 
                    RowBox[{"#", ",", " ", "A2"}], "]"}], "]"}], " ", 
                    "\[LessEqual]", " ", "1"}], ")"}], "  ", "&"}]}], "]"}]}],
                  "]"}]}], ";", " ", "\[IndentingNewLine]", 
               RowBox[{"curveEndPoints", " ", "=", " ", 
                RowBox[{"Join", "[", 
                 RowBox[{"curveEndPoints", ",", 
                  RowBox[{"Select", "[", 
                   RowBox[{"n4Temp", ",", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"getN4", "[", 
                    RowBox[{"#", ",", " ", "A2"}], "]"}], "]"}], " ", 
                    "\[NotEqual]", " ", "1"}], ")"}], "  ", "&"}]}], "]"}]}], 
                 "]"}]}], ";"}]}], " ", "\[IndentingNewLine]", "]"}], ";"}], 
           "&"}], ",", " ", "\[IndentingNewLine]", "dMap"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dMap", " ", "=", " ", "dMap2"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "dMap", "]"}], " ", "\[Equal]", " ", "0"}], 
          ",", " ", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListDensityPlot", "[", 
            RowBox[{"A", ",", " ", 
             RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
              RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Point", "[", 
                  RowBox[{
                   RowBox[{"Reverse", "[", "#", "]"}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5"}], ",", 
                    RowBox[{"-", "0.5"}]}], "}"}]}], "]"}], "&"}], ",", " ", 
                "allCurvePoints"}], "]"}]}], "}"}], "]"}]}], "}"}], ",", 
         RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}]}], "]"}], 
       ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"doHash", ",", " ", "\[IndentingNewLine]", 
       RowBox[{"Scan", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"curveLengthHash", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{
              "hashKey", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], ",", " ", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", " ", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
             "\[RightDoubleBracket]"}], " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
             "n", ",", " ", "curveEndPoints", ",", " ", "allCurvePoints"}], 
             "}"}]}], ";"}], "&"}], ",", " ", "toHash"}], "]"}]}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"n", ",", " ", "curveEndPoints", ",", " ", "allCurvePoints"}], 
       "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{3.407087037343551*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.407087037343551*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getClosestValue:",
  FontWeight->"Bold"],
 "\nGets the closest value to a given pixel in the image"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037343551*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getClosestValue", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getClosestValue", "[", 
   RowBox[{"p_", ",", " ", "image_", ",", " ", "level_"}], "]"}], " ", ":=", 
  " ", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n4List", ",", " ", "closestValues"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"image", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", " ", 
          RowBox[{
          "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "\[RightDoubleBracket]"}], " ", "\[NotEqual]", " ", "0"}], ",", " ", 
       
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"image", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
             "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
              " ", 
             RowBox[{
             "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            "\[RightDoubleBracket]"}], ",", " ", "level"}], "}"}], "}"}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"level", " ", "\[LessEqual]", " ", "0"}], ",", " ", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "level"}], "}"}], "}"}], "]"}]}], "]"}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"n4List", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"n4", "[", "p", "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
            "\[GreaterEqual]", " ", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"1", ",", "1"}], "]"}]}], ")"}], "  ", "&&", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
            "\[LessEqual]", " ", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}], ")"}], " ", "&&", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
            "\[GreaterEqual]", " ", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"2", ",", "1"}], "]"}]}], ")"}], "  ", "&&", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
            "\[LessEqual]", " ", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], "&"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"closestValues", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"closestValues", " ", "=", " ", 
          RowBox[{"Join", "[", 
           RowBox[{"closestValues", ",", " ", 
            RowBox[{"getClosestValue", "[", 
             RowBox[{"#", ",", " ", "image", ",", " ", 
              RowBox[{"level", "-", "1"}]}], "]"}]}], "]"}]}], ";"}], "&"}], 
       ",", " ", "n4List"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"closestValues", " ", "=", " ", 
      RowBox[{"Sort", "[", 
       RowBox[{"closestValues", ",", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
           ">", " ", 
           RowBox[{
           "#2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          ")"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"closestValues", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"closestValues", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
           " ", "\[Equal]", " ", 
          RowBox[{"closestValues", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "&"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"closestValues", " ", "=", " ", 
      RowBox[{"Sort", "[", 
       RowBox[{"closestValues", ",", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
           ">", " ", 
           RowBox[{
           "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          ")"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
       "closestValues", "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{3.407087037343551*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["canRemovePixel:",
  FontWeight->"Bold"],
 "\nLets you know whether the given pixel can be removed from the skeleton \
based in the filter criteria.\nCost Function has the following values\n\t1: \
Remove if the length of the added segment >= filter threshold\n\t2: Remove if \
the length of the added segment / length of the total curve >= filter \
threshold\n\t3: Remove if the thickness difference between grayscale levels \
<= filter threshold\n\t4: Remove if the curve has not been growing recently\n\
\t5: Remove if the curve does not fall close to the eigen vector value"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037343551*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "canRemovePixel", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"canRemovePixel", "[", 
    RowBox[{
    "p_", ",", " ", "annotatedTopologyCurves_", ",", " ", "annotatedCurves_", 
     ",", " ", "annotatedSkeleton_", ",", "thicknessMap_", ",", " ", 
     "curveEndHistory_", ",", " ", "costFunction5Val_", ",", " ", 
     "currentGrayLevel_", ",", " ", "filterThreshold_", ",", "  ", 
     "costFunction_", ",", " ", "hashGrayValue_"}], "]"}], " ", ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"canRemove", ",", " ", "type"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"type", " ", "=", " ", 
       RowBox[{"annotatedSkeleton", "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         ",", " ", 
         RowBox[{
         "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        "\[RightDoubleBracket]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"canRemove", " ", "=", " ", "False"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{"costFunction", ",", "\[IndentingNewLine]", "1", ",", 
        RowBox[{"Switch", "[", 
         RowBox[{"type", ",", "\[IndentingNewLine]", "1", ",", " ", 
          RowBox[{"canRemove", " ", "=", " ", "False"}], ",", 
          "\[IndentingNewLine]", "2", ",", " ", 
          RowBox[{"canRemove", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"getCurveLength", "[", 
              RowBox[{"p", ",", " ", "annotatedTopologyCurves", ",", " ", 
               RowBox[{"{", 
                RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"1", ",", " ", "hashGrayValue"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", ">=",
             " ", "filterThreshold"}]}], ",", "\[IndentingNewLine]", "3", ",",
           " ", 
          RowBox[{"canRemove", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"getCurveLength", "[", 
              RowBox[{"p", ",", " ", "annotatedTopologyCurves", ",", " ", 
               RowBox[{"{", 
                RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"1", ",", " ", "hashGrayValue"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", ">=",
             " ", "filterThreshold"}]}], ",", "\[IndentingNewLine]", "4", ",",
           " ", 
          RowBox[{"canRemove", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"getCurveLength", "[", 
              RowBox[{"p", ",", " ", "annotatedTopologyCurves", ",", " ", 
               RowBox[{"{", 
                RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"1", ",", " ", "hashGrayValue"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", ">=",
             " ", "filterThreshold"}]}], ",", "\[IndentingNewLine]", "5", ",",
           " ", 
          RowBox[{"canRemove", " ", "=", " ", "True"}]}], 
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "2", ",", 
        RowBox[{"Switch", "[", 
         RowBox[{"type", ",", "\[IndentingNewLine]", "1", ",", " ", 
          RowBox[{"canRemove", " ", "=", " ", "False"}], ",", 
          "\[IndentingNewLine]", "2", ",", " ", 
          RowBox[{"canRemove", " ", "=", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"getCurveLength", "[", 
                RowBox[{"p", ",", " ", "annotatedTopologyCurves", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", " ", "hashGrayValue"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
              "/", " ", 
              RowBox[{
               RowBox[{"getCurveLength", "[", 
                RowBox[{"p", ",", " ", "annotatedSkeleton", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", " ", "hashGrayValue"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             ")"}], " ", ">=", " ", "filterThreshold"}]}], ",", 
          "\[IndentingNewLine]", "3", ",", " ", 
          RowBox[{"canRemove", " ", "=", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"getCurveLength", "[", 
                RowBox[{"p", ",", " ", "annotatedTopologyCurves", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", " ", "hashGrayValue"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "/", 
              " ", 
              RowBox[{
               RowBox[{"getCurveLength", "[", 
                RowBox[{"p", ",", " ", "annotatedSkeleton", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", " ", "hashGrayValue"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             ")"}], " ", ">=", " ", "filterThreshold"}]}], ",", 
          "\[IndentingNewLine]", "4", ",", " ", 
          RowBox[{"canRemove", " ", "=", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"getCurveLength", "[", 
                RowBox[{"p", ",", " ", "annotatedTopologyCurves", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", " ", "hashGrayValue"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
              "/", " ", 
              RowBox[{
               RowBox[{"getCurveLength", "[", 
                RowBox[{"p", ",", " ", "annotatedSkeleton", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", " ", "hashGrayValue"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             ")"}], " ", ">=", " ", "filterThreshold"}]}], ",", 
          "\[IndentingNewLine]", "5", ",", " ", 
          RowBox[{"canRemove", " ", "=", " ", "True"}]}], 
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "3", ",", 
        " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "curveStats", ",", " ", "curveLength", ",", " ", "endPoints", ",", 
            " ", "thicknesses", ",", " ", "totalThickness"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"curveStats", " ", "=", "  ", 
            RowBox[{"getCurveLength", "[", 
             RowBox[{"p", ",", " ", "annotatedSkeleton", ",", " ", 
              RowBox[{"{", 
               RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", " ", "hashGrayValue"}], "}"}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"endPoints", " ", "=", " ", 
            RowBox[{
            "curveStats", "\[LeftDoubleBracket]", "2", 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"curveLength", " ", "=", " ", 
            RowBox[{
            "curveStats", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"thicknesses", " ", "=", " ", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"thicknessMap", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 ",", " ", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
               "&"}], ",", " ", "endPoints"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"totalThickness", " ", "=", " ", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
              "thicknesses", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "1", ",", " ", 
                RowBox[{"Length", "[", "thicknesses", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Switch", "[", 
            RowBox[{"type", ",", "\[IndentingNewLine]", "1", ",", " ", 
             RowBox[{"canRemove", " ", "=", " ", "False"}], ",", 
             "\[IndentingNewLine]", "2", ",", " ", 
             RowBox[{"canRemove", " ", "=", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Length", "[", "thicknesses", "]"}], " ", "\[Equal]",
                  " ", "2"}], ")"}], "&&", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"curveLength", " ", "-", " ", "totalThickness"}], 
                 "  ", "\[LessEqual]", "  ", "filterThreshold"}], ")"}]}]}], 
             ",", "\[IndentingNewLine]", "3", ",", " ", 
             RowBox[{"canRemove", " ", "=", "  ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Length", "[", "thicknesses", "]"}], " ", "\[Equal]",
                  " ", "2"}], ")"}], "&&", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"curveLength", " ", "-", " ", "totalThickness"}], 
                 "  ", "\[LessEqual]", " ", "filterThreshold"}], ")"}]}]}], 
             ",", "\[IndentingNewLine]", "4", ",", " ", 
             RowBox[{"canRemove", " ", "=", "  ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Length", "[", "thicknesses", "]"}], " ", "\[Equal]",
                  " ", "2"}], ")"}], "&&", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"curveLength", " ", "-", " ", "totalThickness"}], 
                 "  ", "\[LessEqual]", "  ", "filterThreshold"}], ")"}]}]}], 
             ",", "\[IndentingNewLine]", "5", ",", " ", 
             RowBox[{"canRemove", " ", "=", " ", "True"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ",", "\[IndentingNewLine]", "4", ",", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "endPoints", ",", " ", "endValues", ",", " ", "endFailed"}], "}"}],
           ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"endPoints", " ", "=", "  ", 
            RowBox[{
             RowBox[{"getCurveLength", "[", 
              RowBox[{"p", ",", " ", "annotatedCurves", ",", " ", 
               RowBox[{"{", 
                RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"1", ",", " ", "hashGrayValue"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"endValues", " ", "=", " ", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"getClosestValue", "[", 
                 RowBox[{"#", ",", " ", "curveEndHistory", ",", " ", "5"}], 
                 "]"}], "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "&"}], 
              ",", "endPoints"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"endFailed", " ", "=", " ", "False"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Scan", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"endFailed", " ", "=", " ", 
                RowBox[{"(", 
                 RowBox[{"endFailed", " ", "||", " ", 
                  RowBox[{"(", 
                   RowBox[{"#", " ", "\[GreaterEqual]", " ", 
                    RowBox[{
                    "currentGrayLevel", " ", "+", " ", "filterThreshold"}]}], 
                   ")"}]}], ")"}]}], ";"}], "&"}], ",", "endValues"}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Map", "\[IndentingNewLine]", 
            RowBox[{"Switch", "[", 
             RowBox[{"type", ",", "\[IndentingNewLine]", "1", ",", " ", 
              RowBox[{"canRemove", " ", "=", " ", "False"}], ",", " ", 
              "\[IndentingNewLine]", "2", ",", " ", 
              RowBox[{"canRemove", " ", "=", " ", "endFailed"}], ",", 
              "\[IndentingNewLine]", "3", ",", " ", 
              RowBox[{"canRemove", " ", "=", "  ", "endFailed"}], ",", 
              "\[IndentingNewLine]", "4", ",", " ", 
              RowBox[{"canRemove", " ", "=", "  ", "endFailed"}], ",", 
              "\[IndentingNewLine]", "5", ",", " ", 
              RowBox[{"canRemove", " ", "=", " ", "True"}]}], 
             "\[IndentingNewLine]", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ",", "\[IndentingNewLine]", "5", ",", " ", 
        RowBox[{"Module", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Switch", "[", 
            RowBox[{"type", ",", "\[IndentingNewLine]", "1", ",", " ", 
             RowBox[{"canRemove", " ", "=", " ", "False"}], ",", 
             "\[IndentingNewLine]", "2", ",", " ", 
             RowBox[{"canRemove", " ", "=", " ", "True"}], ",", " ", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
                RowBox[{"costFunction5Val", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{
                  "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   ",", " ", 
                  RowBox[{
                  "p", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                " ", "<", " ", "filterThreshold"}], ","}], "*)"}], 
             "\[IndentingNewLine]", "3", ",", " ", 
             RowBox[{"canRemove", " ", "=", " ", "True"}], ",", " ", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
                RowBox[{"costFunction5Val", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{
                  "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   ",", " ", 
                  RowBox[{
                  "p", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                " ", "<", " ", "filterThreshold"}], ","}], "*)"}], 
             "\[IndentingNewLine]", "4", ",", " ", 
             RowBox[{"canRemove", " ", "=", " ", "True"}], ",", " ", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
                RowBox[{"costFunction5Val", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{
                  "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   ",", " ", 
                  RowBox[{
                  "p", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                " ", "<", " ", "filterThreshold"}], ","}], "*)"}], 
             "\[IndentingNewLine]", "5", ",", " ", 
             RowBox[{"canRemove", " ", "=", " ", "True"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "canRemove", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.4070870373591757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["annotateImageWithPixelType:",
  FontWeight->"Bold"],
 "\nAnnotates an image with the pixel type"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870373591757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "annotateImageWithPixelType", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"annotateImageWithPixelType", "[", "image_", "]"}], " ", ":=", " ",
    "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "annotatedImage", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"annotatedImage", " ", "=", " ", 
       RowBox[{"getBlankImage", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dMap", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"image", "\[LeftDoubleBracket]", 
               RowBox[{"x", ",", " ", "y"}], "\[RightDoubleBracket]"}], " ", 
              ">", " ", "0"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"x", ",", " ", "y", ",", " ", 
               RowBox[{"getSkeletalPixelType", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], ",", " ", "image"}], 
                "]"}]}], "}"}], ",", " ", 
             RowBox[{"{", "}"}]}], "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"sliceSize", "[", 
              RowBox[{"1", ",", "1"}], "]"}], ",", " ", 
             RowBox[{"sliceSize", "[", 
              RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"sliceSize", "[", 
              RowBox[{"2", ",", "1"}], "]"}], ",", " ", 
             RowBox[{"sliceSize", "[", 
              RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ",", " ", 
         "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dMap", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{"dMap", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], ">", "0"}], "&"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Scan", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"annotatedImage", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
              
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            "\[RightDoubleBracket]"}], " ", "=", " ", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
          ";"}], "&"}], ",", " ", "dMap"}], "]"}], ";", "\[IndentingNewLine]",
       "annotatedImage"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{3.4070870373591757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["makeGraySkeleton:",
  FontWeight->"Bold"],
 "\nCreates a Gray scale skeleton of the grayImage, starting at the grayscale \
level startLevel, ending at endLevel at a grayscale step of step, while \
perfoming pruneAmount pruning steps."
}], "Subsubtitle",
 CellChangeTimes->{3.4070870373591757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "makeGraySkeleton", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"makeGraySkeleton", "[", 
   RowBox[{
   "grayImage_", ",", "startLevel_", ",", "endLevel_", ",", "step_", ",", 
    "pruneAmount_", ",", "filterThreshold_", ",", "costFunction_", ",", 
    "eigenValues_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "maxThinningIterations", ",", "olderSkeleton", ",", "graySkeleton", ",", 
      "grayLevels", ",", "binaryImage", ",", "thinningResults", ",", 
      "curveSkeleton", ",", "prunedCurveSkeleton", ",", 
      "prunedCurveSkeletonWithOlder", ",", "topologySkeleton", ",", 
      "topologyBranches", ",", "annotatedTopologyBranches", ",", 
      "annotatedSkeleton", ",", "removedPixels", ",", "allRemovedPixels", ",",
       "dMap", ",", "thicknessMap", ",", "lastThicknessMap", ",", 
      "actualGraySkeleton", ",", "allBranches", ",", "annotatedAllBranches", 
      ",", "curveEndHistory", ",", "s1", ",", "s2", ",", "s3", ",", "s4", ",",
       "s5", ",", "s6", ",", "s7", ",", "s8", ",", "s9", ",", "s10", ",", 
      "s11", ",", "s12"}], "}"}], ",", 
    RowBox[{
     RowBox[{"maxThinningIterations", "=", "100"}], ";", 
     RowBox[{"olderSkeleton", "=", 
      RowBox[{"getBlankImage", "[", "]"}]}], ";", 
     RowBox[{"graySkeleton", "=", 
      RowBox[{"getBlankImage", "[", "]"}]}], ";", 
     RowBox[{"grayLevels", "=", 
      RowBox[{"getBlankImage", "[", "]"}]}], ";", 
     RowBox[{"allRemovedPixels", "=", 
      RowBox[{"getBlankImage", "[", "]"}]}], ";", 
     RowBox[{"curveEndHistory", "=", 
      RowBox[{"getBlankImage", "[", "]"}]}], ";", 
     RowBox[{"lastThicknessMap", "=", 
      RowBox[{"getBlankImage", "[", "]"}]}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"binaryImage", "=", 
         RowBox[{"thresholdImage", "[", 
          RowBox[{"grayImage", ",", "i"}], "]"}]}], ";", 
        RowBox[{"thinningResults", "=", 
         RowBox[{"performThinning", "[", 
          RowBox[{"binaryImage", ",", 
           RowBox[{"invertImage", "[", "binaryImage", "]"}], ",", 
           "maxThinningIterations", ",", "olderSkeleton", ",", "1"}], "]"}]}],
         ";", 
        RowBox[{"curveSkeleton", "=", 
         RowBox[{
         "thinningResults", "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}]}], ";", 
        RowBox[{"prunedCurveSkeleton", "=", 
         RowBox[{"performPruning", "[", 
          RowBox[{"curveSkeleton", ",", 
           RowBox[{"invertImage", "[", "curveSkeleton", "]"}], ",", 
           "pruneAmount"}], "]"}]}], ";", 
        RowBox[{"prunedCurveSkeletonWithOlder", "=", 
         RowBox[{"BitOr", "[", 
          RowBox[{"prunedCurveSkeleton", ",", "olderSkeleton"}], "]"}]}], ";",
         
        RowBox[{"thinningResults", "=", 
         RowBox[{"performThinning", "[", 
          RowBox[{"binaryImage", ",", 
           RowBox[{"invertImage", "[", "binaryImage", "]"}], ",", 
           "maxThinningIterations", ",", "prunedCurveSkeletonWithOlder", ",", 
           "0"}], "]"}]}], ";", 
        RowBox[{"topologySkeleton", "=", 
         RowBox[{
         "thinningResults", "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}]}], ";", 
        RowBox[{"thicknessMap", "=", 
         RowBox[{
         "thinningResults", "\[LeftDoubleBracket]", "2", 
          "\[RightDoubleBracket]"}]}], ";", 
        RowBox[{"topologyBranches", "=", 
         RowBox[{
          RowBox[{"performThinning", "[", 
           RowBox[{"topologySkeleton", ",", 
            RowBox[{"invertImage", "[", "topologySkeleton", "]"}], ",", 
            "maxThinningIterations", ",", "olderSkeleton", ",", "0"}], "]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
        RowBox[{"topologyBranches", "=", 
         RowBox[{"BitXor", "[", 
          RowBox[{"olderSkeleton", ",", "topologyBranches"}], "]"}]}], ";", 
        RowBox[{"allBranches", "=", 
         RowBox[{"BitXor", "[", 
          RowBox[{"olderSkeleton", ",", "topologySkeleton"}], "]"}]}], ";", 
        RowBox[{"annotatedTopologyBranches", "=", 
         RowBox[{
         "annotateImageWithPixelType", "[", "topologyBranches", "]"}]}], ";", 
        
        RowBox[{"annotatedSkeleton", "=", 
         RowBox[{
         "annotateImageWithPixelType", "[", "topologySkeleton", "]"}]}], ";", 
        
        RowBox[{"annotatedAllBranches", "=", 
         RowBox[{"annotateImageWithPixelType", "[", "allBranches", "]"}]}], 
        ";", 
        RowBox[{"removedPixels", "=", 
         RowBox[{"getBlankImage", "[", "]"}]}], ";", 
        RowBox[{"dMap", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2"}], "}"}], ",", 
                  RowBox[{"annotatedSkeleton", "\[LeftDoubleBracket]", 
                   RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}]}], 
                 "]"}], "&&", 
                RowBox[{
                 RowBox[{"curveEndHistory", "\[LeftDoubleBracket]", 
                  RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], 
                 "\[Equal]", "0"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"1", ",", "1"}], "]"}], ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"2", ",", "1"}], "]"}], ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
          "]"}]}], ";", 
        RowBox[{"dMap", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"dMap", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#1", "]"}], ">", "0"}], "&"}]}], "]"}]}],
         ";", 
        RowBox[{"Scan", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"curveEndHistory", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{
                "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                ",", 
                RowBox[{
                "#1", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], "=", 
              "i"}], ";"}], ")"}], "&"}], ",", "dMap"}], "]"}], ";", 
        RowBox[{"dMap", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"topologyBranches", "\[LeftDoubleBracket]", 
                  RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], 
                 "\[Equal]", "1"}], "&&", 
                RowBox[{"canRemovePixel", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"x", ",", "y"}], "}"}], ",", 
                  "annotatedTopologyBranches", ",", "annotatedAllBranches", 
                  ",", "annotatedSkeleton", ",", "lastThicknessMap", ",", 
                  "curveEndHistory", ",", "eigenValues", ",", "i", ",", 
                  "filterThreshold", ",", "costFunction", ",", "i"}], "]"}]}],
                ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"1", ",", "1"}], "]"}], ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"2", ",", "1"}], "]"}], ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
          "]"}]}], ";", 
        RowBox[{"dMap", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"dMap", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#1", "]"}], ">", "0"}], "&"}]}], "]"}]}],
         ";", 
        RowBox[{"Scan", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"removedPixels", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{
                "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                ",", 
                RowBox[{
                "#1", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], "=", 
              "1"}], ";"}], ")"}], "&"}], ",", "dMap"}], "]"}], ";", 
        RowBox[{"allRemovedPixels", "=", 
         RowBox[{"BitOr", "[", 
          RowBox[{"removedPixels", ",", "allRemovedPixels"}], "]"}]}], ";", 
        RowBox[{"dMap", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"topologySkeleton", "\[LeftDoubleBracket]", 
                  RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], 
                 "\[Equal]", "1"}], "&&", 
                RowBox[{
                 RowBox[{"graySkeleton", "\[LeftDoubleBracket]", 
                  RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], 
                 "\[Equal]", "0"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"1", ",", "1"}], "]"}], ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"2", ",", "1"}], "]"}], ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
          "]"}]}], ";", 
        RowBox[{"dMap", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"dMap", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#1", "]"}], ">", "0"}], "&"}]}], "]"}]}],
         ";", 
        RowBox[{"Scan", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"graySkeleton", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{
                "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                ",", 
                RowBox[{
                "#1", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], "=", 
              "i"}], ";"}], ")"}], "&"}], ",", "dMap"}], "]"}], ";", 
        RowBox[{"olderSkeleton", "=", "topologySkeleton"}], ";", 
        RowBox[{"lastThicknessMap", "=", "thicknessMap"}], ";", 
        RowBox[{"actualGraySkeleton", "=", "graySkeleton"}], ";", 
        RowBox[{"dMap", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"allRemovedPixels", "\[LeftDoubleBracket]", 
                 RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], 
                "\[Equal]", "1"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"1", ",", "1"}], "]"}], ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"2", ",", "1"}], "]"}], ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
          "]"}]}], ";", 
        RowBox[{"dMap", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"dMap", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#1", "]"}], ">", "0"}], "&"}]}], "]"}]}],
         ";", 
        RowBox[{"Scan", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"actualGraySkeleton", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{
                "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                ",", 
                RowBox[{
                "#1", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], "=", 
              "0"}], ";"}], ")"}], "&"}], ",", "dMap"}], "]"}], ";", 
        RowBox[{"s1", "=", 
         RowBox[{"ListDensityPlot", "[", 
          RowBox[{"binaryImage", ",", 
           RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
           RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<Binary Image\>\""}]}], 
          "]"}]}], ";", 
        RowBox[{"s2", "=", 
         RowBox[{"ListDensityPlot", "[", 
          RowBox[{"curveSkeleton", ",", 
           RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
           RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<Curve Skeleton\>\""}]}], 
          "]"}]}], ";", 
        RowBox[{"s3", "=", 
         RowBox[{"ListDensityPlot", "[", 
          RowBox[{"prunedCurveSkeleton", ",", 
           RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
           RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
           RowBox[{
           "PlotLabel", "\[Rule]", "\"\<Pruned Curve Skeleton\>\""}]}], 
          "]"}]}], ";", 
        RowBox[{"s4", "=", 
         RowBox[{"ListDensityPlot", "[", 
          RowBox[{"prunedCurveSkeletonWithOlder", ",", 
           RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
           RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
           RowBox[{
           "PlotLabel", "\[Rule]", 
            "\"\<Pruned Curve Skeleton with Older\>\""}]}], "]"}]}], ";", 
        RowBox[{"s5", "=", 
         RowBox[{"ListDensityPlot", "[", 
          RowBox[{"topologySkeleton", ",", 
           RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
           RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<Topology Skeleton\>\""}]}], 
          "]"}]}], ";", 
        RowBox[{"s6", "=", 
         RowBox[{"ListDensityPlot", "[", 
          RowBox[{"graySkeleton", ",", 
           RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
           RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<Grayscale Skeleton\>\""}]}], 
          "]"}]}], ";", 
        RowBox[{"s7", "=", 
         RowBox[{"ListDensityPlot", "[", 
          RowBox[{"topologyBranches", ",", 
           RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
           RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<Topology Branches\>\""}]}], 
          "]"}]}], ";", 
        RowBox[{"s8", "=", 
         RowBox[{"ListDensityPlot", "[", 
          RowBox[{"removedPixels", ",", 
           RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
           RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<Removed Pixels\>\""}]}], 
          "]"}]}], ";", 
        RowBox[{"s9", "=", 
         RowBox[{"ListDensityPlot", "[", 
          RowBox[{"allRemovedPixels", ",", 
           RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
           RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<All Removed Pixels\>\""}]}], 
          "]"}]}], ";", 
        RowBox[{"s10", "=", 
         RowBox[{"ListDensityPlot", "[", 
          RowBox[{"actualGraySkeleton", ",", 
           RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
           RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<Actual Grayskeleton\>\""}]}], 
          "]"}]}], ";", 
        RowBox[{"s11", "=", 
         RowBox[{"ListDensityPlot", "[", 
          RowBox[{"curveEndHistory", ",", 
           RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
           RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<Curve End History\>\""}]}], 
          "]"}]}], ";", 
        RowBox[{"s12", "=", 
         RowBox[{"ListDensityPlot", "[", 
          RowBox[{"allBranches", ",", 
           RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
           RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<All Branches\>\""}]}], 
          "]"}]}], ";", 
        RowBox[{"s13", "=", 
         RowBox[{"ListDensityPlot", "[", 
          RowBox[{"annotatedSkeleton", ",", 
           RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
           RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<Annotated Skeleton\>\""}]}], 
          "]"}]}], ";", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GraphicsRow", "[", 
           RowBox[{"{", 
            RowBox[{
            "s1", ",", "s4", ",", "s5", ",", "s6", ",", "s12", ",", "s9", ",",
              "s10"}], "}"}], "]"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"\"\<Grayscale value: \>\"", "<>", 
            RowBox[{"ToString", "[", "i", "]"}]}]}], ",", 
          RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1200", ",", 
             FractionBox["1200", "5"]}], "}"}]}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "endLevel", ",", "startLevel", ",", 
         RowBox[{"-", "step"}]}], "}"}]}], "]"}], ";", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"graySkeleton", ",", "actualGraySkeleton"}], "}"}], "]"}], 
     ";"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{3.4070870373591757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["cleanImmersionSkeleton",
  FontWeight->"Bold"],
 "\nPerforms a post-processing step on the grayscale skeleton to prune it \
using the pruning parameter, and to remove surfaces."
}], "Subsubtitle",
 CellChangeTimes->{3.4070870373591757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "cleanImmersionSkeleton", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cleanImmersionSkeleton", "[", 
   RowBox[{"skel_", ",", " ", "pruneAmount_"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"bins", ",", " ", "binarySkel", ",", " ", "newSkel"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newSkel", " ", "=", " ", "skel"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"bins", "[", "i", "]"}], " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", " ", "255"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"bins", "[", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "]"}],
           "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"bins", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
             "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", " ", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
              "}"}], "}"}]}], "]"}]}], ";"}], " ", "&"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", " ", "y", ",", " ", 
             RowBox[{"skel", "\[LeftDoubleBracket]", 
              RowBox[{"x", ",", " ", "y"}], "\[RightDoubleBracket]"}]}], 
            "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"x", ",", "1", ",", " ", 
             RowBox[{
              RowBox[{"Dimensions", "[", "skel", "]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}],
            ",", " ", 
           RowBox[{"{", 
            RowBox[{"y", ",", "1", ",", " ", 
             RowBox[{
              RowBox[{"Dimensions", "[", "skel", "]"}], 
              "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            "}"}]}], "]"}], ",", " ", "1"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"binarySkel", " ", "=", " ", 
         RowBox[{"thresholdImage", "[", 
          RowBox[{"skel", ",", " ", "g"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Scan", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"isSkeletalSurfaceInteriorPoint", "[", 
               RowBox[{
                RowBox[{"#", "\[LeftDoubleBracket]", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}], "\[RightDoubleBracket]"}], 
                ",", " ", "binarySkel"}], "]"}], ",", " ", 
              RowBox[{
               RowBox[{"newSkel", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 ",", " ", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], " ",
                "=", " ", "0"}]}], "]"}], ";"}], " ", "&"}], ",", 
          RowBox[{"bins", "[", "g", "]"}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"g", ",", " ", "255", ",", " ", "1", ",", " ", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "newSkel"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{3.4070870373591757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Structure Tensor Methods", "Subtitle",
 CellChangeTimes->{3.4070870373591757`*^9}],

Cell[TextData[{
 StyleBox["getGradientField",
  FontWeight->"Bold"],
 ":\nGets the gradient field of the image"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870373591757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getGradientField", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getGradientField", "[", "arr_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"grad", ",", "len", ",", "wid"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"grad", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "1", ",", " ", 
           RowBox[{
            RowBox[{"Dimensions", "[", "arr", "]"}], "\[LeftDoubleBracket]", 
            "1", "\[RightDoubleBracket]"}]}], "}"}], ",", "  ", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", "1", ",", " ", 
           RowBox[{
            RowBox[{"Dimensions", "[", "arr", "]"}], "\[LeftDoubleBracket]", 
            "2", "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"len", ",", "wid"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "arr", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"grad", "\[LeftDoubleBracket]", 
           RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"arr", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{"x", "+", "1"}], ",", "y"}], 
                "\[RightDoubleBracket]"}], "-", 
               RowBox[{"arr", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{"x", "-", "1"}], ",", "y"}], 
                "\[RightDoubleBracket]"}]}], ")"}], "/", "2"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"arr", "\[LeftDoubleBracket]", 
                RowBox[{"x", ",", 
                 RowBox[{"y", "+", "1"}]}], "\[RightDoubleBracket]"}], "-", 
               RowBox[{"arr", "\[LeftDoubleBracket]", 
                RowBox[{"x", ",", 
                 RowBox[{"y", "-", "1"}]}], "\[RightDoubleBracket]"}]}], 
              ")"}], "/", "2"}]}], "}"}]}], ";"}], ",", "\[IndentingNewLine]",
         
        RowBox[{"{", 
         RowBox[{"x", ",", "2", ",", 
          RowBox[{"len", "-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "2", ",", 
          RowBox[{"wid", "-", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "grad"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.406898704843686*^9, 3.406898802499936*^9}, {
   3.406898931359311*^9, 3.406898976234311*^9}, {3.406899147124936*^9, 
   3.406899164453061*^9}, {3.406899551562436*^9, 3.406899706124936*^9}, {
   3.406900334734311*^9, 3.406900346468686*^9}, {3.406900973156186*^9, 
   3.406900984078061*^9}, {3.406901317468686*^9, 3.406901360703061*^9}, 
   3.407087037374801*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getGradientField2", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getGradientField2", "[", "arr_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"grad", ",", "len", ",", "wid"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"grad", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "1", ",", " ", 
           RowBox[{
            RowBox[{"Dimensions", "[", "arr", "]"}], "\[LeftDoubleBracket]", 
            "1", "\[RightDoubleBracket]"}]}], "}"}], ",", "  ", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", "1", ",", " ", 
           RowBox[{
            RowBox[{"Dimensions", "[", "arr", "]"}], "\[LeftDoubleBracket]", 
            "2", "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"len", ",", "wid"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "arr", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"grad", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "x", ",", "y"}], "\[RightDoubleBracket]"}], "=", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"arr", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"x", "+", "1"}], ",", "y"}], 
               "\[RightDoubleBracket]"}], "-", 
              RowBox[{"arr", "\[LeftDoubleBracket]", 
               RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}]}], ")"}], 
            ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"arr", "\[LeftDoubleBracket]", 
               RowBox[{"x", ",", 
                RowBox[{"y", "+", "1"}]}], "\[RightDoubleBracket]"}], "-", 
              RowBox[{"arr", "\[LeftDoubleBracket]", 
               RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
           "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"grad", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "x", ",", "y"}], "\[RightDoubleBracket]"}], "=", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"arr", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"x", "+", "1"}], ",", "y"}], 
               "\[RightDoubleBracket]"}], "-", 
              RowBox[{"arr", "\[LeftDoubleBracket]", 
               RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}]}], ")"}], 
            ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"arr", "\[LeftDoubleBracket]", 
               RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], "-", 
              RowBox[{"arr", "\[LeftDoubleBracket]", 
               RowBox[{"x", ",", 
                RowBox[{"y", "-", "1"}]}], "\[RightDoubleBracket]"}]}], 
             ")"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"grad", "\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "x", ",", "y"}], "\[RightDoubleBracket]"}], "=", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"arr", "\[LeftDoubleBracket]", 
               RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], "-", 
              RowBox[{"arr", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"x", "-", "1"}], ",", "y"}], 
               "\[RightDoubleBracket]"}]}], ")"}], ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"arr", "\[LeftDoubleBracket]", 
               RowBox[{"x", ",", 
                RowBox[{"y", "+", "1"}]}], "\[RightDoubleBracket]"}], "-", 
              RowBox[{"arr", "\[LeftDoubleBracket]", 
               RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
           "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"grad", "\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "x", ",", "y"}], "\[RightDoubleBracket]"}], "=", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"arr", "\[LeftDoubleBracket]", 
               RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], "-", 
              RowBox[{"arr", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"x", "-", "1"}], ",", "y"}], 
               "\[RightDoubleBracket]"}]}], ")"}], ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"arr", "\[LeftDoubleBracket]", 
               RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], "-", 
              RowBox[{"arr", "\[LeftDoubleBracket]", 
               RowBox[{"x", ",", 
                RowBox[{"y", "-", "1"}]}], "\[RightDoubleBracket]"}]}], 
             ")"}]}], "}"}]}], ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", "2", ",", 
          RowBox[{"len", "-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "2", ",", 
          RowBox[{"wid", "-", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "grad"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.406898704843686*^9, 3.406898802499936*^9}, {
   3.406898931359311*^9, 3.406898976234311*^9}, {3.406899147124936*^9, 
   3.406899164453061*^9}, {3.406899551562436*^9, 3.406899706124936*^9}, {
   3.406900334734311*^9, 3.406900346468686*^9}, {3.406900973156186*^9, 
   3.406900984078061*^9}, {3.406901317468686*^9, 3.406901360703061*^9}, {
   3.406921961796811*^9, 3.406922030687436*^9}, {3.406922402203061*^9, 
   3.406922403343686*^9}, 3.407087037374801*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getGradientField3D",
  FontWeight->"Bold"],
 ":\nGets the gradient field of the image"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037374801*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getGradientField3D", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getGradientField3D", "[", "arr_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"grad", ",", "len", ",", "wid", ",", " ", "hei"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"grad", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "0"}], "}"}], "&"}], ",", "#"}], 
              "]"}], "&"}], ",", "#"}], "]"}], "&"}], ",", "arr"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"len", ",", "wid", ",", " ", "hei"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "arr", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"grad", "\[LeftDoubleBracket]", 
          RowBox[{"x", ",", "y", ",", " ", "z"}], "\[RightDoubleBracket]"}], 
         "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"arr", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"x", "+", "1"}], ",", "y", ",", " ", "z"}], 
             "\[RightDoubleBracket]"}], "-", 
            RowBox[{"arr", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"x", "-", "1"}], ",", "y", ",", " ", "z"}], 
             "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{
            RowBox[{"arr", "\[LeftDoubleBracket]", 
             RowBox[{"x", ",", 
              RowBox[{"y", "+", "1"}], ",", " ", "z"}], 
             "\[RightDoubleBracket]"}], "-", 
            RowBox[{"arr", "\[LeftDoubleBracket]", 
             RowBox[{"x", ",", 
              RowBox[{"y", "-", "1"}], ",", " ", "z"}], 
             "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{
            RowBox[{"arr", "\[LeftDoubleBracket]", 
             RowBox[{"x", ",", "y", ",", " ", 
              RowBox[{"z", "+", "1"}]}], "\[RightDoubleBracket]"}], "-", 
            RowBox[{"arr", "\[LeftDoubleBracket]", 
             RowBox[{"x", ",", "y", ",", " ", 
              RowBox[{"z", "-", "1"}]}], "\[RightDoubleBracket]"}]}]}], 
          "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", "2", ",", 
          RowBox[{"len", "-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "2", ",", 
          RowBox[{"wid", "-", "1"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"z", ",", " ", "2", ",", " ", 
          RowBox[{"hei", "-", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "grad"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.398388731663*^9, 3.398388731823*^9}, {3.398393561936*^9,
    3.398393629307*^9}, {3.406900423843686*^9, 3.406900424031186*^9}, 
   3.407087037374801*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getGaussianMask",
  FontWeight->"Bold"],
 ":\nGets a Gaussian Mask"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037374801*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getGaussianMask", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getGaussianMask", "[", "a_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Binomial", "[", 
           RowBox[{
            RowBox[{"2", "*", "a"}], ",", 
            RowBox[{
             RowBox[{"Floor", "[", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], "]"}], "+", "a"}]}], "]"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "a"}], ",", "a"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"N", "[", 
       RowBox[{"res", "/", 
        RowBox[{"Tr", "[", "res", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.407087037374801*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getGaussianMask3D",
  FontWeight->"Bold"],
 ":\nGets a Gaussian Mask"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037374801*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getGaussianMask3D", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getGaussianMask3D", "[", "a_", "]"}], ":=", "\[IndentingNewLine]",
    
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Binomial", "[", 
           RowBox[{
            RowBox[{"2", "*", "a"}], ",", 
            RowBox[{
             RowBox[{"Floor", "[", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"], "+", 
                SuperscriptBox["z", "2"]}]], "]"}], "+", "a"}]}], "]"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "a"}], ",", "a"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"-", "a"}], ",", "a"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"z", ",", " ", 
            RowBox[{"-", "a"}], ",", " ", "a"}], "}"}]}], "]"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"N", "[", 
       RowBox[{"res", "/", 
        RowBox[{"Tr", "[", "res", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.407087037374801*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getLocalStructureTensor",
  FontWeight->"Bold"],
 ":\nGets the local structure tensor given the gradient field grad_ and the \
mask width a_"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037374801*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getLocalStructureTensor", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getLocalStructureTensor", "[", 
    RowBox[{"grad_", ",", "a_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tensors", ",", "lst", ",", " ", "len", ",", "wid", ",", "t", ",", 
       "mask"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tensors", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"{", "#", "}"}], "]"}], ".", 
               RowBox[{"{", "#", "}"}]}], ")"}], "&"}], ",", "#"}], "]"}], 
          "&"}], ",", "grad"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lst", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "&"}], ",", "#"}], 
           "]"}], "&"}], ",", "grad"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"len", "=", 
       RowBox[{"Length", "[", "grad", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"wid", "=", 
       RowBox[{"Length", "[", 
        RowBox[{
        "grad", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mask", "=", 
       RowBox[{"getGaussianMask", "[", "a", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"lst", "\[LeftDoubleBracket]", 
           RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"mask", ".", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"tensors", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "-", "a"}], ",", 
                 RowBox[{"x", "+", "a"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"y", "-", "a"}], ",", 
                 RowBox[{"y", "+", "a"}]}], "}"}]}], "]"}], ",", "1"}], 
            "]"}]}]}], ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"a", "+", "1"}], ",", 
          RowBox[{"len", "-", "a"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"a", "+", "1"}], ",", 
          RowBox[{"wid", "-", "a"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "lst"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.398393636766*^9, 3.398393656992*^9}, 
   3.406899341437436*^9, 3.406899375906186*^9, {3.406899759359311*^9, 
   3.406899775124936*^9}, {3.406900318031186*^9, 3.406900321468686*^9}, {
   3.406900454078061*^9, 3.406900454562436*^9}, 3.407087037374801*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getLocalStructureTensor2", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getLocalStructureTensor2", "[", 
    RowBox[{"grad_", ",", "a_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tensors", ",", "lst", ",", " ", "len", ",", "wid", ",", "t", ",", 
       "mask", ",", " ", "lst2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tensors", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Transpose", "[", 
                  RowBox[{"{", "#", "}"}], "]"}], ".", 
                 RowBox[{"{", "#", "}"}]}], ")"}], "&"}], ",", "#"}], "]"}], 
            "&"}], ",", 
           RowBox[{
           "grad", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", "4"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lst", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "&"}], ",", "#"}], 
             "]"}], "&"}], ",", 
           RowBox[{
           "grad", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", "4"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lst2", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "&"}], ",", "#"}], 
           "]"}], "&"}], ",", 
         RowBox[{
         "grad", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"len", "=", 
       RowBox[{
        RowBox[{"Dimensions", "[", "grad", "]"}], "\[LeftDoubleBracket]", "2",
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"wid", "=", 
       RowBox[{
        RowBox[{"Dimensions", "[", "grad", "]"}], "\[LeftDoubleBracket]", "3",
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mask", "=", 
       RowBox[{"getGaussianMask", "[", "a", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"lst", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "x", ",", "y"}], "\[RightDoubleBracket]"}], "=", 
          
          RowBox[{"mask", ".", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{
               RowBox[{
               "tensors", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "-", "a"}], ",", 
                 RowBox[{"x", "+", "a"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"y", "-", "a"}], ",", 
                 RowBox[{"y", "+", "a"}]}], "}"}]}], "]"}], ",", "1"}], 
            "]"}]}]}], ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "1", ",", " ", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"a", "+", "1"}], ",", 
          RowBox[{"len", "-", "a"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"a", "+", "1"}], ",", 
          RowBox[{"wid", "-", "a"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"lst2", "\[LeftDoubleBracket]", 
           RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"lst", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", " ", "x", ",", " ", "y"}], 
              "\[RightDoubleBracket]"}], "*", "0.25"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", " ", "4"}], "}"}]}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"a", "+", "1"}], ",", 
          RowBox[{"len", "-", "a"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"a", "+", "1"}], ",", 
          RowBox[{"wid", "-", "a"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "lst2"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.398393636766*^9, 3.398393656992*^9}, 
   3.406899341437436*^9, 3.406899375906186*^9, {3.406899759359311*^9, 
   3.406899775124936*^9}, {3.406900318031186*^9, 3.406900321468686*^9}, {
   3.406900454078061*^9, 3.406900454562436*^9}, {3.406922021656186*^9, 
   3.406922195656186*^9}, {3.406922492312436*^9, 3.406922492765561*^9}, {
   3.406922570937436*^9, 3.406922572374936*^9}, {3.406923131843686*^9, 
   3.406923133109311*^9}, 3.407087037374801*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getLocalStructureTensor",
  FontWeight->"Bold"],
 ":\nGets the local structure tensor given the gradient field grad_ and the \
mask width a_"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037374801*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getLocalStructureTensor3D", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getLocalStructureTensor3D", "[", 
    RowBox[{"grad_", ",", "a_", ",", " ", "mask_", ",", " ", "skel_"}], "]"}],
    ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tensors", ",", "lst", ",", " ", "len", ",", "wid", ",", "t", ",", " ", 
       "temp"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tensors", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", "#", "}"}], "]"}], ".", 
                  RowBox[{"{", "#", "}"}]}], ")"}], "&"}], ",", "#"}], "]"}], 
             "&"}], ",", " ", "#"}], "]"}], "&"}], ",", "grad"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"lst", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "&"}], 
               ",", "#"}], "]"}], "&"}], ",", " ", "#"}], "]"}], "&"}], ",", 
         "grad"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"len", ",", " ", "wid", ",", " ", "hei", ",", " ", "temp"}], 
        "}"}], "=", 
       RowBox[{"Dimensions", "[", "grad", "]"}]}], ";", "\[IndentingNewLine]",
       
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"skel", "\[LeftDoubleBracket]", 
            RowBox[{"x", ",", " ", "y", ",", " ", "z"}], 
            "\[RightDoubleBracket]"}], " ", ">", " ", "0"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"lst", "\[LeftDoubleBracket]", 
             RowBox[{"x", ",", "y", ",", " ", "z"}], 
             "\[RightDoubleBracket]"}], "=", 
            RowBox[{"mask", ".", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Take", "[", 
                RowBox[{"tensors", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"x", "-", "a"}], ",", 
                   RowBox[{"x", "+", "a"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"y", "-", "a"}], ",", 
                   RowBox[{"y", "+", "a"}]}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"z", "-", "a"}], ",", " ", 
                   RowBox[{"z", "+", "a"}]}], "}"}]}], "]"}], ",", "2"}], 
              "]"}]}]}], ";"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"a", "+", "1"}], ",", 
          RowBox[{"len", "-", "a"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"a", "+", "1"}], ",", 
          RowBox[{"wid", "-", "a"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"z", ",", 
          RowBox[{"a", "+", "1"}], ",", 
          RowBox[{"hei", "-", "a"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "lst"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.3983898113310003`*^9, 3.398389812087*^9}, {
   3.398389847582*^9, 3.3983898831400003`*^9}, {3.398389932729*^9, 
   3.398389973351*^9}, {3.398390206807*^9, 3.398390222801*^9}, {
   3.398390303325*^9, 3.398390324663*^9}, {3.398391560307*^9, 
   3.398391576377*^9}, {3.398393546394*^9, 3.398393547792*^9}, {
   3.398393661101*^9, 3.398393682625*^9}, 3.3983941263*^9, 
   3.4070870373904257`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.4070870373904257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["normalizeVector",
  FontWeight->"Bold"],
 ":\nNormalizes a vector"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870373904257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "normalizeVector", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normalizeVector", "[", "v_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"v", ".", "v"}], " ", "\[NotEqual]", " ", "0"}], ",", " ", 
     RowBox[{"v", "/", 
      SqrtBox[
       RowBox[{"v", ".", "v"}]]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.4070870373904257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["normalizeVector3D",
  FontWeight->"Bold"],
 ":\nNormalizes a vector"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870373904257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "normalizeVector3D", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"normalizeVector3D", "[", "v_", "]"}], ":=", "\[IndentingNewLine]",
    
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"v", ".", "v"}], " ", "\[NotEqual]", " ", "0"}], ",", " ", 
     RowBox[{"v", "/", 
      SqrtBox[
       RowBox[{"v", ".", "v"}]]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.4070870373904257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getEigen",
  FontWeight->"Bold"],
 ":\nGets the eigen values of a list of structure tensors"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870373904257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getEigen", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getEigen", "[", "lst_", "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"Eigensystem", ",", "#"}], "]"}], "&"}], ",", "lst"}], "]"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.3983904461540003`*^9, 3.3983904700220003`*^9}, 
   3.4070870373904257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getEigen3D",
  FontWeight->"Bold"],
 ":\nGets the eigen values of a list of structure tensors"
}], "Subsubtitle",
 CellChangeTimes->{{3.398390482612*^9, 3.398390483212*^9}, 
   3.4070870373904257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getEigen3D", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"getEigen3D", "[", 
   RowBox[{"lst_", ",", " ", "skel_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "eigs", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"eigs", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
                "}"}], "&"}], ",", "#"}], "]"}], "&"}], ",", " ", "#"}], 
          "]"}], "&"}], ",", "grad"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"skel", "\[LeftDoubleBracket]", 
           RowBox[{"x", ",", " ", "y", ",", " ", "z"}], 
           "\[RightDoubleBracket]"}], " ", ">", " ", "0"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"eigs", "\[LeftDoubleBracket]", 
            RowBox[{"x", ",", "y", ",", "z"}], "\[RightDoubleBracket]"}], "=",
            
           RowBox[{"Eigensystem", "[", 
            RowBox[{"lst", "\[LeftDoubleBracket]", 
             RowBox[{"x", ",", "y", ",", "z"}], "\[RightDoubleBracket]"}], 
            "]"}]}], ";"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", "1", ",", "len"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "1", ",", "wid"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"z", ",", "1", ",", "hei"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "eigs"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.3983904461540003`*^9, 3.39839050854*^9}, {
   3.398393704361*^9, 3.398393704817*^9}, {3.3983937414189997`*^9, 
   3.3983938627390003`*^9}, {3.3983938943780003`*^9, 3.398393949026*^9}, {
   3.3983941085550003`*^9, 3.398394111042*^9}, 3.3983947090030003`*^9, {
   3.398395200943*^9, 3.3983952010550003`*^9}, 3.4070870373904257`*^9}],

Cell["\<\
lst=getLocalStructureTensor[getGradientField[slice],gaussianRadius];
eigens=getEigen[lst];
Show[{ListDensityPlot[slice/255.0,Mesh\[Rule]False,ColorFunctionScaling\[Rule]\
False,DisplayFunction\[Rule]Identity],Graphics[{RGBColor[0,0,1],Table[If[\
eigens\[LeftDoubleBracket]x,y,1,1\[RightDoubleBracket]>0,Line[{{y,x},{y,x}+\
Reverse[normalizeVector[eigens\[LeftDoubleBracket]x,y,2,2\[RightDoubleBracket]\
]]*(1-eigens\[LeftDoubleBracket]x,y,1,2\[RightDoubleBracket]/eigens\
\[LeftDoubleBracket]x,y,1,1\[RightDoubleBracket])}],Circle[{y,x},0.01]],{x,\
Length[eigens]},{y,Length[eigens\[LeftDoubleBracket]1\[RightDoubleBracket]]}]}\
,AspectRatio\[Rule]Automatic,PlotRange\[Rule]{{0,65},{0,65}},Frame\[Rule]True,\
DisplayFunction\[Rule]Identity]},DisplayFunction\[Rule]$DisplayFunction];\
\>", "SmallText",
 CellChangeTimes->{3.4070870374216757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getCostFunction5",
  FontWeight->"Bold"],
 ":\nReturns the cost of adding in a new pixel based on the structure tensor \
eigen analysis."
}], "Subsubtitle",
 CellChangeTimes->{3.4070870374216757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getCostFunction5", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCostFunction5", "[", 
    RowBox[{
    "p_", ",", "  ", "eigenValues_", ",", "  ", "skeletonDirections_", ",", 
     " ", "annotatedSkeleton_"}], "]"}], " ", ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "cost", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cost", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"eigenValues", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{
            "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            " ", 
            RowBox[{
            "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            " ", "1", ",", " ", "1"}], "\[RightDoubleBracket]"}], " ", 
          "\[NotEqual]", " ", "0"}], ")"}], ",", "\[IndentingNewLine]", 
        RowBox[{"cost", " ", "=", " ", 
         RowBox[{"1", " ", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"skeletonDirections", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{
                "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                ",", " ", 
                RowBox[{
                "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
                "\[RightDoubleBracket]"}], " ", ".", " ", 
              RowBox[{"eigenValues", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{
                "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                ",", " ", 
                RowBox[{
                "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                ",", " ", "2", ",", " ", "1"}], "\[RightDoubleBracket]"}]}], 
             "]"}], ")"}], " ", "*", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", " ", 
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"eigenValues", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 ",", " ", 
                 RowBox[{
                 "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                 ",", " ", "1", ",", " ", "2"}], "\[RightDoubleBracket]"}], 
               " ", "/", "  ", 
               RowBox[{"eigenValues", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 ",", " ", 
                 RowBox[{
                 "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                 ",", " ", "1", ",", " ", "1"}], "\[RightDoubleBracket]"}]}], 
              "]"}]}], " ", ")"}]}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"annotatedSkeleton", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{
           "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           " ", 
           RowBox[{
           "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "\[RightDoubleBracket]"}], " ", "\[Equal]", " ", "1"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"cost", " ", "=", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"eigenValues", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
             "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
              " ", 
             RowBox[{
             "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",",
              " ", "1", ",", " ", "2"}], "\[RightDoubleBracket]"}], " ", "/", 
           "  ", 
           RowBox[{"eigenValues", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
             "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
              " ", 
             RowBox[{
             "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",",
              " ", "1", ",", " ", "1"}], "\[RightDoubleBracket]"}]}], 
          "]"}]}]}], " ", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "cost", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.4070870374216757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getCostFunction5Image",
  FontWeight->"Bold"],
 ":\nGets an image annotated using the 5th cost function (Eigen Analysis)"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870374216757`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getCostFunction5Image", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getCostFunction5Image", "[", 
    RowBox[{
    "skeleton_", ",", " ", "eigenValues_", ",", " ", "skeletonDirections_", 
     ",", " ", "annotatedSkeleton_"}], "]"}], " ", ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"retVal", ",", " ", "s2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s2", " ", "=", " ", "skeleton"}], ";", "\[IndentingNewLine]", 
      RowBox[{"retVal", " ", "=", " ", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"s2", "\[LeftDoubleBracket]", 
             RowBox[{"x", ",", " ", "y"}], "\[RightDoubleBracket]"}], " ", 
            ">", " ", "0"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"getCostFunction5", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}], ",", "  ", "eigenValues", ",", 
             "  ", "skeletonDirections", ",", " ", "annotatedSkeleton"}], 
            "]"}], ",", "\[IndentingNewLine]", "0"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "1", ",", " ", 
           RowBox[{
            RowBox[{"Dimensions", "[", "skeleton", "]"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", " ", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", "1", ",", " ", 
           RowBox[{
            RowBox[{"Dimensions", "[", "skeleton", "]"}], 
            "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "retVal", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.4070870374216757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getEllipse",
  FontWeight->"Bold"],
 ":\nGets the ellipse generated by the eigen analysis"
}], "Subsubtitle",
 CellChangeTimes->{{3.407083261749801*^9, 3.4070832780466757`*^9}, 
   3.4070870374216757`*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "getEllipse", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getEllipse", "[", 
    RowBox[{
    "center_", ",", " ", "v1_", ",", " ", "v2_", ",", " ", "u1_", ",", " ", 
     "u2_", ",", " ", "scale_"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"u1", "\[Equal]", "0"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", "]"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x1", ",", "y1", ","}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"x1", " ", "=", " ", 
           RowBox[{
            FractionBox["u1", "u1"], " ", 
            RowBox[{"Sin", "[", "t", "]"}], 
            RowBox[{"Normalize", "[", "v1", "]"}], "*", "scale"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"y1", " ", "=", " ", 
           RowBox[{
            FractionBox[
             RowBox[{"u2", " "}], "u1"], 
            RowBox[{"Cos", "[", "t", "]"}], " ", 
            RowBox[{"Normalize", "[", "v2", "]"}], "*", "scale"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
             "center", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
              "+", 
             RowBox[{
             "x1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             " ", "+", " ", 
             RowBox[{
             "y1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            ",", " ", 
            RowBox[{
             RowBox[{
             "center", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
              " ", "+", " ", 
             RowBox[{
             "x1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             " ", "+", " ", 
             RowBox[{
             "y1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}],
            "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", "  ", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", 
         RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4065619991631894`*^9, 3.4065620588819394`*^9}, {
   3.4065622719756894`*^9, 3.4065623349756894`*^9}, {3.4065624128194394`*^9, 
   3.4065624436006894`*^9}, {3.4065625403663144`*^9, 
   3.4065627023506894`*^9}, {3.4065629121319394`*^9, 
   3.4065629241163144`*^9}, {3.4065633167413144`*^9, 
   3.4065633611006894`*^9}, {3.4065633939600644`*^9, 3.4065634961631894`*^9}, 
   3.4065638909444394`*^9, {3.4065645444913144`*^9, 3.4065645599288144`*^9}, {
   3.4065650259913144`*^9, 3.4065650280381894`*^9}, {3.406897026953061*^9, 
   3.406897029656186*^9}, {3.406897125249936*^9, 3.406897130390561*^9}, {
   3.407083254406051*^9, 3.407083259093551*^9}, 3.407087037437301*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["showEllipsoidalImage",
  FontWeight->"Bold"],
 ":\nShows the original image overlayed with the ellipsoids."
}], "Subsubtitle",
 CellChangeTimes->{{3.407083261749801*^9, 3.4070832780466757`*^9}, 
   3.4070870374216757`*^9, {3.4071685295253563`*^9, 3.4071685424316063`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "showEllipsoidalImage", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showEllipsoidalImage", "[", 
   RowBox[{"slice_", ",", " ", "radius_"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "eigs", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"eigs", " ", "=", " ", 
      RowBox[{"getEigen", "[", 
       RowBox[{"getLocalStructureTensor2", "[", 
        RowBox[{
         RowBox[{"getGradientField2", "[", "slice", "]"}], ",", "radius"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"Graphics", "[", "]"}], ",", " ", 
           RowBox[{"ListDensityPlot", "[", 
            RowBox[{"slice", ",", " ", 
             RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], 
            "]"}]}], "}"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"getEllipse", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", 
             RowBox[{"eigs", "\[LeftDoubleBracket]", 
              RowBox[{"x", ",", "y", ",", " ", "2", ",", " ", "1"}], 
              "\[RightDoubleBracket]"}], ",", " ", 
             RowBox[{"eigs", "\[LeftDoubleBracket]", 
              RowBox[{"x", ",", "y", ",", " ", "2", ",", " ", "2"}], 
              "\[RightDoubleBracket]"}], ",", " ", 
             RowBox[{"eigs", "\[LeftDoubleBracket]", 
              RowBox[{"x", ",", "y", ",", " ", "1", ",", " ", "1"}], 
              "\[RightDoubleBracket]"}], ",", " ", 
             RowBox[{"eigs", "\[LeftDoubleBracket]", 
              RowBox[{"x", ",", "y", ",", " ", "1", ",", " ", "2"}], 
              "\[RightDoubleBracket]"}], ",", "0.5"}], "]"}], ",", 
           "\[IndentingNewLine]", " ", 
           RowBox[{"{", 
            RowBox[{"x", ",", " ", 
             RowBox[{"sliceSize", "[", 
              RowBox[{"1", ",", "1"}], "]"}], ",", " ", 
             RowBox[{"sliceSize", "[", 
              RowBox[{"1", ",", "2"}], "]"}], ",", " ", "1"}], "}"}], ",", 
           " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"y", ",", " ", 
             RowBox[{"sliceSize", "[", 
              RowBox[{"2", ",", "1"}], "]"}], ",", " ", 
             RowBox[{"sliceSize", "[", 
              RowBox[{"2", ",", "2"}], "]"}], ",", " ", "1"}], "}"}]}], 
          "]"}]}], "]"}], "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.4071681927128563`*^9, 3.4071683655409813`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Structure Tensor based Skeletonization", "Subtitle",
 CellChangeTimes->{{3.407083326281051*^9, 3.4070833375779257`*^9}, 
   3.407087037437301*^9}],

Cell[TextData[{
 StyleBox["getSkeletonDirection",
  FontWeight->"Bold"],
 ":\nGets the Vector field of the skeleton"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037437301*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getSkeletonDirection", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSkeletonDirection", "[", "skeleton_", "]"}], " ", ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"direction", ",", " ", "defaultDirections"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"defaultDirections", " ", "=", " ", 
       RowBox[{"getEigen", "[", 
        RowBox[{"getLocalStructureTensor", "[", 
         RowBox[{
          RowBox[{"getGradientField", "[", "skeleton", "]"}], ",", "1"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"direction", " ", "=", " ", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"skeleton", "\[LeftDoubleBracket]", 
             RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], " ", ">", 
            " ", "0"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"n4", ",", " ", "dir"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"n4", " ", "=", " ", 
               RowBox[{"getN4", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], ",", " ", "skeleton"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"dir", " ", "=", " ", 
               RowBox[{"defaultDirections", "\[LeftDoubleBracket]", 
                RowBox[{"x", ",", "y", ",", "2", ",", "2"}], 
                "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"Switch", "[", 
               RowBox[{
                RowBox[{"Length", "[", "n4", "]"}], ",", 
                "\[IndentingNewLine]", "1", ",", " ", 
                RowBox[{
                 RowBox[{"dir", " ", "=", " ", 
                  RowBox[{
                   RowBox[{
                   "n4", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], " ", "-", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}]}]}], ";"}], ",", 
                "\[IndentingNewLine]", "2", ",", " ", 
                RowBox[{"dir", " ", "=", " ", 
                 RowBox[{
                  RowBox[{
                  "n4", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], " ", "-", " ", 
                  RowBox[{
                  "n4", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"normalizeVector", "[", "dir", "]"}]}]}], 
            "\[IndentingNewLine]", "]"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "1", ",", " ", 
           RowBox[{
            RowBox[{"Dimensions", "[", "skeleton", "]"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", " ", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", "1", ",", " ", 
           RowBox[{
            RowBox[{"Dimensions", "[", "skeleton", "]"}], 
            "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}],
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "direction", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.407087037437301*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["doSkeletonCleanup:",
  FontWeight->"Bold"],
 "\nCleans up the skeleton using cost function 5"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037437301*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "doSkeletonCleanup", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"doSkeletonCleanup", "[", 
   RowBox[{
   "sourceImage_", ",", "skeleton_", ",", "threshold_", ",", "stepSize_", ",",
     "showGeneralPlots_", ",", "showIterationPlots_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "sourceEigens", ",", "binarySkeleton", ",", "skeletonDirections", ",", 
      "pixelCosts", ",", "prunedSkeleton", ",", "newPixels", ",", 
      "annotatedNewPixels", ",", "grayValueSkeleton", ",", "p1", ",", "p2", 
      ",", "p3", ",", "p4", ",", "p5", ",", "p6", ",", "p7", ",", "p01", ",", 
      "p02", ",", "p03"}], "}"}], ",", 
    RowBox[{
     RowBox[{"sourceEigens", "=", 
      RowBox[{"getEigen", "[", 
       RowBox[{"getLocalStructureTensor", "[", 
        RowBox[{
         RowBox[{"getGradientField", "[", "sourceImage", "]"}], ",", 
         "gaussianRadius"}], "]"}], "]"}]}], ";", 
     RowBox[{"binarySkeleton", "=", 
      RowBox[{"thresholdImage", "[", 
       RowBox[{"skeleton", ",", "1"}], "]"}]}], ";", 
     RowBox[{"skeletonDirections", "=", 
      RowBox[{"getSkeletonDirection", "[", "binarySkeleton", "]"}]}], ";", 
     RowBox[{"pixelCosts", "=", 
      RowBox[{"getCostFunction5Image", "[", 
       RowBox[{
       "binarySkeleton", ",", "sourceEigens", ",", "skeletonDirections", ",", 
        
        RowBox[{"annotateImageWithPixelType", "[", "binarySkeleton", "]"}]}], 
       "]"}]}], ";", 
     RowBox[{"prunedSkeleton", "=", 
      RowBox[{"getBlankImage", "[", "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{"showGeneralPlots", ",", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"p1", "=", 
            RowBox[{"ListDensityPlot", "[", 
             RowBox[{"sourceImage", ",", 
              RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
              RowBox[{"PlotLabel", "\[Rule]", "\"\<Source Image\>\""}]}], 
             "]"}]}], ";", 
           RowBox[{"p2", "=", 
            RowBox[{"ListDensityPlot", "[", 
             RowBox[{"skeleton", ",", 
              RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
              RowBox[{
              "PlotLabel", "\[Rule]", "\"\<Grayscale Skeleton\>\""}]}], 
             "]"}]}], ";", 
           RowBox[{"p3", "=", 
            RowBox[{"ListDensityPlot", "[", 
             RowBox[{"binarySkeleton", ",", 
              RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
              RowBox[{"PlotLabel", "\[Rule]", "\"\<Binary Skeleton\>\""}]}], 
             "]"}]}], ";", 
           RowBox[{"p4", "=", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ListDensityPlot", "[", 
                 RowBox[{
                  FractionBox["sourceImage", "255.`"], ",", 
                  RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
                  RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
                  RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}],
                 ",", 
                RowBox[{"Graphics", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"sourceEigens", "\[LeftDoubleBracket]", 
                    RowBox[{"x", ",", "y", ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}], ">", "0"}], ",", 
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "-", "0.5`"}], ",", 
                    RowBox[{"x", "-", "0.5`"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "-", "0.5`"}], ",", 
                    RowBox[{"x", "-", "0.5`"}]}], "}"}], "+", 
                    RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"normalizeVector", "[", 
                    RowBox[{"sourceEigens", "\[LeftDoubleBracket]", 
                    RowBox[{"x", ",", "y", ",", "2", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    FractionBox[
                    RowBox[{"sourceEigens", "\[LeftDoubleBracket]", 
                    RowBox[{"x", ",", "y", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], 
                    RowBox[{"sourceEigens", "\[LeftDoubleBracket]", 
                    RowBox[{"x", ",", "y", ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}]]}], ")"}]}]}]}], "}"}], "]"}], 
                    ",", 
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "-", "0.5`"}], ",", 
                    RowBox[{"x", "-", "0.5`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "-", "0.5`"}], ",", 
                    RowBox[{"x", "-", "0.5`"}]}], "}"}]}], "}"}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"Length", "[", "sourceEigens", "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "sourceEigens", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}]}], 
                   "}"}], ",", 
                  RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "65"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "65"}], "}"}]}], "}"}]}], ",", 
                  RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                  RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
              RowBox[{
              "PlotLabel", "\[Rule]", "\"\<Source Vector Field\>\""}]}], 
             "]"}]}], ";", 
           RowBox[{"p5", "=", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ListDensityPlot", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"thresholdImage", "[", 
                    RowBox[{"skeleton", ",", "1"}], "]"}], "255.`"], ",", 
                  RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
                  RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
                  RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}],
                 ",", 
                RowBox[{"Graphics", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "-", "0.5`"}], ",", 
                    RowBox[{"x", "-", "0.5`"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "-", "0.5`"}], ",", 
                    RowBox[{"x", "-", "0.5`"}]}], "}"}], "+", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"normalizeVector", "[", 
                    RowBox[{"skeletonDirections", "\[LeftDoubleBracket]", 
                    RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], "]"}]}]}], "}"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"Length", "[", "skeletonDirections", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "skeletonDirections", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}]}], 
                   "}"}], ",", 
                  RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "65"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "65"}], "}"}]}], "}"}]}], ",", 
                  RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                  RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
              RowBox[{
              "PlotLabel", "\[Rule]", "\"\<Skeleton Vector Field\>\""}]}], 
             "]"}]}], ";", 
           RowBox[{"p6", "=", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ListDensityPlot", "[", 
                 RowBox[{
                  FractionBox["slice", "255.`"], ",", 
                  RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
                  RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
                  RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}],
                 ",", 
                RowBox[{"Graphics", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"sourceEigens", "\[LeftDoubleBracket]", 
                    RowBox[{"x", ",", "y", ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}], ">", "0"}], ",", 
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "-", "0.5`"}], ",", 
                    RowBox[{"x", "-", "0.5`"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "-", "0.5`"}], ",", 
                    RowBox[{"x", "-", "0.5`"}]}], "}"}], "+", 
                    RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"normalizeVector", "[", 
                    RowBox[{"sourceEigens", "\[LeftDoubleBracket]", 
                    RowBox[{"x", ",", "y", ",", "2", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    FractionBox[
                    RowBox[{"sourceEigens", "\[LeftDoubleBracket]", 
                    RowBox[{"x", ",", "y", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], 
                    RowBox[{"sourceEigens", "\[LeftDoubleBracket]", 
                    RowBox[{"x", ",", "y", ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}]]}], ")"}]}]}]}], "}"}], "]"}], 
                    ",", 
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "-", "0.5`"}], ",", 
                    RowBox[{"x", "-", "0.5`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "-", "0.5`"}], ",", 
                    RowBox[{"x", "-", "0.5`"}]}], "}"}]}], "}"}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"Length", "[", "sourceEigens", "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "sourceEigens", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}]}], 
                   "}"}], ",", 
                  RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "65"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "65"}], "}"}]}], "}"}]}], ",", 
                  RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                  RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}],
                 ",", 
                RowBox[{"Graphics", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "-", "0.5`"}], ",", 
                    RowBox[{"x", "-", "0.5`"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "-", "0.5`"}], ",", 
                    RowBox[{"x", "-", "0.5`"}]}], "}"}], "+", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"normalizeVector", "[", 
                    RowBox[{"skeletonDirections", "\[LeftDoubleBracket]", 
                    RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], "]"}]}]}], "}"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"Length", "[", "skeletonDirections", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "skeletonDirections", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}]}], 
                   "}"}], ",", 
                  RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "65"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "65"}], "}"}]}], "}"}]}], ",", 
                  RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                  RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
              RowBox[{
              "PlotLabel", "\[Rule]", 
               "\"\<Source  Field on Skeleton Field\>\""}]}], "]"}]}], ";", 
           RowBox[{"p7", "=", 
            RowBox[{"ListDensityPlot", "[", 
             RowBox[{"pixelCosts", ",", 
              RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
              RowBox[{"PlotLabel", "\[Rule]", "\"\<Cost Function\>\""}]}], 
             "]"}]}], ";", 
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"GraphicsGrid", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"p4", ",", "p5", ",", "p6"}], "}"}], ",", 
                RowBox[{"{", "p7", "}"}]}], "}"}], "]"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"1200", ",", "1200"}], "}"}]}]}], "]"}]}]}], "]"}], 
        ";"}]}], "]"}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"grayValueSkeleton", "=", 
         RowBox[{"thresholdImage", "[", 
          RowBox[{"skeleton", ",", "grayValue"}], "]"}]}], ";", 
        RowBox[{"newPixels", "=", 
         RowBox[{"grayValueSkeleton", "-", "prunedSkeleton"}]}], ";", 
        RowBox[{"annotatedNewPixels", "=", 
         RowBox[{"annotateImageWithPixelType", "[", "newPixels", "]"}]}], ";",
         
        RowBox[{"skeletonDirections", "=", 
         RowBox[{"getSkeletonDirection", "[", "grayValueSkeleton", "]"}]}], 
        ";", 
        RowBox[{"pixelCosts", "=", 
         RowBox[{"getCostFunction5Image", "[", 
          RowBox[{
          "grayValueSkeleton", ",", "sourceEigens", ",", "skeletonDirections",
            ",", "annotatedNewPixels"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{"showIterationPlots", ",", 
          RowBox[{
           RowBox[{"p01", "=", 
            RowBox[{"ListDensityPlot", "[", 
             RowBox[{"newPixels", ",", 
              RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
              RowBox[{"PlotLabel", "\[Rule]", "\"\<New Pixels\>\""}]}], 
             "]"}]}], ";"}]}], "]"}], ";", 
        RowBox[{"dMap", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"newPixels", "\[LeftDoubleBracket]", 
                 RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], ">", 
                "0"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"1", ",", "1"}], "]"}], ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"2", ",", "1"}], "]"}], ",", 
               RowBox[{"sliceSize", "[", 
                RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
          "]"}]}], ";", 
        RowBox[{"dMap", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"dMap", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#1", "]"}], ">", "0"}], "&"}]}], "]"}]}],
         ";", 
        RowBox[{"Scan", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"newPixels", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{
                  "#1", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                  "#1", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                ">", "0"}], ",", 
               RowBox[{
                RowBox[{"Module", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"curvePoints", ",", "curveCost"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"curvePoints", "=", 
                    RowBox[{
                    RowBox[{"getCurveLength", "[", 
                    RowBox[{"#1", ",", "annotatedNewPixels", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "grayValue"}], "}"}]}], "]"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
                   ";", 
                   RowBox[{"curveCost", "=", 
                    FractionBox[
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"i", "=", "1"}], 
                    RowBox[{"Length", "[", "curvePoints", "]"}]], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"pixelCosts", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                    "&"}], ")"}], "/@", "curvePoints"}], ")"}], 
                    "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
                    
                    RowBox[{"Length", "[", "curvePoints", "]"}]]}], ";", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"curveCost", "\[GreaterEqual]", "threshold"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Scan", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"prunedSkeleton", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                    "=", "1"}], ";"}], ")"}], "&"}], ",", "curvePoints"}], 
                    "]"}], ";"}]}], "]"}], ";", 
                   RowBox[{"Scan", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"newPixels", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                    "=", "0"}], ";"}], ")"}], "&"}], ",", "curvePoints"}], 
                    "]"}], ";"}]}], "]"}], ";"}]}], "]"}], ";"}], ")"}], 
           "&"}], ",", "dMap"}], "]"}], ";", 
        RowBox[{"If", "[", 
         RowBox[{"showIterationPlots", ",", 
          RowBox[{
           RowBox[{"p02", "=", 
            RowBox[{"ListDensityPlot", "[", 
             RowBox[{"prunedSkeleton", ",", 
              RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
              RowBox[{"PlotLabel", "\[Rule]", "\"\<Pruned Skeleton\>\""}]}], 
             "]"}]}], ";", 
           RowBox[{"p03", "=", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ListDensityPlot", "[", 
                 RowBox[{
                  FractionBox["slice", "255.`"], ",", 
                  RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
                  RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
                  RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}],
                 ",", 
                RowBox[{"Graphics", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"sourceEigens", "\[LeftDoubleBracket]", 
                    RowBox[{"x", ",", "y", ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}], ">", "0"}], ",", 
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "-", "0.5`"}], ",", 
                    RowBox[{"x", "-", "0.5`"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "-", "0.5`"}], ",", 
                    RowBox[{"x", "-", "0.5`"}]}], "}"}], "+", 
                    RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"normalizeVector", "[", 
                    RowBox[{"sourceEigens", "\[LeftDoubleBracket]", 
                    RowBox[{"x", ",", "y", ",", "2", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    FractionBox[
                    RowBox[{"sourceEigens", "\[LeftDoubleBracket]", 
                    RowBox[{"x", ",", "y", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], 
                    RowBox[{"sourceEigens", "\[LeftDoubleBracket]", 
                    RowBox[{"x", ",", "y", ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}]]}], ")"}]}]}]}], "}"}], "]"}], 
                    ",", 
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "-", "0.5`"}], ",", 
                    RowBox[{"x", "-", "0.5`"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "-", "0.5`"}], ",", 
                    RowBox[{"x", "-", "0.5`"}]}], "}"}]}], "}"}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"Length", "[", "sourceEigens", "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "sourceEigens", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}]}], 
                   "}"}], ",", 
                  RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "65"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "65"}], "}"}]}], "}"}]}], ",", 
                  RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                  RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}],
                 ",", 
                RowBox[{"Graphics", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "-", "0.5`"}], ",", 
                    RowBox[{"x", "-", "0.5`"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "-", "0.5`"}], ",", 
                    RowBox[{"x", "-", "0.5`"}]}], "}"}], "+", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"normalizeVector", "[", 
                    RowBox[{"skeletonDirections", "\[LeftDoubleBracket]", 
                    RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], "]"}]}]}], "}"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"Length", "[", "skeletonDirections", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "skeletonDirections", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}]}], 
                   "}"}], ",", 
                  RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "65"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "65"}], "}"}]}], "}"}]}], ",", 
                  RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                  RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
              RowBox[{
              "PlotLabel", "\[Rule]", 
               "\"\<Source  Field on Skeleton Field\>\""}]}], "]"}]}], ";", 
           RowBox[{"p04", "=", 
            RowBox[{"ListDensityPlot", "[", 
             RowBox[{"pixelCosts", ",", 
              RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
              RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
              RowBox[{"PlotLabel", "\[Rule]", "\"\<Cost Function\>\""}]}], 
             "]"}]}], ";", 
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"GraphicsRow", "[", 
              RowBox[{"{", 
               RowBox[{"p01", ",", "p02", ",", "p03", ",", "p04"}], "}"}], 
              "]"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"1200", ",", "300"}], "}"}]}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"\"\<Gray Value : \>\"", "<>", 
               RowBox[{"ToString", "[", "grayValue", "]"}]}]}]}], "]"}]}]}], 
         "]"}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"grayValue", ",", "255", ",", "1", ",", "stepSize"}], "}"}]}],
       "]"}], ";", 
     RowBox[{"newSkeleton", "=", "skeleton"}], ";", 
     RowBox[{"dMap", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"prunedSkeleton", "\[LeftDoubleBracket]", 
              RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], "\[Equal]", 
             "0"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"1", ",", "1"}], "]"}], ",", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"2", ",", "1"}], "]"}], ",", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", 
     RowBox[{"dMap", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"dMap", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#1", "]"}], ">", "0"}], "&"}]}], "]"}]}], 
     ";", 
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"newSkeleton", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
             "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{
             "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            "\[RightDoubleBracket]"}], "=", "0"}], ";"}], ")"}], "&"}], ",", 
       "dMap"}], "]"}], ";", 
     RowBox[{"{", 
      RowBox[{"newSkeleton", ",", "prunedSkeleton"}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{3.4070870374529257`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Structure Tensor based smoothing ", "Subtitle",
 CellChangeTimes->{{3.4070833766091757`*^9, 3.407083383937301*^9}, 
   3.4070870374529257`*^9}],

Cell[TextData[{
 StyleBox["getDistanceNormal:",
  FontWeight->"Bold"],
 "\ngets the distance to the edge of the structure tensor defined by ",
 StyleBox["v1, v2, u1",
  FontSlant->"Italic"],
 " and ",
 StyleBox["u2",
  FontSlant->"Italic"],
 " in the direction ",
 StyleBox["dir",
  FontSlant->"Italic"]
}], "Subsubtitle",
 CellChangeTimes->{{3.4070837214216757`*^9, 3.4070837806716757`*^9}, 
   3.4070870374529257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getDistanceNormal", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getDistanceNormal", "[", 
    RowBox[{
    "v1_", ",", "v2_", ",", "u1_", ",", "u2_", ",", " ", "dir_", ",", " ", 
     "ix_"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dirUV", ",", " ", "p", ",", " ", "base"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"{", 
         RowBox[{"v1", ",", " ", "v2", ",", " ", "u1", ",", " ", "u2"}], 
         "}"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dirUV", " ", "=", " ", 
       RowBox[{"Normalize", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"dir", ".", "v1"}], ",", " ", 
          RowBox[{"dir", ".", "v2"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "dirUV", "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"base", " ", "=", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{
           "dirUV", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "2"], " ", 
          RowBox[{"Abs", "[", "u1", "]"}]}], " ", "+", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
           "dirUV", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "2"], " ", 
          RowBox[{"Abs", "[", "u2", "]"}]}]}]]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"p", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"base", " ", "\[Equal]", " ", "0"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", " ", 
         FractionBox[
          RowBox[{
           SqrtBox["u1"], " ", 
           SqrtBox["u2"], " ", "dirUV"}], "base"]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "p", "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"u2", " ", "\[Equal]", " ", "0"}], ")"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "dirUV", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             " ", "\[Equal]", " ", "0"}], ",", " ", "\[IndentingNewLine]", 
            "0", ",", "\[IndentingNewLine]", 
            SqrtBox["u1"]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Norm", "[", "p", "]"}]}], "]"}], ",", " ", "ix"}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.4070870374529257`*^9, {3.4071715378691063`*^9, 3.4071715395722313`*^9}, {
   3.4071715777597313`*^9, 3.4071715884784813`*^9}, {3.4071716229316063`*^9, 
   3.4071716267753563`*^9}, {3.4071716951816063`*^9, 
   3.4071716952753563`*^9}, {3.4071717267753563`*^9, 
   3.4071717298378563`*^9}, {3.4071719234472313`*^9, 
   3.4071719442284813`*^9}, {3.4071720948847313`*^9, 
   3.4071721003222313`*^9}, {3.4071722351347313`*^9, 
   3.4071722355253563`*^9}, {3.4071722736816063`*^9, 3.4071722832441063`*^9}}],\


Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getDistance:",
  FontWeight->"Bold"],
 "\ngets the distance to the edge of the structure tensor defined by ",
 StyleBox["v1, v2, u2/u1",
  FontSlant->"Italic"],
 " and ",
 StyleBox["u2/u2",
  FontSlant->"Italic"],
 " in the direction ",
 StyleBox["dir.\n",
  FontSlant->"Italic"],
 "Basically uses the inverse structure tensor."
}], "Subsubtitle",
 CellChangeTimes->{{3.4070837214216757`*^9, 3.4070837806716757`*^9}, {
   3.4070838173591757`*^9, 3.4070838422966757`*^9}, 3.4070870374529257`*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "getDistance", "]"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"getDistance", "[", 
      RowBox[{
      "v1_", ",", "v2_", ",", "u1_", ",", "u2_", ",", " ", "dir_", ",", " ", 
       "ix_"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "dirUV", ",", " ", "p", ",", " ", "base", ",", " ", "u11", ",", " ", 
         "u22"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"dirUV", " ", "=", " ", 
         RowBox[{"Normalize", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"dir", ".", "v1"}], ",", " ", 
            RowBox[{"dir", ".", "v2"}]}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"u2", " ", "\[Equal]", " ", "0"}], ")"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "dirUV", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             " ", "\[Equal]", " ", "0"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "ix"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SqrtBox["u1"], ",", " ", "ix"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Module", "[", " ", 
           RowBox[{
            RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"u11", " ", "=", " ", 
              RowBox[{"u2", "/", "u1"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"u22", " ", "=", " ", 
              RowBox[{"u2", "/", "u2"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"base", " ", "=", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 SuperscriptBox[
                  RowBox[{
                  "dirUV", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], "2"], " ", 
                 RowBox[{"Abs", "[", "u11", "]"}]}], " ", "+", " ", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{
                  "dirUV", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "2"], 
                 RowBox[{"Abs", "[", "u22", "]"}], " "}]}]]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"p", " ", "=", " ", 
              RowBox[{"Norm", "[", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"base", " ", "\[Equal]", " ", "0"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", " ", 
                 FractionBox[
                  RowBox[{
                   SqrtBox["u11"], 
                   SqrtBox["u22"], " ", "dirUV"}], "base"]}], "]"}], "]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"p", " ", "=", " ", 
              RowBox[{"If", "[", " ", 
               RowBox[{
                RowBox[{"p", "\[Equal]", " ", "0"}], ",", " ", "0", ",", " ", 
                
                RowBox[{
                 SqrtBox["u2"], "/", "p"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"p", ",", " ", "ix"}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}]}], "]"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.4065658026944394`*^9, 3.4065658027881894`*^9}, {
   3.4065661652256894`*^9, 3.4065662104288144`*^9}, {3.4065690391294894`*^9, 
   3.4065691112388644`*^9}, 3.4065693323951144`*^9, {3.4065700470201144`*^9, 
   3.4065700794732394`*^9}, {3.4065701703013644`*^9, 
   3.4065702185669894`*^9}, {3.4065703258794894`*^9, 
   3.4065705298013644`*^9}, {3.4065707268951144`*^9, 
   3.4065707292232394`*^9}, {3.4065709691451144`*^9, 
   3.4065709693482394`*^9}, {3.4065710529576144`*^9, 
   3.4065710531138644`*^9}, {3.4065716116138644`*^9, 
   3.4065717672857394`*^9}, {3.4065719242857394`*^9, 
   3.4065719385826144`*^9}, {3.406898351343686*^9, 3.406898369703061*^9}, {
   3.406904824296811*^9, 3.406904837015561*^9}, {3.406909378374936*^9, 
   3.406909389453061*^9}, {3.406909616484311*^9, 3.406909631593686*^9}, {
   3.406910663671811*^9, 3.406910749687436*^9}, 3.406910780953061*^9, {
   3.406910841984311*^9, 3.406910890171811*^9}, {3.406911502359311*^9, 
   3.406911503296811*^9}, {3.406916017203061*^9, 3.406916033468686*^9}, {
   3.406916075890561*^9, 3.406916091312436*^9}, {3.406916137515561*^9, 
   3.406916141453061*^9}, {3.406916423656186*^9, 3.406916650249936*^9}, {
   3.406916953640561*^9, 3.406916980359311*^9}, {3.406917377828061*^9, 
   3.406917398874936*^9}, {3.406917444687436*^9, 3.406917457968686*^9}, {
   3.406917556031186*^9, 3.406917561062436*^9}, {3.406920077640561*^9, 
   3.406920106453061*^9}, {3.406920149296811*^9, 3.406920272234311*^9}, {
   3.406920303734311*^9, 3.406920317203061*^9}, {3.406920351515561*^9, 
   3.406920391593686*^9}, {3.406920474859311*^9, 3.406920479390561*^9}, {
   3.406920510703061*^9, 3.406920591328061*^9}, {3.406920686406186*^9, 
   3.406920688468686*^9}, {3.406920948062436*^9, 3.406920968421811*^9}, {
   3.406921058499936*^9, 3.406921072796811*^9}, 3.406921377703061*^9, {
   3.406921468578061*^9, 3.406921655281186*^9}, {3.406921694453061*^9, 
   3.406921696984311*^9}, 3.407083397999801*^9, 3.4070870374529257`*^9, {
   3.4071715106972313`*^9, 3.4071715355878563`*^9}, 3.4071716989472313`*^9, {
   3.4071723689316063`*^9, 3.4071723741972313`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["points:",
  FontWeight->"Bold"],
 "\nthe 8 neighbors of a given point"
}], "Subsubtitle",
 CellChangeTimes->{{3.4070837214216757`*^9, 3.4070837806716757`*^9}, {
   3.4070838173591757`*^9, 3.4070838750154257`*^9}, 3.4070870374529257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "points", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"points", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"-", "1"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", 
       RowBox[{"-", "1"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", " ", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.407083527999801*^9, 3.407083547906051*^9}, 
   3.4070870374529257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getDistancesNormal:",
  FontWeight->"Bold"],
 "\ngets the distances to all 8 surrounding neighbors"
}], "Subsubtitle",
 CellChangeTimes->{{3.4070837214216757`*^9, 3.4070837806716757`*^9}, {
   3.4070838173591757`*^9, 3.4070839090154257`*^9}, 3.4070870374529257`*^9, {
   3.407089370906051*^9, 3.4070893715154257`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getDistancesNormal", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getDistancesNormal", "[", 
    RowBox[{"v1_", ",", "v2_", ",", "u1_", ",", "u2_"}], "]"}], " ", ":=", 
   " ", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"getDistanceNormal", "[", 
      RowBox[{
      "v1", ",", " ", "v2", ",", " ", "u1", ",", " ", "u2", ",", " ", 
       RowBox[{
       "points", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
       " ", "i"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.4070870374529257`*^9, {3.407089353781051*^9, 3.407089366687301*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getDistances:",
  FontWeight->"Bold"],
 "\ngets the distances to all 8 surrounding neighbors"
}], "Subsubtitle",
 CellChangeTimes->{{3.4070837214216757`*^9, 3.4070837806716757`*^9}, {
   3.4070838173591757`*^9, 3.4070839090154257`*^9}, 3.4070870374529257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getDistances", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getDistances", "[", 
    RowBox[{"v1_", ",", "v2_", ",", "u1_", ",", "u2_"}], "]"}], " ", ":=", 
   " ", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"getDistance", "[", 
      RowBox[{
      "v1", ",", " ", "v2", ",", " ", "u1", ",", " ", "u2", ",", " ", 
       RowBox[{
       "points", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
       " ", "i"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.4070870374529257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getGrayscales:",
  FontWeight->"Bold"],
 "\nThe grayscale values in the surrounding 8 neighbors"
}], "Subsubtitle",
 CellChangeTimes->{{3.4070837214216757`*^9, 3.4070837806716757`*^9}, {
   3.4070838173591757`*^9, 3.4070838750154257`*^9}, {3.407083928031051*^9, 
   3.4070839371404257`*^9}, 3.4070870374529257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getGrayscales", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getGrayscales", "[", 
    RowBox[{"img_", ",", "p_"}], "]"}], " ", ":=", " ", "\[IndentingNewLine]",
    
   RowBox[{"Sort", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"img", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"p", "+", 
              RowBox[{
              "points", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}]}], ")"}], "\[LeftDoubleBracket]", 
            "1", "\[RightDoubleBracket]"}], ",", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"p", "+", 
              RowBox[{
              "points", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}]}], ")"}], "\[LeftDoubleBracket]", 
            "2", "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], ",", 
         " ", "i"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       " ", "\[LessEqual]", " ", 
       RowBox[{"#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
       " ", "&"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4065719805044894`*^9, 3.4065720237232394`*^9}, {
   3.4065739222388644`*^9, 3.4065739720513644`*^9}, {3.4065740504419894`*^9, 
   3.4065740951294894`*^9}, 3.4070870374529257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["solveForIdealDensity:",
  FontWeight->"Bold"],
 "\nFind the ideal density of a given point given the grayscales and eigen \
distances to its neighbors"
}], "Subsubtitle",
 CellChangeTimes->{{3.4070837214216757`*^9, 3.4070837806716757`*^9}, {
   3.4070838173591757`*^9, 3.4070838750154257`*^9}, {3.4070839620154257`*^9, 
   3.4070839833279257`*^9}, 3.4070870374529257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "V", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "solveForIdealDensity", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solveForIdealDensity", "[", 
   RowBox[{"grayscales_", ",", " ", "distances_", ",", " ", "i_"}], "]"}], 
  " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eqn", ",", " ", "solution", ",", " ", "minV", ",", " ", "maxV"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", "V", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"minV", " ", "=", " ", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"i", " ", "<", " ", "1"}], ",", " ", 
        RowBox[{"-", "\[Infinity]"}], ",", " ", 
        RowBox[{"grayscales", "\[LeftDoubleBracket]", 
         RowBox[{"i", ",", " ", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"maxV", " ", "=", " ", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"i", " ", "\[Equal]", "8"}], " ", ",", " ", "\[Infinity]", 
        ",", " ", 
        RowBox[{"grayscales", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"i", "+", "1"}], ",", " ", "1"}], 
         "\[RightDoubleBracket]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"eqn", " ", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"eqn", " ", "=", " ", 
         RowBox[{"eqn", " ", "+", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"V", "-", " ", 
             RowBox[{"grayscales", "\[LeftDoubleBracket]", 
              RowBox[{"j", ",", " ", "1"}], "\[RightDoubleBracket]"}], " ", 
             "-", " ", 
             RowBox[{"distances", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"grayscales", "\[LeftDoubleBracket]", 
                RowBox[{"j", ",", " ", "2"}], "\[RightDoubleBracket]"}], ",", 
               " ", "1"}], "\[RightDoubleBracket]"}]}], ")"}], "2"]}]}], 
        ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", "1", ",", " ", "i"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"eqn", " ", "=", " ", 
         RowBox[{"eqn", " ", "+", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"grayscales", "\[LeftDoubleBracket]", 
              RowBox[{"j", ",", " ", "1"}], "\[RightDoubleBracket]"}], " ", 
             "-", " ", "V", "-", " ", 
             RowBox[{"distances", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"grayscales", "\[LeftDoubleBracket]", 
                RowBox[{"j", ",", " ", "2"}], "\[RightDoubleBracket]"}], ",", 
               " ", "1"}], "\[RightDoubleBracket]"}]}], ")"}], "2"]}]}], 
        ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", 
         RowBox[{"i", "+", "1"}], ",", " ", "8"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"solution", " ", "=", " ", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"eqn", ",", " ", "V"}], "]"}], " ", "\[Equal]", " ", "0"}],
          "}"}], ",", " ", 
        RowBox[{"{", "V", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"V", " ", "=", " ", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{"V", " ", "/.", " ", "solution"}], ",", " ", "minV"}], 
         "]"}], ",", " ", "maxV"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"V", ",", " ", "eqn"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.406901429156186*^9, 3.406901466859311*^9}, {
   3.406901537687436*^9, 3.406901605281186*^9}, {3.406901665906186*^9, 
   3.406901859609311*^9}, {3.406901939093686*^9, 3.406901979468686*^9}, {
   3.406902017437436*^9, 3.406902035468686*^9}, {3.406902091328061*^9, 
   3.406902092796811*^9}, {3.406902123312436*^9, 3.406902141749936*^9}, {
   3.406902174374936*^9, 3.406902252999936*^9}, {3.406902329562436*^9, 
   3.406902335093686*^9}, {3.406902556921811*^9, 3.406902578578061*^9}, {
   3.406902656109311*^9, 3.406902674812436*^9}, {3.406902929531186*^9, 
   3.406902964687436*^9}, {3.406903044765561*^9, 3.406903286781186*^9}, {
   3.406903321859311*^9, 3.406903499781186*^9}, {3.406903695046811*^9, 
   3.406903713781186*^9}, 3.4070870374529257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getIdealDensity:",
  FontWeight->"Bold"],
 "\ngets the ideal density of a given point given the image, and the eigen \
values"
}], "Subsubtitle",
 CellChangeTimes->{{3.4070837214216757`*^9, 3.4070837806716757`*^9}, {
   3.4070838173591757`*^9, 3.4070838750154257`*^9}, {3.4070839620154257`*^9, 
   3.4070839833279257`*^9}, {3.4070841972029257`*^9, 3.4070842220779257`*^9}, 
   3.4070870374529257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getIdealDensity", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getIdealDensity", "[", 
    RowBox[{"slice_", ",", " ", "p_", ",", " ", "eigs_"}], "]"}], " ", ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"distances", ",", " ", "grayscales", ",", " ", "solutions"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"grayscales", " ", "=", " ", 
       RowBox[{"getGrayscales", "[", 
        RowBox[{"slice", ",", " ", "p"}], "]"}]}], ";", "\[IndentingNewLine]",
       
      RowBox[{"distances", " ", "=", " ", 
       RowBox[{"getDistances", "[", 
        RowBox[{
         RowBox[{"eigs", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{
           "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           " ", 
           RowBox[{
           "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
           " ", "2", ",", " ", "1"}], "\[RightDoubleBracket]"}], ",", " ", 
         RowBox[{"eigs", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{
           "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           " ", 
           RowBox[{
           "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
           " ", "2", ",", " ", "2"}], "\[RightDoubleBracket]"}], ",", " ", 
         RowBox[{"eigs", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{
           "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           " ", 
           RowBox[{
           "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
           " ", "1", ",", " ", "1"}], "\[RightDoubleBracket]"}], ",", " ", 
         RowBox[{"eigs", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{
           "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           " ", 
           RowBox[{
           "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
           " ", "1", ",", " ", "2"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"solutions", " ", "=", " ", 
       RowBox[{"Sort", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"solveForIdealDensity", "[", 
            RowBox[{"grayscales", ",", " ", "distances", ",", " ", "i"}], 
            "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], ",", 
         " ", 
         RowBox[{
          RowBox[{
           RowBox[{
           "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
           "<", " ", 
           RowBox[{
           "#2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          " ", "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"solutions", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.406897321859311*^9, 3.406897398734311*^9}, {
   3.406897435656186*^9, 3.406897439562436*^9}, {3.406897474999936*^9, 
   3.406897531281186*^9}, {3.406897956421811*^9, 3.406898030671811*^9}, {
   3.406898085390561*^9, 3.406898109781186*^9}, {3.406901771531186*^9, 
   3.406901805171811*^9}, {3.406902042249936*^9, 3.406902077734311*^9}, {
   3.406902154203061*^9, 3.406902160687436*^9}, {3.406902968484311*^9, 
   3.406902971265561*^9}, {3.406903508999936*^9, 3.406903661218686*^9}, {
   3.406904933124936*^9, 3.406904948734311*^9}, {3.406905045124936*^9, 
   3.406905045437436*^9}, {3.406909714453061*^9, 3.406909716109311*^9}, {
   3.406910025218686*^9, 3.406910043859311*^9}, {3.406910084374936*^9, 
   3.406910118640561*^9}, {3.406910246749936*^9, 3.406910246984311*^9}, {
   3.406915695671811*^9, 3.406915712781186*^9}, {3.406915800765561*^9, 
   3.406915814015561*^9}, {3.406916674578061*^9, 3.406916702015561*^9}, {
   3.406918014890561*^9, 3.406918064124936*^9}, {3.406918134109311*^9, 
   3.406918163578061*^9}, {3.406918492749936*^9, 3.406918494046811*^9}, {
   3.406922382093686*^9, 3.406922384234311*^9}, {3.4070836177029257`*^9, 
   3.4070836245779257`*^9}, 3.4070870374529257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["smoothenImage:",
  FontWeight->"Bold"],
 "\nsmoothen the image."
}], "Subsubtitle",
 CellChangeTimes->{{3.4070837214216757`*^9, 3.4070837806716757`*^9}, {
   3.4070838173591757`*^9, 3.4070838750154257`*^9}, {3.4070839620154257`*^9, 
   3.4070839833279257`*^9}, {3.4070841972029257`*^9, 3.407084245468551*^9}, 
   3.4070870374529257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "smoothenImage", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"smoothenImage", "[", 
   RowBox[{"slice_", ",", " ", "sliceSize_", ",", " ", "ratio_"}], "]"}], " ",
   ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eigs", ",", " ", "smooth"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"eigs", " ", "=", " ", 
      RowBox[{"getEigen", "[", 
       RowBox[{"getLocalStructureTensor2", "[", 
        RowBox[{
         RowBox[{"getGradientField2", "[", "slice", "]"}], ",", " ", "2"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"smooth", " ", "=", " ", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", " ", "<", " ", 
              RowBox[{"sliceSize", "[", 
               RowBox[{"1", ",", "1"}], "]"}]}], " ", ")"}], " ", "||", " ", 
            RowBox[{"(", 
             RowBox[{"x", " ", ">", " ", 
              RowBox[{"sliceSize", "[", 
               RowBox[{"1", ",", "2"}], "]"}]}], ")"}], " ", "||", " ", 
            RowBox[{"(", 
             RowBox[{"y", " ", "<", " ", 
              RowBox[{"sliceSize", "[", 
               RowBox[{"2", ",", "1"}], "]"}]}], " ", ")"}], " ", "||", " ", 
            RowBox[{"(", 
             RowBox[{"y", " ", ">", " ", 
              RowBox[{"sliceSize", "[", 
               RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], ")"}], ",", 
          "\[IndentingNewLine]", "0", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", " ", "ratio"}], ")"}], " ", "*", " ", 
            RowBox[{"slice", "\[LeftDoubleBracket]", 
             RowBox[{"x", ",", " ", "y"}], "\[RightDoubleBracket]"}]}], " ", 
           "+", " ", 
           RowBox[{"ratio", " ", "*", " ", 
            RowBox[{"getIdealDensity", "[", 
             RowBox[{"slice", ",", " ", 
              RowBox[{"{", 
               RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", "eigs"}], 
             "]"}]}]}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "1", ",", " ", 
          RowBox[{
           RowBox[{"Dimensions", "[", "slice", "]"}], "\[LeftDoubleBracket]", 
           "1", "\[RightDoubleBracket]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"y", ",", " ", "1", ",", " ", 
          RowBox[{
           RowBox[{"Dimensions", "[", "slice", "]"}], "\[LeftDoubleBracket]", 
           "2", "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "smooth"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.406909725156186*^9, 3.406909862468686*^9}, 
   3.406909944359311*^9, {3.406910253984311*^9, 3.406910397703061*^9}, {
   3.406910461531186*^9, 3.406910474781186*^9}, {3.406910616781186*^9, 
   3.406910644078061*^9}, {3.406910995593686*^9, 3.406910997156186*^9}, {
   3.406911218140561*^9, 3.406911221921811*^9}, {3.406911311515561*^9, 
   3.406911314921811*^9}, 3.406913911687436*^9, {3.406914510187436*^9, 
   3.406914537515561*^9}, {3.406917689265561*^9, 3.406917690546811*^9}, {
   3.406922888453061*^9, 3.406922898406186*^9}, {3.406923170624936*^9, 
   3.406923171906186*^9}, 3.406923960265561*^9, {3.406924004062436*^9, 
   3.406924011562436*^9}, 3.4070870374529257`*^9, {3.4070871346716757`*^9, 
   3.407087143437301*^9}, {3.407088651343551*^9, 3.4070886521091757`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["smoothenImageGradientDescent:",
  FontWeight->"Bold"],
 "\nsmoothen the image using a gradient descent"
}], "Subsubtitle",
 CellChangeTimes->{{3.4070837214216757`*^9, 3.4070837806716757`*^9}, {
   3.4070838173591757`*^9, 3.4070838750154257`*^9}, {3.4070839620154257`*^9, 
   3.4070839833279257`*^9}, {3.4070841972029257`*^9, 3.407084245468551*^9}, 
   3.4070870374529257`*^9, {3.407087103343551*^9, 3.4070871132966757`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "smoothenImageGradientDescent", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"smoothenImageGradientDescent", "[", 
   RowBox[{"slice_", ",", " ", "sliceSize_", ",", " ", "changePercent_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"smooth", ",", " ", "diff", ",", " ", "newslice"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"smooth", " ", "=", " ", 
      RowBox[{"smoothenImage", "[", 
       RowBox[{"slice", ",", " ", "sliceSize", ",", " ", "1.0"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"diff", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"diff", " ", "=", " ", 
         RowBox[{"Append", "[", 
          RowBox[{"diff", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"slice", "\[LeftDoubleBracket]", 
                RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], " ", "-", 
               " ", 
               RowBox[{"smooth", "\[LeftDoubleBracket]", 
                RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}]}], "]"}], 
             ",", " ", 
             RowBox[{"{", 
              RowBox[{"x", ",", " ", "y"}], "}"}]}], "}"}]}], "]"}]}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", 
         RowBox[{"sliceSize", "[", 
          RowBox[{"1", ",", "1"}], "]"}], ",", " ", 
         RowBox[{"sliceSize", "[", 
          RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", 
         RowBox[{"sliceSize", "[", 
          RowBox[{"2", ",", "1"}], "]"}], ",", " ", 
         RowBox[{"sliceSize", "[", 
          RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"diff", " ", "=", " ", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{"diff", ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ",
             ">", " ", 
            RowBox[{
            "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           " ", "&"}]}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"Length", "[", "diff", "]"}], "*", " ", 
            RowBox[{"changePercent", " ", "/", " ", "100"}]}], "]"}]}], 
         "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newslice", " ", "=", " ", "slice"}], ";", "\[IndentingNewLine]",
      
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"newslice", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"#", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", " ", 
            RowBox[{"#", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], 
           "\[RightDoubleBracket]"}], " ", "=", " ", 
          RowBox[{"smooth", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"#", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", " ", 
            RowBox[{"#", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], 
           "\[RightDoubleBracket]"}]}], " ", ";"}], "&"}], ",", " ", "diff"}],
       "]"}], ";", "\[IndentingNewLine]", "newslice"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.406909725156186*^9, 3.406909862468686*^9}, 
   3.406909944359311*^9, {3.406910253984311*^9, 3.406910397703061*^9}, {
   3.406910461531186*^9, 3.406910474781186*^9}, {3.406910616781186*^9, 
   3.406910644078061*^9}, {3.406910995593686*^9, 3.406910997156186*^9}, {
   3.406911218140561*^9, 3.406911221921811*^9}, {3.406911311515561*^9, 
   3.406911314921811*^9}, 3.406913911687436*^9, {3.406914510187436*^9, 
   3.406914537515561*^9}, {3.406917689265561*^9, 3.406917690546811*^9}, {
   3.406922888453061*^9, 3.406922898406186*^9}, {3.406923170624936*^9, 
   3.406923171906186*^9}, 3.406923960265561*^9, {3.406924004062436*^9, 
   3.406924011562436*^9}, 3.4070870374529257`*^9, {3.407087117656051*^9, 
   3.4070872757029257`*^9}, {3.4070873129216757`*^9, 3.407087405218551*^9}, {
   3.4070874732966757`*^9, 3.4070875080466757`*^9}, {3.407087755374801*^9, 
   3.4070877777966757`*^9}, {3.4070878266091757`*^9, 3.407087832062301*^9}, {
   3.407087873937301*^9, 3.4070878861404257`*^9}, {3.4070879331091757`*^9, 
   3.4070880019529257`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Statistical Profiles", "Subtitle",
 CellChangeTimes->{3.4070870374529257`*^9}],

Cell[TextData[{
 StyleBox["getPriorVal",
  FontWeight->"Bold"],
 "\nGets the earlier value in the histogram table"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870374529257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getPriorVal", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getPriorVal", "[", 
   RowBox[{"hist_", ",", " ", "currentIndex_"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"priorVal", ",", " ", "cVal", ",", " ", "pVal", ",", " ", "i"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"priorVal", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"cVal", " ", "=", " ", 
      RowBox[{"hist", "\[LeftDoubleBracket]", 
       RowBox[{"currentIndex", ",", " ", "2"}], "\[RightDoubleBracket]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"i", " ", "=", " ", 
      RowBox[{"currentIndex", " ", "-", " ", "1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"i", " ", ">=", " ", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"priorVal", " ", "=", " ", 
         RowBox[{"hist", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", " ", "2"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Break", "[", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"i", "--"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "priorVal"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{3.4070870374529257`*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getNextVal",
  FontWeight->"Bold"],
 "\nGets the next value in the histogram table"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870374529257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getNextVal", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getNextVal", "[", 
   RowBox[{"hist_", ",", " ", "currentIndex_"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nextVal", ",", " ", "cVal", ",", " ", "nVal", ",", " ", "i"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nextVal", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"cVal", " ", "=", " ", 
      RowBox[{"hist", "\[LeftDoubleBracket]", 
       RowBox[{"currentIndex", ",", " ", "2"}], "\[RightDoubleBracket]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"i", " ", "=", " ", 
      RowBox[{"currentIndex", " ", "+", " ", "1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"i", " ", "<=", " ", 
        RowBox[{"Length", "[", "hist", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nVal", " ", "=", " ", 
         RowBox[{"hist", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", " ", "2"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"nVal", " ", "\[NotEqual]", " ", "cVal"}], ",", " ", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", "}"}], ",", " ", 
            RowBox[{
             RowBox[{"nextVal", " ", "=", " ", "nVal"}], ";", " ", 
             RowBox[{"Break", "[", "]"}]}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"i", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "nextVal"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{3.4070870374529257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["smudgeHistogram",
  FontWeight->"Bold"],
 "\nSmudges a histogram by averaging the neighbors"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870374529257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "smudgeHistogram", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"smudgeHistogram", "[", "hist_", "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "newHist", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newHist", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Length", "[", "hist", "]"}], "-", "1"}], "}"}], ",", " ", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"newHist", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], " ", "=", " ", 
         RowBox[{
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"hist", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], " ", "+", 
            " ", 
            RowBox[{"hist", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", "1"}], 
             "\[RightDoubleBracket]"}]}], ")"}], " ", "/", " ", "3.0"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newHist", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"hist", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], " ", "+", 
            " ", 
            RowBox[{"hist", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", "2"}], 
             "\[RightDoubleBracket]"}]}], ")"}], " ", "/", " ", "3.0"}]}], 
        ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", 
         RowBox[{
          RowBox[{"Length", "[", "hist", "]"}], "-", "1"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "newHist"}]}],
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.4070870374529257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getPeakCount",
  FontWeight->"Bold"],
 "\nCounts the number of peaks"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870374529257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getPeakCount", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"getPeakCount", "[", 
   RowBox[{"hist_", ",", "s_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "priorVal", ",", "currVal", ",", "nextVal", ",", "n", ",", " ", 
      "newHist"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newHist", " ", "=", " ", "hist"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"newHist", " ", "=", " ", 
        RowBox[{"smudgeHistogram", "[", "newHist", "]"}]}], ",", " ", 
       RowBox[{"{", "s", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"n", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"priorVal", "=", 
         RowBox[{"getPriorVal", "[", 
          RowBox[{"newHist", ",", " ", "i"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"currVal", "=", 
         RowBox[{"newHist", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"nextVal", "=", 
         RowBox[{"getNextVal", "[", 
          RowBox[{"newHist", ",", " ", "i"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"currVal", " ", ">", " ", "priorVal"}], " ", ")"}], "&&", 
           " ", 
           RowBox[{"(", " ", 
            RowBox[{"currVal", " ", ">", " ", "nextVal"}], ")"}]}], ",", " ", 
          
          RowBox[{"n", "++"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "newHist", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "n"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",\

 CellChangeTimes->{3.4070870374529257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getTypeDurationGraph",
  FontWeight->"Bold"],
 "\nDisplays a graph of how long a skeletal point stays as a skeletal type"
}], "Subsubtitle",
 CellChangeTimes->{3.4070870374529257`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getTypeDurationGraph", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getTypeDurationGraph", "[", 
   RowBox[{"stats_", ",", " ", "types_"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"image", ",", " ", "newStats"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"image", " ", "=", " ", 
      RowBox[{"getBlankImage", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newStats", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"stats", ",", " ", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"types", ",", " ", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          "]"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"image", "\[LeftDoubleBracket]", " ", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            " ", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
           "\[RightDoubleBracket]"}], "++"}], ";"}], "&"}], ",", "newStats"}],
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ListDensityPlot", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{"#", "&"}], ",", " ", "image", ",", " ", "1"}], "]"}], ",", 
       " ", 
       RowBox[{"Mesh", "\[Rule]", "True"}], ",", " ", 
       RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}], ",", 
       RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], " ", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.407087037468551*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getTypeLengthSummationGraph",
  FontWeight->"Bold"],
 "\nDisplays a graph of the cumulative length / area of a curve or surface"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037468551*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getTypeLengthSummationGraph", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getTypeLengthSummationGraph", "[", 
   RowBox[{"stats_", ",", " ", "types_"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"image", ",", " ", "newStats"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"image", " ", "=", " ", 
      RowBox[{"getBlankImage", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newStats", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"stats", ",", " ", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"types", ",", " ", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          "]"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"image", "\[LeftDoubleBracket]", " ", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            " ", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
           "\[RightDoubleBracket]"}], " ", "+=", "  ", 
          RowBox[{
          "#", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
         ";"}], "&"}], ",", "newStats"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ListDensityPlot", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{"#", "&"}], ",", " ", "image", ",", " ", "1"}], "]"}], ",", 
       " ", 
       RowBox[{"Mesh", "\[Rule]", "False"}], ",", " ", 
       RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}], ",", " ", 
       RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.407087037468551*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getThicknessHistogram",
  FontWeight->"Bold"],
 "\nGets the list of thicknesses and their frequencies"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037468551*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getThicknessHistogram", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"getThicknessHistogram", "[", "list_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tList", ",", "plot"}], "}"}], ",", 
    RowBox[{
     RowBox[{"tList", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", 
          RowBox[{
           RowBox[{"sliceSize", "[", 
            RowBox[{"1", ",", "2"}], "]"}], " ", 
           RowBox[{"sliceSize", "[", 
            RowBox[{"2", ",", "2"}], "]"}]}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"tList", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
             "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "+", "1"}], "\[RightDoubleBracket]"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{
              RowBox[{
               RowBox[{"tList", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                  "+", "1"}], "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "+", 
              "1"}]}], "}"}]}], ";"}], ")"}], "&"}], ",", "list"}], "]"}], 
     ";", 
     RowBox[{"tList", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"tList", ",", 
        RowBox[{
         RowBox[{
          RowBox[{
          "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[NotEqual]", 
          RowBox[{"-", "1"}]}], "&"}]}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "tList", "]"}], ">", "0"}], ",", 
       RowBox[{"plot", "=", 
        RowBox[{"ListPlot", "[", 
         RowBox[{"tList", ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}]}], 
      "]"}], ";", 
     RowBox[{"{", 
      RowBox[{"tList", ",", "plot"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{3.407087037468551*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getPeakCountForImage",
  FontWeight->"Bold"],
 "\nGets a plot of the number of histogram peaks there are at each point"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037468551*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getPeakCountForImage", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getPeakCountForImage", "[", 
   RowBox[{
   "stats_", ",", " ", "types_", ",", " ", "skel_", ",", " ", "noiseValue_"}],
    "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"newStats", ",", " ", "img"}], "}"}], ",", "\[IndentingNewLine]",
     
    RowBox[{
     RowBox[{"newStats", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"stats", ",", " ", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"types", ",", " ", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          "]"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"img", " ", "=", " ", 
      RowBox[{"getBlankImage", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"skel", "\[LeftDoubleBracket]", 
               RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], " ", ">", 
              " ", "0"}], ",", " ", "\[IndentingNewLine]", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", "thicknessData", "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"thicknessData", " ", "=", " ", 
                 RowBox[{"getThicknessListAndGraph", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], ",", " ", "stats", ",", 
                   " ", "types"}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"img", "\[LeftDoubleBracket]", 
                  RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], " ", 
                 "=", " ", 
                 RowBox[{"getPeakCount", "[", 
                  RowBox[{
                   RowBox[{"thicknessData", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
                   ",", "noiseValue"}], "]"}]}], ";"}]}], 
              "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
           ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"2", ",", "1"}], "]"}], ",", " ", 
            RowBox[{"sliceSize", "[", 
             RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", 
         RowBox[{"sliceSize", "[", 
          RowBox[{"1", ",", "1"}], "]"}], ",", " ", 
         RowBox[{"sliceSize", "[", 
          RowBox[{"1", ",", "2"}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "img"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{3.407087037468551*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getThicknessListAndGraph",
  FontWeight->"Bold"],
 "\nGets the list of thickness information and the graph of how the thickness \
changes along the grayscale value"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037468551*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getThicknessListAndGraph", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getThicknessListAndGraph", "[", 
    RowBox[{"p_", ",", "stats_", ",", "types_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d", ",", "newStats", ",", "plot"}], "}"}], ",", 
     RowBox[{
      RowBox[{"newStats", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"stats", ",", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"types", ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           "]"}], "&"}]}], "]"}]}], ";", 
      RowBox[{"d", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"newStats", ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "\[Equal]", 
            RowBox[{
            "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "&&",
            
           RowBox[{
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
            "\[Equal]", 
            RowBox[{
            "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
          "&"}]}], "]"}]}], ";", 
      RowBox[{"d", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"d", ",", 
         RowBox[{
          RowBox[{
           RowBox[{
           "#1", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], "<", 
           
           RowBox[{
           "#2", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
          "&"}]}], "]"}]}], ";", 
      RowBox[{"d", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#1", "\[LeftDoubleBracket]", 
           RowBox[{"{", 
            RowBox[{"4", ",", "5"}], "}"}], "\[RightDoubleBracket]"}], "&"}], 
         ")"}], "/@", "d"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "d", "]"}], ">", "0"}], ",", 
        RowBox[{"plot", "=", 
         RowBox[{"ListPlot", "[", 
          RowBox[{"d", ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Grayscale\>\"", ",", "\"\<Thickness\>\""}], 
             "}"}]}]}], "]"}]}]}], "]"}], ";", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"d", ",", 
          RowBox[{"{", "plot", "}"}]}], "}"}], ",", 
        RowBox[{"getThicknessHistogram", "[", "d", "]"}]}], "}"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.407087037468551*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["displayThicknessStatisticsPerPoint",
  FontWeight->"Bold"],
 "\nDisplays the thickness statistics graph per point"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037468551*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "displayThicknessStatisticsPerPoint", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayThicknessStatisticsPerPoint", "[", 
    RowBox[{"p_", ",", "stats_", ",", "types_", ",", "skel_", ",", "img_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "d", ",", "arr", ",", "s0", ",", "s1", ",", "s2", ",", "s3", ",", "s4", 
       ",", "thicknessInfo"}], "}"}], ",", 
     RowBox[{
      RowBox[{"newStats", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"stats", ",", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"types", ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           "]"}], "&"}]}], "]"}]}], ";", 
      RowBox[{"d", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#1", "\[LeftDoubleBracket]", 
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}], "\[RightDoubleBracket]"}], "&"}], 
         ")"}], "/@", "newStats"}]}], ";", 
      RowBox[{"arr", "=", 
       RowBox[{"getBlankImage", "[", "]"}]}], ";", 
      RowBox[{"Scan", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"arr", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
             
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           "\[RightDoubleBracket]"}], "++"}], "&"}], ",", "d"}], "]"}], ";", 
      RowBox[{"thicknessInfo", "=", 
       RowBox[{"getThicknessListAndGraph", "[", 
        RowBox[{"p", ",", "stats", ",", "types"}], "]"}]}], ";", 
      RowBox[{"s0", "=", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"thicknessInfo", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{
          "\"\<Thickness Histogram (Peak Count {0, 1, 2, 3}= {\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"getPeakCount", "[", 
             RowBox[{
              RowBox[{"thicknessInfo", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", "0"}],
              "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"getPeakCount", "[", 
             RowBox[{
              RowBox[{"thicknessInfo", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", "1"}],
              "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"getPeakCount", "[", 
             RowBox[{
              RowBox[{"thicknessInfo", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", "2"}],
              "]"}], "]"}], "<>", "\"\<,\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"getPeakCount", "[", 
             RowBox[{
              RowBox[{"thicknessInfo", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", "3"}],
              "]"}], "]"}], "<>", "\"\<}\>\""}]}]}], "]"}]}], ";", 
      RowBox[{"s1", "=", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"thicknessInfo", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<Thickness Variation\>\""}]}], 
        "]"}]}], ";", 
      RowBox[{"s2", "=", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ListDensityPlot", "[", 
            RowBox[{"img", ",", 
             RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
             RowBox[{"Mesh", "\[Rule]", "False"}]}], "]"}], ",", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
              RowBox[{"PointSize", "[", "0.02`", "]"}], ",", 
              RowBox[{"Point", "[", 
               RowBox[{
                RowBox[{"Reverse", "[", "p", "]"}], "+", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "0.5`"}], ",", 
                  RowBox[{"-", "0.5`"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
          "}"}], ",", 
         RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<Source Image\>\""}]}], "]"}]}], 
      ";", 
      RowBox[{"s3", "=", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ListDensityPlot", "[", 
            RowBox[{"arr", ",", 
             RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], ",",
            
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
              RowBox[{"PointSize", "[", "0.02`", "]"}], ",", 
              RowBox[{"Point", "[", 
               RowBox[{
                RowBox[{"Reverse", "[", "p", "]"}], "+", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "0.5`"}], ",", 
                  RowBox[{"-", "0.5`"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
          "}"}], ",", 
         RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<Curve Duration\>\""}]}], 
        "]"}]}], ";", 
      RowBox[{"s4", "=", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ListDensityPlot", "[", 
            RowBox[{"skel", ",", 
             RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], ",",
            
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
              RowBox[{"PointSize", "[", "0.02`", "]"}], ",", 
              RowBox[{"Point", "[", 
               RowBox[{
                RowBox[{"Reverse", "[", "p", "]"}], "+", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "0.5`"}], ",", 
                  RowBox[{"-", "0.5`"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
          "}"}], ",", 
         RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<Grayscale Skeleton\>\""}]}], 
        "]"}]}], ";", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"GraphicsRow", "[", 
         RowBox[{"{", 
          RowBox[{"s0", ",", "s1"}], "}"}], "]"}], ",", 
        RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"\"\<Point :{\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{
           "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}],
           "<>", "\"\<,\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{
           "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "]"}],
           "<>", "\"\<}\>\""}]}]}], "]"}], ";", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"GraphicsRow", "[", 
         RowBox[{"{", 
          RowBox[{"s2", ",", "s3", ",", "s4"}], "}"}], "]"}], ",", 
        RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}]}], 
       "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.407087037468551*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["displayThicknessStatisticsPerPointSet",
  FontWeight->"Bold"],
 "\nDisplays the thickness statistics graph for a set of points"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037468551*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "displayThicknessStatisticsPerPointSet", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"displayThicknessStatisticsPerPointSet", "[", 
    RowBox[{
    "points_", ",", " ", "stats_", ",", " ", "types_", ",", "skel_", ",", " ",
      "img_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Scan", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"displayThicknessStatisticsPerPoint", "[", 
        RowBox[{
        "#", ",", " ", "stats", ",", " ", "types", ",", " ", "skel", ",", " ",
          "img"}], "]"}], ";"}], "&"}], ",", "points"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.407087037468551*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["displayThicknessStatistics",
  FontWeight->"Bold"],
 "\nDisplays the thickness statistics for all the points"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037468551*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "displayThicknessStatistics", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"displayThicknessStatistics", "[", 
   RowBox[{
   "stats_", ",", " ", "types_", ",", " ", "pointsOfInterest_", ",", " ", 
    "skel_", ",", " ", "img_"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "image", ",", " ", "points", ",", " ", "lists", ",", " ", "n", ",", " ", 
      "trueList", ",", " ", "newStats"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"image", " ", "=", " ", 
      RowBox[{"getBlankImage", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newStats", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"stats", ",", " ", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"types", ",", " ", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          "]"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"points", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lists", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"points", " ", "=", " ", 
          RowBox[{"Union", "[", 
           RowBox[{"points", ",", " ", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               ",", " ", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
              "}"}], "}"}]}], "]"}]}], ";"}], "&"}], ",", " ", "newStats"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Scan", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"p", ",", " ", "pointData", ",", " ", "list"}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"p", " ", "=", " ", "#"}], ";", "\[IndentingNewLine]", 
            RowBox[{"list", " ", "=", " ", 
             RowBox[{
              RowBox[{"getThicknessListAndGraph", "[", 
               RowBox[{"p", ",", " ", "stats", ",", " ", "types"}], "]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"lists", " ", "=", " ", 
             RowBox[{"Append", "[", 
              RowBox[{"lists", ",", " ", "list"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"displayThicknessStatisticsPerPoint", "[", 
             RowBox[{
             "p", ",", " ", "stats", ",", " ", "types", ",", " ", "skel", ",",
               "img"}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", " ", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"pointsOfInterest", ",", " ", "p"}], "]"}], " ", ",", 
              " ", 
              RowBox[{"displayThicknessStatisticsPerPoint", "[", 
               RowBox[{
               "p", ",", " ", "stats", ",", " ", "types", ",", " ", "skel", 
                ",", "img"}], "]"}]}], "]"}]}]}], "]"}], ";"}], "&"}], ",", 
       " ", "\[IndentingNewLine]", "points"}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"lists", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"lists", ",", " ", 
        RowBox[{"{", 
         RowBox[{"PlotJoined", "\[Rule]", "True"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lists", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"lists", ",", " ", 
        RowBox[{"{", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"350", ",", " ", "350"}], "}"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Apply", "[", 
      RowBox[{"MultipleListPlot", ",", "lists"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.407087037468551*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["displayStatistics",
  FontWeight->"Bold"],
 "\nDisplays an analysis of the statistics"
}], "Subsubtitle",
 CellChangeTimes->{3.407087037468551*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "displayStatistics", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"displayStatistics", "[", "stats_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s1", ",", "s2", ",", "s3", ",", "s4"}], "}"}], ",", 
    RowBox[{
     RowBox[{"s1", "=", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"getTypeDurationGraph", "[", 
         RowBox[{"stats", ",", 
          RowBox[{"{", "1", "}"}]}], "]"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<Point Duration\>\""}]}], "]"}]}],
      ";", 
     RowBox[{"s2", "=", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"getTypeDurationGraph", "[", 
         RowBox[{"stats", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<Curve Duration\>\""}]}], "]"}]}],
      ";", 
     RowBox[{"s3", "=", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"getTypeLengthSummationGraph", "[", 
         RowBox[{"stats", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<Curve Length Summation\>\""}]}], 
       "]"}]}], ";", 
     RowBox[{"s4", "=", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"getTypeDurationGraph", "[", 
         RowBox[{"stats", ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "5"}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<Surface Duration\>\""}]}], 
       "]"}]}], ";", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"GraphicsGrid", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"s1", ",", "s2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"s3", ",", "s4"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}]}], 
      "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{3.407087037468551*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Gets the statistics of all the images and stores them in a file\
\>", "Subsubtitle",
 CellChangeTimes->{3.407087037468551*^9}],

Cell["\<\
Do[Print[i];
  Clear[slice];
  Clear[sliceSize];
  inputs=getInput[i];
  slice=inputs\[LeftDoubleBracket]1\[RightDoubleBracket];
  sliceSize=inputs\[LeftDoubleBracket]2\[RightDoubleBracket];
  Clear[inputs];
  finalResult=makeGraySkeleton[slice,1,255,1,3];
  finalImage=finalResult\[LeftDoubleBracket]1\[RightDoubleBracket];
  finalStats=finalResult\[LeftDoubleBracket]2\[RightDoubleBracket];
  Put[finalImage,rootPath<>\"/results/FinalImage\"<>ToString[i]<>\".nb\"];
  Put[finalStats,rootPath<>\"/results/FinalStats\"<>ToString[i]<>\".nb\"];
  ,{i,1,9}
  ]\
\>", "SmallText",
 CellChangeTimes->{3.407087037468551*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loads the statistics from a file", "Subsubtitle",
 CellChangeTimes->{3.407087037468551*^9}],

Cell["\<\
finalImage = Get[ rootPath<> \"/results/FinalImage3.nb\"];
ListDensityPlot[Map[#/255.0&, finalImage, 1], Mesh\[Rule]False, \
ColorFunctionScaling\[Rule]False, ImageSize\[Rule]{350, 350}];
finalStats = Get[ rootPath<> \"/results/FinalStats3.nb\"];
displayStatistics[finalStats];\
\>", "SmallText",
 CellChangeTimes->{3.407087037468551*^9}],

Cell["\<\
finalResult=makeGraySkeleton[slice,1,255,50,3];
finalImage=finalResult\[LeftDoubleBracket]1\[RightDoubleBracket];
finalStats=finalResult\[LeftDoubleBracket]2\[RightDoubleBracket];
ListDensityPlot[Map[#/255.0&,finalImage,1],Mesh\[Rule]False,\
ColorFunctionScaling\[Rule]False,ImageSize\[Rule]{350,350}];\
\>", "SmallText",
 CellChangeTimes->{3.407087037468551*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Misc Tests", "Subsubtitle",
 CellChangeTimes->{3.407087037468551*^9}],

Cell["\<\
displayThicknessStatisticsPerPointSet[{{28,40},{29,40},{30,40},{31,40}},\
finalStats,{2,3,4},finalImage,slice];\
\>", "SmallText",
 CellChangeTimes->{3.407087037468551*^9}],

Cell["\<\
displayThicknessStatistics[finalStats, {2,3,4}, {},finalImage,slice];\
\>", "SmallText",
 CellChangeTimes->{3.4070870374841757`*^9}],

Cell["\<\
displayThicknessStatisticsPerPointSet[{{36,18},{35,18},{30,54},{48,35},{42,20}\
,{38,8}},finalStats,{2,3,4},finalImage,slice];\
\>", "SmallText",
 CellChangeTimes->{3.4070870374841757`*^9}],

Cell["\<\
displayThicknessStatisticsPerPointSet[{{30,52},{30,51},{31,51},{31,50},{31,49}\
},finalStats,{2,3,4},finalImage,slice];\
\>", "SmallText",
 CellChangeTimes->{3.4070870374841757`*^9}],

Cell["\<\
displayThicknessStatisticsPerPointSet[{{45,40}, {34,49},{31,32}}, finalStats, \
{2,3,4}, finalImage,slice];\
\>", "SmallText",
 CellChangeTimes->{3.4070870374841757`*^9}],

Cell["\<\
displayThicknessStatisticsPerPointSet[{{32,34}, {33,34}, {34,34},{35,34}, \
{36,34}, {37,34}},finalStats,{2,3,4},finalImage,slice];\
\>", "SmallText",
 CellChangeTimes->{3.4070870374841757`*^9}],

Cell["\<\
displayThicknessStatisticsPerPointSet[{{10,28},{32,26},{32,27}, {32,28}, \
{32,29},{32,30} },finalStats,{2,3,4},finalImage,slice];\
\>", "SmallText",
 CellChangeTimes->{3.4070870374841757`*^9}],

Cell["\<\
displayThicknessStatistics[finalStats, {2,3,4}, {}, finalImage, slice];\
\>", "SmallText",
 CellChangeTimes->{3.4070870374841757`*^9}],

Cell["\<\
displayThicknessStatisticsPerPoint[{26,37},finalStats,{2,3,4},finalImage,\
slice];\
\>", "SmallText",
 CellChangeTimes->{3.4070870374841757`*^9}],

Cell["DEBUG : Input 1, (28,40) , (29,40), (30,40), (31,40)", "SmallText",
 CellChangeTimes->{3.4070870374841757`*^9}],

Cell["\<\
peakCount=getPeakCountForImage[finalStats,{2,3,4},finalImage,1];\
\>", "SmallText",
 CellChangeTimes->{3.4070870374841757`*^9}],

Cell["peakCount = Get[rootPath<>\"/results/PeakCount1-0.nb\"];", "SmallText",
 CellChangeTimes->{3.4070870374841757`*^9}],

Cell["\<\
mpc=Max[peakCount];ListDensityPlot[Map[Map[If[#>0,(mpc-#),0]&,#]&,peakCount], \
Mesh\[Rule]False];\
\>", "SmallText",
 CellChangeTimes->{3.4070870374841757`*^9}],

Cell["\<\
filteredImage=Table[0,{x,sliceSize[1,1]-1,sliceSize[1,2]+1},{y,sliceSize[2,1]-\
1,sliceSize[2,2]+1}];
dMap=Flatten[Table[If[(finalImage\[LeftDoubleBracket]x,y\[RightDoubleBracket]>\
0)&&(peakCount\[LeftDoubleBracket]x,y\[RightDoubleBracket]\[Equal]1),{x,y},{}]\
,{x,sliceSize[1,1],sliceSize[1,2]},{y,sliceSize[2,1],sliceSize[2,2]}],1];
dMap=Select[dMap,Length[#]>0&];
Scan[filteredImage\[LeftDoubleBracket]#\[LeftDoubleBracket]1\
\[RightDoubleBracket],#\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket]=finalImage\[LeftDoubleBracket]#\[LeftDoubleBracket]1\
\[RightDoubleBracket],#\[LeftDoubleBracket]2\[RightDoubleBracket]\
\[RightDoubleBracket];&,dMap];
Show[GraphicsArray[{ListDensityPlot[filteredImage/255.0,DisplayFunction\[Rule]\
Identity,Mesh\[Rule]False],ListDensityPlot[slice,DisplayFunction\[Rule]\
Identity,Mesh\[Rule]False],ListDensityPlot[finalImage,DisplayFunction\[Rule]\
Identity,Mesh\[Rule]False]}],DisplayFunction\[Rule]$DisplayFunction];
\
\>", "SmallText",
 CellChangeTimes->{3.4070870374841757`*^9}],

Cell["Put[peakCount,rootPath<>\"/results/PeakCount1-1.nb\"];", "SmallText",
 CellChangeTimes->{3.4070870374841757`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListContourPlot", "::", "\<\"arrayerr\"\>"}], ":", 
  " ", "\<\"\\!\\(slice\\) must be a valid array.\"\>"}]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.39838762915*^9, 3.4070870374841757`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListDensityPlot", "::", "\<\"arrayerr\"\>"}], ":", 
  " ", "\<\"\\!\\(slice\\) must be a valid array.\"\>"}]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.3983876293310003`*^9, 3.4070870374841757`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"255", "*", 
   RowBox[{"8098", "/", "50369"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4066387032586594`*^9, 3.4066387307117844`*^9}, {
   3.4066394558211594`*^9, 3.4066394777430344`*^9}, {3.4066397353992844`*^9, 
   3.4066397500086594`*^9}, 3.4070870374841757`*^9}],

Cell[BoxData["40.9972403660982`"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.4066387311805344`*^9, 3.4066394784617844`*^9, 3.4066397504930344`*^9, 
   3.406900399953061*^9, 3.406921895812436*^9, 3.406922236249936*^9, 
   3.406922510406186*^9, 3.4070836487966757`*^9, {3.4070870374841757`*^9, 
   3.407087043937301*^9}, 3.4071600214472313`*^9}],

Cell[BoxData["40.9972403660982`"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.4066387311805344`*^9, 3.4066394784617844`*^9, 3.4066397504930344`*^9, 
   3.406900399953061*^9, 3.406921895812436*^9, 3.406922236249936*^9, 
   3.406922510406186*^9, 3.4070836487966757`*^9, {3.4070870374841757`*^9, 
   3.407087043937301*^9}}],

Cell[BoxData["40.9972403660982`"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.4066387311805344`*^9, 3.4066394784617844`*^9, 
  3.4066397504930344`*^9, 3.406900399953061*^9, 3.406921895812436*^9, 
  3.406922236249936*^9, 3.406922510406186*^9, 3.4070836487966757`*^9, 
  3.4070870374841757`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["GraphCut", "Subtitle",
 CellChangeTimes->{{3.407088596218551*^9, 3.4070885973279257`*^9}}],

Cell[TextData[{
 StyleBox["getColor:",
  FontWeight->"Bold"],
 "\ngets a color based on the scoring function"
}], "Subsubtitle",
 CellChangeTimes->{{3.4070837214216757`*^9, 3.4070837806716757`*^9}, {
   3.4070838173591757`*^9, 3.4070838750154257`*^9}, {3.4070839620154257`*^9, 
   3.4070839833279257`*^9}, {3.4070841972029257`*^9, 3.407084245468551*^9}, 
   3.4070870374529257`*^9, {3.407087103343551*^9, 3.4070871132966757`*^9}, {
   3.407088987343551*^9, 3.4070890018904257`*^9}, {3.4071680509003563`*^9, 
   3.4071680602753563`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getColor", "[", "s_", "]"}], " ", ":=", " ", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["s", "1.5"]}], ")"}], ",", " ", "0", ",", " ", 
     SuperscriptBox["s", "1.5"], ",", "0.5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getColor", "[", "s_", "]"}], " ", ":=", " ", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["s", "3"]}], ")"}], ",", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["s", "3"]}], ")"}], ",", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["s", "3"]}], ")"}], ",", "0.5"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.407093164622351*^9, 3.407093190903601*^9}, {
  3.4070932969817257`*^9, 3.407093307466101*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["getGraph:",
  FontWeight->"Bold"],
 "\nGets a graph based on how well a points neighbors align with the \
structure tensors."
}], "Subsubtitle",
 CellChangeTimes->{{3.4070837214216757`*^9, 3.4070837806716757`*^9}, {
   3.4070838173591757`*^9, 3.4070838750154257`*^9}, {3.4070839620154257`*^9, 
   3.4070839833279257`*^9}, {3.4070841972029257`*^9, 3.407084245468551*^9}, 
   3.4070870374529257`*^9, {3.407087103343551*^9, 3.4070871132966757`*^9}, {
   3.407088987343551*^9, 3.4070890018904257`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "getGraph", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getGraph", "[", 
   RowBox[{"slice_", ",", " ", "radius_"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eigs", ",", " ", "distances", ",", " ", "node", ",", " ", "graph"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"eigs", " ", "=", " ", 
      RowBox[{"getEigen", "[", 
       RowBox[{"getLocalStructureTensor2", "[", 
        RowBox[{
         RowBox[{"getGradientField2", "[", "slice", "]"}], ",", " ", 
         "radius"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"graph", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "1", ",", " ", 
          RowBox[{
           RowBox[{"Dimensions", "[", "slice", "]"}], "\[LeftDoubleBracket]", 
           "1", "\[RightDoubleBracket]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"y", ",", " ", "1", ",", " ", 
          RowBox[{
           RowBox[{"Dimensions", "[", "slice", "]"}], "\[LeftDoubleBracket]", 
           "2", "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"distances", " ", "=", " ", 
         RowBox[{"getDistancesNormal", "[", 
          RowBox[{
           RowBox[{"eigs", "\[LeftDoubleBracket]", 
            RowBox[{"x", ",", "y", ",", "2", ",", "1"}], 
            "\[RightDoubleBracket]"}], ",", " ", 
           RowBox[{"eigs", "\[LeftDoubleBracket]", 
            RowBox[{"x", ",", "y", ",", "2", ",", "2"}], 
            "\[RightDoubleBracket]"}], ",", " ", 
           RowBox[{"eigs", "\[LeftDoubleBracket]", 
            RowBox[{"x", ",", "y", ",", "1", ",", "1"}], 
            "\[RightDoubleBracket]"}], ",", " ", 
           RowBox[{"eigs", "\[LeftDoubleBracket]", 
            RowBox[{"x", ",", "y", ",", "1", ",", "2"}], 
            "\[RightDoubleBracket]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"node", " ", "=", " ", 
         RowBox[{"Map", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "2"], " ", "\[Equal]", " ", 
                  "0"}], ")"}], ",", "\[IndentingNewLine]", "1", ",", 
                "\[IndentingNewLine]", 
                FractionBox[
                 RowBox[{"eigs", "\[LeftDoubleBracket]", 
                  RowBox[{"x", ",", " ", "y", ",", " ", "1", ",", " ", "2"}], 
                  "\[RightDoubleBracket]"}], 
                 SuperscriptBox[
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   "2"]]}], "]"}], "\[IndentingNewLine]", ",", " ", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
             "}"}], " ", "&"}], ",", "distances"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"graph", "\[LeftDoubleBracket]", 
          RowBox[{"x", ",", " ", "y"}], "\[RightDoubleBracket]"}], " ", "=", 
         " ", "node"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", 
         RowBox[{"sliceSize", "[", 
          RowBox[{"1", ",", "1"}], "]"}], ",", " ", 
         RowBox[{"sliceSize", "[", 
          RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", 
         RowBox[{"sliceSize", "[", 
          RowBox[{"2", ",", "1"}], "]"}], ",", " ", 
         RowBox[{"sliceSize", "[", 
          RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "graph"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.4070886056404257`*^9, 3.407088669718551*^9}, {
   3.407088728656051*^9, 3.4070887343279257`*^9}, {3.407088953281051*^9, 
   3.407088976218551*^9}, 3.4070892346091757`*^9, {3.407089378437301*^9, 
   3.407089476093551*^9}, {3.4070895333591757`*^9, 3.407089572124801*^9}, {
   3.4070897395466757`*^9, 3.4070899625466757`*^9}, {3.407090262468551*^9, 
   3.4070902837341757`*^9}, {3.407090325874801*^9, 3.4070903270154257`*^9}, 
   3.407090379937301*^9, {3.4070904443591757`*^9, 3.407090453281051*^9}, {
   3.4070905030779257`*^9, 3.4070905048591757`*^9}, {3.407090598531051*^9, 
   3.4070906141716757`*^9}, {3.407090673187301*^9, 3.407090684249801*^9}, {
   3.4070907296404257`*^9, 3.4070907322654257`*^9}, {3.407093458966101*^9, 
   3.4070934734192257`*^9}, {3.4071037350754757`*^9, 3.407103841091101*^9}, {
   3.4071693396816063`*^9, 3.4071693409159813`*^9}, {3.4071708542128563`*^9, 
   3.4071708556034813`*^9}, {3.4071710349784813`*^9, 3.4071710359784813`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["showGraph:",
  FontWeight->"Bold"],
 "\nShows the graph alongside the original image."
}], "Subsubtitle",
 CellChangeTimes->{{3.4070837214216757`*^9, 3.4070837806716757`*^9}, {
   3.4070838173591757`*^9, 3.4070838750154257`*^9}, {3.4070839620154257`*^9, 
   3.4070839833279257`*^9}, {3.4070841972029257`*^9, 3.407084245468551*^9}, 
   3.4070870374529257`*^9, {3.407087103343551*^9, 3.4070871132966757`*^9}, {
   3.407088987343551*^9, 3.4070890018904257`*^9}, {3.4071680195722313`*^9, 
   3.4071680316816063`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "showGraph", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showGraph", "[", 
   RowBox[{"graph_", ",", " ", "slice_", ",", " ", "sliceSize_"}], "]"}], 
  "  ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pointPics", ",", " ", "linePics"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"linePics", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"getColor", "[", 
            RowBox[{"graph", "\[LeftDoubleBracket]", 
             RowBox[{"x", ",", "y", ",", " ", "i", ",", " ", "1"}], 
             "\[RightDoubleBracket]"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Reverse", "[", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", " ", 
              RowBox[{"Reverse", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}], " ", "+", " ", 
                RowBox[{"0.5", "*", " ", 
                 RowBox[{"points", "\[LeftDoubleBracket]", 
                  RowBox[{"graph", "\[LeftDoubleBracket]", 
                   RowBox[{"x", ",", "y", ",", " ", "i", ",", " ", "2"}], 
                   "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}]}], 
               "]"}]}], "}"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", "8", ",", " ", "1"}], "}"}], 
         ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", 
           RowBox[{"sliceSize", "[", 
            RowBox[{"1", ",", "1"}], "]"}], ",", " ", 
           RowBox[{"sliceSize", "[", 
            RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", 
           RowBox[{"sliceSize", "[", 
            RowBox[{"2", ",", "1"}], "]"}], ",", " ", 
           RowBox[{"sliceSize", "[", 
            RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Show", "[", 
       RowBox[{"GraphicsGrid", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ListDensityPlot", "[", 
            RowBox[{"slice", ",", " ", 
             RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], 
            "]"}], ",", " ", 
           RowBox[{"Graphics", "[", "linePics", "]"}]}], "}"}], "}"}], "]"}], 
       "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.4070907882206078`*^9, 3.407090966810162*^9}, {
   3.407091000796712*^9, 3.407091002312434*^9}, {3.4070910644566617`*^9, 
   3.4070910952697535`*^9}, {3.407091720323967*^9, 3.4070918121370544`*^9}, {
   3.4070920412942257`*^9, 3.4070920911067257`*^9}, {3.407092140309851*^9, 
   3.4070922375129757`*^9}, {3.4070923512317257`*^9, 3.407092354653601*^9}, 
   3.4070923962317257`*^9, {3.407092577684851*^9, 3.4070925795129757`*^9}, {
   3.407092672216101*^9, 3.407092707028601*^9}, {3.4070927487942257`*^9, 
   3.407092755716101*^9}, {3.407092811528601*^9, 3.407092860653601*^9}, {
   3.4070928958254757`*^9, 3.4070929020129757`*^9}, 3.4070929329192257`*^9, {
   3.407093136997351*^9, 3.407093157622351*^9}, 3.4070932057317257`*^9, 
   3.4070932526067257`*^9, {3.4071035292004757`*^9, 3.407103543466101*^9}, {
   3.4071601929941063`*^9, 3.4071601961659813`*^9}, {3.4071670721503563`*^9, 
   3.4071671159316063`*^9}, {3.4071672129628563`*^9, 
   3.4071672622753563`*^9}, {3.4071674030409813`*^9, 
   3.4071674172753563`*^9}, {3.4071680055878563`*^9, 
   3.4071680087284813`*^9}, {3.4071697510722313`*^9, 3.4071697520253563`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"slice", ",", " ", "sliceSize"}], "}"}], " ", "=", " ", 
   RowBox[{"getInput", "[", "12", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListDensityPlot", "[", 
    RowBox[{"slice", ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}], ",", 
   
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", 
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", " ", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"45", ",", " ", "20"}], "}"}], "]"}]}], "}"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.4071681096503563`*^9, 3.4071681226503563`*^9}, {
  3.4071686761347313`*^9, 3.4071687291816063`*^9}, {3.4071687653222313`*^9, 
  3.4071688880566063`*^9}, {3.4071699365722313`*^9, 3.4071699427128563`*^9}, {
  3.4071718236972313`*^9, 3.4071718248222313`*^9}}],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJx13TmOK+m6HdCErDRp0KBBgyISCSKRSJDZ94x3blO3brXvDUGAbE0hhhZD
0hAEQdwb4kKFHGLlPoSecbHrY8Tf/Pf/8b/+63/+t4uLi2F5cfF/P//f//vf
x/PPi+Hcl3iBl3iF13iDt/gKX+MdvsG3+A7v8QHf4wf8iJ/wM37Br/gNv+MP
/Im/8Dc+4uHcI774D3J88YMcX/yNHF/8nRxf/IMcX/yTHF/8RI4v/kWOL34m
xxf/JscXv5Dji1/J8cVv5Pjid3J88Qc5vvjz3AMe8YQv/pPv4xFP+OK/sL3j
5yVe4CVe4TXe4C2+wtd4h2/wLb7De3zA9/gBP+In/Ixf8Ct+w+/4A3/iL/yN
j3g494jbP8lx+yc5bv8kx+2f5Lj9kxy3f5Lj9k9y3P5Jjts/yXH7Jzlu/yTH
7Z/kuP2THLd/kuP2T3Lc/jl5wCOecPsn38cjnnD7Z27OsXf8XOAlXuE13uAt
vsLXeIdv8C2+w3t8wPf4AT/iJ/yMX/ArfsPv+AN/4i/8jY94OPeI2z/Jcfsn
OW7/JMftn+S4/ZMct3+S4/ZPctz+SY7bP8lx+yc5bv8kx+2f5Lj9kxy3f5Lj
9k9y3P45ecAjnnD7J9/HI55w+2fud5Vzjr3j5xKv8Bpv8BZf4Wu8wzf4Ft/h
PT7ge/yAH/ETfsYv+BW/4Xf8gT/xF/7GRzyce8Ttn+S4/ZMct3+S4/ZPctz+
SY7bP8lx+yc5bv8kx+2f5Lj9kxy3f5Lj9k9y3P5Jjts/yXH7Jzlu/5w84BFP
uP2T7+MRT7j9M/ccx99Vzjn2jp8rvMYbvMVX+Brv8A2+xXd4jw/4Hj/gR/yE
n/ELfsVv+B1/4E/8hb/xEQ/nHnH7Jzlu/yTH7Z/kuP2THLd/kuP2T3Lc/kmO
2z/JcfsnOW7/JMftn+S4/ZMct3+S4/ZPctz+SY7bPycPeMQTbv/k+3jEE27/
zD039jmOv6ucc+wdP9d4g7f4Cl/jHb7Bt/gO7/EB3+MH/Iif8DN+wa/4Db/j
D/yJv/A3PuLh3CNu/yTH7Z/kuP2THLd/kuP2T3Lc/kmO2z/JcfsnOW7/JMft
n+S4/ZMct3+S4/ZPctz+SY7bP8lx++fkAY94wu2ffB+PeMLtn7n3VD439jmO
v6ucc+wdPzd4i6/wNd7hG3yL7/AeH/A9fsCP+Ak/4xf8it/wO/7An/gLf+Mj
Hs494vZPctz+SY7bP8lx+yc5bv8kx+2f5Lj9kxy3f5Lj9k9y3P5Jjts/yXH7
Jzlu/yTH7Z/kuP2THLd/Th7wiCfc/sn38Ygn3P6Zey/ueyqfG/scx99Vzjn2
jp9bfIWv8Q7f4Ft8h/f4gO/xA37ET/gZv+BX/Ibf8Qf+xF/4Gx/xcO4Rt3+S
4/ZPctz+SY7bP8lx+yc5bv8kx+2f5Lj9kxy3f5Lj9k9y3P5Jjts/yXH7Jzlu
/yTH7Z/kuP1z8oBHPOH2T76PRzzh9k/sOpz0T+x7Kp8b+xzH31XOOfaOn1f4
Gu/wDb7Fd3iPD/geP+BH/ISf8Qt+xW/4HX/gT/yFv/ERD+cecfsnOW7/JMft
n+S4/ZMct3+S4/ZPctz+SY7bP8lx+yc5bv8kx+2f5Lj9kxy3f5Lj9k9y3P5J
jts/Jw94xBNu/+T7eMQTbv/ErvtL//ge3PdSPif2uY2/o5xr7Jmrmc9rvMM3
+Bbf4T0+4Hv8gB/xE37GL/gVv+F3/IE/8Rf+xkc8nHvE7Z/kuP2THLd/kuP2
T3Lc/kmO2z/JcfsnOW7/JMftn+S4/ZMct3+S4/ZPctz+SY7bP8lx+yc5bv+c
POART7j9k+/jEU+4/TO3zjj947ob34P7XsrnxD638XeUc409cz3zucM3+Bbf
4T0+4Hv8gB/xE37GL/gVv+F3/IE/8Rf+xkc8nHvE7Z/kuP2THLd/kuP2T3Lc
/kmO2z/JcfsnOW7/JMftn+S4/ZMct3+S4/ZPctz+SY7bP8lx+yc5bv+cPOAR
T7j9k+/jEU+4/TO3ryH94zo/1934Htz3Uj4n9rmNv6Oca+yZ3cznDb7Fd3iP
D/geP+BH/ISf8Qt+xW/4HX/gT/yFv/ERD+cecfsnOW7/JMftn+S4/ZMct3+S
4/ZPctz+SY7bP8lx+yc5bv8kx+2f5Lj9kxy3f5Lj9k9y3P5Jjts/Jw94xBNu
/+T7eMQTbv/E7qNK/7iu2HV+rrvxPbjvpXxO7HMbf0c519gzNzOft/gO7/EB
3+MH/Iif8DN+wa/4Db/jD/yJv/A3PuLh3CNu/yTH7Z/kuP2THLd/kuP2T3Lc
/kmO2z/JcfsnOW7/JMftn+S4/ZMct3+S4/ZPctz+SY7bP8lx++fkAY94wu2f
fB+PeMLtn7l9m+kf9zG4rth1fq678T2476V8TuxzG39HOdfYM7czn3d4jw/4
Hj/gR/yEn/ELfsVv+B1/4E/8hb/xEQ/nHnH7Jzlu/yTH7Z/kuP2THLd/kuP2
T3Lc/kmO2z/JcfsnOW7/JMftn+S4/ZMct3+S4/ZPctz+SY7bPycPeMQTbv/k
+3jEE27/zO0TT/+4b8p9DK4rdp2f6258D+57KZ8T+9zG31HONfbM3cznHh/w
PX7Aj/gJP+MX/Irf8Dv+wJ/4C3/jIx7OPeL2T3Lc/kmO2z/JcfsnOW7/JMft
n+S4/ZMct3+S4/ZPctz+SY7bP8lx+yc5bv8kx+2f5Lj9kxy3f04e8Ign3P7J
9/GIJ9z+mTuXIv0TX+IFdl+D64xd9+c6nC32PZXPjX2O4+8q5xx7x88DvscP
+BE/4Wf8gl/xG37HH/gTf+FvfMTDuUfc/kmO2z/JcfsnOW7/JMftn+S4/ZMc
t3+S4/ZPctz+SY7bP8lx+yc5bv8kx+2f5Lj9kxy3f5Lj9s/JAx7xhNs/+T4e
8YTbP7Hn4KR/3BfuPk33TbmPwXXFrvNz3Y3vwX0v5XNin9v4O8q5xp45zHze
4wf8iJ/wM37Br/gNv+MP/Im/8Dc+4uHcI27/JMftn+S4/ZMct3+S4/ZPctz+
SY7bP8lx+yc5bv8kx+2f5Lj9kxy3f5Lj9k9y3P5Jjts/yXH75+QBj3jC7Z98
H494wu2f2HO30j+eQ+G+cPdpum/KfQyuK3adn+tufA/ueymfE/vcxt9RzjX2
zP3M5wN+xE/4Gb/gV/yG3/EH/sRf+Bsf8XDuEbd/kuP2T3Lc/kmO2z/Jcfsn
OW7/JMftn+S4/ZMct3+S4/ZPctz+SY7bP8lx+yc5bv8kx+2f5Lj9c/KARzzh
9k++j0c84fbP3Dl/6R/PvfEcCveFu0/TfVPuY3Bdsev8XHfje3DfS/mc2Oc2
/o5yrrFnHmY+H/ETfsYv+BW/4Xf8gT/xF/7GRzyce8Ttn+S4/ZMct3+S4/ZP
ctz+SY7bP8lx+yc5bv8kx+2f5Lj9kxy3f5Lj9k9y3P5Jjts/yXH7Jzlu/5w8
4BFPuP2T7+MRT7j9M3euaPrHc7Y898ZzKNwX7j5N9025j8F1xa7zc92N78F9
L+VzYp/b+DvKucaeeZz5fMLP+AW/4jf8jj/wJ/7C3/iIh3OPuP2THLd/kuP2
T3Lc/kmO2z/JcfsnOW7/JMftn+S4/ZMct3+S4/ZPctz+SY7bP8lx+yc5bv8k
x+2fkwc84gm3f/J9POIJt39izzFO/3iun+dsee6N51C4L9x9mu6bch+D64pd
5+e6G9+D+17K58Q+t/F3lHONPfM08/mMX/ArfsPv+AN/4i/8jY94OPeI2z/J
cfsnOW7/JMftn+S4/ZMct3+S4/ZPctz+SY7bP8lx+yc5bv8kx+2f5Lj9kxy3
f5Lj9k9y3P45ecAjnnD7J9/HI55w+2fu3PT0j+eIeq6f52x57o3nULgv3H2a
7ptyH4Pril3n57ob34P7XsrnxD638XeUc4098zzz+YJf8Rt+xx/4E3/hb3zE
w7lH3P5Jjts/yXH7Jzlu/yTH7Z/kuP2THLd/kuP2T3Lc/kmO2z/JcfsnOW7/
JMftn+S4/ZMct3+S4/bPyQMe8YTbP/k+HvGE2z9z9zSkfzy32HNEPdfPc7Y8
98ZzKNwX7j5N9025j8F1xa7zc92N78F9L+VzYp/b+DvKucaeeZn5fMVv+B1/
4E/8hb/xEQ/nHnH7Jzlu/yTH7Z/kuP2THLd/kuP2T3Lc/kmO2z/JcfsnOW7/
JMftn+S4/ZMct3+S4/ZPctz+SY7bPycPeMQTbv/k+3jEE27/zN0Lk/7xnHTP
LfYcUc/185wtz73xHAr3hbtP031T7mNwXbHr/Fx343tw30v5nNjnNv6Ocq6x
Z15nPt/wO/7An/gLf+MjHs494vZPctz+SY7bP8lx+yc5bv8kx+2f5Lj9kxy3
f5Lj9k9y3P5Jjts/yXH7Jzlu/yTH7Z/kuP2THLd/Th7wiCfc/sn38Ygn3P6J
vYcq/eO9DJ6T7rnFniPquX6es+W5N55D4b5w92m6b8p9DK4rdp2f6258D+57
KZ8T+9zG31HONfbM28znO/7An/gLf+MjHs494vZPctz+SY7bP8lx+yc5bv8k
x+2f5Lj9kxy3f5Lj9k9y3P5Jjts/yXH7Jzlu/yTH7Z/kuP2THLd/Th7wiCfc
/sn38Ygn3P6Zu/cu/eM9MN7L4DnpnlvsOaKe6+c5W5574zkU7gt3n6b7ptzH
4Lpi1/m57sb34L6X8jmxz238HeVcY8+8z3x+4E/8hb/xEQ/nHnH7Jzlu/yTH
7Z/kuP2THLd/kuP2T3Lc/kmO2z/JcfsnOW7/JMftn+S4/ZMct3+S4/ZPctz+
SY7bPycPeMQTbv/k+3jEE27/zN2zmf7x3invgfFeBs9J99xizxH1XD/P2fLc
G8+hcF+4+zTdN+U+BtcVu87PdTe+B/e9lM+JfW7j7yjnGnvmY+bzE3/hb3zE
w7lH3P5Jjts/yXH7Jzlu/yTH7Z/kuP2THLd/kuP2T3Lc/kmO2z/JcfsnOW7/
JMftn+S4/ZMct3+S4/bPyQMe8YTbP/k+HvGE2z9z9/qmf7znznunvAfGexk8
J91ziz1H1HP9PGfLc288h8J94e7TdN+U+xhcV+w6P9fd+B7c91I+J/a5jb+j
nGvsmc+Zzy/8jY94OPeI2z/JcfsnOW7/JMftn+S4/ZMct3+S4/ZPctz+SY7b
P8lx+yc5bv8kx+2f5Lj9kxy3f5Lj9k9y3P45ecAjnnD7J9/HI55w+yf2HvH0
j/dqes+d9055D4z3MnhOuucWe46o5/p5zpbn3ngOhfvC3afpvin3Mbiu2HV+
rrvxPbjvpXxO7HMbf0c519gzXzOf3/iIh3OPuP2THLd/kuP2T3Lc/kmO2z/J
cfsnOW7/JMftn+S4/ZMct3+S4/ZPctz+SY7bP8lx+yc5bv8kx+2fkwc84gm3
f/J9POIJt3/i9I/3hnuPr/dqes+d9055D4z3MnhOuucWe46o5/p5zpbn3ngO
hfvC3afpvin3Mbiu2HV+rrvxPbjvpXxO7HMbf0c519gz3zOfRzyce8Ttn+S4
/ZMct3+S4/ZPctz+SY7bP8lx+yc5bv8kx+2f5Lj9kxy3f5Lj9k9y3P5Jjts/
yXH7Jzlu/5w84BFPuP2T7+MRT7j9E6d/8r/T9I/3hnuPr/dqes+d9055D4z3
MnhOuucWe46o5/p5zpbn3ngOhfvC3afpvin3Mbiu2HV+rrvxPbjvpXxO7HMb
f0c519gzx5nP4dwjbv8kx+2f5Lj9kxy3f5Lj9k9y3P5Jjts/yXH7Jzlu/yTH
7Z/kuP2THLd/kuP2T3Lc/kmO2z/Jcfvn5AGPeMLtn3wfj3jC7Z84/ZP/HaZ/
4ku8wEu8wmu8wVvsPQ2em+45xp4r6jl/nru1x55L4T5x9226j8p9Da4zdt2f
63B8L+57Kp8b+xzH31XOOfYOn6N//w9y3P5Jjts/yXH7Jzlu/yTH7Z/kuP2T
HLd/kuP2T3Lc/kmO2z/JcfsnOW7/JMftn+S4/ZMct39OHvCIJ9z+yffxiCfc
/olP/dP/HZ76p77EC7zEK7zGG7zF3gvjPQ2em+45xp4r6jl/e+w5OJ5L4T5x
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
    "], {{
      {GrayLevel[0.8], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1: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
LO4RiRmY2DUSV3Czc6T7Beb4hzGDPN/FPuJ2dA203SMxRq3dXIM5n7f8jsfv
nXt6HZ7zSPv4vjsxEmMwtG8k9mBlP1u0Sdbhaf9IzMDQuX6vvOcD7IPRgyLx
AzdHRGKA3j80Ui/Cx8HW6evJrg3Th9hH3IGuR63DIzFDrcNcg/kU57Gno8JY
xu/5aFsYPSUSS7ByciQ2mJ9qH3fPcZEYhr8TIrEEKyfawtzx1tHO83PTy6e5
BhyfHYkHuDnG63NnnBmJMRg6xzpnd7rzYPEs6+Qf6zz2dIZ18s/3mnB2gS0M
3RWph3j/F0fiBG4utA4fN0XqUfi+yD7iLo/ECdxcGokr+LvENZhfZh9xVzgW
Xm+IxAz9fm0kTuDm6kh3BL1/VSTemF9jH3FXugba9ZG4otZ1rsF870hc8llx
o9fhGfaxj369PRIncHNrJMbg45ZIfDK/zT7i7vY5wc2dkbji7O5wDeY3+5zI
v8ex8PpIJGZg4kHvA27uj3SPsN/7IvHG/AH7iLvXNdAejsQYtR5yDebc8Xyn
47vg45H6G+Z2iwPXYcwTxlORGIOh/0ViD1aetEV72jo8PReJGRj6xu+V9/y8
fTD6UiR+4OaNSAzQ+69G6kX4eNk6ff2Ma8P0K/YR92IYR7rW65GYodZrrsH8
Weexpze9Dt8j3rKF0Y8jsQQrH0Vig/kn9nH3vBuJYfh7PxJLsPKBLcy9Zx3t
Wz83vfypa8DxV5F4gJu3vT53xheRGIOhr61zdp85Dxa/tE7+O85jT59bJ/9D
74Vn+M7rw1yzrh7i/f8QiSuY+NEWbn6OxBLc/BaJDVj5xT6Y+8mxxEV19TT3
we+OhdE/I/HDHfCXLT3+ty2s/Op6rPFvJJbg5j9bOOMf7mNh5Q/Xpm6tLh9r
1+taH86mrqtXeOdZXWzASlIXVzAR1xXLPK3LR1xR19nASqMuljivvK4azL/3
WXJ2ZV2xMNq/Lk7goBt+fiISK+26/k4EW1Vdfxti3qnLR1yrrhpo/eriilq9
umown6qu2jzbNHU9H5xtFX6eKYyZw5ixLq7gZvrw8wuR+JihLotGLDoMzVIX
J3Azoq53z3seWJcPLmerixlYmbuuvqff56ir/2Bi9rp0epl9UBuOB9XlI27W
uupRa666OKHWnHXVYD6grjz2NE9d69DL89Zl4XLBuviBj+F18cB8obp83DeD
6+IW5haoix/4GFqXhbMhdeloS9X13PTjwnXVgN0l6mKDfp+vrvW5Jxarqw9g
aMm6dM5ukbryYG7xunTy568rjz0tWpdO/si61oSzpeuyMLR+XT3E+1+uLpZg
aJm6dDgYX1ePwvSydfmIW6kulmBohbp4+yeM5euqwXzFunzErVxXLJyNq4sZ
+n21ujiBm1Xr4hzORtXFHvPR9hG3Sl010MbWxRW1xrhG6jXhHs5X9zo8w7R1
9TKfD+vUxQncrFUXY/CxZl18Ml/bPuI28DnBzXp1ccXZresazNfwOZG/oWPh
dUszAxMTwpiuLm42qesegbON62KP+ab2sd+NXANti7oYo9bmrsF8uWZ4J41w
7mFsXRcb9Pi2dbEHZ9vZwsf2tjC3Y11cwdAudXECNzvZB387OJa4Y+t6x7zz
XR0Lr7vXxRIM7WFLL+9pS2/u7HqssXdd/MDHPrYwtK8tDO3m2tTdz75hYUy0
hctJtvB6cF08wNOUuliFs0Psg6H97YOhA+viBM4OsiX/AOtoe3nv7PVQ1+AO
O6YuZjiLI+viCm4Or4tzmDvMscyPsI+4yd4v+zu6Lq6odZRrMD/OZwxDx9vC
3Am28HSiLUycZAs3J9vC0ym2MHSqLcydZgs3p9vC04V19TQ9fpEt98RZdbHE
fXC2Lf1+ji3cnOEa8H1eXVzB0Pm2MHeBLWuc6Vjq3lZXL9J3F3tNmLuprj6m
fy+tiyuYuMwWbi63hacrbGHoqjA2q4u5q23h5hpbeLrda9Kbl3hN1ri+rs88
eLrBdpswbrRlT9e6Bnzf7D3C1i22cHOrLc92nWOpS//y+cDnyh1eH/6+8T54
1rvqYgwO7raFs3vrYgy2HqiLJRi6zz569h7HEveO+4D3/6Bj4ezhuriCp0ds
4elRW/r0ftdjjcfr4gqGnrCFlf/ZwtNDrk3dJ+2DradsYfRpW7h8qa6+h4Nn
62IMbl62D86esw+2XqiLJZh70Zb8562jPea9s9dXXIN76+262OAs3qiLJRh6
rS7e4OxVxzJ/3T7invF+2d9bdfFGrTddg/m7PmPYes8Wtt63hY8PbOn9D21h
6yNb2PrYFrY+sT03jE9tYeszW9j6MYwr6+r3n2zp9y/r4hmOv7KFra9t6bPP
XQMuv62r72DrO1vY+t4Wtr5wLHXhgM8ZPmN+9pqwFYXf5e6sq39/rYsTev83
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
Hp+ciA1YmWidft/TteF4kn3E7et61No/EUvUmuIazPdyHns60Ouwp4O9L5g7
xBaeDk/ECdwck4gH2DrUOqwcYZ0zOjoRJ8QdZp38o3x+aMclYmbFME5OxAB8
fBzG2WGcE8aJYayciJVTrMPH8c6Ds5Osk3+s90XdE6yTP8Hvk/471TXo69Ns
x3hNGIOPMxOxBxNn2Y73ntDh4/xE/MDfvX7fvJML7IPRixNxQp9emajX6a/L
EvUx/X6Jdfr3XNeG3UvtI+6iMNZzrSsS8UOty12D+XnOY09XeR2e+2pb+Lsl
ERvwdHMiBpjfah931XWJeIbdGxKxATc32sLT9dbRzkh0v3Bet7kG99DdiXiA
lWu8PnfDnYm4gpt7rHN2tzsP7u+yTv61zmNPd1gn/z6fN738QCLG4OkNv3t6
537raA8nYgyGnkjEBpw96Dy4ecQ6PD2eiBniHrJO/qPW4fLJRPzA9HOJeh1W
Tk/UU5zLM4lYgpXnrcPKU86DuWetk/8/74u6T1sn/5NE/UePPOb12d+Lie4m
2HorEQ/w9KbPgPnb9sHQK4kYhpXXEnEIT6/bcnavWkd7wftljXdcA4Y+TMQJ
fLzk9eH+fT8/ffGRddh613kw94F18l92Hnt6zzr5n/pZ6evPbGFu9TR8ToXR
COOrRGzA2efW4e/LMC609rV1OPsuEXtwU6bqCd759/bB1o+JWIWh3xP1Ohz8
kqiP6cefrMPWN64Nrz/bR9wPrket3xJxRa1fXYP5t85jT394HTj70/amMOqp
eICnKBU/zONUPhj6JxHbcPxfIg7hif+QBRZu/rWO1kr13PRykqoGd1gzFQ/0
+19en3uC84YlOCtS6ZxdmioPFnkf6OT/7Tz2lKXSya9SrUn/tlNZOJs7Vd/Q
F71UDMBWJ5UOrwNT9Sh8d1P5iJs6FWMw1D8VV3DTL1UN5lOl8hE3TapYeB2Q
qtfhYMZUfUw/Tp+q72FrulTcMp8hlY+4aVPVQJs5FVfUmilVDea1VGfPO5sl
1To8w8Kp+ob3P0cqruBj9lQMw+tsqRhmPiiVj7h5Up0T/M2VihnObs5UNZjP
muqcyJ83VSwsLmhmYGKBVFzBzeBU9wvMzZ/qM5j5kFQ+4uZLVQNteCrGqDUs
/PxFojn9wucDnysLpVqH5zws/DwijKXCWCIVYzC0WCr2YGXxVBZtyVQ6PI1M
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
9GhTzBD3gHXyH7YOl080xQ9MP9NUr8PKqU31FOfyVFMswcqz1mHlf86Duaet
k/+490XdJ62T/1FT/UePPOL12d/zTd1NsPVGUzzA0+s+A+Zv2gdDLzXFMKy8
0hSH8PSqLWf3snW057xf1njLNWDo/aY4gY8XvD7cv+vnpy8+sA5bbzsP5t6z
Tv6LzmNP71gn/2M/K339iS3MjS3C51QYWRifN8UGnH1qHf4+s0X7wjqcfd0U
e3DTLNQTvPNv7IOt75piFYZ+aarX4eDHpvqYfvzeOmx96drw+oN9xH3retT6
uSmuqPWTazD/ynns6VevA2e/2V4fRq0QD/DE/3k7/DCPCvlg6K+m2Ibjf5ri
EJ7+tYWbv62jFYWem16uF6rBHZYX4oF+/93rc09w3rAEZ41COmcXF8qDRd4H
Ovl/hnGj95QU0skvC61J/7YKWTibs1Df0BedQgzAVlVIh9cBhXoUvtuFfMT1
L8QYDPUKcQU33UI1mPcr5CNuqkKx8DpToV6Hg+kL9TH9OG2hvoetaQpxy3y6
Qj7ipi5UA23GQlxRa4ZCNZj/57Pnnc1caB2eYXihvuH9z16IK/iYtRDD8Dqw
EMPMZyvkI26uQucEf3MUYoazG1SoBvNZCp0T+XMXioXFoWYGJgYX4gpu5it0
v8DcvIU+g5nPX8hH3DyFaqAtUIgxag0pVOMz9wufD3yuDCu0Ds95cPh58TCW
CGPRQozB0MKF2IOVRQpZtMUK6fC0ZCFmYGj9Qu+V9zyikA9GRxbiB25WLMQA
vb9coV6Ej6UL6fQ1e6E2TC8bfv7DPbtUoXrUWqEQM9RavlAN5jwDeexppULr
8J5XLmRhdPVCLMHKON9VzMfbx92zaiGG4W+1QizByhhbmBttHW0DPze9vIZr
wPG6hXiAm1UKrc+dsXYhxmBoPeuc3ZrOg8V1rJM/ynnsaS3r5G/oNeFsI1sY
2rtQD/H+Ny3ECdxsbB0+di7Uo/C9iX3EbVGIE7iZUIgr+NvMNZhvbh9xWzoW
XncsxAz9vl0hTuBmm0J3BL2/dSHemG9rH3FbuQbaDoW4otb2rsF8wUJc8lmx
k9fhGRYq5KNf9yjECdzsVogx+Ni1EJ/Md7ePuH18TnCzVyGuOLs9XYP5Lj4n
8vd1LLweWIgZmJjifcDNpEL3CPudWIg35pPtI24/10A7oBBj1NrfNZg/XIa4
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
LmzN0JGFpxk7sqwxVUex1B3aUS/SdwM6WhNG5++oj+nfgR3xCVuzdmThZraO
LDzN3pGFoUEdWZiboyMLN3N2ZOFpWEdr0puzdLQma8zT0Wc8bM3bkYWt+Tqy
7GmujmrA9+CO9ghbQzqycLNAR5Znm7ujWOoeGH5eNIzFwhje0frwt21H++BZ
F+qIMThYuCMLZ+TBGGwt0RFLMESt792zi3QUS9x6HfUB73/JjmLhbKmOuIKn
kR1ZeFq6I0ufLt5RPdZYtiOuYGi5jiysLN+RhacRHdWm7god+WBrxY4sjK7U
kYXLMR31PRys0hFjcDPWPjgbZR9sje6IJZhbzZb8Va2jLdPR3tnrONfg3lq3
IzY4i7U6YgmG1uiINzgbH0bD8zXtI27ljvbL/tbpiDdqre0azNf3GcPWBraw
taEtfGxkS+9vbAtbm9jC1qa2sLWZ7XRhTLCFrc1tYWvHjvqeft/Jln7fqiOe
4XhrW9jaxpY+28I14HI79x1sbW8LWzvYssaWjqXuQR31HD2ys9eErclhLNhR
/+7aESf0/m62sLW7LWztYQtbe9rC/V62sLW37RDXhhXY2MVrssZ+Hd0jMD3R
FrYm2ZK3j2vA5RTvEbb2t4WbA2zhbF/HDvXZc89xrx3s54a/dbuhF8LohHF4
R1zB06Ed8QYTh9miHWEdzo7uiCt4utLvnnd+jH2wdVxHLMHQKR31Ohyc2FFf
ws3x1mHrSNeGgxPsI+5Y16PWyR1xRa2TXIP5Uc5jT6d6HTg7zRZeL+iIAXg6
vyMGmF9oH/fNWWGs3hFP53TEGDydawt/Z1tHu8rPTY9f5BrwdHlHnMDH6V6f
u+HSjriCpyusc3YXOw/+LrNO/hnO4z64xDr553kvPMPVXh+2Huuoj+mRazvi
hN6/zha2buiIK3i6uSN+4OZG+7jLr3cscfd11N/09S2Oha3bOmIYdm+3hac7
bOnxm1yPNe7qiCt4utsWnu6xhadbXZu699rH2vd7fXiaJfTra8G+HsbDHfED
Nw92xAm9/4BjmT9kH3GP+2zg5tGOGOO8HnEN5tf4LDm7JxwLW893xAkcPBPG
IR2x8lRHdwpsPdnRZyTzp+0j7n+ugfZcR1xR61nXYP6Ca8PBi7b09Uu2MPdK
R4zBxKu2x/ksYAlu3uqIDVh5wz6Ye82xxP3RUR/wzt92LIy+2xE/cPOeLf37
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
v14XS8zmq3Uxxuy/Uhfb+K95jbyX3YPYm3XxRq833AP/Ht897+xt78MzfF/X
3PD+P6yLE7h5vy5W4ey9unjG/8Br5H3qe4Kbj+viirv7yD3w3/U9Uf+Zc+H1
27qYgYmvQlfUxc0Xdf2MhLPP6/o9AP9Lr5H3P/cg9k1djNHra/e40nkwCoff
eR+ek5/T/I7M78G/1MUYDP1UF3uw8rMtsV8dh6c/QzfVxdDaTXqvvOe/vAaj
/9TFD9ykmsQAs9/QpFmEj38dZ65/c2+Y/s9r5P3tfvRKNokZeiWa1AP/d9fB
cbpJ+/CeM02yMFptEkuwUmkSG/i1Jq3x7ck3iWH4KzaJJVgpNcnCXKFJcWLr
NOm5meVmTeoBx2s1iQe4yTZpf74Z9SYxBkMtmhTn7po3qQ4Wm5oUpz7XpDrO
1NikOPXrNmlPOGvZJAtDHZo0Q7z/DZrECdys16Q4fGzVpBmF7/WbtEbexk3i
BG5aNYkr+NuwST3wN2rSGnmtm5QLr+2axAzzvlmTOIGbNk36RjD7mzaJN/y2
TVojb5Mm9SC2RZO4otfmTeqB/0NdXPKzYssm7cMz/Og15nX7JnECN9s2iTH4
2KZJfOJv16Q18nZs0j3BzQ5N4oq7a9+kHvhbN+meqO/YpFx45b/hCjMwsVuT
zgE3uzTpO8J5d24Sb/i7NmmNvJ2a1IPYHk1ijF67N6kHPv+dWHrDxF5Nssx4
IvDpHDo41DY0KnRiKBPqGuoSSoUODR0SSnsNP35kN3RzHv/pqSNC3fWvtW/o
ETpSf3u/oW/oKP1jOv9v+4Q2C53k/fhH3nuHeoUK7nG4/rWYDT3dq5nreus/
MfX/vY/Qv5bn/+vIy4UO85ny7nGY/sjQcLTPsWFoaGhIaAPbwaFWoeMdW99r
x4XWCQ0MHRNaNzTI/tpeGxDaPDTaz9PG93dCqIXj/fWJaujnc6zlNfxNnTsy
1Do0IjQ8tLHtsNAmjhPbyGuctWXoWJ9pi9DJPsc+oXNCs0NbhcaGTgm1C41x
3pZew986NM5524XGh04L7RaaEZoe2j40wbEdQqeHJoZ2CU0LnRHqGJoSmhzq
EJrkvG1Cp3qPHR0n1t496Luze0wN7WRLr219Fup39VnYb/fQmT7fHqGZ9vcK
nR06K7R/6LzQuaE9Q7Oct7fvhrz9HJ8T6uQ68vb1Gvd4YOj80NwGzf6C0EWh
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
U1Oa5VPdq63PQj1cTfB+cDbRPhzMCE1PiQfstJSYOdMxuJ0cmpQSP1NDU1Li
5Az7Hb1GHrN7np8f/ma6F/N9Tmh2St+F032OvXzvZ6XEwRznwd4s1+/tOvI6
+CzUd3IdeczrXO/N/J5vnzlYFVqZ0uxfGLogJf7mOY/ZvCJ0eUpsXOAYzFwc
WpASJxeF5qfE1Xz36uI4MTi7xDXM+LLQZSnN35LQpSnN++LQopTmHrswpfm+
1LHDvEavnu6xNKVZXupeu/hd8Q56++zL/L5vD92WEg9Xh65Kic8VoStTYhe7
PCXernIMbq7zfQ30nV2bEjPXuNdRruO+YG+1a2BgTejWlDi5OXRTSozdGLoh
pe8L9vqUeLvJscFeo9cI97glJcZucS9+l2JumN8T/Hzsd18oF78LZ9Ni5p7Q
3SmxcVfozpRYuds+/NzrPFh5IHS/3+e7oXdS4ulBx+Dk4dBDKc36k6EnUprB
x0KPpjTHjzhvrM/EHqc7Tmy8e9B3ins8nhIzj7vXOJ/lPr/Xp7wf7/lp+7Dx
SujllJjA8s2Cm1cdg7fnQs+mxMYLoedTYuVF+zO9Rh6z+56fH25fcy84eDv0
Vkrfhmd8Dph5M/RGSgy84zzYe93181xH3gyfhfq5riMPbt733jDzgX3e91+h
P1Pi4+PQRynx8KHzmM2fQj+mxMpHjsHH/0KfpcTTp6FPUuLqE/da4jgx2Prc
Ncz396HvUuLjm9DXKc36V6EvU+IM+0VKHHzt2DKv0esq9/g2Ja6+dS++x3ek
xOe1PvsPKf1suNMx+Pg99FtKPPwa+iUlxrA/p8TKb47Bx9++r5t8Z3+kxNUf
7rXKddwXbP3jGhjIBDfptPZPhk2kdT7+Ad7/UuIM+6/PR5zYGq/RC7bokUqL
MSy9+HtA/J7N78vwAKPsN8Vr/K7NO9k61rZKi59y2FJanBTDFtLihjV8WKqk
lQdDzcM2S4uNetjGtOZ73bDrpDXj2LXTet/bpLUf89gi7Fpp8UePWlrz3ZRW
L9igjjw4pDf7McfUkQff1bTOBMP0wIezlmmdAz7ahN00LU6wm6TFW9u0YrDC
Wuu0+GkVdsO0ONkoLR8mWdsgrfndNq3nYaa5vy3T4p/4+ml9F9ZL6xx8J1jD
hxVy26XFEn9PYfO02MNulhZLxInBJ2ucFXY3TutMMLNdWudgLjqHDk6Ljx3C
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
w0LHZ8XScPvM9wj7cDjUvWDphKzmD5ZOtN/WvfFbud9Qz8TMrOYYlk723szr
GaGpWc36KaExWc3+WPuwNM4+LJ1qH7ZOsw9LE0Ljs2Jpon1+3rAHzLRzb/aG
4cmhSVmxNMX+Tj4LPhye7l6wNM1nhZPp9uFmhv0O7kcNP4PX9zuBiVl+/nou
3nmob078nBOanRUDZ4fOyoqJ2fbhao7z4Gdu6Dy/4+tCq7Ji6XzHYOaC0Lys
ZvyS0MVZzeNFoflZsXSh85j7c73HIY4TO8g96NvVPRZkxdUC99rfZ6EerhZ6
PzhbZJ/ZXx66IqvZx16eFVtXOgY/S0KXZsXPZaGlWfG0zH4Pr5HHTK/288PP
CveCh5VZ/fsq+RYs9jngh3+P5dVZcbLKefB2leuPcR15R/gs1Pd3HXm9fXbO
BEvX+xzMxFOhJ7Oa9RtDN2Q1+zfZh59bQjdnxcltoTVZsXWrY8Mcp4Y5fij0
YFYs3e4aWL0zdEdW/Nxln5m+2/5I96Yv/Nwbuicrfu6zDz/32x/lfuwBSw84
Bj8P+xxvhzaNmd0kJ04eDz2W1aw/GnokK04ecc0kx4nBydO+o6m+pyeyYuwJ
9xriO+NOYekZ1zD3r4RezoqNF0MvZMXS86HnsvqmYJ/NirMXHJvhNXrNdo+X
suLqJfdi7l/1Hszxa/aZ69ftw8CboTeyYuIt+3Dyju8GJt4PvZcVQ+86doHj
b/kd/x36KyuePnANnHwU+jCref3YPvP3if2L3Ju+MPBZ6NOsmPiffTj53P4l
7scezOsXjjG/X9qHxa/sM/s/ZvXvfIWlb0JfZ8XJT47BybeOwcT3oe+yYuYH
+1d5jbxLfUaeAeZ+dq+bfQd/+p3/HvotK5Z+Df2SFdu/uOZ6x4kt97k4903u
8UdWjP3hXnP9rnh/MPCP7x1+/gv9mxUzyZjlRE5zz7+gjtgax6mBCeLEYCYb
NpMTZ+mwqZx4w9ILxogTg6tcTjXMd7OwtZz4qIQt58RVKWwxJ86xhZz4IU4M
DvM59YInelRz4gpLL36msTfngqfmOe0Hb/y8acxp1luGXTcnHtYK25QTB+vl
FIOVFjnF4GedsGvnxBN1+HDGGnlwTG/2g631c+rFrPOdaJ3TO9gobKucuNow
7AY58YalBsaIE4N5zsW5YYweG+f0PrH0gqs2OX2P4KFtTj58bJaTD1eb5+TD
wBY5+XC1Zdh2Oc3mNmG3zomxrXKKwQ3xLfxeDwl1zomxbXOqgaXtw26XE0vt
c/JhaYecfOae3vRlZncM2yEnfjrm5MPJTjn5cEs/9oChnXOKwdUuOflwtmtO
PrO+d9i9cuJq97C75cTBPjnF4GePnGLw0ynsnjnxRB0+nLFGHlxxRp4BtvbN
qVfCd3BwTnwcGPaAnLjaP+x+OTGNpQZ+iBPj28G5OHeDexyUE29YesHQob5r
+OliH5662oelbvbh4TD7MNM9dHhODB1hH36OtA9PPezDTE/7zPIxoQE5zfdA
+/DTJ9Q7p/k+yj7z3tc+/PVyL2a2X06/28FPf/st3Bu/5n69PGenhMbkxNYg
7828nhQalRNLx4WOzYmTwfbhZoh9mBlqH4aOtw8nw+zDzXD7zOJY793Svdkb
lk4IjcyJpRPtt/VZ8GFxhHvB0mifFU5Ott/Oz4S/iftRMzH0SOjhnJgY53Ow
/3WhVTnN/WmhU3PiYLz99q6fkBMzk0OTcprR0x3b3vHxft+XhhbnxNUU18DP
GaGpOfEzzT5zOd1+B/emL8ycGZqRExsz7cPKLPs7uR97wNJZjsHW2fbhcLZ9
5n1e6PycOJkTOicnJi5wDIbOdQyG5obOy4mT8+3v7zXydvMZeQYYvdC9uvsO
FuXEzMWhBTlxdVFofk68zXdNF8eJ7eNzce7D3WNhTrxd4l6wtMR3DUtL7cPD
ZfaZ9WX2mf3L7cPSFfZhabl92LrSPiytsA9LV9lnvm8M3ZDTfN9kH26vDV2T
E0sr7TPfq+zD4dXuBUurc5o/WLre/hD3xh/gftTw90H4HZTfMWHpZu/NvD4Q
uj+nWb81dEtOs7/GPizdZh+WbrcPW3fYh6U77cPSXfa38R4wM9y92RuG7w3d
kxNL99kf57Pgw+Hd7gVLD/qscPKQfbh52P4Y96OGf46B/92I/10IHh7NiWFY
ejz0mN/T16GvcmLpqdCTOfHwhPOmeg0fxp52Hvw8H3ouJ05eDL2Q01y/Hnot
p/nGvuo5+Mb7MZuvhF7OiUl6PJsTYy+51xzXkTfLvdlvtuvIg5lnfKYZ7oEP
Y2/4HDD0SejjnDjAfpTT3H/q2EKvfZgTT++G3smJpffsX+i1t3Oa42/9PFf4
/r7MiVvib+XE+ps+xzyv4V/u3C9y4urz0P9y4g37WU6MfeHYEq9xVvh+32eC
ge98DuYln4+fq3kx82Poh5zm/nvnXeM1fFj6yXkw82vol5xmN8G/4Dkvfn5z
DD7/CP2e09z/F/o3p1n+O/RXTiz96Tx4/dl73Ow4sRvcg75r3OOfnBj7x72u
81mohyvOwn6wlMzrfPCQysuHmWzYTF4MlMIW82IgnVceLHE35MEM8UJerFBH
Hlyxxj3CSSVsOa/ZbwzbPNQydGxoUF5sNAtby4uHel55cFbNqx5mqCMPRunH
+WCPOvL4Fn/g98ocN+XVizleKy8fHth73bwYWCfs2nkxwRo+PKznM8LNhmE3
yOsd7B52t7xYbJVXjLncOOxGec3TZmHb5jW/m4bdJK95bZ1XHsytn9cezDJx
YjBGD/rCCT3a5MUKll4wzFmo5zk3z2s/eGsXdou8mNghbPu8Zh+7fV5sdcgr
Bqtbh90qLya2DbtNXtxsl5cPJ6yRx3eFe2qR13dnx7x6wcGuYXfJi/st8zoH
nOwcdqe82ODOyIPzjnnVww915PEt4SzUwyF15DG7e+R17/DTKeyenpXeoV55
zThr5MHMPmH3zouJA8MekBcne+VVDz/75pUHK8T3z4sn6siDs/3yyoObg0MH
5TXjXUNd8vpGch/MFmwcGjokLza6OQ/GOrs+7Try4JB+nC/pus6eiePyYgOG
ORfngKXDQ4flxcFRoT558dDHdwEzfR2DjSNDR+TFT89Qj7w46WW/7DXycu7N
uWHmaPeCh4GhY/JiurvPwXMPCPXPi5tBzoOxfq5f23XkFX2W7r6v/s5jjgf7
mZnrIfZnhV4IPZ8XE8NCx+fF21DntfIaPlwNdx6cnBAa6Xd8Tmh2Xgyd6BjM
nBQaldeMnxoal9f8nRIakxdLJ4dG58XnCO/RznFibd2Dvlu7x9i8Znmse23i
s1APV6d5Pzgbbx8OpoXOyIsH7NS8mJnuGNyeHpqYFz+TQ5Py4mSK/Q5eI4/Z
nePnh78Z7sV8nx06K6/vwgSfY0/f+8y8OJjtPNg70/WdXEdee5+F+j1cRx7z
eq73Zn7Ps88cXBO6Oq/Znxc6Py/+5jqP2VwWuiwvNs53DGYuCs3Pi5MLQxfk
xdUF7nWI48TgbIFrmPGloSV5zd/i0KK85n1h6JK85h57cV7zvcixrl6j15Hu
cWles3ype+3kd8U76OmzL/X7vjV0S148rAhdmRefy0NX5MUu9vK8eLvSMbi5
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
uqik+cbOL4mZud6D+74utMr3vsr7wd7s0NklzfuFoQtKmnHsvJJYme/YQV5j
7/189jklcXyOe+3rNXy+EctDV5TEFvbykmaUZ72mJIZYW1YSw4tDi0ri5FL7
vRy/rKS5Xu3nGeAeV5c039irSvpd5mLfC9+CS+wf7t4LS/pOLHQM/q/0WWFy
hf1+7ocPu0t8Jt7946HHPAtP2Ifd+0P3lcTGjaEbSuLhep97iNfwYeMm58HV
mtCtJc3s7aHbSprve0P3lDTX2LtDb4U2iflqXRYPd4XuLIlFetxSEld3uNfJ
riPvBPdmv5NcRx683uwzDXcP/LF+Js4BD0/6mWHuwdADJX0vng49VRInj4Qe
LokP7EMlsfGoY+O9Rv0k3yUxZvGl0Isl8feU9zvV+3C/b5b03BuXxcQLoedL
4uS50LMlcYZ9piRmnndsutc4K9/ppX6vfKMvs88cv+xzcBd/hv4oae7Z+42S
uHo99FpJnL1hf57fDXmw+F7o3ZLm74PQ+97vs9CnJc0T9pOSeKLfqyXN6ceh
j0rijx7vlDSvH7rXYteRt8C92W+h68iD47d9pgvd420/5/98Dlj8MfRDSTxh
vy/pG/GTY1d77buSOPk69FVJnHxj/wqvfVnS3Pzlu7vR9/d7SawT/8L3/bnP
scxr+Dc497eSmPk19EtJzGN/Lomf3xxb5TXOyuz/E/rb779FzMhaZb1zbFNZ
DGXCpsua8b99VmY8F2vZsphpCPtfSaxg/y2Jk0RZsTVeYz/Yol+qrPmuhC2X
xQz92I9v4islzdYcv2d8+CC3VBYPxbCFsuYdmy+LFeLEYIA1zsq73LSsbwEc
J8s6HyxVyzoHLLUMu25ZHKwTdu2y5nu9smKwwRr3BXP1sI1lccKd4cMha83L
+o7wrOzH7MPiRmV9F4g3K4vpWlnn4PvIGj6ckNuqrDvYMOwGZd0Fdv2yOCBO
jPtijbMyv23Keub9Q+eFzg3tZzvH7+bg0EFlMbF52M3KYqhtWfVwwho+LG1R
Vh48bR12q7LY2DbsNmXN945hO5Q149gdfNedvR/z2z7s9mUxSY8ty5rv7crq
xexTRx7c05v9mHvqyIPbdmWdCY7pgQ9nHcs6B3zsHXavsjjAdiqLs33KisEG
a3uWxfBuYXcti5Pdy/JhnbVd/C4P8fMw79zfgWVxT3zn0Lfx1zuVdQ6+Bazh
wwG5B5TF0/5+J3CF3bcsTg7we+O7wBpnZY4O9d6876GhIZ4J7OCy2O0f6lcW
T91CXcti4sjQEWXx18W9YOMw5xUd714Wh12dB0OHOw9OeoZ6lDXjfUNHhcaX
9efXB8ua3z6h3mXxcLTzmO9erm/uOvLK7sf5aq4jj2/VHmW9g4LPxTlgb4Cf
ExaPsc/cHxc6tixuhoWOL4vnQaGBZfEx2HmtHOceW7qOvCbfH+fm5+eI0PCy
ODgpNKqsORsTOrksTk4MnVAWG6Odx7dmpOvbuo68jd2P823qOvL4cx2/H5zh
7zfzyPMz16d4P97BwtAlZXFyWujUstgYFxpbFiun2t/O74Y8WJwUOr2suZwS
muz7PTM0o6xZx073XS/yfsz1tNAZZXFJD35/Z6anuteuriNvR/dmv51dRx7s
TvCZ2rvHBD/nTJ8DnuaFzi+LFezcsr4dFzh2gNf4rsHGOaHZZbEyx/7eXju7
rNlZ7Ofp5vu7uKzvAfGzyrrvWT5HJ6/hd3XugrKYuSg0vywOsReWxckCxzp7
jbPC06Xem3d/e+g2v3PsmrLYvSF0fVlsXBZaWhYzV4aWl8XGEveCjWXOO8rx
K8piaKnzYOhy5zHLV4VWlDXj14VWlfX3IfhdkN8BYWNl6Nqy2FjtPBi72vWD
XEfe0e7H+WDvGufxLYYJGOjjc3EOGLvRzwlzN9mHjVtDt5TFzJ2hO8pi42bn
jfQ9kTfKce5xuOvIG+z7W+397w7dVRYHD4TuL+vnDHycYntf6N6y2HjQeTB2
j+vHue4+P89dPt8priOPP/PwrednDkw8WtafadtU432HTqjqHXwR+rwsTp4I
PV4WG4+5ZrLX8OHkSefB4rOhZ8qay+dDz5U146+GXilr1rEv+66/9H7M9Uuh
F8vikh5PlzXTL7jXbNeRd6Z7s99ZriMPdp/ymaa5Bz6/R7zmc8DTh6EPymIF
+35Z346PHFvgtffKYuPt0FtlsfKO/Xlee7Os2fnKz3OZ7+9/ZX0PiL9RFv+v
+xxzvYa/1LmflcXMp6FPyuIQ+3FZnHzm2CKvcVaYftdngq2vfQ7eebYSPxsr
4uG70LdlMfCN81Z4DR8evnce3Pwc+qks7v8L/VsWY784xvz+Fvq1rFn/J/R3
WQz8GfqjLH5+dx6s/hj6oSyW/nBstXvQ9xb3+KssTv5yr5U+C/VrfBb2g6uG
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
4sOquu/jfY6NvIa/rXNPrYqZcaGxVTGPPaUqfk51bEuvcVZmf1LodL//BaGL
/M6x86ti6MzQjKpm/HSflRmfFZpZFTNTQ1OqYgU7uSpOznBsR6+x327uN72q
+T43NKcqZmZ6P76JR1Q1WyW/Z/x9nXtOVTzMDp1d1bxjz6qKlXMc6+S1WX6X
V1b1LYDjaT4fLJ3nc8DHwtAlVXGAvbiq+V7kWFevcV8wd2Hogqo4mW//YK/N
q+o7Mt37MfvLQpdV9V0gfn5VTM/1OQ70Gn5P5y71HSwJXeq7wC6uioOljnX3
Gmdlflf4mR8NVWvBYuiRqmy5pnfzZOiJqpi4JnR1VQxd5fr+XsOHpWudB0+r
Q9dVxcYNoeurmu81oVurmnHsLb7rp7wf83tz6KaqmKTHqqrm+0b3Gu468ga7
N/sd7zry4HalzzTIPfDh7DafAz4eDD1QFQfY+6vi7CHHxnntvqoYvjt0V1Wc
3GN/tNfu9Lt82s8zxff3eFXcE7+jqt9pbvc5RnkNf7JzH6uKJ94N72Si7cNV
cfKYYxO8xlmZo2e8N+/7s9CnngXsJ1Wx+17o3ap4ej70XFVMvBJ6uSr+nnUv
2HjBebMdf6kqDp9zHgy96Dw4eS30alUz/nborar+XMLPEn5uML9vht6oiod3
nMd8v+76ea4jb477cb65riOPb9W9fgdn+1ycA/be93PC4gf2mfuPQx9Vxc3n
of9VxfGHzlvseyJvqePc40LXkTff98e5+fn5VejLqjj4PvRdVXP2U+jHqjj5
NvRNVWz84Dy+NV+7/irXkXe5+31RFZ/fOI8/E/L7AT/P+X7f5+dnrn/2fryD
dYPddWri5PfQb1Wx8Wvol6pY+c0+nPzhPFj8J/R3VXP5X+hf328m+qVrmnVs
qqa7blnTfsx1MmyiJi7p8VdVM91QUy/4oI68Ne7Nfsw+deTB7p8+083u8aef
M1vTOeCpedhmNbGCrdX07WisKQYfrPFdg41S2GJNrPBtw4dt1go1zc56NT0P
s879rV3T94B4vqb7ztV0Dr4HrOHDAbktamJmrbBNNXGIrdfECXFifBdY46zw
tH5Ne/PudwrbsaZ3jt2xJna3Cbt1TWy0CrthTcxsGnaTmtjYoKZesLFRTXkw
RLx1TQxRRx4MbVxTHrPcNmybmmZ8y7Dtavr7F/wumDYbW8Ta5jWxsVVNeTC2
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
94D1J3zej7uOXp5jPMC+rxUx82rolSIOsS8XcfKa1/p6jlrh6R3vzd3/EvrZ
d479qYjdb0PfFLHxfui9ImY+CX1cxMa7zgUbH9hvmNc/KmLoPfvB0If2o5c/
C31a1ONfheb43OeN32PNU8XGl6Evitj42n4w9rnjRzsOvxHOR32jHIcfbzFM
wMD1ros6YOw7fyfMfe8xbMwN/VjEzG+hX4vY+MF+t/qc8LvD65zjRMfhN9bn
97X3/yP0exEH/4b+Kfo5Ax9TbP8O/VXExn/2g7E/HX+34/729/zu+qY4Dj9+
38P7Drf0NGdJLvq6RdX5cgdrhl2jipMFwv6vio35w85XxQpzjOFkwSo/WFw0
7CJVfdky7GJVPV7Dlqpex+aqs16raj/6OoVtVHFJjoWrenrxqlzwQRx+sEdu
9qP3icMPdheqqgm2ycGYX0c0q+qApxXDrlDFCnb5qrdjpao1+GBuuSo2lg67
VBUry1SNYZu5Jat6Z+2q76HXOb/WVe8B60tU8d+qqg7eA+YYwwG+q1cxw58p
rFrFIXaVKk5YZ413gbmVq3hap2pv7n6nsO2r7hy7YxW724TduoqN9cKuW8XM
xmE3qmKjTVUu2Fi/yg+GWN+wiiHi8IOhDar86OVNw25S1eNbhm0bOig0Gl6r
2Ngi7OZVbGxV5Qdjm1XFwwZx+MEG+agP9ojDjzds2ao7gG3qog4Y27bqO2Fu
u6oxbOwQtl0VM7uE3bmKje2r/GCDc8IPhljnHGGIOPxgmvOjbrjpENq1ioM9
Q3uEDvS3jqripGNo9yo29rIfjO3m+Pkdhx8cko/6WjgOv06hMT5H3mv6ke+n
p/cJ7V3FBnsfUMXD/qH9qvg4wOPFfR/4wdAhoYN9f+eEzq7isrPX6NHDQof6
rI8Ida/q5cNDXat6t4v9Gq6VPZbwOmvVOci7tHN0q+Kmm3Ml19LJ33ak9+Nb
j/IYPk4JnVzFAZY/d4OzU70Gt8eGjqni44TQ8VUMnejxyp47ruqN4Zz2rXqD
TnMuevys0JlVb8DRrgM2eoTOqGLjbPvB/OmOb+M4/FZwLcSv7Tj86Ndzfe6w
dX7oPN/54NC1VX19nv1g44JQrypmLgn1rmKjp+Nh40L7tfX6xVUM9bIfDF1k
P3r50lCfqh7vF7qi6r3kPOgt2OgburyKjf72g7HLHL+94/Dbyvmob1vH4cdb
TJ/CwBauizp4n64MDaji4LrQkCoehvgsYGao12DjqtCgKn6uCV1dxcm1Hu/q
Ofx2dO7+3vt654KHkaEbqjgf6Dr47hGh4VXcjLIftQ9z/H6Ow29n1zLQ5zXc
fvwbkPx7Wvw7WvT1TVUMPxJatBl919Q9PRl6ooqPm0Pjqtgb65jOnmMMY+Pt
Bze3hm6p4uT20G1VfT01NKWqv7GTfd9PeT968c7QpCr2yDGxirE7nIuevct+
3Z2b/Y5yHH6wPcE1dXUOxjB2t+uAjQdDs6qYwD5Qxc1DXuvhuZlV7N0Xml7F
0v0en+K5e6v65ml/Ty+f3+NV7wHr91SxPs11nOQ5xj3t+1gVW4/6Ts61fbiK
pce8do7nqJWefcZ7c/efhj7xnWM/rurBd0PvVHHwfOi5Kj5eCb1cxeWzzgU/
L9ivr9dfquLnOfvBz4v2o49fC71a1d9vhd6s+u9s/Nkofw5KL84OvVHFwdv2
g4PXHT/Icfj1cz7qu9Jx+PFOzfAdXO66qAMm3/N3wuj7HsPGR6EPq5j5PPRZ
Fbcf2G+Yzwm/G7zOOQ51HH7X+Pyom5+lX4a+qOLg29A3VX32Q+j7Kk6+Dn1V
xcZ39uPn5RzHj3UcfqOcj/rGOG6O73uxpvjknZ7p76evf/R+3MGSsb5EU5z8
Evq5io2fQnOrWPnZYzj51X6w+Ffoz6q+/Cf0t893vsjXoqlex87b1Fkv1dR+
9PU8Yf+r4pkcf1T19L/OBR/E4TfVudmP3v/PfrD7m2uC7d895jvnb6oOeGqE
XbwpVrAtm3o7UlNr8MEc5wUbC4ddqClWeNsYwzZzCzbVO0s39T30OufXqqn3
gPUFmjrv/zVVB+8Bc4zhAN9mU8zUsKUpDrG5KU5YZ413gTlqhadlmtqbu98k
7MZN3Tl2o6bYbRN2nabYWD7sck0xs0rYlZtiY9mmcsHGCk35wRDrKzXFEHH4
wdCKTfnRy6uFXbWpHl8r7JpN/ZkEv0ZsYTbWiLnWTbGxdlN+MLZ6U/GwQRx+
sEE+6oM94vAbbyZgALapizpgbN2mvhPm1mtqDBsbht2gKWY2C7tpU2ys35Qf
bHBO+MEQ65wjDBGHH0xzftTN/luE3bwpDrYJu3VTP2fmmiXsVjG3ZVNsbNuU
H4y1bSoefojDj+8hH/URTxx+9O72YbcL/R9KIE9p
         "]]]}, {}, {}, {}}, {}},
    VertexColors->CompressedData["
1:eJztnU1sVUUYhi8VrKYgqA0BEhcgGxJijFEjDWQgQWwkgoAUGivgDwYXVHEj
CNGkCYuiBgiQAiEFLYpgG71VNCCwoBVDLLYFC21FoVwu9kcqKwwkJtZ026+2
5cydb+Y83bzps+jPd+fMM2fOzJmJr7y5cGVWIpGYmZtI3NWTu3f993XEkCRJ
kiRJkiRJkiRJkiRJkiRJkiT5/5nzas6s+/KOmg/nD3u0fPFRc/ObmuXb1hyF
w+FweODctX/wFxwOh8Pxl/t6wuFwOBx/4S84HA6H4y/4QPjdD+SaU7U/mnPH
UrkPHTht9n5R1bx8y0+mYmnxG08UtZjqsXuzVhT9alJ/P/lPy/sXzaTPJxyf
8HC7ebZhefv9T7eb2peObxr5yR/m3bafN25ddt3MnLvkq4/WXjeT8z9tbnzq
z8i49PesyTtdUPZLg+lKffxX8XtnTXtL5e2i7nPq6hw3Ln0uttuJNp69bsbO
3H1dprtueM2RY12mcH7Vibxkp9ieF9WXPP/76DPmzDs3HsxurjdLrwxbuWhh
o7rPF3/hr0zyl0+uKvh262VT/UhxxbAVbWbTC+NevGdHm7rrPSqeLK0rulye
NuOn5axvvZU2k0qXzUn2fH+qre7La2+dNM899vbYm6tqzKiaZ2q3v1ar7vPy
neOvaPm9n+0unDsuZa59PX10d2XKnC/+vuHirlTs2rNr/+Avu/dNru6PfOE7
xlQeKmvrMHvmVTelE51mc8Hh/RVTOsR6avvcfeH4i/aMv/CXNL7CU9FyqZ7a
2oMvHH/pnH/Q1k7wl846R8VnfVf2+Jzpv5klu7eXFOdcMj8cSIyrP3tJ3bx9
VP+v9POlv8d2HUbcnl0+eUOTGbntYMmCqgsmK3/1latTW9S1E23ctr+k+w5t
daA94684+Eu632f+of/62O4HfOkntXH8pbM9+35f5to/+Gtw4zTb/vJ9/Z40
nrRdN9aJ4a+Q+gFf1oG49g/+6ptL4yKe7wyN2x7HSvO62uqAv3TWR+KSR2z7
a9qoBRvNxHPmxgdzF7eOaTJrG5dseX3TeXX1ce0f/EV/mwkurTeWxgnSuNeX
61obx19+9Q+2n2vjrzD85Wp85Uv7hIfB8Ve03PZ6Y2l/qLY6uPZP3P3lap2G
7+uO4H5x/BUtt/18AX/hL/wFh+Mv/IW/QvWXxJk/hIfE8Ve03Pb8oS/Px137
B3/1zVm/AQ+J4y+/+gdfxreu/YO/+ubSejnWz8N95PhraNzV8wVf1tm69g/+
6puzfzlaLvVv0jiB8yzwlwbO/mX85SOX2o+r9yNpe3+Utuvdl/Eq/tJZH2lc
ZLvd8v4o/BWH/tnV+3ulfs/2/Gqo/ST+cusjV+/fDnW+xbV/8Fc0nPNTMsPZ
d6DTX/D+uTTe09ZO8JfOOruab8RrrM/UwPFXZrh0H+rL8yz8pbPO2ri0P1Hb
9cj9VBgcf2XmuVWonsJf8IFwaZ2G9JzL1f3dYNcNaqtz3Dj+6p/zvmj8paGe
cDgcDsdf+AsOh8Ph+AsOh8PhIXHX/sFfcDgcDsdf7usJh8PhcPyFv+BwOByO
v+BwOBweEnftH/wFh8PhcPzlvp5wOBwOx1/4Cw6Hw+H4Cw6Hw+Ehcdf+wV9w
OBwOx1/u6wmHw+Fw/IW/4HA4HI6/3HLpPHHb5zJI56Foq48rnr1uxs7cfV2m
u254zZFjXaZwftWJvGQn594OkXNOytC41A6lc1Wk/kRbe8BfYfhL4rbPz+I8
rF4unaNku1+K2/lN+Itzw/FXfPwl+SWq9iz5UVsdbHPb501L42dtdcBf8eSh
jmNd+yfu/pLO+7bdnuM2/2B7njBu41785ReX2r/U/2hrV/jLLy49N2E8pnOe
MG7jAVf+2jGm8lBZW4fZM6+6KZ3oNJsLDu+vmNKhrg4Sl9pJsrSu6HJ52oyf
lrO+9VbaTCpdNifZ873tdjvi9uzyyRuazMhtB0sWVF0wWfmrr1yd2qKubvjL
L+6qH4aH3X/iL7848wb4y0cu3dfbbs/weN634i+d3PZ9mfRcWFsd8FcY3PY6
BHj/nP0I+Cuk8arv4zHX/sFfuvoHeC+Xxr3a2oM2jr+G9lzA9j6aUMdjrv2D
v6Lh0nUd6voExqU6OeMrnTzU9uzaP/grGm57H5mr57yu+kPf1xXjr3hy39cT
4i+ddbbNpXkA3+dtbD/vi9v7nfCXX1y67rTNh+Av/GWD216/JPVXvswTxu39
TvgrbB43r7n2D/6yy6X5BG3zirb3u4X6/gFtnPUbvVxqV7bnE3ypD/7CX3dy
Hdn2grZ5Qt/3ufjC8ZfOeZJQ5xlc+wd/ueG2308lXS+u9rnYnueE46874bbX
X7H+UGdqq6cv3PZ8nXS/Y/v3htq/+cLxl87xpO/vicJf8IHwqO6DpJ9je54k
1OvUF46/+udS+2T/F/7SUE/fuavri/VXYXDWH+rkvr9nA3/BB8Kl/l/b9ci5
nDo5/nLL4zb/4No/+MsP7ur9bHGbD/Gd46/McPbd4y/4wLnt9VGD5ezb0snx
V2bWO2n73PEX/oLD4XA4/oLD4XB42Ny1f0iSJEmSJEmSJEmSJEmSJEmSJEnS
p/wXVWkovw==
     "]], 
   {RGBColor[1, 0, 0], PointSize[0.02], PointBox[{45, 20}]}},
  AspectRatio->1,
  Frame->True,
  PlotRange->{{1., 72.}, {1., 72.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.4071681232441063`*^9, {3.4071687129159813`*^9, 3.4071687298847313`*^9}, {
   3.4071687783847313`*^9, 3.4071688885409813`*^9}, {3.4071699373222313`*^9, 
   3.4071699432597313`*^9}, 3.4071718255097313`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eigs", " ", "=", " ", 
   RowBox[{"getEigen", "[", 
    RowBox[{"getLocalStructureTensor2", "[", 
     RowBox[{
      RowBox[{"getGradientField2", "[", "slice", "]"}], ",", " ", "2"}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graph", " ", "=", " ", 
   RowBox[{"getGraph", "[", 
    RowBox[{"slice", ",", " ", "2"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4071686497441063`*^9, 3.4071686598066063`*^9}, {
  3.4071689299159813`*^9, 3.4071689360409813`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<points\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", "points", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<eigs\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"eigs", "\[LeftDoubleBracket]", 
  RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<graph\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"graph", "\[LeftDoubleBracket]", 
  RowBox[{"x", ",", "y"}], "\[RightDoubleBracket]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<distances\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"distances", " ", "=", " ", 
  RowBox[{"getDistancesNormal", "[", 
   RowBox[{
    RowBox[{"eigs", "\[LeftDoubleBracket]", 
     RowBox[{"x", ",", "y", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}], 
    ",", " ", 
    RowBox[{"eigs", "\[LeftDoubleBracket]", 
     RowBox[{"x", ",", "y", ",", "2", ",", "2"}], "\[RightDoubleBracket]"}], 
    ",", " ", 
    RowBox[{"eigs", "\[LeftDoubleBracket]", 
     RowBox[{"x", ",", "y", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], 
    ",", " ", 
    RowBox[{"eigs", "\[LeftDoubleBracket]", 
     RowBox[{"x", ",", "y", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<node\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"node", " ", "=", " ", 
  RowBox[{"Map", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "2"],
            " ", "\[Equal]", " ", "0"}], ")"}], ",", "\[IndentingNewLine]", 
         "1", ",", "\[IndentingNewLine]", 
         FractionBox[
          RowBox[{"eigs", "\[LeftDoubleBracket]", 
           RowBox[{"x", ",", " ", "y", ",", " ", "1", ",", " ", "2"}], 
           "\[RightDoubleBracket]"}], 
          SuperscriptBox[
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "2"]]}], "]"}], "\[IndentingNewLine]", ",", " ", 
       RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      "}"}], " ", "&"}], ",", "distances"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.4071689478378563`*^9, 3.4071690725722313`*^9}, {
   3.4071691925253563`*^9, 3.4071692241972313`*^9}, {3.4071692560566063`*^9, 
   3.4071692812128563`*^9}, {3.4071693225409813`*^9, 
   3.4071693246659813`*^9}, {3.4071699474159813`*^9, 
   3.4071699483847313`*^9}, {3.4071699814628563`*^9, 
   3.4071699892597313`*^9}, {3.4071704636972313`*^9, 
   3.4071704720253563`*^9}, {3.4071707596191063`*^9, 
   3.4071708319472313`*^9}, {3.4071710162753563`*^9, 
   3.4071710221347313`*^9}, {3.4071711113691063`*^9, 3.4071711300566063`*^9}, 
   3.4071711646659813`*^9, {3.4071718109003563`*^9, 3.4071718119941063`*^9}, {
   3.4071722494003563`*^9, 3.4071722504316063`*^9}}],

Cell[BoxData["\<\"points\"\>"], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507128563`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328691063`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470409813`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125409813`*^9, 3.4071719483222313`*^9, 
   3.4071721087441063`*^9, {3.4071722413691063`*^9, 3.4071722507128563`*^9}}],\


Cell[BoxData["\<\"eigs\"\>"], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507284813`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"13858.620370370369`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "1.`"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328691063`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470409813`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125409813`*^9, 3.4071719483222313`*^9, 
   3.4071721087441063`*^9, {3.4071722413691063`*^9, 3.4071722507284813`*^9}}],\


Cell[BoxData["\<\"graph\"\>"], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507284813`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328691063`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470409813`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125409813`*^9, 3.4071719483222313`*^9, 
   3.4071721087441063`*^9, {3.4071722413691063`*^9, 3.4071722507284813`*^9}}],\


Cell[CellGroupData[{

Cell[BoxData["\<\"distances\"\>"], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507284813`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", "13858.620370370369`", ",", 
   "0.`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507284813`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", 
   RowBox[{"-", "1.`"}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507284813`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507284813`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", "13858.620370370369`", ",", 
   "0.`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507284813`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7071067811865475`", ",", 
   RowBox[{"-", "0.7071067811865475`"}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507284813`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507284813`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", "13858.620370370369`", ",", 
   "0.`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507284813`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "0.`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507284813`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507284813`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", "13858.620370370369`", ",", 
   "0.`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507441063`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7071067811865475`", ",", "0.7071067811865475`"}], "}"}]], "Print",\

 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507441063`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507441063`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", "13858.620370370369`", ",", 
   "0.`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507597313`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "1.`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507753563`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507753563`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", "13858.620370370369`", ",", 
   "0.`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507753563`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.7071067811865475`"}], ",", "0.7071067811865475`"}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507753563`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507909813`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", "13858.620370370369`", ",", 
   "0.`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507909813`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.`"}], ",", "0.`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722507909813`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722508066063`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", "13858.620370370369`", ",", 
   "0.`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722508066063`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.7071067811865475`"}], ",", 
   RowBox[{"-", "0.7071067811865475`"}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722508066063`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722508222313`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"117.7226417065569`", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"117.7226417065569`", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"117.7226417065569`", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"117.7226417065569`", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"117.7226417065569`", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"117.7226417065569`", ",", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328691063`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470409813`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125409813`*^9, 3.4071719483222313`*^9, 
   3.4071721087441063`*^9, {3.4071722413691063`*^9, 3.4071722508222313`*^9}}],\


Cell[BoxData["\<\"node\"\>"], "Print",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328534813`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470253563`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125253563`*^9, 3.4071719483222313`*^9, 
   3.4071721087284813`*^9, {3.4071722413691063`*^9, 3.4071722508534813`*^9}}],\


Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4071704723847313`*^9, {3.4071708328691063`*^9, 3.4071708375566063`*^9}, 
   3.4071709226503563`*^9, 3.4071710224472313`*^9, {3.4071711079159813`*^9, 
   3.4071711304628563`*^9}, 3.4071711653222313`*^9, {3.4071715219316063`*^9, 
   3.4071715470409813`*^9}, 3.4071715931816063`*^9, 3.4071716343066063`*^9, 
   3.4071717080409813`*^9, 3.4071718125409813`*^9, 3.4071719483222313`*^9, 
   3.4071721087441063`*^9, {3.4071722413691063`*^9, 3.4071722508691063`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Scratch",
WindowSize->{1592, 1100},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
CellLabelAutoDelete->True,
Magnification->1,
FrontEndVersion->"6.0 for Microsoft Windows (32-bit) (April 20, 2007)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[590, 23, 84, 1, 83, "Title"],
Cell[677, 26, 105, 1, 49, "Subtitle"],
Cell[785, 29, 121, 2, 29, "Subsubtitle"],
Cell[909, 33, 422, 10, 52, "Input"],
Cell[1334, 45, 227, 6, 52, "Input"],
Cell[CellGroupData[{
Cell[1586, 55, 172, 5, 48, "Subsubtitle"],
Cell[1761, 62, 1672, 45, 199, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3470, 112, 166, 5, 48, "Subsubtitle"],
Cell[3639, 119, 1653, 43, 199, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5329, 167, 162, 5, 48, "Subsubtitle"],
Cell[5494, 174, 772, 19, 112, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6303, 198, 490, 9, 238, "Subsubtitle"],
Cell[6796, 209, 9006, 193, 992, "Input"],
Cell[CellGroupData[{
Cell[15827, 406, 2098, 47, 212, "Input"],
Cell[17928, 455, 1080812, 19314, 203, 1001311, 18008, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1098789, 19775, 239, 6, 48, "Subsubtitle"],
Cell[1099031, 19783, 540, 16, 52, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1099608, 19804, 223, 6, 48, "Subsubtitle"],
Cell[1099834, 19812, 2782, 69, 294, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1102653, 19886, 147, 5, 48, "Subsubtitle"],
Cell[1102803, 19893, 501, 14, 52, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1103341, 19912, 193, 5, 48, "Subsubtitle"],
Cell[1103537, 19919, 2373, 67, 112, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1105947, 19991, 234, 6, 48, "Subsubtitle"],
Cell[1106184, 19999, 715, 20, 52, "Input"],
Cell[1106902, 20021, 691, 20, 52, "Input"],
Cell[1107596, 20043, 1522, 43, 52, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1109155, 20091, 196, 5, 48, "Subsubtitle"],
Cell[1109354, 20098, 3574, 79, 552, "Input"],
Cell[1112931, 20179, 263, 7, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1113231, 20191, 196, 5, 48, "Subsubtitle"],
Cell[1113430, 20198, 3576, 79, 552, "Input"],
Cell[1117009, 20279, 265, 7, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1117311, 20291, 195, 5, 48, "Subsubtitle"],
Cell[1117509, 20298, 1304, 34, 192, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1118850, 20337, 198, 6, 67, "Subsubtitle"],
Cell[1119051, 20345, 3071, 74, 272, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1122159, 20424, 208, 6, 48, "Subsubtitle"],
Cell[1122370, 20432, 960, 27, 52, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1123367, 20464, 254, 6, 48, "Subsubtitle"],
Cell[1123624, 20472, 1730, 47, 172, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1125391, 20524, 237, 7, 67, "Subsubtitle"],
Cell[1125631, 20533, 896, 25, 52, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1126564, 20563, 272, 7, 67, "Subsubtitle"],
Cell[1126839, 20572, 1791, 48, 52, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1128667, 20625, 203, 5, 48, "Subsubtitle"],
Cell[1128873, 20632, 908, 25, 52, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1129818, 20662, 410, 8, 105, "Subsubtitle"],
Cell[1130231, 20672, 1932, 48, 112, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1132200, 20725, 242, 6, 67, "Subsubtitle"],
Cell[1132445, 20733, 6546, 167, 252, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1139028, 20905, 215, 5, 48, "Subsubtitle"],
Cell[1139246, 20912, 518, 14, 72, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1139801, 20931, 367, 8, 162, "Subsubtitle"],
Cell[1140171, 20941, 2378, 56, 332, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1142586, 21002, 193, 5, 48, "Subsubtitle"],
Cell[1142782, 21009, 942, 27, 52, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1143761, 21041, 225, 6, 48, "Subsubtitle"],
Cell[1143989, 21049, 6389, 153, 452, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1150415, 21207, 321, 7, 48, "Subsubtitle"],
Cell[1150739, 21216, 13418, 315, 632, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1164194, 21536, 199, 5, 48, "Subsubtitle"],
Cell[1164396, 21543, 16165, 368, 772, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1180598, 21916, 184, 5, 48, "Subsubtitle"],
Cell[1180785, 21923, 3486, 91, 252, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1184308, 22019, 217, 6, 48, "Subsubtitle"],
Cell[1184528, 22027, 958, 25, 152, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1185523, 22057, 166, 5, 48, "Subsubtitle"],
Cell[1185692, 22064, 944, 23, 172, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1186673, 22092, 181, 5, 48, "Subsubtitle"],
Cell[1186857, 22099, 906, 23, 172, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1187800, 22127, 180, 5, 48, "Subsubtitle"],
Cell[1187983, 22134, 3958, 102, 292, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1191978, 22241, 160, 5, 48, "Subsubtitle"],
Cell[1192141, 22248, 2226, 53, 272, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1194404, 22306, 226, 6, 48, "Subsubtitle"],
Cell[1194633, 22314, 13334, 319, 1052, "Input"],
Cell[1207970, 22635, 68, 1, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1208075, 22641, 187, 5, 48, "Subsubtitle"],
Cell[1208265, 22648, 5208, 134, 292, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1213510, 22787, 664, 11, 162, "Subsubtitle"],
Cell[1214177, 22800, 16635, 349, 1232, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1230849, 23154, 186, 5, 48, "Subsubtitle"],
Cell[1231038, 23161, 2825, 71, 192, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1233900, 23237, 324, 7, 48, "Subsubtitle"],
Cell[1234227, 23246, 19158, 443, 786, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1253422, 23694, 267, 6, 48, "Subsubtitle"],
Cell[1253692, 23702, 4061, 104, 252, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1257790, 23811, 88, 1, 49, "Subtitle"],
Cell[1257881, 23814, 174, 5, 48, "Subsubtitle"],
Cell[1258058, 23821, 3165, 78, 232, "Input"],
Cell[1261226, 23901, 6102, 144, 292, "Input"],
Cell[CellGroupData[{
Cell[1267353, 24049, 174, 5, 48, "Subsubtitle"],
Cell[1267530, 24056, 3189, 80, 232, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1270756, 24141, 155, 5, 48, "Subsubtitle"],
Cell[1270914, 24148, 1278, 36, 179, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1272229, 24189, 157, 5, 48, "Subsubtitle"],
Cell[1272389, 24196, 1460, 41, 179, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1273886, 24242, 229, 6, 48, "Subsubtitle"],
Cell[1274118, 24250, 3254, 84, 272, "Input"],
Cell[1277375, 24336, 5848, 151, 352, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1283260, 24492, 229, 6, 48, "Subsubtitle"],
Cell[1283492, 24500, 4363, 111, 272, "Input"],
Cell[1287858, 24613, 70, 1, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1287965, 24619, 156, 5, 48, "Subsubtitle"],
Cell[1288124, 24626, 546, 16, 79, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1288707, 24647, 158, 5, 48, "Subsubtitle"],
Cell[1288868, 24654, 564, 17, 79, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1289469, 24676, 182, 5, 48, "Subsubtitle"],
Cell[1289654, 24683, 428, 13, 52, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1290119, 24701, 228, 6, 48, "Subsubtitle"],
Cell[1290350, 24709, 2663, 64, 212, "Input"],
Cell[1293016, 24775, 855, 13, 69, "SmallText"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1293908, 24793, 227, 6, 48, "Subsubtitle"],
Cell[1294138, 24801, 4654, 110, 232, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1298829, 24916, 211, 5, 48, "Subsubtitle"],
Cell[1299043, 24923, 1998, 47, 252, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1301078, 24975, 232, 6, 48, "Subsubtitle"],
Cell[1301313, 24983, 2992, 67, 267, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1304342, 25055, 299, 6, 48, "Subsubtitle"],
Cell[1304644, 25063, 2789, 61, 232, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1307482, 25130, 152, 2, 49, "Subtitle"],
Cell[1307637, 25134, 177, 5, 48, "Subsubtitle"],
Cell[1307817, 25141, 3747, 86, 412, "Input"],
Cell[CellGroupData[{
Cell[1311589, 25231, 181, 5, 48, "Subsubtitle"],
Cell[1311773, 25238, 34209, 772, 1154, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1346031, 26016, 149, 2, 49, "Subtitle"],
Cell[1346183, 26020, 420, 14, 49, "Subsubtitle"],
Cell[1346606, 26036, 3385, 89, 383, "Input"],
Cell[CellGroupData[{
Cell[1350018, 26130, 522, 15, 68, "Subsubtitle"],
Cell[1350543, 26147, 5658, 120, 384, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1356238, 26272, 264, 6, 48, "Subsubtitle"],
Cell[1356505, 26280, 1006, 30, 52, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1357548, 26315, 345, 7, 48, "Subsubtitle"],
Cell[1357896, 26324, 778, 21, 72, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1358711, 26350, 287, 6, 48, "Subsubtitle"],
Cell[1359001, 26358, 708, 19, 72, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1359746, 26382, 342, 7, 48, "Subsubtitle"],
Cell[1360091, 26391, 1685, 43, 112, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1361813, 26439, 399, 8, 48, "Subsubtitle"],
Cell[1362215, 26449, 4717, 107, 408, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1366969, 26561, 428, 9, 48, "Subsubtitle"],
Cell[1367400, 26572, 4334, 93, 192, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1371771, 26670, 364, 8, 48, "Subsubtitle"],
Cell[1372138, 26680, 3639, 79, 252, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1375814, 26764, 451, 8, 48, "Subsubtitle"],
Cell[1376268, 26774, 4902, 109, 292, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1381219, 26889, 84, 1, 49, "Subtitle"],
Cell[1381306, 26892, 177, 5, 48, "Subsubtitle"],
Cell[1381486, 26899, 1427, 33, 272, "Input"],
Cell[CellGroupData[{
Cell[1382938, 26936, 173, 5, 48, "Subsubtitle"],
Cell[1383114, 26943, 1798, 43, 272, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1384949, 26991, 182, 5, 48, "Subsubtitle"],
Cell[1385134, 26998, 2248, 55, 252, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1387419, 27058, 159, 5, 48, "Subsubtitle"],
Cell[1387581, 27065, 2000, 50, 292, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1389618, 27120, 211, 5, 48, "Subsubtitle"],
Cell[1389832, 27127, 1902, 49, 232, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1391771, 27181, 216, 5, 48, "Subsubtitle"],
Cell[1391990, 27188, 2022, 51, 232, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1394049, 27244, 190, 5, 48, "Subsubtitle"],
Cell[1394242, 27251, 2545, 71, 132, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1396824, 27327, 207, 5, 48, "Subsubtitle"],
Cell[1397034, 27334, 3111, 75, 352, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1400182, 27414, 252, 6, 48, "Subsubtitle"],
Cell[1400437, 27422, 2843, 80, 152, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1403317, 27507, 202, 5, 48, "Subsubtitle"],
Cell[1403522, 27514, 7709, 190, 492, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1411268, 27709, 215, 5, 48, "Subsubtitle"],
Cell[1411486, 27716, 705, 19, 72, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1412228, 27740, 197, 5, 48, "Subsubtitle"],
Cell[1412428, 27747, 4245, 101, 472, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1416710, 27853, 174, 5, 48, "Subsubtitle"],
Cell[1416887, 27860, 1999, 56, 152, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1418923, 27921, 136, 3, 28, "Subsubtitle"],
Cell[1419062, 27926, 628, 16, 219, "SmallText"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1419727, 27947, 97, 1, 28, "Subsubtitle"],
Cell[1419827, 27950, 348, 7, 69, "SmallText"],
Cell[1420178, 27959, 373, 7, 69, "SmallText"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1420588, 27971, 75, 1, 28, "Subsubtitle"],
Cell[1420666, 27974, 182, 4, 24, "SmallText"],
Cell[1420851, 27980, 142, 3, 24, "SmallText"],
Cell[1420996, 27985, 199, 4, 24, "SmallText"],
Cell[1421198, 27991, 192, 4, 24, "SmallText"],
Cell[1421393, 27997, 180, 4, 24, "SmallText"],
Cell[1421576, 28003, 204, 4, 24, "SmallText"],
Cell[1421783, 28009, 203, 4, 24, "SmallText"],
Cell[1421989, 28015, 144, 3, 24, "SmallText"],
Cell[1422136, 28020, 155, 4, 24, "SmallText"],
Cell[1422294, 28026, 117, 1, 24, "SmallText"],
Cell[1422414, 28029, 137, 3, 24, "SmallText"],
Cell[1422554, 28034, 121, 1, 24, "SmallText"],
Cell[1422678, 28037, 171, 4, 24, "SmallText"],
Cell[1422852, 28043, 1045, 18, 114, "SmallText"],
Cell[1423900, 28063, 119, 1, 24, "SmallText"],
Cell[1424022, 28066, 275, 6, 21, "Message"],
Cell[1424300, 28074, 281, 6, 21, "Message"],
Cell[CellGroupData[{
Cell[1424606, 28084, 312, 6, 31, "Input"],
Cell[1424921, 28092, 385, 7, 70, "Output"],
Cell[1425309, 28101, 361, 7, 30, "Output"],
Cell[1425673, 28110, 331, 6, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1426065, 28123, 96, 1, 49, "Subtitle"],
Cell[1426164, 28126, 536, 10, 48, "Subsubtitle"],
Cell[1426703, 28138, 901, 27, 55, "Input"],
Cell[CellGroupData[{
Cell[1427629, 28169, 525, 10, 48, "Subsubtitle"],
Cell[1428157, 28181, 5155, 112, 399, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1433349, 28298, 540, 10, 48, "Subsubtitle"],
Cell[1433892, 28310, 3906, 82, 192, "Input"],
Cell[CellGroupData[{
Cell[1437823, 28396, 938, 23, 52, "Input"],
Cell[1438764, 28421, 83112, 1371, 377, "Output"]
}, Open  ]],
Cell[1521891, 29795, 535, 13, 52, "Input"],
Cell[CellGroupData[{
Cell[1522451, 29812, 3234, 72, 371, "Input"],
Cell[1525688, 29886, 523, 7, 23, "Print"],
Cell[1526216, 29896, 1134, 31, 30, "Output"],
Cell[1527355, 29930, 521, 7, 23, "Print"],
Cell[1527881, 29940, 788, 17, 30, "Output"],
Cell[1528674, 29960, 522, 7, 23, "Print"],
Cell[1529201, 29970, 1020, 25, 30, "Output"],
Cell[CellGroupData[{
Cell[1530248, 30000, 526, 7, 23, "Print"],
Cell[1530779, 30010, 705, 14, 23, "Print"],
Cell[1531489, 30027, 578, 10, 23, "Print"],
Cell[1532072, 30040, 559, 9, 23, "Print"],
Cell[1532636, 30052, 705, 14, 23, "Print"],
Cell[1533346, 30069, 610, 10, 23, "Print"],
Cell[1533961, 30082, 559, 9, 23, "Print"],
Cell[1534525, 30094, 705, 14, 23, "Print"],
Cell[1535235, 30111, 559, 9, 23, "Print"],
Cell[1535799, 30123, 555, 9, 23, "Print"],
Cell[1536359, 30135, 705, 14, 23, "Print"],
Cell[1537069, 30152, 593, 10, 23, "Print"],
Cell[1537667, 30165, 559, 9, 23, "Print"],
Cell[1538231, 30177, 705, 14, 23, "Print"],
Cell[1538941, 30194, 559, 9, 23, "Print"],
Cell[1539505, 30206, 559, 9, 23, "Print"],
Cell[1540069, 30218, 705, 14, 23, "Print"],
Cell[1540779, 30235, 613, 11, 23, "Print"],
Cell[1541397, 30249, 559, 9, 23, "Print"],
Cell[1541961, 30261, 705, 14, 23, "Print"],
Cell[1542671, 30278, 578, 10, 23, "Print"],
Cell[1543254, 30291, 555, 9, 23, "Print"],
Cell[1543814, 30303, 705, 14, 23, "Print"],
Cell[1544524, 30320, 629, 11, 23, "Print"],
Cell[1545158, 30334, 559, 9, 23, "Print"]
}, Open  ]],
Cell[1545732, 30346, 1110, 25, 30, "Output"],
Cell[1546847, 30374, 521, 7, 23, "Print"],
Cell[1547373, 30384, 1020, 25, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
